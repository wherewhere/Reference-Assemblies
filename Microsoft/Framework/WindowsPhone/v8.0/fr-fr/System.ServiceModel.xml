<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Fournit une collection dont les éléments sont des types utilisés comme clés.</summary>
      <typeparam name="TItem">Types d'éléments contenus dans la collection également utilisés comme clés pour la collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Retourne le premier élément dans la collection d'un type spécifié.</summary>
      <returns>Objet de type <paramref name="T" /> s'il s'agit d'un type référence et valeur de type <paramref name="T" /> s'il s'agit d'un type valeur. La valeur par défaut du type est renvoyée si aucun objet de type <paramref name="T" /> n'est contenu dans la collection ou null s'il s'agit d'un type référence et 0 s'il s'agit d'un type valeur.</returns>
      <typeparam name="T">Type d'élément dans la collection à rechercher.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Retourne une collection d'objets de type <paramref name="T" /> contenus dans <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de type <paramref name="T" /> qui contient les objets de type <paramref name="T" /> de la collection d'origine.</returns>
      <typeparam name="T">Type d'élément dans la collection à rechercher.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Obtient le type d'un élément contenu dans la collection.</summary>
      <returns>Type de <paramref name="item" /> spécifié dans la collection.</returns>
      <param name="item">Élément dans la collection dont le type doit être récupéré.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Insère un élément dans la collection à un emplacement spécifique.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">Objet à insérer dans la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Supprime un objet d'un type spécifié de la collection.</summary>
      <returns>Objet supprimé de la collection.</returns>
      <typeparam name="T">Type d'élément dans la collection à supprimer.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Supprime tous les éléments d'un type spécifié de la collection.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> qui contient les objets de type <paramref name="T" /> de la collection d'origine.</returns>
      <typeparam name="T">Type d'élément dans la collection à supprimer.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Remplace l'élément à l'index spécifié par un nouvel objet.</summary>
      <param name="index">Index de base zéro du <paramref name="item" /> à remplacer.</param>
      <param name="item">Objet à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Fournit une collection en lecture seule thread-safe qui contient des objets d'un type spécifié par le paramètre générique en tant qu'éléments.</summary>
      <typeparam name="T">Type d'objet contenu en tant qu'éléments dans la collection en lecture seule thread-safe.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> à partir d'une liste d'éléments énumérable spécifiée et avec l'objet utilisé pour synchroniser l'accès à la collection en lecture seule thread-safe.</summary>
      <param name="syncRoot">Objet utilisé pour synchroniser l'accès à la collection en lecture seule thread-safe.</param>
      <param name="list">Collection d'éléments <see cref="T:System.Collections.Generic.IEnumerable`1" /> utilisée pour initialiser la collection en lecture seule thread-safe.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Détermine si la collection contient un élément avec une valeur spécifique.</summary>
      <returns>La valeur est true si l'élément <paramref name="value" /> se trouve dans la collection, sinon false.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas un objet du type contenu dans la collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copie les éléments de la collection dans un tableau spécifié, en commençant au niveau d'un index particulier.</summary>
      <param name="array">
        <see cref="T:System.Array" /> qui constitue la destination des éléments copiés à partir de la collection.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Obtient le nombre d'éléments contenus dans la collection en lecture seule thread-safe.</summary>
      <returns>Nombre d'éléments contenus dans la collection en lecture seule thread-safe.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection en lecture seule synchronisée.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> pour les objets du type stockés dans la collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Retourne l'index de la première occurrence d'une valeur dans la collection.</summary>
      <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans la collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Obtient un élément de la collection en lecture seule thread-safe avec un index spécifié.</summary>
      <returns>Élément de la collection en lecture seule avec l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément de la collection à récupérer.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Obtient la liste des éléments contenus dans la collection en lecture seule thread-safe.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IList`1" /> des éléments contenus dans la collection en lecture seule thread-safe.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Lève une <see cref="T:System.NotSupportedException" /> si cette méthode est appelée.</summary>
      <param name="value">Élément à ajouter à la collection.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être ajoutés à une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Lève une <see cref="T:System.NotSupportedException" /> si cette méthode est appelée.</summary>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être effacés d'une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Renvoie la valeur true.</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>La méthode renvoie la valeur false pour indiquer que l'élément n'a pas été supprimé de la collection en lecture seule.</returns>
      <param name="value">Valeur à supprimer de la collection.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être supprimés d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Lève une <see cref="T:System.NotSupportedException" /> si cette méthode est appelée.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">Objet à insérer dans la collection.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être insérés dans une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Obtient l'élément au niveau de l'index spécifié.</summary>
      <returns>Élément de type <paramref name="T" /> au niveau de l'index spécifié.</returns>
      <param name="index">Index de base zéro de l'élément de la collection à récupérer.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être définis dans une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Lève une <see cref="T:System.NotSupportedException" /> si cette méthode est appelée.</summary>
      <param name="index">Index de base zéro de l'élément de la collection à récupérer.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être supprimés d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de la collection dans un tableau spécifié, en commençant au niveau d'un index spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> qui constitue la destination des éléments copiés à partir de la collection.</param>
      <param name="index">Index de base zéro dans le tableau à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur qui indique si l'accès à la collection est synchronisé.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à la collection.</summary>
      <returns>Objet permettant de synchroniser l'accès à la collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection en lecture seule synchronisée.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de la collection en lecture seule synchronisée.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Lève une <see cref="T:System.NotSupportedException" />.</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />.</returns>
      <param name="value">Élément à ajouter à la collection.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être ajoutés à une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Lève une <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être effacés d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si la collection contient un élément avec une valeur spécifique.</summary>
      <returns>Renvoie la valeur true si l'élément <paramref name="value" /> se trouve dans la collection, sinon false.</returns>
      <param name="value">Objet à localiser dans la collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas un objet du type contenu dans la collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l'index d'un élément spécifique de la collection.</summary>
      <returns>Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</returns>
      <param name="value">Élément dont l'index est récupéré.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Lève une <see cref="T:System.NotSupportedException" /> si cette méthode est appelée.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">Objet à insérer dans la collection.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être insérés dans une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur qui indique si la collection est de taille fixe.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient l'élément au niveau de l'index spécifié et lève une exception si un élément est défini.</summary>
      <returns>Objet à l'emplacement spécifié dans la collection.</returns>
      <param name="index">Index de base zéro de l'élément dans la collection.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être définis dans une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Index de base zéro de l'élément de la collection à récupérer.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être supprimés d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Lève une <see cref="T:System.NotSupportedException" /> si cette méthode est appelée.</summary>
      <param name="index">Index de base zéro de l'élément de la collection à récupérer.</param>
      <exception cref="T:System.NotSupportedException">Les éléments ne peuvent pas être supprimés d'une collection en lecture seule.</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Cette exception est levée sur le client lorsque l'action liée à l'opération appelée ne correspond pas à l'action d'une opération disponible dans le service.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a provoqué la levée de l'exception actuelle. </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Représente une liaison qu'un client Windows Phone peut utiliser pour configurer des points de terminaison capables de communiquer avec des services Web ASMX et d'autres services conformes au profil WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" /> avec un type spécifié de sécurité utilisé par la liaison.</summary>
      <param name="securityMode">Valeur de <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> qui spécifie le type de sécurité utilisé avec le message SOAP et pour le client.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Retourne une collection ordonnée d'éléments de liaison contenus dans la liaison actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> qui contient la pile ordonnée d'éléments de liaison décrits par <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:P:System.ServiceModel.BasicHttpBinding" /> inclut <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
      <returns>La valeur est true si la liaison contient <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Obtient la version de SOAP utilisée pour les messages traités par cette liaison.</summary>
      <returns>Valeur de la <see cref="T:System.ServiceModel.EnvelopeVersion" /> utilisée avec cette liaison. La valeur est toujours SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Obtient ou définit la taille maximale d'une mémoire tampon qui reçoit des messages du canal.</summary>
      <returns>Taille maximale (en octets) d'une mémoire tampon qui stocke les messages pendant leur traitement par un point de terminaison configuré avec cette liaison. La valeur par défaut est 65 536 octets.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Obtient ou définit la taille maximale d'un message qui peut être reçu sur un canal configuré avec cette liaison.</summary>
      <returns>Taille maximale, en octets, d'un message traité par la liaison. La valeur par défaut est 65 536 octets.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à zéro.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Obtient le schéma de transport URI des canaux et écouteurs configurés avec cette liaison.</summary>
      <returns>« https » si le mode de sécurité dans l'élément de liaison de transport est défini sur <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> ou <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" /> ; sinon, « http ».</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Obtient le type de sécurité utilisé avec cette liaison. </summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpSecurity" /> utilisé avec cette liaison. La valeur par défaut est <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Obtient ou définit l'encodage de caractères utilisé pour le texte des messages.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> qui indique l'encodage de caractères utilisé. La valeur par défaut est <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Énumère les types d'informations d'identification à l'aide desquels le client peut s'authentifier lorsque la sécurité est activée dans la liaison BasicHttpBinding.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Indique l'authentification du client à l'aide des informations d'identification fournies pour le nom d'utilisateur.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Présent uniquement dans Windows Phone, mais non pris en charge.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Spécifie la sécurité utilisée pour un client Windows Phone configuré avec une <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Obtient ou définit le mode de sécurité d'un client configuré avec une <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
      <returns>Valeur dans l'énumération <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />. La valeur par défaut de cette propriété est <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur n'est pas une valeur légale pour <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Spécifie les types de sécurité qui peuvent être utilisés avec la liaison <see cref="T:System.ServiceModel.BasicHttpBinding" /> fournie par le système.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>Le message SOAP n'est pas sécurisé lors du transfert. Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>La sécurité est assurée via le protocole HTTPS. Le service doit être configuré avec des certificats SSL. Le message SOAP est protégé dans son ensemble à l'aide du protocole HTTPS. Le service est authentifié par le client à l'aide du certificat SSL du service.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Ce mode utilise le protocole HTTPS pour assurer l'intégrité, la confidentialité et l'authentification du serveur. Le service doit être configuré avec un certificat. L'authentification du client est assurée par la sécurité du message SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>Ce mode assure uniquement l'authentification du client HTTP. Il n'assure pas l'intégrité ou la confidentialité des messages.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Crée et gère les canaux utilisés par les clients pour envoyer des messages aux points de terminaison de service.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Initialise la fabrique de canaux avec les comportements fournis par un fichier de configuration spécifié et ceux inclus dans le point de terminaison de service de la fabrique de canaux.</summary>
      <param name="configurationName">Nom du fichier de configuration.</param>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison de service de la fabrique de canaux a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>En cas d'implémentation dans une classe dérivée, crée une description du point de terminaison de service associé à la fabrique de canaux.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associé à la fabrique de canaux.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Génère la fabrique de canaux pour le point de terminaison actuel de la fabrique.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> pour le point de terminaison de la fabrique actuelle.</returns>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison du service auquel la fabrique de canaux se connecte a la valeur null, ou la liaison du point de terminaison a la valeur null ou n’inclut pas l’élément avec le nom de configuration spécifié.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Obtient les informations d'identification utilisées par les clients pour communiquer un point de terminaison de service via les canaux produits par la fabrique.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> utilisées par les clients si celles-ci sont configurées pour la fabrique ou si le point de terminaison n'est pas une référence null et n'est pas dans l'état de communication <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" />, sinon null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Obtient le point de terminaison de service auquel les canaux produits par la fabrique se connectent.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> auquel les canaux produits par la fabrique se connectent.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Ouvre la fabrique de canaux actuelle si celle-ci n'est pas ouverte.</summary>
      <exception cref="T:System.ObjectDisposedException">La fabrique actuelle est en cours de fermeture ou fermée et ne peut pas être ouverte.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Renvoie l'objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal, ou null s'il est absent.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise le point de terminaison de service de la fabrique de canaux avec une liaison et une adresse spécifiées.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> avec lequel initialiser le point de terminaison pour la fabrique de canaux.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> avec lequel initialiser le point de terminaison pour la fabrique de canaux.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialise le point de terminaison de service de la fabrique de canaux avec une adresse et une configuration spécifiées.</summary>
      <param name="configurationName">Nom du fichier de configuration avec lequel initialiser la fabrique de canaux.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> avec lequel initialiser les points de terminaison pour la fabrique de canaux.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Met fin à la fabrique de canaux interne de la fabrique de canaux actuelle.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération de fermeture asynchrone sur la fabrique de canaux interne de la fabrique de canaux actuelle associée à un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération d'ouverture asynchrone sur la fabrique de canaux interne de la fabrique de canaux actuelle associée à un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Appelle Close sur la fabrique de canaux interne avec un délai spécifié pour l'exécution de l'opération.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération avant son expiration.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Exécute une opération de fermeture asynchrone dans la fabrique de canaux interne de la fabrique de canaux actuelle. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Exécute une opération d'ouverture asynchrone dans la fabrique de canaux interne de la fabrique de canaux actuelle. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Appelle Open sur la fabrique de canaux interne de la fabrique de canaux actuelle avec un délai spécifié pour l'exécution de l'opération.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</param>
      <exception cref="T:System.InvalidOperationException">Le canal interne du canal actuel a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initialise une copie en lecture seule de l'objet <see cref="T:System.ServiceModel.Description.ClientCredentials" /> pour la fabrique de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Génère la fabrique de canaux interne pour la fabrique de canaux actuelle.</summary>
      <exception cref="T:System.InvalidOperationException">La fabrique de canaux interne de la fabrique de canaux a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Ferme la fabrique de canaux actuelle.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Fabrique qui crée des canaux de différents types utilisés par les clients pour envoyer des messages à des points de terminaison de service diversement configurés.</summary>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canaux. Il doit s'agir de <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> ou de <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> avec une adresse de point de terminaison et une configuration de liaison spécifiées.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilisé pour configurer les canaux créés par la fabrique.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> de destination pour les canaux créés par la fabrique.</param>
      <exception cref="T:System.ArgumentNullException">La <paramref name="binding" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> et configure le point de terminaison.</summary>
      <param name="endpointConfigurationName">Nom du fichier qui contient la configuration de point de terminaison de service pour les canaux créés par la fabrique.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> avec une adresse de point de terminaison et une configuration de point de terminaison spécifiées.</summary>
      <param name="endpointConfigurationName">Nom du fichier qui contient la configuration de point de terminaison de service pour les canaux créés par la fabrique.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> de destination pour les canaux créés par la fabrique.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crée un canal utilisé pour envoyer des messages à un service à une adresse de point de terminaison spécifique.</summary>
      <returns>
        <paramref name="TChannel" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> créé par la fabrique.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crée un canal utilisé pour envoyer des messages à un service à une adresse de point de terminaison spécifique via une adresse de transport spécifiée.</summary>
      <returns>
        <paramref name="TChannel" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> créé par la fabrique.</returns>
      <param name="via">
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le canal envoie des messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" /> inclut des opérations duplex non prises en charge.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Crée une description du point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> du service.</returns>
      <exception cref="T:System.InvalidOperationException">Le contrat de rappel a la valeur null, or le point de terminaison de service requiert un contrat de rappel n’ayant pas la valeur null (Nothing).</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Fournit l'implémentation de base utilisée pour créer des objets clients Windows Phone (proxys) qui peuvent appeler des services.</summary>
      <typeparam name="TChannel">Canal utilisé pour la connexion au service qui identifie le type de contrat de service encapsulé par ce proxy.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide du point de terminaison cible par défaut du fichier de configuration de l'application. </summary>
      <exception cref="T:System.InvalidOperationException">Le fichier de configuration n'inclut pas d'informations sur le point de terminaison par défaut ou inclut plusieurs points de terminaison, ou il n'y a pas de fichier de configuration.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide d'une liaison et d'une adresse cible spécifiées. </summary>
      <param name="binding">Liaison utilisée pour configurer les modalités d'exécution des appels auprès du service.</param>
      <param name="remoteAddress">Adresse du point de terminaison de service.</param>
      <exception cref="T:System.ArgumentNullException">La liaison a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">L’adresse distante a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide des informations de configuration spécifiées dans le fichier de configuration de l'application par <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
      <exception cref="T:System.ArgumentNullException">Les informations de point de terminaison spécifiées ont la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison est introuvable ou le contrat de point de terminaison n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à l'aide de l'adresse cible et des informations de point de terminaison spécifiées. </summary>
      <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
      <param name="remoteAddress">Adresse du service.</param>
      <exception cref="T:System.ArgumentNullException">Le point de terminaison a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">L’adresse distante a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison est introuvable ou le contrat de point de terminaison n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
      <param name="remoteAddress">Adresse du service.</param>
      <exception cref="T:System.ArgumentNullException">Le point de terminaison a la valeur null.</exception>
      <exception cref="T:System.ArgumentNullException">L’adresse distante a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le point de terminaison est introuvable ou le contrat de point de terminaison n'est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Entraîne la transition immédiate de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Obtient le canal interne utilisé pour communiquer avec le service.</summary>
      <returns>Implémentation de l'interface de contrat de service cible passée comme paramètre de type au constructeur.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Obtient l'objet <see cref="T:System.ServiceModel.ChannelFactory`1" /> sous-jacent.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Obtient les informations d'identification du client utilisées pour appeler une opération.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Description.ClientCredentials" /> qui représente la preuve d'identité présentée par le client.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Retourne un nouveau canal du client vers le service.</summary>
      <returns>Canal de type <paramref name="TChannel" /> qui identifie le type de contrat de service encapsulé par cet objet client (proxy).</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Obtient le point de terminaison cible du service auquel le client Windows Phone peut se connecter.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> cible.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Réplique le comportement du mot clé par défaut dans C#.</summary>
      <returns>Renvoie la valeur null si T est un type référence et zéro si T est un type valeur numérique.</returns>
      <typeparam name="T">Type C#.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Obtient l'implémentation <see cref="T:System.ServiceModel.IClientChannel" /> sous-jacente.</summary>
      <returns>Canal client de l'objet client Windows Phone.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Fournit la prise en charge pour l'implémentation du modèle asynchrone basé sur les événements. 
    For more information about 
   ce modèle, consultez Vue d'ensemble du modèle asynchrone basé sur des événements.</summary>
      <param name="beginOperationDelegate">Délégué utilisé pour appeler l'opération asynchrone.</param>
      <param name="inValues">Valeurs d'entrée pour l'appel asynchrone.</param>
      <param name="endOperationDelegate">Délégué utilisé pour mettre fin à l'appel asynchrone une fois celui-ci terminé.</param>
      <param name="operationCompletedCallback">Rappel fourni par le client appelé lorsque la méthode asynchrone est terminée. Le rappel est passé au <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Objet <paramref name="userState" /> à associer à l'appel asynchrone.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Obtient l'état actuel de l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Valeur <see cref="T:System.ServiceModel.CommunicationState" /> de l'objet.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone.</returns>
      <param name="callback">Méthode qui reçoit le rappel une fois terminée.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone de démarrage.</returns>
      <param name="timeout">Période d'exécution de l'appel.</param>
      <param name="callback">Objet de rappel appelé lorsque l'opération se termine.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour ouvrir l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Méthode qui reçoit le rappel une fois terminée.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour ouvrir l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone.</returns>
      <param name="timeout">Période d'exécution de l'appel.</param>
      <param name="callback">Méthode qui reçoit le rappel une fois terminée.</param>
      <param name="state">Données d'état.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Entraîne la transition de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Entraîne la transition de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de son état actuel vers l'état fermé.</summary>
      <param name="timeout">Période d'exécution de l'appel.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestionnaire d'événements appelé lorsque l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> a effectué la transition de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestionnaire d'événements appelé lorsque l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> effectue la transition de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour fermer l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilisé pour exécuter l'opération de fermeture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour ouvrir l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilisé pour exécuter l'opération d'ouverture asynchrone de fin.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestionnaire d'événements appelé en cas d'erreur lors de l'exécution d'une opération sur l'objet <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Entraîne la transition de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de l'état créé vers l'état ouvert.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Entraîne la transition de l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> de l'état créé vers l'état ouvert dans un intervalle spécifié.</summary>
      <param name="timeout">Période d'exécution de l'appel.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestionnaire d'événements appelé lorsque l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> a effectué la transition de l'état créé vers l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestionnaire d'événements appelé lorsque l'objet <see cref="T:System.ServiceModel.ClientBase`1" /> effectue la transition de l'état créé vers l'état ouvert.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Délégué utilisé par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> pour appeler les opérations asynchrones sur le client. </summary>
      <returns>Résultat de l'appel asynchrone.</returns>
      <param name="inValues">Valeurs d'entrée pour l'appel asynchrone.</param>
      <param name="asyncCallback">Référence à la méthode à appeler à la fin de l'opération asynchrone correspondante.</param>
      <param name="state">
        <see cref="T:System.Object" /> qui permet au client de distinguer différents appels asynchrones. Il est rendu disponible au client dans le paramètre <paramref name="arguments" /> du rappel d'exécution de l'événement.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Cette classe est utilisée par les proxys clients générés automatiquement pour appeler des services. Elle ne doit pas être utilisée autrement. 
</summary>
      <typeparam name="T">Classe générique.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> à partir d'une instance existante de la classe.</summary>
      <param name="client">Objet <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> utilisé pour initialiser la nouvelle instance de la classe.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Démarre un appel asynchrone d'une méthode spécifiée par nom.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la méthode asynchrone appelée.</returns>
      <param name="methodName">Nom de la méthode à appeler de façon asynchrone.</param>
      <param name="args">Tableau d'arguments pour la méthode appelée.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Délégué <see cref="T:System.AsyncCallback" />. </param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Exécute un appel asynchrone via le nom d'une méthode spécifiée. </summary>
      <returns>
Sortie <see cref="T:System.Object" /> par la méthode appelée.
</returns>
      <param name="methodName">Nom de la méthode appelée de façon asynchrone.</param>
      <param name="args">Tableau d'arguments pour la méthode appelée.</param>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Exécute les tâches définies par l'application associées à la libération ou à la redéfinition des ressources non managées associées au canal.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="TProperty">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message à la destination du canal de sortie.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la transmission de message asynchrone. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie. </param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'envoi asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message à la destination du canal de sortie dans un intervalle spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'envoi asynchrone.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'envoi de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'envoi asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour transmettre un message à la destination du canal de sortie. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> renvoyé par un appel de la méthode <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Obtient la destination du service auquel les messages sont envoyés sur le canal de sortie.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du service auquel le canal de sortie envoie des messages.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Transmet un message à la destination du canal de sortie. </summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie un message sur le canal de sortie actuel dans un intervalle spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message de demande au côté réponse d'un échange de messages de demande et de réponse.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la transmission de message asynchrone. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone qui transmet un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message de demande au côté réponse d'un échange de messages de demande et de réponse dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la transmission de message asynchrone. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle pendant lequel une réponse doit être reçue. (voir les remarques sur les valeurs par défaut).</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone qui transmet un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour retourner un message de réponse à une demande transmise. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Obtient l'adresse distante à laquelle le canal de demande envoie des messages. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> à laquelle le canal de demande envoie des messages. </returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Envoie un message de demande et retourne le message de réponse corrélé. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie un message de demande et retourne le message de réponse corrélé dans un intervalle spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle pendant lequel une réponse doit être reçue.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Obtient l'adresse de transport à laquelle la demande est envoyée.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>
        <see cref="T:System.ServiceModel.EndpointAddress" /> sert de destination finale et d'adresse physique si un <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" /> n'est pas spécifié. Si le <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" /> est spécifié, adresse physique réelle à laquelle le message est envoyé et via laquelle le message doit transiter pour arriver à sa destination.</summary>
      <returns>Renvoie <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Appel asynchrone pour démarrer l'utilisation d'une interface utilisateur afin d'obtenir des informations d'identification.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> à utiliser pour rappeler une fois le traitement terminé.</returns>
      <param name="callback">Méthode appelée une fois cette méthode terminée.</param>
      <param name="state">Informations sur l'état du canal.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Obtient une valeur qui indique si un appel a été effectué auprès d'une interface utilisateur afin d'obtenir des informations d'identification. </summary>
      <returns>La valeur est true si la méthode <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> a été appelée (ou les méthodes <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> et <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />), sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Appel auprès d'une interface utilisateur pour obtenir des informations d'identification.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Appelée une fois l'appel de la méthode <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> terminé.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Cet événement est réservé.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal client.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Entraîne la transition immédiate d'un objet de communication de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer l'objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer un objet de communication dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour ouvrir un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour ouvrir un objet de communication dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Entraîne la transition d'un objet de communication de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Entraîne la transition d'un objet de communication de son état actuel vers l'état fermé.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestionnaire d’événements appelé lorsque l’objet <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> a effectué la transition de son état actuel vers l’état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestionnaire d’événements appelé lorsque l’objet <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> effectue la transition de son état actuel vers l’état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour fermer un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> renvoyé par un appel de la méthode <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour ouvrir un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> renvoyé par un appel de la méthode <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestionnaire d’événements appelé en cas d’erreur lors de l’exécution d’une opération sur l’objet <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Entraîne la transition d'un objet de communication de l'état créé vers l'état ouvert.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Entraîne la transition d'un objet de communication de l'état créé vers l'état ouvert dans un intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestionnaire d’événements appelé lorsque l’objet <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> a effectué la transition de l’état créé vers l’état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestionnaire d’événements appelé lorsque l’objet <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> effectue la transition de l’état créé vers l’état ouvert.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Obtient l'état actuel de l'objet orienté communication.</summary>
      <returns>Valeur <see cref="T:System.ServiceModel.CommunicationState" /> de l'objet.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Obtient ou définit une valeur qui indique à Windows Phone de stocker un ensemble de messages avant de transmettre les messages au transport.</summary>
      <returns>La valeur est true si le traitement par lot des messages sortants est autorisé, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Obtient la session d'entrée du canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IInputSession" /> du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Obtient le point de terminaison local du canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> local du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Obtient ou définit le délai d'exécution d'une opération ou de levée d'une exception.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> qui spécifie le délai d'exécution d'une opération.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Obtient la session de sortie associée au canal le cas échéant.</summary>
      <returns>Implémentation <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si une session d'entrée existe, sinon null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Obtient l'adresse distante associée au canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> distante du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Retourne un identificateur pour la session actuelle le cas échéant.</summary>
      <returns>Identificateur de la session actuelle le cas échéant.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Obtient une collection d'objets d'extension pour cet objet extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> d'objets d'extension.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Délégué appelé par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> après l’exécution correcte de l’appel effectué par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> à <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <returns>Tableau <see cref="T:System.Object" /> qui contient les résultats de l'appel de la méthode asynchrone. L'opération peut retourner plusieurs valeurs dans ce tableau d'objets.</returns>
      <param name="result">Résultat retourné par l’appel effectué par <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />à <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Stocke les résultats d'un appel asynchrone effectué par le client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Obtient les résultats d'un appel asynchrone effectué par le client.</summary>
      <returns>Tableau de type <see cref="T:System.Object" /> qui contient les résultats d'un appel asynchrone effectué par le client.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Représente une erreur de communication dans le service ou l'application cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationException" /> à l'aide du message spécifié.</summary>
      <param name="message">Description de la condition d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationException" /> à l'aide du message spécifié et de l'exception interne.</summary>
      <param name="message">Description de la condition d'erreur.</param>
      <param name="innerException">Exception interne à utiliser.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Exception levée lorsque l'appel concerne un objet <see cref="T:System.ServiceModel.ICommunicationObject" /> abandonné.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> avec le message spécifié. </summary>
      <param name="message">Message contenu dans l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> à l'aide du message spécifié et de l'exception interne. </summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Exception levée lorsqu'un appel concerne un objet de communication ayant échoué. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> à l'aide du message spécifié.</summary>
      <param name="message">Message décrivant l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> à l'aide du message spécifié et de l'exception interne.</summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Définit les états dans lesquels un <see cref="T:System.ServiceModel.ICommunicationObject" /> peut exister. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indique que l'objet de communication a été instancié et est configurable, mais n'est pas encore ouvert ou prêt à l'emploi.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indique que l'objet de communication est en cours de transition de l'état <see cref="F:System.ServiceModel.CommunicationState.Created" /> vers l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indique que l'objet de communication est désormais ouvert et prêt à l'emploi. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indique que l'objet de communication est en cours de transition vers l'état <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indique que l'objet de communication a été fermé et n'est plus utilisable. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indique que l'objet de communication a rencontré une erreur irrécupérable qui le rend inutilisable. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Demande à l'infrastructure Windows Phone d'utiliser le <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Obtient ou définit le style SOAP des données sérialisées.</summary>
      <returns>Une des valeurs de <see cref="T:System.ServiceModel.OperationFormatStyle" />. La valeur par défaut est <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Fournit une adresse réseau unique utilisée par un client pour communiquer avec un point de terminaison de service.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" /> avec une chaîne d'URI spécifiée.</summary>
      <param name="uri">URI qui identifie le point de terminaison.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" /> avec un URI et des en-têtes spécifiés.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> qui identifie l'emplacement du point de terminaison.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> qui contient les informations d'adresse utilisées pour interagir avec le point de terminaison.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Obtient une représentation indépendante de toute version de l'URI anonyme.</summary>
      <returns>
        <see cref="T:System.Uri" /> avec la valeur http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assigne l'URI et les propriétés de l'adresse de point de terminaison aux valeurs des en-têtes d'un message spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> dont les valeurs d'en-tête sont assignées.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si un objet spécifié est équivalent à l'adresse de point de terminaison actuelle.</summary>
      <returns>La valeur est true si l'objet spécifié équivaut à l'adresse actuelle, sinon false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer à l'adresse de point de terminaison actuelle.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Fournit un code de hachage unique pour l'adresse de point de terminaison actuelle. </summary>
      <returns>Code de hachage unique pour l'adresse de point de terminaison actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Obtient la collection d'en-têtes d'adresse pour les points de terminaison que le générateur peut créer.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> qui contient les informations d'adresse du point de terminaison.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Obtient une valeur qui indique si le point de terminaison est anonyme.</summary>
      <returns>La valeur est true si le point de terminaison est <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Obtient une valeur qui indique si l'URI du point de terminaison est <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>La valeur est true si l'URI du point de terminaison est <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />, sinon false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Obtient un URI indépendant de toute version utilisé pour l'adresse d'un point de terminaison auquel un message ne doit pas être envoyé.</summary>
      <returns>
        <see cref="T:System.Uri" /> avec la valeur http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Retourne une valeur qui indique si les adresses de point de terminaison spécifiées ne sont pas équivalentes.</summary>
      <returns>La valeur est true si les adresses de point de terminaison sont équivalentes, sinon false.</returns>
      <param name="address1">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
      <param name="address2">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Retourne une valeur qui indique si les adresses de point de terminaison spécifiées ne sont pas équivalentes.</summary>
      <returns>La valeur est true si les adresses de point de terminaison ne sont pas équivalentes, sinon false.</returns>
      <param name="address1">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
      <param name="address2">Un des objets <see cref="T:System.ServiceModel.EndpointAddress" /> comparés.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Lit une adresse de point de terminaison pour une version d'adresse spécifiée à partir d'un lecteur de dictionnaire XML spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> de la version spécifiée lue à partir du lecteur XML.</returns>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de l'adresse de point de terminaison actuelle.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> à partir duquel l'adresse de point de terminaison est obtenue.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Retourne une représentation canonique sous forme de chaîne de l'URI contenu dans l'adresse de point de terminaison.</summary>
      <returns>URI qui identifie le point de terminaison.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Obtient l'URI du point de terminaison.</summary>
      <returns>
        <see cref="T:System.Uri" /> du point de terminaison.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Enregistre les nœuds enfants du nœud dans le writer de dictionnaire XML spécifié.</summary>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de l'adresse de point de terminaison actuelle.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> vers lequel l'adresse de point de terminaison est enregistrée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ou <paramref name="addressingVersion" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Fabrique pour la production de nouvelles adresses de point de terminaison (immuables) avec des valeurs de propriété spécifiques.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> à partir des valeurs d'une adresse de point de terminaison existante.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> dont les valeurs de propriété sont utilisées pour initialiser les valeurs de propriété de cette instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Obtient la collection d'en-têtes d'adresse pour les points de terminaison que le générateur peut créer.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> qui contient les en-têtes d'adresse des points de terminaison que le générateur peut créer.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Crée une adresse de point de terminaison initialisée avec les valeurs de propriété du générateur de l'adresse de point de terminaison actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> dont les propriétés sont initialisées avec les valeurs du générateur de l'adresse de point de terminaison actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Obtient ou définit l'URI des points de terminaison que le générateur peut créer.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui spécifie l'adresse de point de terminaison.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Exception levée lorsqu'un point de terminaison distant est introuvable ou injoignable.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointNotFoundException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> avec un message d'erreur spécifié et l'exception interne ayant provoqué l'exception actuelle.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a provoqué la levée de l'exception actuelle.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contient des informations liées à la version de SOAP associée à un message et son échange.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Obtient une chaîne qui contient le nom d'URI du rôle SOAP associé à la version de message actuelle pour la destination finale.</summary>
      <returns>Chaîne vide si la version SOAP 1.1 est utilisée ; chaîne qui contient http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver si la version SOAP 1.2 est utilisée.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Obtient une chaîne qui contient le nom d'URI du rôle SOAP associé à la version de message actuelle pour la destination suivante.</summary>
      <returns>Chaîne qui contient http://schemas.xmlsoap.org/soap/actor/next si la version <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" /> est utilisée ; chaîne qui contient http://www.w3.org/2003/05/soap-envelope/role/next si la version <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" /> est utilisée ; chaîne vide si la <see cref="T:System.ServiceModel.EnvelopeVersion" /> est <see cref="P:System.ServiceModel.EnvelopeVersion.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Obtient la version de l'enveloppe qui n'utilise pas une version de SOAP.</summary>
      <returns>Version de l'enveloppe qui n'utilise pas le format SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Obtient la version de l'enveloppe SOAP 1,1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> SOAP 1,1.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Obtient la version de l'enveloppe SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Obtient une chaîne qui représente la version actuelle de l'enveloppe.</summary>
      <returns>Version actuelle de l'enveloppe.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Représente les informations détaillées sur l'erreur.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ExceptionDetail" /> à partir de l'exception. </summary>
      <param name="exception">Exception devant être sérialisée en tant qu'objet <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="exception" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Obtient ou définit l'objet <see cref="T:System.ServiceModel.ExceptionDetail" /> qui représente l'exception interne.</summary>
      <returns>Informations sur l'exception interne.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Obtient ou définit le message à partir de l'exception passée au constructeur.</summary>
      <returns>Message d'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Obtient ou définit les informations sur la trace de la pile à partir de l'exception passée au constructeur.</summary>
      <returns>Trace de la pile de l'exception.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Retourne les informations détaillées sur l'exception à partir de l'exception passée au constructeur.</summary>
      <returns>Message et trace de la pile de l'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Obtient ou définit la chaîne de type pour l'exception passée au constructeur.</summary>
      <returns>Chaîne de type pour l'exception passée au constructeur.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Représente un code d'erreur SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Nom du code d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" />.</summary>
      <param name="name">Nom du code d'erreur.</param>
      <param name="subCode">Sous-code d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" /> avec le nom et l'espace de noms spécifiés. </summary>
      <param name="name">Nom local du code d'erreur. </param>
      <param name="ns">Nom d'espace de noms du code d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est une chaîne vide. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultCode" /> avec le nom, l'espace de noms et le sous-code d'erreur spécifiés.</summary>
      <param name="name">Nom local du code d'erreur. </param>
      <param name="ns">Nom d'espace de noms du code d'erreur. </param>
      <param name="subCode">Objet <see cref="T:System.ServiceModel.FaultCode" /> qui représente le sous-code d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est une chaîne vide. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Crée un code d'erreur d'expéditeur avec le sous-code spécifié. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultCode" /> avec le sous-code d'erreur SOAP dans la propriété <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Objet <see cref="T:System.ServiceModel.FaultCode" /> qui représente le sous-code d'erreur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> est null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Obtient une valeur qui indique si l'erreur est une erreur SOAP 1.1 ou SOAP 1.2.</summary>
      <returns>La valeur est true si l'erreur est une erreur SOAP 1.1 ou SOAP 1.2, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Obtient une valeur qui indique si l'erreur est une erreur de serveur SOAP 1.1 ou une erreur de récepteur SOAP 1.2.</summary>
      <returns>La valeur est true si l'erreur est une erreur de serveur SOAP 1.1 ou une erreur de récepteur SOAP 1.2, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Obtient une valeur qui indique si l'erreur est une erreur de client SOAP 1.1 ou une erreur d'expéditeur SOAP 1.2.</summary>
      <returns>La valeur est true si l'erreur est une erreur de client SOAP 1.1 ou une erreur d'expéditeur SOAP 1.2, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Obtient le nom local du code d'erreur. </summary>
      <returns>Nom local du code d'erreur. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Obtient l'espace de noms du code d'erreur. </summary>
      <returns>URI (Uniform Resource Identifier) du nom de l'espace de noms. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Obtient le sous-code d'erreur. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultCode" /> qui représente le sous-code d'erreur. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Spécifie une ou plusieurs erreurs SOAP retournées lorsqu'une opération de service rencontre des erreurs de traitement.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultContractAttribute" />. </summary>
      <param name="detailType">Type sérialisable qui contient les informations sur l'erreur pour l'appelant.</param>
      <exception cref="T:System.ArgumentNullException">L’argument <paramref name="detailType" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Obtient ou définit l'action du message d'erreur SOAP spécifié dans le cadre du contrat de l'opération.</summary>
      <returns>Valeur de l'action pour le message d'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Obtient le type d'un objet sérialisable qui contient des informations sur l'erreur.</summary>
      <returns>Type qui représente la classe d'erreur sérialisable.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Obtient ou définit le nom du message d'erreur en langage WSDL (Web Services Description Language).</summary>
      <returns>Nom du message d'erreur. La valeur par défaut est le nom du type utilisé comme détail de l'erreur.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'erreur SOAP.</summary>
      <returns>Espace de noms de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Représente une erreur SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException" /> à l'aide des valeurs du message d'erreur spécifié et de la chaîne d'action fournie.</summary>
      <param name="fault">Message d'erreur qui contient les valeurs d'erreur SOAP par défaut à utiliser.</param>
      <param name="action">Action de l'erreur SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException" /> à l'aide du motif, du code d'erreur et de la valeur d'action spécifiés.</summary>
      <param name="reason">Motif de l'erreur SOAP.</param>
      <param name="code">Code de l'erreur SOAP.</param>
      <param name="action">Valeur d'action de l'erreur SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Obtient la valeur de l'action SOAP pour le message d'erreur.</summary>
      <returns>Valeur de l'action SOAP pour le message d'erreur.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Obtient le code de l'erreur SOAP.</summary>
      <returns>Code de l'erreur SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Retourne un objet <see cref="T:System.ServiceModel.FaultException" /> à partir du message d'erreur et de l'action spécifiés, et d'un tableau de types détaillés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultException" /> que vous pouvez lever pour indiquer qu'un message d'erreur SOAP a été reçu.</returns>
      <param name="messageFault">Message d'erreur qui contient les informations par défaut sur l'erreur SOAP.</param>
      <param name="action">Valeur d'action de l'erreur.</param>
      <param name="faultDetailTypes">Tableau de types qui contient les détails de l'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Retourne un objet <see cref="T:System.ServiceModel.FaultException" /> à partir du message d'erreur et d'un tableau de types détaillés spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultException" /> que vous pouvez lever pour indiquer qu'un message d'erreur SOAP a été reçu.</returns>
      <param name="messageFault">Message d'erreur qui contient les informations par défaut sur l'erreur SOAP.</param>
      <param name="faultDetailTypes">Tableau de types qui contient les détails de l'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Retourne un objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> en mémoire.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> passé à <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> pour créer un message qui contient une erreur.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Obtient le message pour l'exception.</summary>
      <returns>Message d'exception.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Obtient la <see cref="T:System.ServiceModel.FaultReason" /> de l'erreur SOAP.</summary>
      <returns>Motif de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Utilisée dans une application cliente pour intercepter les erreurs SOAP spécifiées de façon contractuelle.</summary>
      <typeparam name="TDetail">Type détaillé de l'erreur sérialisable.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultException`1" /> qui utilise un objet détaillé spécifié et le motif, le code et les valeurs d'action de l'erreur SOAP. </summary>
      <param name="detail">Objet utilisé comme détail de l'erreur SOAP.</param>
      <param name="reason">Motif de l'erreur SOAP.</param>
      <param name="code">Code de l'erreur SOAP.</param>
      <param name="action">Action de l'erreur SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Obtient l'objet qui contient les informations détaillées de la condition d'erreur.</summary>
      <returns>Objet détaillé qui est le paramètre de type de l'objet <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Retourne une chaîne pour l'objet <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Chaîne de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Fournit la description textuelle d'une erreur SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReason" /> à l'aide de la liste spécifiée de traductions d'erreur. </summary>
      <param name="translations">Liste d'objets <see cref="T:System.ServiceModel.FaultReasonText" />. Chaque objet décrit l'erreur dans un langage spécifique. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> est null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> est vide, ou un ou plusieurs éléments ont la valeur null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReason" /> à l'aide de l'élément de texte spécifié qui décrit l'erreur dans un langage spécifique. </summary>
      <param name="translation">Tableau d'objets <see cref="T:System.ServiceModel.FaultReasonText" /> qui correspondent aux descriptions d'erreur dans différents langages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translation" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReason" /> à l'aide du texte spécifié.</summary>
      <param name="text">Description de la raison de l'erreur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Obtient la description de l'erreur dans le langage utilisé par le thread actuel.</summary>
      <returns>Texte de l'erreur dans le langage spécifié.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Obtient la description de l'erreur dans le langage spécifié.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.FaultReasonText" /> qui contient la description de l'erreur traduite.</returns>
      <param name="cultureInfo">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie le langage de la description de l'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Retourne la raison de l'erreur en tant que chaîne.</summary>
      <returns>Raison de l'erreur.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Obtient une collection de descriptions d'erreur dans différents langages.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> d'objets <see cref="T:System.ServiceModel.FaultReasonText" />, dans laquelle chaque objet décrit l'erreur dans un langage différent.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Représente le texte de la raison d'une erreur SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReasonText" /> qui utilise un texte d'erreur spécifié.</summary>
      <param name="text">Texte qui représente la raison de l'erreur SOAP.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.FaultReasonText" /> qui utilise le texte d'erreur spécifié.</summary>
      <param name="text">Texte qui représente la raison de l'erreur SOAP.</param>
      <param name="xmlLang">Langage de l'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Retourne une valeur qui indique si le langage de la description correspond à l'objet <see cref="T:System.Globalization.CultureInfo" /> fourni.</summary>
      <returns>La valeur est true si les <see cref="T:System.Globalization.CultureInfo" /> spécifiées correspondent, sinon false.</returns>
      <param name="cultureInfo">Objet <see cref="T:System.Globalization.CultureInfo" /> à comparer au langage de la description.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Obtient le texte de la raison de l'erreur SOAP.</summary>
      <returns>Texte de la raison de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Obtient le langage de la raison de l'erreur SOAP.</summary>
      <returns>Langage de la raison de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Définit le comportement des canaux de demande et de demande/réponse sortants utilisés par les applications clientes.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Obtient ou définit une valeur qui indique si <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> tente d'appeler les objets <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> dans la propriété <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> ou lève une exception si cette collection n'est pas vide. </summary>
      <returns>La valeur est true si Windows Communication Foundation (WCF) est autorisé à appeler des initialiseurs de canal interactifs, sinon false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Appel asynchrone pour démarrer l'utilisation d'une interface utilisateur afin d'obtenir des informations d'identification.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> à utiliser pour rappeler une fois le traitement terminé.</returns>
      <param name="callback">Méthode appelée une fois cette méthode terminée.</param>
      <param name="state">Informations sur l'état du canal.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Obtient une valeur qui indique si un appel a été effectué auprès d'une interface utilisateur afin d'obtenir des informations d'identification. </summary>
      <returns>La valeur est true si la méthode <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> a été appelée (ou les méthodes <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> et <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />), sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Appel auprès d'une interface utilisateur pour obtenir des informations d'identification.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Appelée une fois l'appel de la méthode <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> terminé.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Cet événement est réservé. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal client.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Définit le contrat de l'ordinateur d'état de base pour tous les objets orientés communication du système, notamment les canaux, gestionnaires, fabriques, écouteurs et répartiteurs de canaux, et les hôtes de service.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Entraîne la transition immédiate d'un objet de communication de son état actuel vers l'état fermé.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer l'objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai par défaut s'est écoulé avant la fermeture correcte de <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer un objet de communication dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai par défaut spécifié s'est écoulé avant la fermeture correcte de <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour ouvrir un objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'ouverture par défaut s'est écoulé avant le passage de l'objet <see cref="T:System.ServiceModel.ICommunicationObject" /> à l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. L'objet est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour ouvrir un objet de communication dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'ouverture spécifié s'est écoulé avant le passage de l'objet <see cref="T:System.ServiceModel.ICommunicationObject" /> à l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. L'objet est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Entraîne la transition d'un objet de communication de son état actuel vers l'état fermé.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai de fermeture par défaut s'est écoulé avant la fermeture correcte de <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Entraîne la transition d'un objet de communication de son état actuel vers l'état fermé.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai s'est écoulé avant la fermeture correcte de <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Se produit lorsque l'objet de communication termine sa transition de l'état en cours de fermeture à l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Se produit lorsque l'objet de communication passe la première fois à l'état en cours de fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour fermer un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai s'est écoulé avant la fermeture correcte de <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour ouvrir un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'ouverture s'est écoulé avant le passage de l'objet <see cref="T:System.ServiceModel.ICommunicationObject" /> à l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. L'objet est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Se produit lorsque l'objet de communication passe la première fois à l'état défaillant.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Entraîne la transition d'un objet de communication de l'état créé vers l'état ouvert.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'ouverture par défaut s'est écoulé avant le passage de l'objet <see cref="T:System.ServiceModel.ICommunicationObject" /> à l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. L'objet est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Entraîne la transition d'un objet de communication de l'état créé vers l'état ouvert dans un intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> n'a pas pu être ouvert et est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Le délai d'ouverture spécifié s'est écoulé avant le passage de l'objet <see cref="T:System.ServiceModel.ICommunicationObject" /> à l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />. L'objet est passé à l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Se produit lorsque l'objet de communication termine sa transition de l'état en cours d'ouverture à l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Se produit lorsque l'objet de communication passe la première fois à l'état en cours d'ouverture.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Obtient l'état actuel de l'objet orienté communication.</summary>
      <returns>Valeur <see cref="T:System.ServiceModel.CommunicationState" /> de l'objet.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Définit l'interface du contrôle de contexte d'un canal.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Obtient ou définit une valeur qui indique à Windows Phone de stocker un ensemble de messages avant de transmettre les messages au transport.</summary>
      <returns>La valeur est true si le traitement par lot des messages sortants est autorisé, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Obtient la session d'entrée du canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IInputSession" /> du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Obtient le point de terminaison local du canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> local du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Obtient ou définit le délai d'exécution d'une opération ou de levée d'une exception.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> qui spécifie le délai d'exécution d'une opération.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Obtient la session de sortie associée au canal le cas échéant.</summary>
      <returns>Implémentation <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si une session d'entrée existe, sinon null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Obtient l'adresse distante associée au canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> distante du canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Retourne un identificateur pour la session actuelle le cas échéant.</summary>
      <returns>Identificateur de la session actuelle le cas échéant.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Définit l'interface de spécification des délais de communication utilisés par les canaux et gestionnaires de canaux, tels que les fabriques de canaux.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Obtient le délai d'expiration de la méthode de fermeture appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode de fermeture.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Obtient le délai d'expiration de la méthode d'ouverture appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode d'ouverture.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Obtient le délai d'expiration de la méthode de réception appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode de réception.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Obtient le délai d'expiration de la méthode d'envoi appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode d'envoi.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Permet à un objet de participer à un comportement personnalisé (par exemple, inscription à des événements ou consultation des transitions d'état).</summary>
      <typeparam name="T">Type de la classe d'extension.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Obtient une collection d'objets d'extension pour cet objet extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> d'objets d'extension.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Permet à un objet d'étendre un autre objet via une agrégation.</summary>
      <typeparam name="T">Objet qui participe au comportement personnalisé.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Permet à un objet d'extension de découvrir le moment de son agrégation. Méthode appelée lorsque l'extension est ajoutée à la propriété <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Objet extensible qui agrège cette extension.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Permet à un objet de découvrir la fin de son agrégation. Méthode appelée lorsqu'une extension est supprimée de la propriété <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Objet extensible qui agrège cette extension.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Collection des objets <see cref="T:System.ServiceModel.IExtension`1" /> qui permet la récupération des objets <see cref="T:System.ServiceModel.IExtension`1" /> en fonction de leur type.</summary>
      <typeparam name="T">Type des objets d'extension.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Recherche l'objet d'extension spécifié dans la collection.</summary>
      <returns>Objet d'extension trouvé.</returns>
      <typeparam name="E">Type de l'objet d'extension.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Recherche tous les objets d'extension dans la collection spécifiée par <paramref name="E" />.</summary>
      <returns>Collection de tous les objets d'extension dans la collection qui implémente le type spécifié.</returns>
      <typeparam name="E">Type de l'objet d'extension.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Représente un contrat de message qui n'est pas valide.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.InvalidMessageContractException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> à l'aide du message spécifié.</summary>
      <param name="message">Message pour l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> qui utilise le message spécifié et l'exception interne.</summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Spécifie qu'un membre est sérialisé en tant qu'élément dans le corps SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Obtient ou définit une valeur qui indique la position à laquelle le membre est sérialisé dans le corps SOAP.</summary>
      <returns>Emplacement de l'élément dans le corps SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur passée à l'accesseur Set de propriété est un entier négatif.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Définit une classe fortement typée qui correspond à un message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Obtient ou définit une valeur qui spécifie si le corps de message inclut un élément wrapper.</summary>
      <returns>La valeur est true si le corps de message inclut un élément wrapper, sinon false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Obtient ou définit le nom de l'élément wrapper du corps de message.</summary>
      <returns>Nom de l'élément wrapper dans le corps de message.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Obtient ou définit l'espace de noms de l'élément wrapper du corps de message.</summary>
      <returns>Espace de noms de l'élément wrapper.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Déclare les membres de base pour <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Spécifie le nom de l'élément qui correspond à ce membre. </summary>
      <returns>Nom de l'élément qui correspond à ce membre. Cette chaîne doit être un nom d'élément XML valide. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Spécifie l'espace de noms de l'élément qui correspond à ce membre. </summary>
      <returns>URI d'espace de noms de l'élément qui correspond à ce membre. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Exception levée lorsque les attentes liées aux en-têtes d'un message SOAP ne sont pas satisfaites lors du traitement du message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> avec le message spécifié.</summary>
      <param name="message">Message contenu dans l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message spécifié et d'une valeur qui indique si l'en-tête de message est dupliqué ou manquant.</summary>
      <param name="message">Message d'exception.</param>
      <param name="isDuplicate">La valeur est true si l'en-tête de message multiple est dupliqué. La valeur est false s'il n'y a pas d'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message spécifié et de l'exception interne qui a provoqué l'exception.</summary>
      <param name="message">Message d'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> contenant l'exception interne qui a provoqué l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés, et d'une valeur qui indique si l'en-tête de message est dupliqué ou manquant.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
      <param name="isDuplicate">La valeur est true si l'en-tête de message multiple est dupliqué. La valeur est false s'il n'y a pas d'en-tête de message.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés, d'une valeur qui indique si l'en-tête de message est dupliqué ou manquant, et de l'exception interne qui a provoqué l'exception.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
      <param name="isDuplicate">La valeur est true si l'en-tête de message multiple est dupliqué. La valeur est false s'il n'y a pas d'en-tête de message.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> contenant l'exception interne qui a provoqué l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderException" /> à l'aide du message, du nom d'en-tête et de l'espace de noms spécifiés, et de l'exception interne qui a provoqué l'exception.</summary>
      <param name="message">Message d'exception.</param>
      <param name="headerName">Nom de l'en-tête de message.</param>
      <param name="ns">Espace de noms de l'en-tête de message.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> contenant l'exception interne qui a provoqué l'exception.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Obtient le nom de l'en-tête SOAP qui a provoqué l'exception.</summary>
      <returns>Nom de l'en-tête SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Obtient l'espace de noms de l'en-tête SOAP qui a provoqué l'exception.</summary>
      <returns>Espace de noms de l'en-tête SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Obtient une valeur qui indique la présence de plusieurs en-têtes de message ou l'absence d'en-tête de message.</summary>
      <returns>La valeur est true si l'en-tête de message multiple est dupliqué. La valeur est false s'il n'y a pas d'en-tête de message.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Contrôle le nom des paramètres de demande et de réponse. Ne peut pas être utilisé avec <see cref="T:System.ServiceModel.Channels.Message" /> ou les contrats de message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtient ou définit l'attribut de nom du paramètre dans le schéma XML (XSD).</summary>
      <returns>Attribut de nom du paramètre dans le schéma XSD.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Fournit l'accès au contexte d'exécution d'une méthode de service.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContext" /> qui utilise le <see cref="T:System.ServiceModel.IContextChannel" /> spécifié dans une application cliente. </summary>
      <param name="channel">
        <see cref="T:System.ServiceModel.IContextChannel" /> utilisé pour créer un client <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Le canal a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Obtient ou définit le contexte d'exécution du thread actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationContext" /> qui représente le contexte de message et d'exécution de la méthode actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Obtient les en-têtes du message entrant pour <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui contient les en-têtes du message entrant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Obtient les propriétés du message entrant dans <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient les propriétés du message entrant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Obtient la version du message SOAP entrant pour <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Version SOAP du message entrant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Cette propriété est destinée à être utilisée par le système et ne doit pas être appelée par les utilisateurs.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Se produit lorsque l'opération est terminée.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Obtient les en-têtes du message sortant pour le <see cref="T:System.ServiceModel.OperationContext" /> actif.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui contient les en-têtes du message sortant pour le <see cref="T:System.ServiceModel.OperationContext" /> actif.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Obtient les propriétés du message sortant dans le <see cref="T:System.ServiceModel.OperationContext" /> actif.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient les propriétés du message sortant.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Obtient ou définit l'implémentation du contexte de la demande pour cette méthode.</summary>
      <returns>Implémentation <see cref="T:System.ServiceModel.Channels.RequestContext" /> ou null s'il n'existe aucun contexte pour la demande.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Crée un bloc dans lequel un objet <see cref="T:System.ServiceModel.OperationContext" /> est situé dans la portée.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContextScope" /> qui utilise le <see cref="T:System.ServiceModel.IContextChannel" /> spécifié afin de créer un <see cref="T:System.ServiceModel.OperationContext" /> pour la portée.</summary>
      <param name="channel">Canal à utiliser lors de la création de la portée pour un nouveau <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContextScope" /> afin de créer une portée pour l'objet <see cref="T:System.ServiceModel.OperationContext" /> spécifié.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.OperationContext" /> actif dans la portée créée.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Restaure le <see cref="T:System.ServiceModel.OperationContext" /> d'origine au contexte actif et recycle l'objet <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indique qu'une méthode définit une opération dans le cadre d'un contrat de service d'une application Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Obtient ou définit l'action WS-Addressing du message de demande. </summary>
      <returns>Action à utiliser dans la création de l'en-tête de l'action WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indique qu'une opération est implémentée de façon asynchrone à l'aide d'une paire de méthodes Begin&lt;methodName&gt; et End&lt;methodName&gt; dans un contrat de service. </summary>
      <returns>La valeur est true si la méthode Begin&lt;methodName&gt; correspond à une méthode End&lt;methodName&gt; et si elle peut être traitée par l'infrastructure comme une opération implémentée en tant que paire de méthodes asynchrones dans l'interface de service, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Obtient ou définit une valeur qui indique si une opération retourne un message de réponse.</summary>
      <returns>La valeur est true si une opération ne renvoie pas un message de réponse, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Obtient ou définit le nom de l'opération.</summary>
      <returns>Nom de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Obtient ou définit la valeur de l'action SOAP pour le message de réponse de l'opération.</summary>
      <returns>Valeur de l'action SOAP pour le message de réponse.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Représente le style SOAP qui détermine la manière dont les métadonnées WSDL du service sont mises en forme.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Permet à la représentation WSDL de contenir un élément unique qui représente le document échangé dans le cadre de l'opération.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Entraîne la représentation WSDL de messages échangés lors d'une opération et contient des paramètres comme s'il s'agissait d'un appel de procédure distante.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Exception rencontrée sur le client, qui est levée lorsque la communication avec le participant distant est impossible à établir en raison d'une incompatibilité entre protocoles de transfert de données.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ProtocolException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ProtocolException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ProtocolException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a provoqué la levée de l'exception actuelle. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Exception levée lorsqu'un quota de messages est dépassé.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.QuotaExceededException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.QuotaExceededException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.QuotaExceededException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a provoqué la levée de l'exception actuelle.</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Exception levée lorsqu'un serveur est trop occupé pour accepter un message.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServerTooBusyException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a provoqué la levée de l'exception actuelle.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Exception levée en cas d'échec d'activation d'un service.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceActivationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceActivationException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceActivationException" /> avec un message d'erreur spécifié et l'exception interne fournie.  </summary>
      <param name="message">Message d'erreur expliquant la raison de l'exception.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a provoqué la levée de l'exception actuelle. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indique qu'une interface ou une classe définit un contrat de service dans une application cliente Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Obtient ou définit le type de contrat de rappel lorsque le contrat est un contrat duplex.</summary>
      <returns>
        <see cref="T:System.Type" /> qui indique le contrat de rappel. La valeur par défaut est null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Obtient ou définit le nom utilisé pour localiser le service dans le fichier de configuration d'une application.</summary>
      <returns>Nom utilisé pour localiser l'élément de service dans le fichier de configuration d'une application. La valeur par défaut est le nom de la classe d'implémentation du service.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Obtient ou définit le nom de l'élément &lt;portType&gt; en langage WSDL (Web Services Description Language). </summary>
      <returns>La valeur par défaut est le nom de la classe ou de l'interface à laquelle <see cref="T:System.ServiceModel.ServiceContractAttribute" /> est appliqué. </returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément &lt;portType&gt; en langage WSDL (Web Services Description Language).</summary>
      <returns>Espace de noms WSDL de l'élément &lt;portType&gt;. La valeur par défaut est « http://tempuri.org ». </returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Spécifie les types connus qu'un service doit utiliser lors de la sérialisation ou de la désérialisation.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> et spécifie le nom d'une méthode qui retourne les types connus.</summary>
      <param name="methodName">Nom d'une méthode qui retourne les types connus.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> avec le nom d'une méthode qui retourne les types connus et le type contenant la méthode (ou les méthodes) qui retourne les types connus.</summary>
      <param name="methodName">Nom d'une méthode qui retourne les types connus.</param>
      <param name="declaringType">Type pouvant utiliser les types connus dans son graphique d'objets.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> à l'aide du type connu spécifié.</summary>
      <param name="type">Spécifie un type connu qui peut être utilisé dans une valeur de retour ou dans un paramètre défini par le service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Obtient le type contenant les méthodes qui retournent les types connus.</summary>
      <returns>Méthodes qui retournent les types connus.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Obtient le nom d'une méthode qui retourne la collection de types connus.</summary>
      <returns>Nom de la méthode qui retourne les types connus.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Type connu pouvant être inclus dans un graphique d'objets.</summary>
      <returns>
        <see cref="T:System.Type" /> du type connu.</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contient le message reçu via un canal et ne peut pas être associé à une demande en attente.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Obtient le message inconnu qui a déclenché l'événement.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ayant causé l'événement.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Représente un en-tête qui encapsule un élément d'information d'une adresse permettant d'identifier ou d'interagir avec un point de terminaison.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeader" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Crée une instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> à l'aide d'une valeur, d'un nom et d'un espace de noms spécifiés.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec les <paramref name="name" /> et <paramref name="ns" /> spécifiés qui contiennent l'élément d'informations spécifié par <paramref name="value" />.</returns>
      <param name="name">Nom de l'en-tête d'adresse.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse.</param>
      <param name="value">Élément d'informations de l'en-tête d'adresse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null ou <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crée une instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec un nom et un espace de noms spécifiés qui utilise un formateur spécifié pour sérialiser l'élément d'informations à partir d'un objet spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> avec les <paramref name="name" /> et <paramref name="ns" /> spécifiés qui contiennent l'élément d'informations spécifié par <paramref name="value" />.</returns>
      <param name="name">Nom de l'en-tête d'adresse.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse.</param>
      <param name="value">Élément d'informations de l'en-tête d'adresse.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilisé pour sérialiser l'objet spécifié du paramètre <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="serializer" /> a la valeur null ou <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Détermine si l'élément d'informations d'un objet spécifié est égal à l'objet contenu dans l'en-tête d'adresse actuel.</summary>
      <returns>La valeur est true si l'élément d'informations d'un <paramref name="obj" /> spécifié équivaut à celui contenu dans l'en-tête d'adresse actuel, sinon false. Plus particulièrement, renvoie false si <paramref name="obj" /> a la valeur null.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer à l'objet contenu dans l'en-tête d'adresse actuel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Retourne un lecteur XML qui permet de sérialiser l'objet de l'en-tête d'adresse actuel.</summary>
      <returns>Instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui permet de sérialiser l'objet de l'en-tête d'adresse actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Fournit un code de hachage unique pour un en-tête d'adresse. </summary>
      <returns>Code de hachage unique pour l'en-tête d'adresse actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Désérialise l'élément d'informations à partir de l'en-tête d'adresse actuel vers un objet d'un type spécifié.</summary>
      <returns>Instance d'une classe de type <paramref name="T" /> dont les champs et propriétés sont définis sur les valeurs fournies par l'objet de l'en-tête d'adresse actuel.</returns>
      <typeparam name="T">Classe de type <paramref name="T" /> dont les champs et propriétés sont définis sur les valeurs fournies par l'objet de l'en-tête d'adresse actuel.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Désérialise l'élément d'informations à partir de l'en-tête d'adresse actuel vers un objet d'un type spécifié qui utilise un formateur spécifique pour sérialiser ces informations.</summary>
      <returns>Instance d'une classe de type <paramref name="T" /> dont les champs et propriétés sont définis sur les valeurs fournies par l'objet de l'en-tête d'adresse actuel.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilisé pour désérialiser l'élément d'informations à partir de l'objet de l'en-tête d'adresse actuel.</param>
      <typeparam name="T">Classe de type <paramref name="T" /> dont les champs et propriétés sont définis sur les valeurs fournies par l'objet de l'en-tête d'adresse actuel.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="serializer" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>En cas d'implémentation, obtient le nom de l'en-tête d'adresse.</summary>
      <returns>Nom de l'en-tête d'adresse.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>En cas d'implémentation, obtient l'espace de noms de l'en-tête d'adresse.</summary>
      <returns>Espace de noms de l'en-tête d'adresse.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>En cas de substitution dans une classe dérivée, est appelé lorsque le contenu de l'en-tête d'adresse est écrit dans un flux ou dans un fichier.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le contenu de l'en-tête d'adresse dans un flux ou dans un fichier.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>En cas de substitution dans une classe dérivée, est appelé lors du commencement de l'écriture du contenu de l'en-tête d'adresse dans un flux ou dans un fichier.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux ou dans un fichier.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Inclut l'en-tête d'adresse dans un wrapper en tant qu'en-tête de message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> qui inclut l'en-tête d'adresse actuel dans un wrapper.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit l'en-tête d'adresse dans un flux ou dans un fichier à l'aide d'un <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux ou dans un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Écrit l'en-tête d'adresse dans un flux ou dans un fichier à l'aide d'un <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux ou dans un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit le contenu de l'en-tête d'adresse dans un flux ou dans un fichier.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le contenu de l'en-tête d'adresse dans un flux ou dans un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Commence à écrire le contenu de l'en-tête d'adresse dans un flux ou dans un fichier.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'en-tête d'adresse dans un flux ou dans un fichier.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Représente une collection d'en-têtes d'adresse en lecture seule thread-safe.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> à partir d'un jeu énumérable d'en-têtes d'adresse.</summary>
      <param name="addressHeaders">Ensemble <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets <see cref="T:System.ServiceModel.Channels.AddressHeader" /> utilisé pour initialiser la collection.</param>
      <exception cref="T:System.ArgumentException">Un des en-têtes d’adresse du paramètre <paramref name="addressHeaders" /> a la valeur null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Ajoute les en-têtes de la collection aux en-têtes d'un message spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> auquel sont ajoutés les en-têtes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Recherche tous les en-têtes d'adresse dans la collection qui possèdent le nom et l'espace de noms spécifiés.</summary>
      <returns>
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenant tous les en-têtes de la collection qui possèdent le nom et l'espace de noms spécifiés.</returns>
      <param name="name">Nom de l'en-tête d'adresse à rechercher.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Recherche le premier en-tête d'adresse dans la collection avec le nom et l'espace de noms spécifiés.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> de la collection possédant le nom et l'espace de noms spécifiés.</returns>
      <param name="name">Nom de l'en-tête d'adresse à rechercher.</param>
      <param name="ns">Espace de noms de l'en-tête d'adresse à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="ns" /> est null.</exception>
      <exception cref="T:System.ArgumentException">Plusieurs en-têtes possèdent les <paramref name="name" /> et <paramref name="ns" /> spécifiés.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Version WS-Addressing associée à un message SOAP ou comprise par un point de terminaison.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Obtient la version d'adressage indiquant qu'aucune version de WS-Addressing n'est en cours d'utilisation.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> n'utilisant pas une version de WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Chaîne qui représente la version d'adressage actuelle.</summary>
      <returns>Version d'adressage actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Obtient un identificateur pour la version d'adresse associée à WS-Addressing 1.0.</summary>
      <returns>Instance singleton identifiant le <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associé à WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Élément de liaison qui spécifie le format binaire .NET pour XML utilisé pour encoder des messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Génère la pile de la fabrique de canaux sur le client qui crée un type de canal spécifique pour un contexte donné.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> pour le contexte spécifié.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> du canal.</param>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canaux.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Crée un objet <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> initialisé à partir de l'objet actuel.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> ayant des valeurs de propriétés égales à celles de l'élément actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crée une fabrique pour les encodeurs de messages binaires qui utilisent les versions SOAP et WS-Addressing ainsi que l'encodage de caractères spécifié par l'élément de liaison de l'encodage actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> créé par cet élément de liaison.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Obtient ou définit les versions du message SOAP et de WS-Addressing utilisées ou attendues.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé ou attendu.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur définie est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur définie correspond à une version d'enveloppe non prise en charge.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contient les éléments de liaison qui spécifient les protocoles, transports et encodeurs de messages utilisés pour la communication entre clients et services.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" /> avec un nom et un espace de noms par défaut. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" /> à partir d'une liaison spécifique du service.</summary>
      <param name="name">
        <see cref="P:System.ServiceModel.Channels.Binding.Name" /> de la liaison.</param>
      <param name="ns">
        <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> de la liaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> est null ou une chaîne vide ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Génère la pile de la fabrique de canaux sur le client qui crée un type de canal spécifique et qui répond aux fonctionnalités spécifiées par un tableau d'objets.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> répondant aux fonctionnalités spécifiées par la collection.</returns>
      <param name="parameters">Tableau d'objets qui spécifie des critères pour la fabrique de canaux générée.</param>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canaux.</typeparam>
      <exception cref="T:System.InvalidOperationException">L'élément de transport est manquant ou ne se trouve pas dans le bon ordre, le schéma est non valide ou la version du message n'est pas spécifiée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Génère la pile de la fabrique de canaux sur le client qui crée un type de canal spécifique et qui répond aux fonctionnalités spécifiées par une collection de paramètres de liaison.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> répondant aux fonctionnalités spécifiées par la collection.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> qui spécifie des critères pour la fabrique de canaux générée.</param>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canaux.</typeparam>
      <exception cref="T:System.InvalidOperationException">L'élément de transport est manquant ou ne se trouve pas dans le bon ordre, le schéma est non valide ou la version du message n'est pas spécifiée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Retourne une valeur qui indique si la liaison actuelle peut générer une pile de la fabrique de canaux sur le client qui satisfait aux critères spécifiés par un tableau d'objets.</summary>
      <returns>La valeur est true si la pile de la fabrique de canaux spécifiée peut être générée sur le client, sinon false.</returns>
      <param name="parameters">Tableau d'objets qui spécifie des critères pour la fabrique de canaux générée.</param>
      <typeparam name="TChannel">Type de canal pour lequel la fabrique est en cours de vérification.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Retourne une valeur qui indique si la liaison actuelle peut générer une pile de la fabrique de canaux sur le client qui satisfait à la collection de paramètres de liaison spécifiée.</summary>
      <returns>La valeur est true si la pile de la fabrique de canaux spécifiée peut être générée sur le client, sinon false.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> qui spécifie des critères pour la fabrique de canaux générée.</param>
      <typeparam name="TChannel">Type de canal pour lequel la fabrique est en cours de vérification.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Obtient ou définit le délai accordé à l'opération de fermeture d'une connexion avant que le transport ne lève une exception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration. La valeur par défaut est 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à zéro ou trop élevée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>En cas de substitution dans une classe dérivée, crée une collection qui contient les éléments de liaison faisant partie de la liaison actuelle. </summary>
      <returns>Objet <see cref="T:System.Collections.Generic.ICollection`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui contient les éléments de liaison dans l'ordre correct à partir de l'objet de liaison actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de liaison.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> qui spécifie des critères pour le canal généré.</param>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Obtient la version du message utilisée par les clients et les services configurés avec la liaison.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par les clients et les services configurés avec la liaison.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Obtient ou définit le nom de la liaison.</summary>
      <returns>Nom de la liaison. Le nom par défaut correspond à la valeur null.</returns>
      <exception cref="T:System.ArgumentException">La valeur définie ne peut pas être null ou une chaîne vide.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Obtient ou définit l'espace de noms XML de la liaison.</summary>
      <returns>Espace de noms XML de la liaison. La valeur par défaut est « http://tempuri.org/ ».</returns>
      <exception cref="T:System.ArgumentNullException">La valeur définie ne peut pas être null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Obtient ou définit le délai accordé à l'opération d'ouverture d'une connexion avant que le transport ne lève une exception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration. La valeur par défaut est 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à zéro ou trop élevée.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Obtient ou définit l'intervalle durant lequel une connexion peut rester inactive, au cours duquel aucun message d'application n'est reçu, avant qu'elle ne soit abandonnée.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai de réception d'un message par l'application avant son expiration. La valeur par défaut est 10 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à zéro ou trop élevée.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>En cas d'implémentation dans une classe dérivée, définit le schéma URI qui spécifie le transport utilisé par les fabriques de canaux générées par les liaisons.</summary>
      <returns>Schéma URI utilisé par les canaux créés à l'aide des fabriques générées par la liaison actuelle.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Obtient ou définit le délai accordé à l'exécution d'une opération d'écriture avant que le transport ne lève une exception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'écriture avant son expiration. La valeur par défaut est 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à zéro ou trop élevée.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Fournit des informations sur les adresses, liaisons, éléments de liaison et paramètres de liaison requis pour générer les fabriques de canaux sur un client Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour une liaison et une collection de paramètres de liaison spécifiées.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> du canal.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> du canal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Obtient la liaison pour le canal créé dans le contexte actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> pour le canal créé dans le contexte actuel.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Obtient la collection de paramètres de liaison pour le canal créé dans le contexte actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> pour le canal créé dans le contexte actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Génère la fabrique de canaux interne pour des canaux d'un type spécifique sous la fabrique de canaux actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> qui représente la fabrique de canaux interne de la fabrique de canaux actuelle.</returns>
      <typeparam name="TChannel">Type d'objet <see cref="T:System.ServiceModel.Channels.IChannel" /> produit par la fabrique de canaux interne.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Retourne une valeur qui indique si la fabrique de canaux interne peut produire un type de canal spécifié.</summary>
      <returns>La valeur est true si la fabrique de canaux interne peut produire le <paramref name="TChannel" /> spécifié, sinon false.</returns>
      <typeparam name="TChannel">Type d'objet <see cref="T:System.ServiceModel.Channels.IChannel" /> produit par la fabrique de canaux interne.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Retourne une copie du contexte actuel de création du canal.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> représentant une copie du contexte actuel de création du canal.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de liaison.</summary>
      <returns>Objet avec type <paramref name="T " /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Obtient les éléments de liaison utilisés par d'autres éléments de liaison pour générer la pile de canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> qui contient les éléments de liaison utilisés par d'autres éléments de liaison pour générer la pile de canal.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Éléments des liaisons qui créent les fabriques de canaux pour divers types de canaux utilisés afin de traiter des messages sortants sur un client Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> à partir d'un élément de liaison spécifié.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> à cloner.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initialise une fabrique de canaux permettant de produire des canaux d'un type spécifique à partir du contexte de liaison.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> initialisé à partir de <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit un contexte pour un élément de liaison. </param>
      <typeparam name="TChannel">Type de canal généré par la fabrique.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne une valeur qui indique si l'élément de liaison peut générer une fabrique de canaux pour un type de canal spécifique.</summary>
      <returns>La valeur est true si le <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> peut être généré par l'élément de liaison, sinon false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit un contexte pour un élément de liaison. </param>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canaux.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>En cas de substitution dans une classe dérivée, retourne une copie de l'objet de l'élément de liaison.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui est un clone complet de l'objet d'origine.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>En cas de substitution dans une classe dérivée, retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de liaison.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent ou null s'il est absent.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison.</param>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Représente la collection d'éléments de liaison utilisés dans une liaison.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> à partir d'un jeu énumérable d'éléments de liaison.</summary>
      <param name="elements">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de type générique <see cref="T:System.ServiceModel.Channels.BindingElement" /> permettant d'initialiser la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> à partir d'un tableau d'éléments de liaison.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> permettant d'initialiser la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Ajoute des éléments de liaison à partir d'un tableau dans la collection des éléments de liaison.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Crée une copie de la collection d'éléments de liaison.</summary>
      <returns>Copie de <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Retourne une valeur qui indique si un type d'élément de liaison spécifié appartient à la collection des éléments de liaison.</summary>
      <returns>La valeur est true si le type d'élément de liaison spécifié est contenu dans la collection, sinon false.</returns>
      <param name="bindingElementType">Type d'élément de liaison en cours de vérification afin d'être inclus dans la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Retourne le premier élément d'un type spécifié de la collection des éléments de liaison.</summary>
      <returns>Élément de type <see cref="T:System.Type" /> s'il existe, sinon, 0 si <paramref name="T" /> est d'un type valeur et null si <paramref name="T" /> est d'un type référence.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> de l'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Retourne tous les éléments d'un type spécifié de la collection des éléments de liaison.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tous les éléments de type <see cref="T:System.Type" /> s'il existe, sinon, 0 si <paramref name="T" /> est un type valeur et null si <paramref name="T" /> est un type référence.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> de l'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Insère un élément de liaison à un emplacement donné dans une collection d'éléments de liaison.</summary>
      <param name="index">Emplacement au sein duquel insérer l'élément de liaison dans la collection.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> à insérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Supprime un élément de liaison d'un type spécifié de la collection des éléments de liaison.</summary>
      <returns>Élément de type <see cref="T:System.Type" /> supprimé.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> de l'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Supprime tous les éléments de liaison d'un type spécifié de la collection des éléments de liaison.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tous les éléments de type <see cref="T:System.Type" /> trouvés.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> de l'élément à rechercher.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Remplace un élément de liaison au niveau de l'index spécifié dans la collection des éléments de liaison.</summary>
      <param name="index">Index de base zéro de l'élément à remplacer.</param>
      <param name="item">Nouvelle valeur de l'élément <see cref="T:System.ServiceModel.Channels.BindingElement" /> à l'<paramref name="index" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Représente une collection de paramètres de liaison qui stocke les informations utilisées par des éléments de liaison lors de la création de fabriques.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Représente le writer du corps de message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BodyWriter" /> qui indique explicitement s'il faut effectuer la mise en mémoire tampon.</summary>
      <param name="isBuffered">La valeur est true si le writer du corps peut être appelé à plusieurs reprises, sinon false.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Obtient une valeur qui indique si la méthode d'écriture peut être appelée à plusieurs reprises.</summary>
      <returns>La valeur est true si le writer du corps peut être appelé à plusieurs reprises, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>En cas d'implémentation, fournit un point d'extensibilité lors de l'écriture du contenu relatif au corps.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le corps de message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit le contenu du corps de message.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le corps de message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>En cas d'implémentation dans une classe dérivée, vous pouvez utiliser la classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> pour gérer un pool de mémoires tampons. Le pool et ses mémoires tampons sont créés lorsque vous instanciez cette classe, et ils sont détruits lorsque le pool de mémoires tampons est récupéré par l'opération garbage collection. Lorsque vous avez besoin d'utiliser une mémoire tampon, vous en récupérez une dans le pool, vous l'utilisez, puis vous la replacez dans le pool une fois que vous avez terminé. Ce processus est bien plus rapide et consomme moins de ressources que le fait de créer et de détruire une mémoire tampon lorsque vous avez besoin d'en utiliser une.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BufferManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Libère les mémoires tampons actuellement mises en cache dans le gestionnaire.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Crée un BufferManager avec une taille de pool de mémoires tampons maximale indiquée ainsi qu'une taille maximale pour chaque mémoire tampon individuelle du pool.</summary>
      <returns>Retourne un objet <see cref="T:System.ServiceModel.Channels.BufferManager" /> avec les paramètres spécifiés.</returns>
      <param name="maxBufferPoolSize">Taille maximale du pool.</param>
      <param name="maxBufferSize">Taille maximale d'une mémoire tampon individuelle.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> ou <paramref name="maxBufferSize" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Retourne une mémoire tampon dans le pool.</summary>
      <param name="buffer">Référence à la mémoire tampon retournée.</param>
      <exception cref="T:System.ArgumentNullException">La référence <paramref name="buffer" /> ne peut pas avoir la valeur null.</exception>
      <exception cref="T:System.ArgumentException">La longueur de <paramref name="buffer" /> ne correspond pas à la propriété de longueur de la mémoire tampon du pool.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Obtient une mémoire tampon dans le pool d'une taille égale ou supérieure à celle spécifiée. </summary>
      <returns>Tableau d'octets correspondant à la taille demandée de la mémoire tampon.</returns>
      <param name="bufferSize">Taille, en octets, de la mémoire tampon demandée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ne peut pas être inférieur à zéro.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Fournit l'implémentation de base pour les canaux personnalisés.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelBase" />. </summary>
      <param name="channelManager">
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> qui fournit les délais d'expiration par défaut pour les opérations des canaux (envoi, réception, ouverture et fermeture).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération de réception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de réception avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération d'envoi.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Retourne l'objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Obtient le gestionnaire de canaux associé au canal actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> associé au canal actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Appelé lors de la transition d'un objet de communication vers l'état en cours de fermeture.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtient le délai d'expiration de la méthode de fermeture appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode de fermeture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtient le délai d'expiration de la méthode d'ouverture appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode d'ouverture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtient le délai d'expiration de la méthode de réception appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode de réception.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtient le délai d'expiration de la méthode d'envoi appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode d'envoi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Fournit une implémentation de base commune à toutes les fabriques de canaux personnalisées.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> avec des délais d'expiration des communications par défaut spécifiés.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> qui spécifie les délais d'expiration par défaut des opérations d'ouverture, d'envoi, de réception et de fermeture lors de l'échange de messages. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération de réception.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de réception avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Obtient l'intervalle par défaut pour l'exécution d'une opération d'envoi.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Retourne l'objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Insère un traitement sur un objet de communication après que celui-ci a effectué une transition vers l'état en cours de fermeture en raison de l'appel d'une opération d'annulation synchrone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer chaque canal créé par la fabrique.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de la fermeture de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Insère un traitement sur un objet de communication après que celui-ci a effectué sa transition vers l'état en cours d'ouverture, qui doit se terminer dans l'intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour fermer les canaux ouverts par la fabrique.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Fournit une implémentation de base commune permettant aux fabriques de canaux sur le client de créer des canaux d'un type spécifique connectés à une adresse spécifiée.</summary>
      <typeparam name="TChannel">Type de canal produit par la fabrique.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> avec les délais d'expiration des communications par défaut spécifiés.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> qui spécifie les délais d'expiration par défaut des opérations d'ouverture, d'envoi, de réception et de fermeture lors de l'échange de messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crée un type de canal particulier avec une adresse de point de terminaison spécifiée.</summary>
      <returns>Canal de type <paramref name="TChannel" /> avec le <paramref name="address" /> spécifié.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison distant auquel le canal envoie des messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crée un type de canal particulier avec les adresses de transport et de point de terminaison spécifiées.</summary>
      <returns>Canal de type <paramref name="TChannel" /> avec l'adresse de transport et l'adresse distante spécifiées.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison distant auquel le canal envoie des messages.</param>
      <param name="via">
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ou <paramref name="via" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Annule chaque canal géré par la fabrique de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer tous les canaux associés à la fabrique de canaux dans l'intervalle spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution asynchrone de l'opération de fermeture.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Ferme tous les canaux associés à la fabrique de canaux dans l'intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>En cas d'implémentation dans une classe dérivée, fournit un point d'extensibilité lors de la création de canaux.</summary>
      <returns>Canal de type <paramref name="TChannel" /> avec les adresses spécifiées.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison distant auquel le canal envoie des messages.</param>
      <param name="via">
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour fermer tous les canaux associés à la fabrique de canaux dans l'intervalle spécifié.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirme que la fabrique de canaux est ouverte et prête à créer des canaux.</summary>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">La fabrique de canaux actuelle est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Fournit une implémentation de base pour la gestion des délais d'expiration par défaut associés aux fabriques de canaux et d'écouteurs.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle par défaut au cours duquel le canal doit terminer la réception d'un message.</summary>
      <returns>Une fois que la méthode de réception a été appelée, <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de réception d'un message par le canal avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle par défaut au cours duquel le canal doit terminer l'envoi d'un message.</summary>
      <returns>Une fois que la méthode d'envoi a été appelée, <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'envoi d'un message par le canal avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtient le délai d'expiration de la méthode de fermeture appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode de fermeture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtient le délai d'expiration de la méthode d'ouverture appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode d'ouverture.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtient le délai d'expiration de la méthode de réception appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode de réception.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtient le délai d'expiration de la méthode d'envoi appelée par un objet de communication.</summary>
      <returns>
        <see cref="T:System.Timespan" /> qui spécifie le délai d'expiration de la méthode d'envoi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Représente une collection de paramètres de canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
      <param name="channel">Canal dont les paramètres se trouvent dans cette collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Obtient le canal dont les paramètres se trouvent dans cette collection. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannel" /> dont les paramètres se trouvent dans cette collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Efface la collection de paramètres.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Insère l'élément spécifié dans la collection à l'aide de l'index spécifié.</summary>
      <param name="index">Index de l'élément de la collection.</param>
      <param name="item">Élément à ajouter à la collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Ajoute les paramètres de la collection actuelle à un <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> d'un canal spécifié.</summary>
      <param name="innerChannel">Canal qui reçoit les paramètres de la collection actuelle.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Supprime un paramètre de la collection.</summary>
      <param name="index">Index du paramètre à supprimer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Remplace un élément dans la collection au niveau de l'index spécifié.</summary>
      <param name="index">Index de l'élément à remplacer.</param>
      <param name="item">Valeur de l'élément de remplacement.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Fournit une implémentation de base commune pour l'ordinateur d'état de base que tous les objets orientés communication du système partagent, notamment les canaux et les fabriques de canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> avec les verrous mutuellement exclusifs pour protéger les transitions d'état spécifiées.</summary>
      <param name="mutex">Verrous mutuellement exclusifs qui protègent l'instance de classe lors d'une transition d'état.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Entraîne la transition immédiate d'un objet de communication de son état actuel vers l'état en cours de fermeture.</summary>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" /> de classe de base ou la méthode <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" /> de classe de base n'est pas appelée.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer l'objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle par défaut imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer un objet de communication dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer l'objet de communication.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans un état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle par défaut imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour fermer un objet de communication dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans un état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Entraîne la transition d’un objet de communication de son état actuel vers l’état fermé.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle par défaut imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Entraîne la transition d'un objet de communication de son état actuel vers l'état fermé dans un intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> a été appelé sur un objet dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Se produit lorsqu'un objet de communication effectue une transition vers l'état fermé.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Se produit lorsqu'un objet de communication effectue une transition vers l'état en cours de fermeture.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle par défaut imparti pour l'exécution d'une opération de fermeture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient l'intervalle par défaut imparti pour l'exécution d'une opération d'ouverture.</summary>
      <returns>
        <see cref="T:System.Timespan" /> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour fermer un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour ouvrir un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Entraîne la transition d'un objet de communication de son état actuel vers l'état défaillant.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Se produit lorsqu'un objet de communication effectue une transition vers l'état défaillant.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Obtient le type d'objet de communication.</summary>
      <returns>Type de l'objet de communication.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Obtient une valeur qui indique si l'objet de communication a été supprimé.</summary>
      <returns>La valeur est true si l'objet de communication est à l'état fermé, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>En cas d'implémentation dans une classe dérivée, insère un traitement sur un objet de communication après que celui-ci a effectué une transition vers l'état en cours de fermeture en raison de l'appel d'une opération d'annulation synchrone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>En cas d'implémentation dans une classe dérivée, insère un traitement après qu'un objet de communication a effectué une transition vers l'état en cours de fermeture en raison de l'appel d'une opération de fermeture asynchrone.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de fermeture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de fermeture asynchrone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>En cas d'implémentation dans une classe dérivée, insère un traitement sur un objet de communication après que celui-ci a effectué une transition vers l'état en cours d'ouverture en raison de l'appel d'une opération d'ouverture asynchrone.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'ouverture asynchrone. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération d'ouverture asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>En cas d'implémentation dans une classe dérivée, insère un traitement sur un objet de communication après que celui-ci a effectué une transition vers l'état en cours de fermeture en raison de l'appel d'une opération de fermeture synchrone.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant son expiration.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Appelé lors de la transition d'un objet de communication vers l'état en cours de fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Appelé lors de la transition d'un objet de communication vers l'état en cours de fermeture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>En cas d'implémentation dans une classe dérivée, exécute une opération asynchrone lors de la fermeture d'un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>En cas d'implémentation dans une classe dérivée, exécute une opération asynchrone lors de l'ouverture d'un objet de communication.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Insère un traitement sur un objet de communication après que celui-ci a effectué une transition vers l'état défaillant en raison de l'appel d'une opération d'erreur synchrone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>En cas d'implémentation dans une classe dérivée, insère un traitement sur un objet de communication après que celui-ci a effectué sa transition vers l'état en cours d'ouverture, qui doit se terminer dans l'intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Appelé lors de la transition d'un objet de communication vers l'état ouvert.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Appelé lors de la transition d'un objet de communication vers l'état en cours d'ouverture.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Entraîne la transition d'un objet de communication de l'état créé vers l'état ouvert.</summary>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans un état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle par défaut imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Entraîne la transition d'un objet de communication de l'état créé vers l'état ouvert dans un intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant son expiration.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans un état <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.TimeoutException">L'intervalle spécifié par <paramref name="timeout" /> imparti pour l'exécution de l'opération a été dépassé avant la fin de l'opération.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Se produit lorsqu'un objet de communication effectue une transition vers l'état ouvert.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Se produit lorsqu'un objet de communication effectue une transition vers l'état en cours d'ouverture.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Obtient une valeur qui indique l'état actuel de l'objet de communication.</summary>
      <returns>Valeur de l'énumération <see cref="T:System.ServiceModel.CommunicationState" /> qui indique l'état actuel de l'objet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Obtient les verrous mutuellement exclusifs qui protègent l'instance de classe lors d'une transition d'état.</summary>
      <returns>Verrous mutuellement exclusifs qui protègent l'instance de classe lors d'une transition d'état.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Lève une exception si l'objet de communication est supprimé.</summary>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Lève une exception si l'objet de communication ou la propriété <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> n'est pas défini sur l'état <see cref="F:System.ServiceModel.CommunicationState.Created" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Lève une exception si l'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'objet de communication n'est pas dans l'état <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> et ne peut pas être utilisé.</exception>
      <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" /> et ne peut pas être modifié.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> et ne peut pas être modifié.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Définit une liaison à partir d'une liste d'éléments de liaison. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> avec les éléments de liaison d'une pile de canal complète.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui contient les éléments de liaison de la pile de canal dans l'ordre descendant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> d'après les valeurs d'une liaison spécifiée.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilisé pour initialiser la liaison personnalisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> à partir d'un tableau d'éléments de liaison.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilisé pour initialiser la liaison personnalisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> à partir d'un tableau d'éléments de liaison avec un nom et un espace de noms spécifiés.</summary>
      <param name="name">Nom de la liaison.</param>
      <param name="ns">Espace de noms de la liaison.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilisé pour initialiser la liaison personnalisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Retourne une collection générique des éléments de liaison à partir de la liaison personnalisée.</summary>
      <returns>Objet <see cref="T:System.Collections.Generic.ICollection`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> contenant les éléments de liaison de la liaison personnalisée.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Obtient les éléments de liaison de la liaison personnalisée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> contenant les éléments de liaison de la liaison personnalisée.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Obtient le schéma URI du transport utilisé par la liaison personnalisée.</summary>
      <returns>Schéma URI du transport utilisé par la liaison personnalisée, ou chaîne vide s'il n'existe aucun transport (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> a la valeur null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Convertit les exceptions levées par un canal en messages d'erreur SOAP conformes au protocole du canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Obtient le convertisseur d'erreur par défaut.</summary>
      <returns>Instance de <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>En cas d'implémentation dans une classe dérivée, tente de créer l'exception.</summary>
      <returns>La valeur est true si la conversation de l'erreur est réussie, sinon false. La valeur par défaut est false.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> d'erreur.</param>
      <param name="fault">Erreur.</param>
      <param name="exception">Si la conversion réussit, l'<see cref="T:System.Exception" /> SOAP est renvoyée en tant que paramètre de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>En cas d'implémentation dans une classe dérivée, tente de créer le message d'erreur après la conversion de l'erreur en exception SOAP.</summary>
      <returns>La valeur est true si la création du message d'erreur est réussie, sinon false. La valeur par défaut est false.</returns>
      <param name="exception">Exception SOAP.</param>
      <param name="message">Le message d'erreur est renvoyé en tant que paramètre de sortie.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> a renvoyé la valeur true mais <paramref name="message" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Inclut <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> dans un wrapper avec la vérification des erreurs.</summary>
      <returns>La valeur est true si la conversation de l'erreur est réussie, sinon false. La valeur par défaut est false.</returns>
      <param name="message">Message d'erreur.</param>
      <param name="fault">Erreur.</param>
      <param name="exception">Si la conversion réussit, l'exception SOAP est renvoyée en tant que paramètre de sortie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> ou <paramref name="fault" /> est null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> a renvoyé la valeur true mais <paramref name="exception" /> est null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> a renvoyé la valeur false mais <paramref name="exception" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>Permet de gérer la prise en charge des cookies HTTP dans les requêtes et réponses HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> à partir d'un élément de liaison spécifié.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> à cloner.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initialise une fabrique de canaux permettant de produire des canaux d'un type spécifique à partir du contexte de liaison.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> initialisé à partir de <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit un contexte pour un élément de liaison.</param>
      <typeparam name="TChannel">Type de canal généré par la fabrique.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>Retourne une copie de l'objet d'élément de liaison en cours.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui est un clone complet de l'original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de liaison.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent ou null s'il est absent.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison.</param>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Permet d'accéder à la requête HTTP pour accéder aux informations complémentaires rendues disponibles pour les requêtes et y répondre, via le protocole HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Obtient les en-têtes HTTP à partir de la requête HTTP.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> qui contient les en-têtes HTTP de la requête HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Obtient ou définit le verbe HTTP des requêtes HTTP.</summary>
      <returns>Verbe HTTP de la requête HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">Le jeu <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Obtient le nom de la propriété de message associée à la classe <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
      <returns>Valeur "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Obtient ou définit la chaîne de requête de la requête HTTP.</summary>
      <returns>Chaîne de requête de la requête HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">Le jeu <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Obtient ou définit une valeur qui indique si le corps du message est ignoré et seuls les en-têtes sont envoyés.</summary>
      <returns>La valeur est true si le corps du message est supprimé, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Permet d'accéder à la réponse HTTP pour accéder aux informations complémentaires rendues disponibles pour les requêtes et y répondre via le protocole HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Obtient les en-têtes HTTP à partir de la réponse HTTP.</summary>
      <returns>Retourne une <see cref="T:System.Net.WebHeaderCollection" /> qui contient les en-têtes HTTP de la réponse HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Obtient le nom de la propriété de message associée à la classe <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
      <returns>Retourne "httpResponse".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Obtient ou définit le code d'état de la réponse HTTP en cours à laquelle cette propriété est attachée.</summary>
      <returns>
        <see cref="T:System.Net.HttpStatusCode" /> à envoyer à la réponse HTTP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur définie est inférieure à 100 ou supérieure à 599.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Obtient ou définit la description du code d'état de la réponse HTTP en cours à laquelle cette propriété est attachée.</summary>
      <returns>Description de l'état à envoyer pour la réponse HTTP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Représente l'élément de liaison utilisé pour spécifier un transport HTTPS pour la transmission des messages. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Instance de la classe <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crée une fabrique de canaux d'un type spécifié qui peut être utilisé pour créer un canal.</summary>
      <returns>Une fabrique de canaux du type spécifié configurée selon les valeurs définies dans l'élément de liaison de transport.</returns>
      <param name="context">Membres de <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui décrivent les liaisons, les comportements, les contrats et les autres informations nécessaires à la création de la fabrique de canaux.</param>
      <typeparam name="TChannel">Type de canal.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ne peut pas être null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Crée une copie de l'élément de liaison en cours.</summary>
      <returns>Copie de l'élément de liaison en cours.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtient un objet spécifié à partir du <see cref="T:System.ServiceModel.Channels.BindingContext" />. Cette méthode obtient l'objet spécifié à partir de la classe de base ou de l'un des ancêtres de cette classe.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Retourne le schéma URI pour le transport.</summary>
      <returns>Schéma URI pour le transport ("HTTPS").</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Représente l'élément de liaison utilisé pour spécifier un transport HTTP pour la transmission des messages. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
      <param name="elementToBeCloned">Instance de la classe <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crée une fabrique de canaux qui peut être utilisée pour créer un canal.</summary>
      <returns>Fabrique de canaux du type spécifié.</returns>
      <param name="context">Membres de <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui décrivent les liaisons, les comportements, les contrats et les autres informations nécessaires à la création de la fabrique de canaux.</param>
      <typeparam name="TChannel">Type de fabrique de canaux.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ne peut pas être null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Détermine si une fabrique de canaux du type spécifié peut être générée.</summary>
      <returns>La valeur est true si une fabrique de canaux peut être générée, sinon false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour le canal qui sera créé.</param>
      <typeparam name="TChannel">Type de canal à vérifier.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Crée une copie de l'élément de liaison en cours.</summary>
      <returns>Copie de l'élément de liaison en cours.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtient une propriété du <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifié.</summary>
      <returns>Propriété du <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifié.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propriété à obtenir.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Obtient ou définit la taille maximale de la mémoire tampon à utiliser. Pour les messages mis en mémoire tampon, cette valeur est identique à <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />. Pour les messages transmis par flux, cette valeur est la taille maximale des en-têtes SOAP, qui doivent être lus en mode Mis en mémoire tampon.</summary>
      <returns>Taille maximale, en octets, de la mémoire tampon. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Obtient le schéma URI du transport.</summary>
      <returns>Renvoie <see cref="F:System.Uri.UriSchemeHttp" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Définit l'interface de base que tous les objets de canal doivent implémenter. Pour cela, ils implémentent l'interface d'ordinateur d'état partagée par tous les objets de communication ainsi qu'une méthode pour récupérer les objets à partir de la pile de canal. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Définit l'interface qui doit être implémentée par une fabrique de canaux pour produire des canaux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Définit l'interface qui doit être implémentée par les fabriques de canaux pour créer des canaux spécifiques au type.</summary>
      <typeparam name="TChannel">Type de canal créé par la fabrique de canaux.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crée un canal d'un type spécifié vers une adresse de point de terminaison spécifiée.</summary>
      <returns>Canal de type <paramref name="TChannel" /> vers l'adresse de point de terminaison spécifiée.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crée un canal du type spécifié vers une adresse de point de terminaison spécifiée et l'adresse de transport vers laquelle les messages sont envoyés.</summary>
      <returns>Canal de type <paramref name="TChannel" /> vers l'adresse de point de terminaison spécifiée et adresse de transport.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
      <param name="via">
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Définit l'interface qu'un canal doit implémenter pour envoyer et recevoir des messages.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Définit l'interface pour la session implémentée de chaque côté d'une communication bidirectionnelle entre les points de terminaison de la messagerie.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour terminer la session sortante.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'arrêt de la session sortante asynchrone.</returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet contenant les informations d'état de cette requête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour terminer la session sortante avec un délai d'attente spécifié pendant lequel l'opération doit être terminée.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'arrêt de la session sortante asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle pendant lequel l'opération doit être terminée.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet contenant les informations d'état de cette requête. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Termine la session sortante qui indique que plus aucun message ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Termine la session sortante qui indique que plus aucun message ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session pendant l'intervalle spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle pendant lequel l'opération doit être terminée.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour terminer la session sortante qui indique que plus aucun message ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel d'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Définit l'interface qui associe un canal duplex à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>Définit l'interface utilisée pour fournir un accès à une instance facultative de <see cref="T:System.Net.CookieContainer" /> qui peut être utilisée pour gérer une collection de cookies.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>Obtient ou définit l'objet <see cref="T:System.Net.CookieContainer" /> à utiliser, le cas échéant.</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> à utiliser si un conteneur doit être utilisé, sinon null.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Définit l'interface qu'un canal doit implémenter pour recevoir un message. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour recevoir un message associé à un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la réception de message asynchrone. </returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour recevoir un message doté d'un délai spécifié et associé à un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de réception asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'attente avant qu'un message soit disponible.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone.</param>
      <exception cref="T:System.TimeoutException">Le <paramref name="timeout" /> spécifié est dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'expiration spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour recevoir un message doté d'un délai spécifié et associé à un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de réception asynchrone.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'attente avant qu'un message soit disponible.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone.</param>
      <exception cref="T:System.TimeoutException">Le <paramref name="timeout" /> spécifié est dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'expiration spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération "wait-for-a-message-to-arrive" asynchrone dotée d'un délai spécifié et associée à un objet d'état. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone "wait-for-a-message-to-arrive".</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'attente avant qu'un message soit disponible.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone.</param>
      <exception cref="T:System.TimeoutException">Le <paramref name="timeout" /> spécifié est dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'expiration spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour recevoir un message. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel d'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Exécute l'opération asynchrone spécifiée pour recevoir un message.</summary>
      <returns>La valeur est true si un message est reçu avant l'expiration du délai spécifié, sinon false.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Exécute l'opération "wait-for-a-message" asynchrone spécifiée.</summary>
      <returns>La valeur est true si un message est arrivé avant l'expiration de <paramref name="timeout" />, sinon false.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> qui identifie l'opération <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> à terminer, à partir de laquelle un résultat final est récupéré.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Obtient l'adresse à partir de laquelle le canal d'entrée reçoit les messages. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> à partir de laquelle le canal d'entrée reçoit les messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Retourne le message reçu, le cas échéant. Si aucun message n'est disponible, provoque un blocage pendant l'intervalle par défaut.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Retourne le message reçu, le cas échéant. Si aucun message n'est disponible, provoque un blocage pendant l'intervalle spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération de réception avant son expiration et la levée d'une exception <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">Le <paramref name="timeout" /> spécifié est dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'expiration spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Tente de recevoir un message au cours de l'intervalle spécifié. </summary>
      <returns>La valeur est true si un message est reçu avant l'expiration de <paramref name="timeout" />, sinon false.</returns>
      <param name="timeout">
        <see cref="T:System.IAsyncResult" /> retourné par un appel d'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu. </param>
      <exception cref="T:System.TimeoutException">Le <paramref name="timeout" /> spécifié est dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'expiration spécifié est inférieur à zéro.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Renvoie une valeur qui indique si un message est arrivé au cours de l'intervalle spécifié.</summary>
      <returns>La valeur est true si un message est arrivé avant l'expiration de <paramref name="timeout" />, sinon false.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai maximal d'attente du message avant l'expiration de celui-ci.</param>
      <exception cref="T:System.TimeoutException">Le <paramref name="timeout" /> spécifié est dépassé avant la fin de l'opération.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'expiration spécifié est inférieur à zéro.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Définit l'interface pour la session implémentée côté réception d'une communication unidirectionnelle entre les points de terminaison de la messagerie. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Définit l'interface qui associe un canal d'entrée à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Définit une interface que vous pouvez implémenter pour décrire un ensemble de propriétés pour un message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Crée une copie de l'instance actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Définit l'interface qu'un canal doit implémenter pour envoyer un message. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message à la destination du canal de sortie. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la transmission de message asynchrone. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie. </param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'envoi asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message à la destination du canal de sortie dans un intervalle spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération d'envoi asynchrone.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'envoi de l'opération asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération d'envoi asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour transmettre un message à la destination du canal de sortie. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Obtient la destination du service auquel les messages sont envoyés sur le canal de sortie. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du service auquel le canal de sortie envoie des messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Transmet un message à la destination du canal de sortie. </summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie un message sur le canal de sortie actuel dans un intervalle spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> envoyé sur le canal de sortie.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'exécution de l'opération d'envoi avant son expiration.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Obtient l'URI qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle les messages sont envoyés sur le canal de sortie.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Définit l'interface pour la session implémentée côté envoi d'une communication unidirectionnelle entre les points de terminaison de la messagerie. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Définit l'interface qui associe un canal de sortie à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Définit le contrat qu'un canal doit implémenter pour être situé côté demande d'une communication de demande et de réponse entre les points de terminaison de la messagerie. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message de demande au côté réponse d'un échange de messages de demande et de réponse. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la transmission de message asynchrone. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone qui transmet un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Démarre une opération asynchrone pour transmettre un message de demande au côté réponse d'un échange de messages de demande et de réponse dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence la transmission de message asynchrone. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle pendant lequel une réponse doit être reçue. (voir les remarques sur les valeurs par défaut).</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération asynchrone transmettant un message de demande.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération asynchrone qui transmet un message de demande.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Exécute une opération asynchrone pour retourner un message de réponse à une demande transmise. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel de la méthode <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Obtient l'adresse distante à laquelle le canal de demande envoie des messages. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> à laquelle le canal de demande envoie des messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Envoie un message de demande et retourne le message de réponse corrélé. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envoie un message de demande et retourne le message de réponse corrélé dans un intervalle spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> de demande à transmettre.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle pendant lequel une réponse doit être reçue.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Obtient l'adresse de transport vers laquelle la demande est envoyée.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Définit l'interface pour associer un canal de demande à une session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Définit l'interface pour établir un contexte partagé entre les tiers échangeant des messages, en fournissant un ID pour la session de communication. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Obtient l'ID qui identifie la session de manière unique. </summary>
      <returns>ID qui identifie la session de manière unique. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Définit l'interface qui associe un canal à un type de session spécifique.</summary>
      <typeparam name="TSession">Type <see cref="T:System.ServiceModel.Channels.ISession" /> associé au canal.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Obtient le type de session associé au canal.</summary>
      <returns>Paramètre générique <paramref name="TSession" /> qui définit la session associée au canal.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Spécifie les paramètres de sécurité du client local.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Crée une nouvelle instance de cette classe qui est une copie de l'instance en cours.</summary>
      <returns>Nouvelle instance clonée de <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Obtient ou définit la différence de temps maximale entre les horloges système des deux parties communicantes. </summary>
      <returns>
        <see cref="T:System.TimeSpan" /> qui représente la différence de temps maximale entre les horloges système des deux parties communicantes. La valeur par défaut est 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de propriété est inférieure à 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Obtient ou définit la durée maximale durant laquelle la valeur unique d'un message est valide.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> qui représente la durée maximale durant laquelle la valeur unique d'un message est valide. La valeur par défaut est 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de propriété est inférieure à 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Obtient ou définit la durée maximale de validité des messages lorsqu'ils sont envoyés par le client. Si le service reçoit un message après cette durée, il doit l'ignorer.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> représente la durée maximale de validité des messages lorsqu'ils sont envoyés par le client. La valeur par défaut est 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de propriété est inférieure à 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Représente l'unité de communication entre les points de terminaison dans un environnement distribué. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Ferme le <see cref="T:System.ServiceModel.Channels.Message" /> et libère toutes les ressources. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Crée un message contenant une version et une action.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message.</param>
      <param name="action">Description de la méthode de traitement du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> ou <paramref name="action" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Crée un message avec la version, l'action et le corps spécifiés. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Description de la méthode de traitement du message. </param>
      <param name="body">Corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crée un message à l'aide de la version, de l'action, du corps de message et du sérialiseur spécifiés.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Description de la méthode de traitement du message. </param>
      <param name="body">Corps du message. </param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> ou <paramref name="action" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Crée un message avec un corps composé d'un tableau d'octets. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Description de la méthode de traitement du message. </param>
      <param name="body">
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> de type Byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Crée un message avec la version, l'action et le corps spécifiés. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Description de la méthode de traitement du message. </param>
      <param name="body">Corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Crée un message à l'aide du lecteur, de l'action et de la version spécifiés. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> pour le message créé. </returns>
      <param name="version">Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie la version SOAP à utiliser pour le message. </param>
      <param name="action">Description de la méthode de traitement du message. </param>
      <param name="body">Objet <see cref="T:System.Xml.XmlReader" /> à utiliser pour lire le message SOAP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> ou <paramref name="body" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Récupère le corps de cette instance de <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Objet de type <paramref name="T" /> qui contient le corps de ce message.</returns>
      <typeparam name="T">Corps du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Récupère le corps de ce <see cref="T:System.ServiceModel.Channels.Message" /> à l'aide du sérialiseur spécifié.</summary>
      <returns>Objet de type <paramref name="T" /> qui contient le corps de ce message.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Corps du message.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Récupère les attributs du corps du message.</summary>
      <returns>Attributs du corps du message.</returns>
      <param name="localName">Nom local du nœud XML.Nom de l'élément qui correspond à ce membre. Cette chaîne doit être un nom d'élément XML valide.</param>
      <param name="ns">Espace de noms auquel cet élément XML appartient.URI d'espace de noms de l'élément qui correspond à ce membre. Le système ne valide que les URI correspondant à des adresses de transport.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> ou <paramref name="ns" /> est null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Obtient le lecteur de dictionnaire XML qui accède au contenu du corps de ce message.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message est vide, ou a été copié, lu ou écrit.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>En cas de substitution dans une classe dérivée, obtient les en-têtes du message. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui représente les en-têtes du message. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Retourne une valeur qui indique si la propriété <see cref="T:System.ServiceModel.Channels.Message" /> est supprimée. </summary>
      <returns>La valeur est true si le message est supprimé, sinon false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Retourne une valeur qui indique si la propriété <see cref="T:System.ServiceModel.Channels.Message" /> est vide. </summary>
      <returns>La valeur est true si le message est vide, sinon false. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Obtient une valeur qui indique si ce message génère des erreurs SOAP.</summary>
      <returns>La valeur est true si ce message génère des erreurs SOAP, sinon false.</returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le corps du message est converti en chaîne.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour convertir le corps du message en chaîne. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Appelé lors de la fermeture du message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Appelé lorsque les attributs du corps du message sont récupérés.</summary>
      <returns>Attributs du corps du message.</returns>
      <param name="localName">Nom local du nœud XML.Nom de l'élément qui correspond à ce membre. Cette chaîne doit être un nom d'élément XML valide.</param>
      <param name="ns">Espace de noms auquel cet élément XML appartient.URI d'espace de noms de l'élément qui correspond à ce membre. Le système ne valide que les URI correspondant à des adresses de transport.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Appelé lorsque le lecteur de dictionnaire XML qui peut accéder au contenu du corps de ce message peut être récupéré.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le corps du message est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le corps de ce message dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le message entier est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire ce message dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le début du corps du message est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le début du corps de ce message dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le début de l'enveloppe est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le début de l'enveloppe dans un fichier XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Appelé lorsque le début de l'en-tête est écrit dans un fichier XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le début de l'en-tête dans un fichier XML.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>En cas de substitution dans une classe dérivée, obtient l'ensemble d'annotations de traitement du message. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient un ensemble d'annotations de traitement du message.</returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Obtient l'état actuel de ce <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" /> qui contient l'état actuel de ce <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Ferme toutes les ressources utilisées par ce message. Cette méthode ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Renvoie une chaîne qui représente le <see cref="T:System.ServiceModel.Channels.Message" /> actuel. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> en cours. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>En cas de substitution dans une classe dérivée, obtient les versions SOAP et WS-Addressing du message. </summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui représente les versions SOAP et WS-Addressing utilisées par le message. </returns>
      <exception cref="T:System.ObjectDisposedException">Le message a été supprimé.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Écrit l'élément du corps à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire l'élément du corps.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Sérialise le corps du message à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> à utiliser pour écrire le corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est supprimé. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le contenu du corps à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire l'élément du corps.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> est null.</exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise l'intégralité du message à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Sérialise l'intégralité du message à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> à utiliser pour écrire le corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null. </exception>
      <exception cref="T:System.ObjectDisposedException">Le message est fermé.</exception>
      <exception cref="T:System.InvalidOperationException">Le message a été copié, lu ou écrit.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le début du corps à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le début du corps.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Sérialise le début du corps à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le début du corps du message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> est null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le début de l'enveloppe à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié. </summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlDictionaryWriter" /> à utiliser pour écrire le début de l'enveloppe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Représente une mémoire tampon qui stocke l'intégralité d'un message en vue d'une utilisation ultérieure.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Obtient le nombre approximatif d'octets auxquels ce <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> a accès. </summary>
      <returns>Nombre approximatif d'octets auxquels ce <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> a accès. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Termine l'utilisation de la mémoire tampon.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Retourne une copie du message d'origine.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Obtient le type de contenu du message stocké dans cette mémoire tampon.</summary>
      <returns>Type de contenu du message stocké dans cette mémoire tampon.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> et libère éventuellement les ressources managées. Cette méthode ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Écrit l'intégralité du contenu de cette mémoire tampon dans le flux E/S spécifié.</summary>
      <param name="stream">Flux E/S dans lequel l'intégralité du contenu de cette mémoire tampon est écrite.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>L'encodeur est le composant qui sert à écrire les messages dans un flux et à lire les messages à partir d'un flux.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncoder" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type de contenu MIME utilisé par l'encodeur.</summary>
      <returns>Type de contenu pris en charge par l'encodeur du message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T " /> demandé s'il est présent, ou null s'il est absent.</returns>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Retourne une valeur qui indique si une valeur de type de contenu du message spécifiée est prise en charge par l'encodeur du message.</summary>
      <returns>La valeur est true si le type de contenu du message spécifié est pris en charge, sinon false.</returns>
      <param name="contentType">Le type de contenu du message est en cours de test.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de type de média utilisée par l'encodeur.</summary>
      <returns>Type de média pris en charge par l'encodeur du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de version du message utilisée par l'encodeur.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisée par l'encodeur.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>En cas de substitution dans une classe dérivée, lit un message provenant d'une mémoire tampon spécifiée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu à partir de la mémoire tampon spécifiée.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>En cas de substitution dans une classe dérivée, lit un message provenant du flux spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu à partir du flux spécifié.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</param>
      <param name="contentType">Type de contenu du message MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, lit un message provenant du flux spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu à partir du flux spécifié.</returns>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> à partir duquel le message est lu.</param>
      <param name="maxSizeOfHeaders">Taille maximale des en-têtes qui peuvent être lus à partir du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>En cas de substitution dans une classe dérivée, lit un message provenant du flux spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> lu à partir du flux spécifié.</returns>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> à partir duquel le message est lu.</param>
      <param name="maxSizeOfHeaders">Taille maximale des en-têtes qui peuvent être lus à partir du message.</param>
      <param name="contentType">Type de contenu du message MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Retourne le type de contenu utilisé par l'encodeur du message.</summary>
      <returns>Type de contenu utilisé par l'encodeur du message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Écrit un message inférieur à une taille spécifiée vers un tableau d'octets mis en mémoire tampon.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" /> de type byte qui fournit la mémoire tampon vers laquelle le message est sérialisé.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans la mémoire tampon du message.</param>
      <param name="maxMessageSize">Taille maximale du message qui peut être écrite.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon dans laquelle le message est écrit.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, écrit un message d'une taille inférieure à un tableau d'octets mis en mémoire tampon à l'offset spécifié.</summary>
      <returns>
        <see cref="T:System.ArraySegment`1" /> de type byte qui fournit la mémoire tampon vers laquelle le message est sérialisé.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans la mémoire tampon du message.</param>
      <param name="maxMessageSize">Taille maximale du message qui peut être écrite.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon dans laquelle le message est écrit.</param>
      <param name="messageOffset">Offset du segment qui démarre à partir du début du tableau d'octets fournissant la mémoire tampon.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>En cas de substitution dans une classe dérivée, écrit un message vers le flux spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans le <paramref name="stream" />.</param>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> dans lequel <paramref name="message" /> est écrit.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Classe de base abstraite représentant la fabrique pour la production des encodeurs de messages qui peuvent lire les messages et en écrire dans un flux pour différents types d'encodages de messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Retourne un encodeur de message qui peut être utilisé pour mettre en corrélation les messages lors d'échanges basés sur des sessions.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilisé lors d'échanges de messages basés sur des sessions.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>En cas de substitution dans une classe dérivée, obtient l'encodeur de message produit par la fabrique.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilisé par la fabrique.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient la version du message utilisée par les encodeurs produits par la fabrique pour encoder les messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par la fabrique.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Élément de liaison qui spécifie la version du message utilisée pour encoder les messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> initialisée à partir d'un élément existant.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> à cloner.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>En cas de substitution dans une classe dérivée, crée une fabrique pour la production des encodeurs de messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> utilisé pour produire les encodeurs de messages.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne l'objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile de canal.</summary>
      <returns>Objet avec type <paramref name="T" /> demandé s'il est présent, ou null s'il est absent.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison en cours.</param>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la version du message qui peut être gérée par les encodeurs de messages produits par la fabrique d'encodeurs de messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par les encodeurs produits par la fabrique d'encodeurs de messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Représente une représentation en mémoire d'une erreur SOAP qui peut être transmise à <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> pour créer un message contenant une erreur. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>En cas d'appel dans une classe dérivée, initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageFault" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Obtient ou définit la valeur de l'acteur.</summary>
      <returns>Valeur de l'acteur.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Obtient le code d'erreur SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultCode" /> qui contient le code d'erreur SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Retourne un nouvel objet <see cref="T:System.ServiceModel.Channels.MessageFault" /> qui utilise le <see cref="T:System.ServiceModel.Channels.Message" /> spécifié et la taille maximale de la mémoire tampon spécifiée pour la mémoire tampon du message.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> spécifié à utiliser pour créer l'objet <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Taille maximale de la mémoire tampon spécifiée pour la mémoire tampon du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Retourne l'objet détaillé de l'erreur du message.</summary>
      <returns>Objet détaillé de l'erreur du message.</returns>
      <typeparam name="T">Type de l'objet détaillé.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retourne l'objet détaillé utilisant le <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> spécifié.</summary>
      <returns>Objet détaillé contenu dans le <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> à utiliser lors de la désérialisation de l'objet détaillé. </param>
      <typeparam name="T">Type de l'objet détaillé.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet détaillé du <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet détaillé du <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Obtient une valeur qui indique si <see cref="T:System.ServiceModel.Channels.MessageFault" /> possède un objet détaillé.</summary>
      <returns>La valeur est true si le <see cref="T:System.ServiceModel.Channels.MessageFault" /> a un objet de détail, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Obtient le nœud SOAP.</summary>
      <returns>Nœud SOAP contenant les informations sur le nœud SOAP, situé sur le chemin d'accès au message, qui a provoqué l'erreur.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>En cas d'appel dans une classe dérivée, retourne un objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet détaillé du <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlDictionaryReader" /> positionné sur l'objet détaillé du <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Appelé avant l'écriture du contenu détaillé.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément détaillé.</param>
      <param name="version">Version de l'enveloppe SOAP à écrire.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>En cas de substitution dans une classe dérivée non abstraite, écrit le contenu de l'élément détaillé. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément détaillé.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Écrit l'élément de début à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> et de la version de l'enveloppe SOAP spécifiés.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément détaillé.</param>
      <param name="version">Version de l'enveloppe SOAP à écrire.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Obtient une description textuelle d'une erreur SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultReason" /> qui contient une description textuelle d'une erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Représente le contenu d'un en-tête SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeader" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Obtient ou définit le destinataire ciblé de l'en-tête du message.</summary>
      <returns>Destinataire ciblé de l'en-tête du message. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compréhensible.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compréhensible.</param>
      <param name="actor">Destinataire ciblé de l'en-tête du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compréhensible.</param>
      <param name="actor">Destinataire ciblé de l'en-tête du message.</param>
      <param name="relay">Valeur qui indique si l'en-tête doit être transmis.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crée un en-tête à partir d'un objet à sérialiser à l'aide de XmlFormatter. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compréhensible.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compréhensible.</param>
      <param name="actor">Destinataire ciblé de l'en-tête du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Crée un en-tête de message avec les données spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nom local de l'élément XML d'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="value">Contenu de l'en-tête à créer.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valeur qui indique si l'en-tête doit être compréhensible.</param>
      <param name="actor">Destinataire ciblé de l'en-tête du message.</param>
      <param name="relay">Valeur qui indique si l'en-tête doit être transmis.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Vérifie si la version du message spécifiée est prise en charge.</summary>
      <returns>La valeur est true si la version du message spécifiée est prise en charge, sinon false.</returns>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Obtient une valeur qui spécifie si l'en-tête de ce message contient les paramètres d'une référence de point de terminaison.</summary>
      <returns>La valeur est true si cet en-tête de message contient les paramètres d'une référence de point de terminaison, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête doit être compréhensible, selon la spécification SOAP 1.1 ou 1.2. </summary>
      <returns>La valeur est true si l'en-tête doit être compréhensible, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Appelé lorsque le contenu de l'en-tête est sérialisé à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Appelé lorsque le début de l'en-tête est sérialisé à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Obtient une valeur qui indique si l'en-tête doit être transmis.</summary>
      <returns>La valeur est true si l'en-tête doit être transmis, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Convertit cet en-tête de message en chaîne.</summary>
      <returns>En-tête du message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise le contenu de l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise le contenu de l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Sérialise le début de l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contient des informations liées à la version de SOAP associée à un message et son échange.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Représente les informations système liées à l'en-tête du message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Obtient ou définit le destinataire prévu de l'en-tête du message.</summary>
      <returns>URI qui indique le destinataire prévu de l'en-tête du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Obtient une valeur qui spécifie si l'en-tête du message représente les paramètres d'une référence de point de terminaison.</summary>
      <returns>La valeur est true si l'en-tête de message représente les paramètres d'une référence de point de terminaison, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Obtient ou définit une valeur qui indique si le traitement de l'en-tête du message est obligatoire ou facultatif.</summary>
      <returns>La valeur est true si le traitement de l'en-tête du message est obligatoire, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Obtient le nom de l'en-tête de message.</summary>
      <returns>Nom de l'en-tête de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Obtient l'espace de noms de l'en-tête du message.</summary>
      <returns>Espace de noms de l'en-tête de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête du message peut être transmis.</summary>
      <returns>La valeur est true si l'en-tête de message doit être transmis, sinon false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Représente une collection d'en-têtes de message pour un message. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> avec la collection d'en-têtes de message spécifiée.</summary>
      <param name="collection">Collection d'en-têtes de message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> avec la version du message spécifiée.</summary>
      <param name="version">Version SOAP du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> avec la version et la taille du message spécifiées.</summary>
      <param name="version">Version SOAP du message.</param>
      <param name="initialSize">Taille de l'en-tête.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Obtient ou définit une description de la méthode de traitement du message.</summary>
      <returns>Description de la méthode de traitement du message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Ajoute l'en-tête du message spécifié à la collection.</summary>
      <param name="header">En-tête de message à ajouter.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Supprime tous les en-têtes de la collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copie le contenu de l'en-tête situé au niveau de l'index spécifié à partir du message spécifié vers cette instance.</summary>
      <param name="message">Message.</param>
      <param name="headerIndex">Emplacement de l'en-tête d'origine du message, à partir duquel le contenu est copié.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copie le contenu de l'en-tête situé au niveau de l'index spécifié à partir de la collection d'en-têtes de message spécifiée vers cette instance.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Emplacement de l'en-tête d'origine du message, à partir duquel le contenu est copié.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copie le contenu de tous les en-têtes à partir du message spécifié vers cette instance.</summary>
      <param name="message">Message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copie le contenu à partir de la collection d'en-têtes spécifiée vers cette instance.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copie les en-têtes de cette collection dans un tableau, en commençant au niveau d'un index du tableau particulier. </summary>
      <param name="array">Tableau unidimensionnel qui constitue la destination des objets d'en-tête de message copiés à partir de cette instance. Ce tableau doit avoir une indexation de base zéro. </param>
      <param name="index">Index de base zéro dans le tableau à partir duquel la copie commence. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Obtient le nombre d'en-têtes de message de cette collection.</summary>
      <returns>Nombre d'en-têtes de message de cette collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Obtient ou définit l'adresse du nœud vers lequel les erreurs doivent être envoyées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du nœud vers lequel les erreurs doivent être envoyées.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Recherche un en-tête de message dans cette collection à partir des propriétés LocalName et NamespaceURI spécifiées de l'élément d'en-tête.</summary>
      <returns>Index de l'en-tête de message de cette collection.</returns>
      <param name="name">Propriété LocalName de l'élément XML de l'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Recherche un en-tête de message dans cette collection à partir des propriétés LocalName et NamespaceURI et des acteurs spécifiés de l'élément d'en-tête.</summary>
      <returns>Index de l'en-tête de message de cette collection.</returns>
      <param name="name">Propriété LocalName de l'élément XML de l'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="actors">Destinataire ciblé de l'en-tête du message.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Obtient ou définit l'adresse du nœud qui a envoyé le message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du nœud qui a envoyé le message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein d'une collection. Cette méthode ne peut pas être héritée.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Récupère un en-tête de message sur une position spécifique dans cette collection.</summary>
      <returns>En-tête du message.</returns>
      <param name="index">Index de base zéro de l'en-tête à obtenir.</param>
      <typeparam name="T">En-tête du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Récupère un en-tête de message sur une position spécifique dans cette collection.</summary>
      <returns>En-tête du message.</returns>
      <param name="index">Index de base zéro de l'en-tête à obtenir.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">En-tête du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Recherche un en-tête de message dans cette collection à partir des propriétés LocalName et NamespaceURI spécifiées de l'élément d'en-tête.</summary>
      <returns>En-tête du message.</returns>
      <param name="name">Propriété LocalName de l'élément XML de l'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <typeparam name="T">En-tête du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Récupère un en-tête de message dans cette collection à l'aide des propriétés LocalName et NamespaceURI et du sérialiseur spécifiés.</summary>
      <returns>En-tête du message.</returns>
      <param name="name">Propriété LocalName de l'élément XML de l'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">En-tête du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Récupère un en-tête de message dans cette collection à partir des propriétés LocalName et NamespaceURI et des acteurs spécifiés de l'élément d'en-tête.</summary>
      <returns>En-tête du message.</returns>
      <param name="name">Propriété LocalName de l'élément XML de l'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
      <param name="actors">Destinataire ciblé de l'en-tête du message.</param>
      <typeparam name="T">En-tête du message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Obtient un lecteur de dictionnaire XML qui accède à l'en-tête de message au niveau de l'emplacement spécifié dans la collection.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">Index de base zéro de l'en-tête à obtenir.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Vérifie si tous les en-têtes de message marqués par MustUnderstand sont correctement interprétés et traités. </summary>
      <returns>La valeur est true si les destinataires spécifiés par <paramref name="actors" /> ont correctement interprété et traité tous les en-têtes de message marqués par MustUnderstand, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Vérifie si les destinataires spécifiés ont correctement interprété et traité tous les en-têtes de message marqués par MustUnderstand. </summary>
      <returns>La valeur est true si les destinataires spécifiés par <paramref name="actors" /> ont correctement interprété et traité tous les en-têtes de message marqués par MustUnderstand, sinon false.</returns>
      <param name="actors">Destinataire ciblé de l'en-tête du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Insère un en-tête de message dans la collection au niveau de l'index spécifié.</summary>
      <param name="headerIndex">Index de base zéro auquel <paramref name="header" /> doit être inséré.</param>
      <param name="header">En-tête de message à insérer.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Récupère un en-tête au niveau de l'index spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> de la collection. Si <paramref name="index" /> est supérieur ou égal au nombre d'en-têtes de la liste, il retourne la valeur null.</returns>
      <param name="index">Index de base zéro de la liste des en-têtes.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Obtient ou définit l'ID unique du message.</summary>
      <returns>ID unique du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Obtient la version SOAP du message.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Obtient les ID des messages liés à ce message.</summary>
      <returns>ID des messages liés à ce message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Supprime tous les en-têtes contenant le nom et l'espace de noms spécifiés de la collection.</summary>
      <param name="name">Propriété LocalName de l'élément XML de l'en-tête.</param>
      <param name="ns">URI de l'espace de noms de l'élément XML d'en-tête.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Supprime l'en-tête de message de la collection à l'index spécifié.</summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à supprimer.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Obtient ou définit l'adresse du nœud vers lequel une réponse à une demande doit être envoyée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> du nœud vers lequel une réponse à une demande doit être envoyée.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Définit l'élément d'action de l'en-tête.</summary>
      <param name="action">Description de la méthode de traitement du message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein d'une collection. Cette méthode ne peut pas être héritée.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Obtient ou définit le point de terminaison de destination d'un message.</summary>
      <returns>URI contenant le point de terminaison de destination d'un message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise l'en-tête à partir de l'emplacement spécifié à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Sérialise l'en-tête à partir de l'emplacement spécifié à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le contenu d'en-tête spécifié à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Sérialise le contenu d'en-tête spécifié à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Sérialise le début de l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Sérialise le début de l'en-tête à l'aide du writer XML spécifié. </summary>
      <param name="headerIndex">Index de base zéro de l'en-tête à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Représente un ensemble de propriétés pour un message. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> avec des propriétés prédéfinies.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Ajoute un élément doté du nom et de la propriété spécifiés dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Cette méthode ne peut pas être héritée.</summary>
      <param name="name">Nom de l'élément à ajouter.</param>
      <param name="property">Valeur de l'élément à ajouter. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Obtient ou définit une valeur qui spécifie si ce message doit être stocké avant de le confier au transport. </summary>
      <returns>La valeur est true si le traitement par lot des messages sortants est autorisé, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Supprime tous les éléments de <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Cette méthode ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Détermine si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un nom spécifique. Cette méthode ne peut pas être héritée.</summary>
      <returns>La valeur est true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le <paramref name="name" /> spécifié, sinon false.</returns>
      <param name="name">Nom à localiser dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copie le contenu des <see cref="T:System.ServiceModel.Channels.MessageProperties" /> spécifiées dans cette instance.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Obtient le nombre total de propriétés dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Nombre total de propriétés dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Obtient l'encodeur utilisé pour écrire les messages dans un flux et pour lire les messages à partir d'un flux.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilisé pour écrire les messages dans un flux et pour lire les messages à partir d'un flux.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Obtient une valeur qui indique si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> est de taille fixe.</summary>
      <returns>La valeur est true si la collection <see cref="T:System.ServiceModel.Channels.MessageProperties" /> a une taille fixe, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Obtient une valeur qui indique si cet ensemble de propriétés est en lecture seule.</summary>
      <returns>La valeur est true si cet ensemble de propriétés est en lecture seule, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Récupère une propriété à l'index donné.</summary>
      <returns>Propriété avec le <paramref name="name" /> spécifié ou null si la propriété n'existe pas.</returns>
      <param name="name">Nom de la propriété à obtenir à partir de la collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Obtient <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Supprime de <see cref="T:System.ServiceModel.Channels.MessageProperties" /> l'élément ayant le nom spécifié. Cette méthode ne peut pas être héritée.</summary>
      <returns>La valeur est true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le <paramref name="name" /> spécifié et peut être supprimé, sinon false.</returns>
      <param name="name">Nom de l'élément à supprimer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ajoute un élément doté du nom et de la propriété spécifiés dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Cette méthode ne peut pas être héritée.</summary>
      <param name="pair">Paire clé/valeur contenant le nom et la valeur de l'élément à ajouter.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Détermine si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un nom spécifique. Cette méthode ne peut pas être héritée.</summary>
      <returns>La valeur est true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le nom et la valeur dans le paramètre<paramref name="pair" /> spécifié, sinon false.</returns>
      <param name="pair">Paire clé/valeur contenant le nom et la valeur de l'élément à localiser dans <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copie le contenu des <see cref="T:System.ServiceModel.Channels.MessageProperties" /> spécifiées, en commençant à l'index spécifié. Cette méthode ne peut pas être héritée.</summary>
      <param name="array">
        <see cref="T:System.Array" /> dans lequel copier la collection.</param>
      <param name="index">Index à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Supprime de <see cref="T:System.ServiceModel.Channels.MessageProperties" /> l'élément ayant le nom spécifié. Cette méthode ne peut pas être héritée.</summary>
      <returns>La valeur est true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le nom et la valeur spécifiés dans le paramètre <paramref name="pair" /> et peut être supprimé, sinon false.</returns>
      <param name="pair">Paire clé/valeur contenant le nom et la valeur de l'élément à supprimer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein d'une collection. Cette méthode ne peut pas être héritée.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein d'une collection. Cette méthode ne peut pas être héritée.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Détermine si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un nom spécifique et récupère sa valeur. Cette méthode ne peut pas être héritée.</summary>
      <returns>La valeur est true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contient un élément avec le <paramref name="name" /> spécifié, sinon false.</returns>
      <param name="name">Nom de l'élément à localiser.</param>
      <param name="value">Valeur de l'élément trouvé.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Obtient les valeurs dans le <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> contenant les valeurs de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Obtient ou définit l'adresse de transport utilisée pour envoyer des messages.</summary>
      <returns>URI qui contient l'adresse de transport utilisée pour envoyer des messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Spécifie l'état d'un message. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Le message a été créé. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Le message est en cours de lecture.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Le message a été écrit.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Le message a été copié.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Le message a été fermé et n'est plus accessible.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Contient les versions de SOAP et WS-Addressing associées à un message et son échange.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Obtient la version de WS-Addressing associée à la version de message actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associé à la version de message actuelle. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Crée un objet de version de message à l'aide de WS-Addressing 1.0 et de la version SOAP spécifiée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> avec la version d'enveloppe spécifiée.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> qui indique la version SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Crée un objet de version de message avec les versions WS-Addressing et SOAP spécifiées.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui utilise les versions WS-Addressing et SOAP spécifiées.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> qui indique la version SOAP.</param>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> qui indique la version WS-Addressing.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Obtient la version de message par défaut utilisée par Windows Phone.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui utilise SOAP 1.2 et WS-Addressing version 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Obtient la version SOAP associée à la version de message actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> associé à l'objet de version de message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si la version de message actuelle est égale à un objet spécifié.</summary>
      <returns>La valeur est true si l'objet spécifié est égal à l'objet <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actuel, sinon false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer avec la version de message actuelle.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Obtient un code de hachage pour la version de message actuelle.</summary>
      <returns>Code de hachage unique du <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actuel.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Obtient la version de message n'utilisant pas SOAP ou WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> n'utilisant pas SOAP ou WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Obtient la version du message à l'aide de SOAP 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisant SOAP 1.1 mais aucune version de WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Obtient la version du message à l'aide de WS-Addressing 1.0 et SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisant la version de WS-Addressing 1.0 et SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Version de message actuelle.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> en cours. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Fournit une réponse corrélée en une demande entrante.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>En cas de substitution dans une classe dérivée, abandonne le traitement de la demande associée au contexte. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe dérivée, commence une opération asynchrone pour répondre à la demande associée au contexte actuel.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de réponse asynchrone.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de réponse asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de réponse asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe dérivée, commence une opération asynchrone pour répondre à la demande associée au contexte actuel dans un délai spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence l'opération de réponse asynchrone.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'attente pour obtenir la réponse à une demande disponible.</param>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification d'exécution de l'opération de réponse asynchrone.</param>
      <param name="state">Objet spécifié par l'application qui contient les informations d'état associées à l'opération de réponse asynchrone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>En cas de substitution dans une classe dérivée, ferme l'opération qui répond au contexte de demande associé au contexte actuel.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>En cas de substitution dans une classe dérivée, ferme l'opération qui répond au contexte de demande associé au contexte actuel dans un délai spécifié.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie l'intervalle pendant lequel l'opération de réponse associée au contexte actuel doit se fermer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Libère les ressources associées au contexte.</summary>
      <param name="disposing">La valeur est true pour libérer les ressources managées et non managées, ou false pour libérer uniquement les ressources non managées. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>En cas de substitution dans une classe dérivée, termine une opération asynchrone pour répondre à un message de demande.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> retourné par un appel d'une des méthodes <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>En cas de substitution dans une classe dérivée, répond à un message de demande.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>En cas de substitution dans une classe dérivée, répond à un message de demande dans un délai spécifié.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrant qui contient la demande.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> qui spécifie le délai d'attente pour obtenir la réponse à une demande.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>En cas de substitution dans une classe dérivée, obtient le message qui contient la demande.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> qui contient la demande.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Libère les ressources managées et non managées associées au contexte.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>Classe abstraite qui, lorsqu'elle est implémentée, représente un élément de liaison qui prend en charge la sécurité de message SOAP du canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crée une fabrique de canaux basée sur les paramètres <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> et le contexte de liaison transmis. La fabrique de canaux créée est une fabrique de canaux de sécurité de message SOAP, qui dispose en interne d'une référence à la fabrique de canaux correspondant au contexte de liaison (qui inclut la fabrique de canaux de transport).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type de fabrique de canaux.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
      <exception cref="T:System.ArgumentException">Un canal de type <paramref name="TChannel" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>En cas d'implémentation dans une classe dérivée, crée une fabrique de canaux d'un type spécifié.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> qui crée les canaux de type <paramref name="TChannel" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour la fabrique de canaux.</param>
      <typeparam name="TChannel">Type de fabrique de canaux.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> est null.</exception>
      <exception cref="T:System.ArgumentException">Un canal de type <paramref name="TChannel" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtient une valeur qui indique si une fabrique de canaux du type spécifié peut être générée.</summary>
      <returns>La valeur est true si une fabrique de canaux de type <paramref name="TChannel" /> peut être générée, sinon false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour la fabrique de canaux.</param>
      <typeparam name="TChannel">Type de fabrique de canaux.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Crée un élément de liaison de sécurité configuré pour l'authentification cliente basée sur un nom d'utilisateur et un mot de passe envoyés comme partie du message SOAP. L'élément de liaison nécessite que le transport fournisse l'authentification serveur et la protection des messages (par exemple, HTTPS).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtient un objet spécifié à l'aide du <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifié.</summary>
      <returns>Objet spécifié à partir du <see cref="T:System.ServiceModel.Channels.BindingContext" />, ou null si le fichier est introuvable.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propriété à obtenir.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Obtient ou définit si les horodatages doivent être inclus dans chaque message.</summary>
      <returns>La valeur est true si les horodatages sont inclus dans chaque message, sinon false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Obtient les propriétés de liaison spécifiques aux paramètres de la sécurité locale utilisée par le client.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> qui contient les paramètres de la sécurité locale du client.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Élément de liaison qui spécifie l'encodage de caractères et la version de message utilisés pour les messages SOAP au format texte.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> avec une version et un encodage de message spécifiés.</summary>
      <param name="messageVersion">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisée pour la version de message.</param>
      <param name="writeEncoding">
        <see cref="T:System.Text.Encoding" /> utilisé pour mettre en forme les caractères de message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> ou <paramref name="writeEncoding" /> est null.</exception>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="writeEncoding" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Génère la pile de la fabrique de canaux sur le client qui crée un type de canal spécifique pour un contexte donné.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> pour le contexte spécifié.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> du canal.</param>
      <typeparam name="TChannel">Type de canal produit par la fabrique de canaux.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Crée un objet <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> initialisé à partir de l'objet actuel.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> ayant des valeurs de propriétés égales à celles de l'élément actuel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crée une fabrique pour les encodeurs de messages texte qui utilisent la version de message ainsi que l'encodage de caractères spécifié par l'élément de liaison de l'encodage actuel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> créée par cette fabrique.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retourne un objet avec type demandé, s'il est présent, à partir de la couche appropriée dans la pile d'élément de liaison.</summary>
      <returns>Objet avec type T demandé s'il est présent ou référence null (Nothing en Visual Basic) s'il ne l'est pas.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> pour l'élément de liaison.</param>
      <typeparam name="T">Objet avec type pour lequel la méthode effectue une interrogation.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Obtient ou définit les versions SOAP et WS-Addressing utilisées pour mettre en forme le message texte.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisée pour mettre en forme les messages. La valeur par défaut est <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Obtient ou définit l'encodage utilisé pour mettre en forme les caractères dans le message texte.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> utilisé pour mettre en forme les caractères dans le message texte. L'encodage de texte par défaut est le format UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est null.</exception>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="writeEncoding" /> n’est pas valide.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Classe de base abstraite représentant un élément de liaison de transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Crée une instance de cette classe.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Crée une instance de cette classe à partir d'une instance existante.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> à cloner. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtient une propriété du <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifié.</summary>
      <returns>Propriété du <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifié.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propriété à obtenir.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ne peut pas être null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Obtient ou définit une valeur qui indique si l'adressage manuel du message est obligatoire.</summary>
      <returns>La valeur est true si l'adressage manuel du message est obligatoire, sinon  false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Obtient et définit la taille de message maximale autorisée qui peut être reçue.</summary>
      <returns>Taille maximale autorisée du message qui peut être reçue. La valeur par défaut est 65 536 octets.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'ensemble de <paramref name="value" /> ne peut pas être négatif.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Obtient le schéma URI du transport.</summary>
      <returns>Retourne le schéma URI du transport, qui varie selon la classe dérivée qui implémente cette méthode.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Représenté un élément de liaison personnalisé qui prend en charge la sécurité en mode mixte (telle qu'une sécurité de message optimisée sur un transport sécurisé).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Crée un objet <see cref="T:System.ServiceModel.Channels.BindingElement" /> initialisé à partir de la classe actuelle.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Channels.BindingElement" /> ayant des valeurs de propriétés égales à celles de l'instance actuelle.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Permet à l'utilisateur de configurer les informations d'identification client utilisées pour authentifier le client auprès d'un service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Crée une copie d'un <see cref="T:System.ServiceModel.Description.ClientCredentials" /> existant. </summary>
      <param name="other">Instance <see cref="T:System.ServiceModel.Description.ClientCredentials" /> à copier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Crée une copie de cette instance <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instance de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
      <exception cref="T:System.NotImplementedException">Les informations d’identification actuelles ont la valeur null ou sont incorrectes.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Crée une copie de cette instance <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instance de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Obtient un objet d'informations d'identification permettant de définir le nom d'utilisateur et le mot de passe que le client utilise pour s'authentifier auprès d'un service. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> qui représente le nom d'utilisateur et le mot de passe actuels des informations d'identification du client.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Décrit un contrat qui spécifie les éléments qu'un point de terminaison communique au monde extérieur.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> avec un nom spécifié.</summary>
      <param name="name">Nom du contrat.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est vide.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> avec le nom complet de l'espace de noms spécifié.</summary>
      <param name="name">Nom du contrat.</param>
      <param name="ns">Espace de noms qui contient le nom du contrat.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est vide.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Obtient ou définit le type de contrat de rappel spécifié dans la description du contrat.</summary>
      <returns>
        <see cref="T:System.Type" /> du contrat de rappel spécifié dans la description du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Obtient ou définit le nom de configuration de la description du contrat.</summary>
      <returns>Nom de configuration du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Obtient ou définit le type de contrat spécifié dans la description du contrat.</summary>
      <returns>
        <see cref="T:System.Type" /> du contrat spécifié dans la description du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Obtient ou définit le nom du contrat.</summary>
      <returns>Nom de la description du contrat.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Obtient ou définit l'espace de noms du contrat.</summary>
      <returns>Espace de noms du contrat.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur définie est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Obtient la collection des descriptions d'opérations associées au contrat.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> contenant les descriptions d'opérations associées à la description du contrat.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Représente une erreur SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.FaultDescription" /> à l'aide de la valeur d'action spécifiée.</summary>
      <param name="action">Action du message d'erreur SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Obtient la valeur de l'action du message d'erreur SOAP.</summary>
      <returns>Action de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Obtient ou définit le type du détail de l'erreur SOAP.</summary>
      <returns>Type de l'objet détaillé sérialisable.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Obtient ou définit le nom de l'erreur SOAP.</summary>
      <returns>Nom de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'erreur SOAP.</summary>
      <returns>Espace de noms de l'erreur SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Collection d'objets <see cref="T:System.ServiceModel.Description.FaultDescription" /> que vous pouvez utiliser pour obtenir des informations sur les erreurs SOAP dans un contrat.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Représente le corps d'un message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Obtient les parties du corps du message SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> contenant les parties du corps du message SOAP que vous pouvez examiner ou modifier.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Obtient ou définit la partie du message SOAP qui contient la valeur de retour.</summary>
      <returns>Valeur de retour, le cas échéant.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Obtient ou définit le nom de l'élément wrapper à l'intérieur de l'élément de corps SOAP, s'il existe.</summary>
      <returns>Nom de l'élément wrapper s'il existe, sinon null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Obtient ou définit l'espace de noms de l'élément wrapper dans le corps SOAP, s'il existe.</summary>
      <returns>Espace de noms de l'élément wrapper, s'il existe.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Représente la description d'un message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessageDescription" /> avec une action et une direction spécifiées.</summary>
      <param name="action">Paramètre d'action du message SOAP qui identifie l'objectif du message.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> si le message est entrant ou <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> si le message est sortant.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La <paramref name="direction" /> n'est ni <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> ni <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Obtient le paramètre d'action du message SOAP qui identifie l'intention du message.</summary>
      <returns>URI d'action.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Obtient le corps du message SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> qui contient le corps du message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Obtient la direction qui indique si le message est entrant ou sortant.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDirection" /> qui indique la direction du message (entrant ou sortant) par rapport au service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Obtient ou définit un type qui identifie le type de contrat de message.</summary>
      <returns>Type du contrat de message.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Fournit une collection qui permet de stocker les descriptions des messages qui constituent une opération appartenant à un contrat.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Recherche et retourne la première description de message dans une collection pour un message avec une action spécifiée.</summary>
      <returns>Première <see cref="T:System.ServiceModel.Description.MessageDescription" /> de la collection dont le message dispose d'une <paramref name="action" /> spécifiée et null si aucune <paramref name="action" /> correspondante n'est trouvée.</returns>
      <param name="action">Action du message trouvé.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Recherche et retourne toutes les descriptions de messages dans une collection dont les messages disposent d'une action spécifiée.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> qui contient les descriptions de messages de la collection en cours dont les messages disposent d'une <paramref name="action" /> spécifiée. Si aucun objet <see cref="T:System.ServiceModel.Description.MessageDescription" /> correspondant n'est trouvé, une collection vide est retournée.</returns>
      <param name="action">Action des messages trouvés.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Spécifie la direction du message.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Le message est entrant.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Le message est sortant.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Représente une description d'une partie de message SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.MessagePartDescription" />. </summary>
      <param name="name">Nom XML de la partie de message.</param>
      <param name="ns">Espace de noms XML de la partie de message.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Obtient ou définit l'index de la partie de message.</summary>
      <returns>Index de la partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Obtient ou définit les informations de membre de la partie de message.</summary>
      <returns>Informations relatives au membre de cette partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Obtient le nom de la partie de message.</summary>
      <returns>Nom de la partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Obtient l'espace de noms de la partie de message.</summary>
      <returns>Espace de noms de la partie de message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Obtient ou définit le type de la partie de message.</summary>
      <returns>Type de la partie de message.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>En cas d'appel par une classe dérivée, retourne le <see cref="T:System.Xml.XmlQualifiedName" /> de la <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> du <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> à localiser.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Contrat qui caractérise une opération en termes de messages échangés.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.OperationDescription" /> avec un nom et une description de contrat spécifiés.</summary>
      <param name="name">Nom de la description de l'opération.</param>
      <param name="declaringContract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> utilisé pour initialiser la description de l'opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="declaringContract" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> est vide.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Obtient ou définit la méthode Begin de l'opération.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> qui fournissent l'accès aux attributs et métadonnées de la méthode.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Obtient ou définit le contrat auquel l'opération appartient.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException">Le jeu <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Obtient ou définit la méthode End de l'opération.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> qui fournissent l'accès aux attributs et métadonnées de la méthode.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Obtient une collection des descriptions des erreurs associées à la description d'opération.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> contenant les détails à propos des erreurs associées à la description de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Obtient une valeur qui indique si une opération retourne un message de réponse.</summary>
      <returns>La valeur est true si cette méthode reçoit un message de demande et ne retourne aucun message de réponse, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Obtient les types connus associés à la description d'opération.</summary>
      <returns>Collection des types connus associés à la description d'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Obtient ou définit les descriptions des messages qui constituent l'opération.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> contenant les descriptions des messages qui constituent l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Obtient ou définit le nom de la description de l'opération.</summary>
      <returns>Nom de la description de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Obtient ou définit la méthode de synchronisation du service de la description de l'opération.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> qui fournissent l'accès aux attributs et métadonnées de la méthode.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Représente une collection qui contient les descriptions de l'opération.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Retourne la première occurrence d'une description d'opération avec un nom spécifié à partir de la collection de descriptions d'opérations.</summary>
      <returns>Première occurrence d'une <see cref="T:System.ServiceModel.Description.OperationDescription" /> avec le nom spécifié ou null s'il n'existe aucune opération avec le nom spécifié.</returns>
      <param name="name">Nom de l'opération.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Retourne une collection de toutes les descriptions d'opérations de la collection portant le nom spécifié.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de type <see cref="T:System.ServiceModel.Description.OperationDescription" /> contenant les descriptions d'opérations avec le nom spécifié.</returns>
      <param name="name">Nom de l'opération.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Insère un élément dans la collection de descriptions d'opérations à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> à insérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Remplace l'élément de description d'opération dans la collection à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> à insérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> est null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Représente le point de terminaison d'un service qui permet aux clients de celui-ci d'effectuer des recherches et de communiquer avec le service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour un contrat spécifié.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> du point de terminaison de service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> à l'aide d'un contrat, d'une liaison et d'une adresse spécifiés.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> du point de terminaison de service.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> qui spécifie le mode de communication du point de terminaison de service avec le monde.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> du point de terminaison de service.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Obtient ou définit l'adresse du point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> qui spécifie l'emplacement du point de terminaison de service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Obtient ou définit la liaison pour le point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> du point de terminaison de service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Obtient le contrat du point de terminaison de service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> qui spécifie le contrat du point de terminaison de service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Obtient ou définit le nom du point de terminaison de service.</summary>
      <returns>Nom du point de terminaison de service. La valeur par défaut est la concaténation du nom de liaison et du nom de description du contrat. Par exemple, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Contrôle le comportement du <see cref="T:System.Xml.Serialization.XmlSerializer" /> associé à une opération au moment de l'exécution.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Permet de modifier ou d'étendre le comportement d'exécution d'une opération de contrat spécifique dans un objet client ou un objet de canal client. Cette classe ne peut pas être héritée. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> à l'aide du <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, du nom et des valeurs d'action spécifiés. </summary>
      <param name="parent">Objet contenant <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Nom de l'opération.</param>
      <param name="action">Action de l'opération.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> à l'aide du <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, du nom, de l'action et des valeurs d'action de réponse spécifiés. </summary>
      <param name="parent">Objet contenant <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Nom de l'opération.</param>
      <param name="action">Action de l'opération.</param>
      <param name="replyAction">Action du message de réponse.</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> ou <paramref name="name" /> est null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Obtient l'action de l'opération.</summary>
      <returns>Action de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Obtient ou définit la méthode associée à une opération asynchrone.</summary>
      <returns>Objet <see cref="T:System.Reflection.MethodInfo" /> qui représente la méthode traitant la portion Begin d'une paire de méthodes asynchrones, ou null si l'opération ne fait pas partie d'une paire de méthodes asynchrones.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Obtient ou définit une valeur qui indique si la valeur de propriété <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> est utilisée pour désérialiser le message de réponse.</summary>
      <returns>La valeur est true si le type de retour n'est pas un <see cref="T:System.ServiceModel.Channels.Message" />, sinon false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Obtient ou définit la méthode qui implémente la méthode End asynchrone pour l'opération.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> qui représente la méthode End pour l'opération, ou null si l'opération n'est pas asynchrone.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Obtient ou définit le formateur qui sérialise les objets en messages et désérialise les messages en objets.</summary>
      <returns>Implémentation de <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Obtient ou définit une valeur qui indique si une session peut commencer par un message à cette opération.</summary>
      <returns>La valeur est true si un message à cette opération peut initier une session, sinon false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Obtient ou définit une valeur qui indique si l'opération est unidirectionnelle.</summary>
      <returns>La valeur est true si le client WCF ne doit pas attendre de réponse ; sinon, false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Obtient ou définit une valeur qui indique si cette opération est la dernière d'une session.</summary>
      <returns>La valeur est true si la session associée est fermée après l'appel de l'opération, sinon false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Obtient le nom de l'opération.</summary>
      <returns>Nom de l'opération.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Obtient l'objet contenant <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</summary>
      <returns>Objet contenant <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Obtient l'action du message de réponse pour cette opération.</summary>
      <returns>Action de la réponse.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Obtient ou définit une valeur qui spécifie si l'objet <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> sérialise un message sortant.</summary>
      <returns>La valeur est true si cette propriété <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> sérialise les valeurs de retour en un message de réponse, sinon false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Obtient ou définit la méthode associée à cette opération.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> qui représente la méthode qui implémente l'opération. Si l'opération est asynchrone, cette valeur est null et les méthodes d'implémentation sont stockées dans les propriétés <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> et <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Point d'insertion des classes qui étendent les fonctionnalités des objets clients Windows Phone pour tous les messages traités par une application cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Obtient le type du contrat associé au client.</summary>
      <returns>Objet <see cref="T:System.Type" /> qui représente le contrat associé à ce client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Obtient le nom du contrat associé au client.</summary>
      <returns>Nom du contrat utilisé pour ce client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Obtient l'espace de noms du contrat associé au client.</summary>
      <returns>Espace de noms du contrat associé à ce client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Obtient ou définit une valeur qui indique si le client ajoute les en-têtes d'adressage aux messages de demande-réponse.</summary>
      <returns>La valeur est true si le client n'ajoute pas d'en-tête d'adressage ; sinon, false. La valeur par défaut est false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Obtient ou définit la taille maximale des messages d'erreur. </summary>
      <returns>Taille maximale des messages d'erreur. La valeur par défaut est 64 KB.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Obtient ou définit une implémentation <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> qui peut être utilisée pour sélectionner une <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Objet <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> qui sélectionne une <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Obtient l'opération cliente pour les méthodes qui n'ont pas de <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> correspondante dans la collection <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> qui représente la méthode vers laquelle le contenu du message en cours est routé lorsque le sélecteur d'opération ne peut pas trouver d'opération correspondant au message.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Obtient ou définit l'adresse de transport utilisée pour envoyer des messages via le client.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui est l'adresse de destination pour le transport. La valeur par défaut est la valeur <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> du client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Cette classe n'est pas prise en charge dans la version actuelle de Windows Phone. Elle est présente pour des raisons de compatibilité.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Représente les informations sur une erreur SOAP qui est spécifiée dans un attribut <see cref="T:System.ServiceModel.FaultContractAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> qui utilise l'action et le type détaillé spécifiés.</summary>
      <param name="action">Action de l'erreur SOAP.</param>
      <param name="detail">Type détaillé sérialisé en tant que détail de l'erreur SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Obtient la valeur d'action de l'erreur SOAP.</summary>
      <returns>Valeur d'action de l'erreur SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>Type de l'objet sérialisé en tant que détail de l'erreur SOAP.</summary>
      <returns>
        <see cref="T:System.Type" /> qui représente le détail d'erreur SOAP sérialisé.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Définit les méthodes utilisées pour contrôler la conversion de messages en objets et d'objets en messages pour les applications clientes.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Convertit un message en valeur de retour et les paramètres <paramref name="out" /> retournés à l'opération appelante.</summary>
      <returns>Valeur de retour de l'opération.</returns>
      <param name="message">Message entrant.</param>
      <param name="parameters">Toute valeur <paramref name="out" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Convertit un tableau <see cref="T:System.Object" /> en <see cref="T:System.ServiceModel.Channels.Message" /> sortant. </summary>
      <returns>Message SOAP envoyé à l'opération de service.</returns>
      <param name="messageVersion">Version du message SOAP à utiliser.</param>
      <param name="parameters">Paramètres transmis à l'opération cliente XAML.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Définit le contrat pour un sélecteur d'opération.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Obtient une valeur qui indique si les paramètres sont obligatoires pour déterminer la sélection.</summary>
      <returns>La valeur est true si les paramètres sont requis, sinon false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Retourne l'opération sélectionnée.</summary>
      <returns>Opération sélectionnée par le sélecteur d'opération personnalisé.</returns>
      <param name="method">Méthode appelée.</param>
      <param name="parameters">Paramètres passés à la méthode.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Définit les méthodes qui désérialisent les messages de demande et sérialisent les messages de réponse dans une application.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Désérialise un message en tableau de paramètres.</summary>
      <param name="message">Message entrant.</param>
      <param name="parameters">Tableau d'objets transmis à l'opération en tant que paramètres.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Sérialise un message de réponse à partir d'une version de message, d'un tableau de paramètres et d'une valeur de retour spécifiés.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> de réponse sérialisé.</returns>
      <param name="messageVersion">Version de message SOAP.</param>
      <param name="parameters">Tableau de paramètres out.</param>
      <param name="result">Valeur de retour.</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Représente une exception qui se produit en cas de problème avec la sécurité appliquée au message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> avec un message d'erreur et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur.</param>
      <param name="innerException">Référence à l'exception interne.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Représente l'exception de sécurité levée en cas d'échec d'une demande d'autorisation de sécurité.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> à l'aide d'un message spécifié.</summary>
      <param name="message">Description de la condition d'erreur.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> à l'aide d'un message spécifié et de l'exception interne.</summary>
      <param name="message">Description de la condition d'erreur.</param>
      <param name="innerException">Exception interne à utiliser.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Représente des informations d'identification du client basées sur le nom d'utilisateur et le mot de passe.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Obtient ou définit le mot de passe.</summary>
      <returns>Mot de passe.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Obtient ou définit le nom de l'utilisateur.</summary>
      <returns>Nom d'utilisateur.</returns>
    </member>
  </members>
</doc>