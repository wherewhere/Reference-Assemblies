<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="T:System.Net.Cookie">
      <summary>Fournit un objet à utiliser avec des requêtes HTTP pour rendre persistantes les informations d'état d'une application Windows Phone.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" />. </summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" /> avec le nom et la valeur spécifiés.</summary>
      <param name="name">Nom du <see cref="T:System.Net.Cookie" />. Le paramètre <paramref name="name" /> ne peut pas contenir les caractères suivants : signe égal (=), point-virgule (;), virgule (,), saut de ligne (\n), retour (\r), tabulation (\t) et espace. Le symbole du dollar ($) ne peut pas être le premier caractère.</param>
      <param name="value">Valeur de <see cref="T:System.Net.Cookie" />. Le paramètre <paramref name="value" /> ne peut pas comporter de point-virgule (;) ni de virgule (), à moins qu'ils ne soient contenus dans des guillemets doubles avec séquence d'échappement.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> est null ou une chaîne vide (""). – ou –<paramref name="name" /> contient un caractère non autorisé. L'utilisation de l'un des caractères suivants génère une exception : signe égal (=)point-virgule (;) virgule (,)saut de ligne (\n)retour (\r) tabulation (\t) espace symbole du dollar ($) en tant que premier caractère– ou –<paramref name="value" /> est null ou contient un point-virgule (;) ou une virgule (,) qui n’est pas entouré de guillemets doubles avec séquence d’échappement.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" /> avec le nom, la valeur et le chemin d'accès spécifiés.</summary>
      <param name="name">Nom du <see cref="T:System.Net.Cookie" />. Le paramètre <paramref name="name" /> ne peut pas contenir les caractères suivants : signe égal (=), point-virgule (;), virgule (,), saut de ligne (\n), retour (\r), tabulation (\t) et espace. Le symbole du dollar ($) ne peut pas être le premier caractère.</param>
      <param name="value">Valeur de <see cref="T:System.Net.Cookie" />. Le paramètre <paramref name="value" /> ne peut pas comporter de point-virgule (;) ni de virgule (), à moins qu'ils ne soient contenus dans des guillemets doubles avec séquence d'échappement.</param>
      <param name="path">Partie du chemin d'accès d'un URI auquel ce cookie s'applique.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> est null ou une chaîne vide (""). – ou –<paramref name="name" /> contient un caractère non autorisé. L'utilisation de l'un des caractères suivants génère une exception : signe égal (=)point-virgule (;) virgule (,)saut de ligne (\n)retour (\r) tabulation (\t) espace symbole du dollar ($) en tant que premier caractère– ou –<paramref name="value" /> est null ou contient un point-virgule (;) ou une virgule (,) qui n’est pas entouré de guillemets doubles avec séquence d’échappement.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" /> avec le nom, la valeur, le chemin d'accès et le domaine spécifiés.</summary>
      <param name="name">Nom du <see cref="T:System.Net.Cookie" />. Le paramètre <paramref name="name" /> ne peut pas contenir les caractères suivants : signe égal (=), point-virgule (;), virgule (,), saut de ligne (\n), retour (\r), tabulation (\t) et espace. Le symbole du dollar ($) ne peut pas être le premier caractère.</param>
      <param name="value">Valeur de <see cref="T:System.Net.Cookie" />. Le paramètre <paramref name="value" /> ne peut pas comporter de point-virgule (;) ni de virgule (), à moins qu'ils ne soient contenus dans des guillemets doubles avec séquence d'échappement.</param>
      <param name="path">Partie du chemin d'accès d'un URI auquel ce cookie s'applique.</param>
      <param name="domain">Partie du domaine d'un URI auquel ce cookie s'applique.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> est null ou une chaîne vide (""). – ou –<paramref name="name" /> contient un caractère non autorisé. L'utilisation de l'un des caractères suivants génère une exception : signe égal (=)point-virgule (;) virgule (,)saut de ligne (\n)retour (\r) tabulation (\t) espace symbole du dollar ($) en tant que premier caractère– ou –<paramref name="value" /> est null ou contient un point-virgule (;) ou une virgule (,) qui n’est pas entouré de guillemets doubles avec séquence d’échappement.</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>Obtient ou définit un commentaire facultatif qui indique l'utilisation prévue du cookie. </summary>
      <returns>Utilisation prévue du cookie.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>Obtient ou définit un commentaire d'URI (Uniform Resource Identifier) que le serveur fournit pour ce <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Commentaire d'URI que le serveur fournit pour ce <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>Obtient ou définit une valeur qui indique si le client doit ignorer le <see cref="T:System.Net.Cookie" /> à la fin de la session active.</summary>
      <returns>La valeur est true si le client doit ignorer le <see cref="T:System.Net.Cookie" /> à la fin de la session, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>Obtient ou définit le domaine d'un URI (Uniform Resource Identifier) pour lequel le cookie est valide.</summary>
      <returns>Domaine d'un URI pour lequel le cookie est valide. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>Détermine si deux objets <see cref="T:System.Net.Cookie" /> sont égaux.</summary>
      <returns>La valeur est true si les objets cookie sont égaux, sinon false.</returns>
      <param name="comparand">
        <see cref="T:System.Net.Cookie" /> à comparer à ce <see cref="T:System.Net.Cookie" /> en termes d'égalité.</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>Obtient ou définit une valeur qui indique si ce <see cref="T:System.Net.Cookie" /> est toujours valide.</summary>
      <returns>La valeur est true si le cookie n'est plus valide, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>Obtient ou définit la date et l'heure d'expiration du <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Date et heure d'expiration du <see cref="T:System.Net.Cookie" />. La valeur par défaut est <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>Obtient le code de hachage de ce <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Code de hachage pour ce <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>Obtient ou définit une valeur qui indique si un script de page ou un autre contenu actif peut accéder à ce cookie. </summary>
      <returns>La valeur est true pour indiquer qu'un script de page ou un autre contenu actif ne peut pas accéder à ce <see cref="T:System.Net.Cookie" />, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>Obtient ou définit le nom de ce cookie.</summary>
      <returns>Nom du cookie.</returns>
      <exception cref="T:System.Net.CookieException">La valeur spécifiée pour une opération ensembliste est null ou une chaîne vide (""). – ou –La valeur spécifiée pour une opération ensembliste contient un caractère non autorisé. L'utilisation de l'un des caractères suivants génère une exception : signe égal (=)point-virgule (;) virgule (,)saut de ligne (\n)retour (\r) tabulation (\t) espace symbole du dollar ($) en tant que premier caractère </exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>Obtient ou définit la partie de chemin d'accès d'un URI (Uniform Resource Identifier) auquel ce cookie s'applique.</summary>
      <returns>Partie du chemin d'accès d'un URI auquel ce cookie s'applique.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>Obtient ou définit la liste des ports TCP (Transmission Control Protocol) auxquels ce cookie s'applique.</summary>
      <returns>Liste séparée par des virgules des ports TCP auxquels ce cookie s'applique.</returns>
      <exception cref="T:System.Net.CookieException">
        <see cref="P:System.Net.Cookie.Port" /> est défini sur un format incorrect.</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>Obtient ou définit une valeur qui indique si l'inclusion du cookie dans les requêtes clientes suivantes nécessite que la requête soit envoyée avec le protocole HTTPS (Secure Hypertext Transport Protocol).</summary>
      <returns>La valeur est true si l'inclusion du cookie dans les requêtes clientes suivantes nécessite que la requête soit envoyée avec le protocole HTTPS, sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>Obtient la date et l'heure de création de ce <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Date et heure de création de ce cookie.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>Retourne une représentation sous forme de chaîne du <see cref="T:System.Net.Cookie" /> pouvant être inclus dans une requête de cookie HTTP.</summary>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Net.Cookie" /> pouvant être inclus dans une requête de cookie HTTP.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>Obtient ou définit la valeur du <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Valeur de <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>Obtient ou définit un chiffre unique qui indique la version de la maintenance d'état HTTP à laquelle le cookie se conforme.</summary>
      <returns>Chiffre unique qui indique la version de la maintenance d'état HTTP à laquelle le cookie se conforme. La valeur par défaut est 0. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure à zéro.</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieCollection" />. </summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>Ajoute le <see cref="T:System.Net.Cookie" /> spécifié à la collection.</summary>
      <param name="cookie">
        <see cref="T:System.Net.Cookie" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>Ajoute le contenu du <see cref="T:System.Net.CookieCollection" /> spécifié à cette collection.</summary>
      <param name="cookies">
        <see cref="T:System.Net.CookieCollection" /> à ajouter à cette collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> est null.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie le contenu de ce <see cref="T:System.Net.CookieCollection" /> dans le tableau spécifié, au niveau de l'index spécifié.</summary>
      <param name="array">Tableau dans lequel copier le contenu de la collection.</param>
      <param name="index">Index de base 0 dans le tableau de destination auquel commencer l'opération de copie.</param>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>Obtient le nombre de cookies contenus dans <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Nombre de cookies contenus dans <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>Obtient un énumérateur qui itère au sein de <see cref="T:System.Net.CookieCollection" />.  </summary>
      <returns>Énumérateur qui itère au sein de <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Net.CookieCollection" /> est en lecture seule.</summary>
      <returns>La valeur est true pour indiquer que la collection est en lecture seule, sinon false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Net.CookieCollection" /> est thread-safe.</summary>
      <returns>La valeur est true si l'accès à <see cref="T:System.Net.CookieCollection" /> est synchronisé (thread-safe), sinon false. La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>Obtient le cookie portant le nom spécifié dans la collection.</summary>
      <returns>Cookie portant le nom spécifié.</returns>
      <param name="name">Nom du cookie à récupérer de la collection.</param>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>Fournit un conteneur pour une collection d'objets <see cref="T:System.Net.CookieCollection" />. </summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieContainer" />. </summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>Ajoute le <see cref="T:System.Net.Cookie" /> spécifié avec l'URI (Uniform Resource Identifier) indiqué à ce <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="uri">URI du cookie à ajouter à ce <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookie">
        <see cref="T:System.Net.Cookie" /> à ajouter à ce <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> a la valeur null. </exception>
      <exception cref="T:System.ArgumentException">Le domaine du <paramref name="cookie" /> est null. </exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> est supérieur à <see cref="P:System.Net.CookieContainer.MaxCookieSize" />. – ou – le domaine de <paramref name="cookie" /> n’est pas un URI valide. </exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>Ajoute le contenu du <see cref="T:System.Net.CookieCollection" /> spécifié avec l'URI (Uniform Resource Identifier) indiqué à ce <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="uri">URI du <see cref="T:System.Net.CookieCollection" /> à ajouter à ce <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookies">
        <see cref="T:System.Net.CookieCollection" /> contenant les cookies à ajouter à ce <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> est null.</exception>
      <exception cref="T:System.ArgumentException">Le domaine de l’un des cookies de <paramref name="cookies" /> est null. </exception>
      <exception cref="T:System.Net.CookieException">L'un des cookies de <paramref name="cookies" /> contient un domaine non valide. </exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>Obtient le nombre d'objets <see cref="T:System.Net.Cookie" /> que ce <see cref="T:System.Net.CookieContainer" /> peut contenir.</summary>
      <returns>Nombre d'objets <see cref="T:System.Net.Cookie" /> que ce <see cref="T:System.Net.CookieContainer" /> peut contenir. La valeur par défaut est 300.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>Obtient le nombre d'objets <see cref="T:System.Net.Cookie" /> que ce <see cref="T:System.Net.CookieContainer" /> contient.</summary>
      <returns>Nombre d'objets <see cref="T:System.Net.Cookie" /> que ce <see cref="T:System.Net.CookieContainer" /> contient.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>Représente la taille maximale par défaut, en octets, des objets <see cref="T:System.Net.Cookie" /> que le <see cref="T:System.Net.CookieContainer" /> peut recevoir. Ce champ est constant.</summary>
      <returns>Retourne toujours 4096.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>Représente le nombre maximal par défaut d'objets <see cref="T:System.Net.Cookie" /> que le <see cref="T:System.Net.CookieContainer" /> peut recevoir. Ce champ est constant. </summary>
      <returns>Retourne toujours 300.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>Représente le nombre maximal par défaut d'objets <see cref="T:System.Net.Cookie" /> que le <see cref="T:System.Net.CookieContainer" /> peut référencer par domaine. Ce champ est constant.</summary>
      <returns>Retourne toujours 20.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>Obtient l'en-tête de cookie HTTP qui contient les cookies relatifs à l'URI (Uniform Resource Identifier) spécifié.</summary>
      <returns>Chaîne représentant l'en-tête de cookie associé à l'URI spécifié.</returns>
      <param name="uri">URI pour lequel récupérer les cookies.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> est null.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>Obtient la <see cref="T:System.Net.CookieCollection" /> associée à l'URI (Uniform Resource Identifier) spécifié.</summary>
      <returns>Collection de cookies associée à l'URI spécifié.</returns>
      <param name="uri">URI pour lequel récupérer le <see cref="T:System.Net.CookieCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> est null.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>Obtient la longueur maximale des cookies du <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns>Longueur maximale des cookies du <see cref="T:System.Net.CookieContainer" />. La valeur par défaut est 4096.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>Obtient et définit le nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir par domaine.</summary>
      <returns>Nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir par domaine. La valeur par défaut est 20.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>Crée des instances pour les cookies spécifiés dans l'en-tête de cookie HTTP et les ajoute au <see cref="T:System.Net.CookieContainer" /> associé à l'URI (Uniform Resource Identifier) spécifié.</summary>
      <param name="uri">URI associé au conteneur de cookie.</param>
      <param name="cookieHeader">En-tête HTTP contenant les cookies à ajouter au <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur null.– ou –<paramref name="cookieHeader" /> a la valeur null.</exception>
      <exception cref="T:System.Net.CookieException">L'un des cookies n'est pas valide. – ou – Une erreur s’est produite lors de l’ajout de l’un des cookies au conteneur. </exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>Exception qui est levée lors de l'ajout d'un <see cref="T:System.Net.Cookie" /> à une <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieException" />. </summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary>Représente un point de terminaison réseau sous la forme d'un nom d'hôte ou d'une représentation sous forme de chaîne d'une adresse IP et d'un numéro de port.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.DnsEndPoint" /> avec le nom d'hôte ou la représentation sous forme de chaîne d'une adresse IP et d'un numéro de port.</summary>
      <param name="host">Nom d'hôte ou représentation sous forme de chaîne de l'adresse IP.</param>
      <param name="port">Numéro de port associé à <paramref name="address" />, ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="host" /> contient une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="host" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> est inférieur à 0. – ou – <paramref name="port" /> est supérieur à 0xffff. </exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.DnsEndPoint" /> avec le nom d'hôte ou la représentation sous forme de chaîne d'une adresse IP, d'un numéro de port et d'une famille d'adresses.</summary>
      <param name="host">Nom d'hôte ou représentation sous forme de chaîne de l'adresse IP.</param>
      <param name="port">Numéro de port associé à <paramref name="address" />, ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <param name="addressFamily">Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="host" /> contient une chaîne vide. – ou – Le paramètre <paramref name="addressFamily" /> est spécifié en tant que <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="host" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> est inférieur à 0. – ou – <paramref name="port" /> est supérieur à 0xffff. </exception>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary>Obtient la famille d'adresses IP (Internet Protocol).</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary>Compare deux objets <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>La valeur est true si les deux instances de <see cref="T:System.Net.DnsEndPoint" /> sont égales, sinon false.</returns>
      <param name="comparand">Instance de <see cref="T:System.Net.DnsEndPoint" /> à comparer à l'instance actuelle.</param>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary>Retourne une valeur de hachage pour <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Valeur de hachage entier pour <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary>Obtient le nom d'hôte ou la représentation sous forme de chaîne de l'adresse IP de l'hôte.</summary>
      <returns>Nom d'hôte ou représentation sous forme de chaîne d'une adresse IP.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary>Obtient le numéro de port de <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Valeur entière comprise entre 0 et 0xffff qui indique le numéro de port de <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary>Retourne le nom d'hôte ou la représentation sous forme de chaîne de l'adresse IP et du numéro de port de <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Chaîne contenant la famille d'adresses, le nom d'hôte ou la chaîne d'adresse IP, ainsi que le numéro de port du <see cref="T:System.Net.DnsEndPoint" /> spécifié.</returns>
    </member>
    <member name="T:System.Net.DownloadProgressChangedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> de <see cref="T:System.Net.WebClient" />.</summary>
    </member>
    <member name="P:System.Net.DownloadProgressChangedEventArgs.BytesReceived">
      <summary>Obtient le nombre d'octets reçus.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> qui indique le nombre d'octets reçus.</returns>
    </member>
    <member name="P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Obtient le nombre total d'octets dans une opération de téléchargement de données <see cref="T:System.Net.WebClient" />.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> indiquant le nombre d'octets qui seront reçus.</returns>
    </member>
    <member name="T:System.Net.DownloadProgressChangedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> de <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Net.DownloadStringCompletedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.DownloadStringCompleted" />. </summary>
    </member>
    <member name="P:System.Net.DownloadStringCompletedEventArgs.Result">
      <summary>Obtient les données qui sont téléchargées par une méthode <see cref="Overload:System.Net.WebClient.DownloadStringAsync" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient les données téléchargées.</returns>
      <exception cref="T:System.InvalidOperationException">La demande asynchrone a été annulée. </exception>
    </member>
    <member name="T:System.Net.DownloadStringCompletedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> de <see cref="T:System.Net.WebClient" />. </summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary>Identifie une adresse réseau. Il s'agit d'une classe abstraite.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary>Obtient la famille d'adresses à laquelle appartient ce point de terminaison.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si elle n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary>Crée une instance de <see cref="T:System.Net.EndPoint" /> à partir d'une instance de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Net.EndPoint" /> qui est initialisée à partir de l'instance de <see cref="T:System.Net.SocketAddress" /> spécifiée.</returns>
      <param name="socketAddress">Adresse de socket qui sert de point de terminaison pour une connexion.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary>Sérialise les informations sur le point de terminaison dans une instance de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>Instance de <see cref="T:System.Net.SocketAddress" /> qui contient les informations sur le point de terminaison.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="T:System.Net.HttpRequestHeader">
      <summary>En-têtes HTTP qui peuvent être spécifiés dans une requête du client.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.CacheControl">
      <summary>En-tête Cache-Control qui spécifie les directives devant être respectées par l'ensemble des mécanismes de contrôle de cache tout au long de la chaîne de requête/réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Connection">
      <summary>En-tête Connection qui spécifie les options désirées pour une connexion particulière.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Date">
      <summary>En-tête Date qui spécifie la date et l'heure de lancement de la requête.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.KeepAlive">
      <summary>En-tête Keep-Alive qui spécifie un paramètre utilisé pour préserver une connexion persistante.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Pragma">
      <summary>En-tête Pragma qui spécifie les directives spécifiques à l'implémentation qui peuvent s'appliquer à tout agent tout au long de la chaîne de demande/réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Trailer">
      <summary>En-tête Trailer qui spécifie les champs d'en-tête présents dans le code de fin d'un message encodé à l'aide de l'encodage de transfert mémorisé en bloc.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.TransferEncoding">
      <summary>En-tête Transfer-Encoding qui spécifie le type de transformation éventuellement appliqué au corps du message.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Upgrade">
      <summary>En-tête Upgrade qui spécifie les protocoles de communication supplémentaires pris en charge par le client.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Via">
      <summary>En-tête Via qui spécifie les protocoles intermédiaires que la passerelle et les agents proxy doivent utiliser.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Warning">
      <summary>En-tête Warning qui spécifie des informations supplémentaires à propos de l'état ou de la transformation d'un message qui ne peut pas être répercuté dans le message.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Allow">
      <summary>En-tête Allow qui spécifie le jeu de méthodes HTTP pris en charge.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLength">
      <summary>En-tête Content-Length qui spécifie la longueur en octets des données relatives au corps fournies.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentType">
      <summary>En-tête Content-Type qui spécifie le type MIME des données relatives au corps fournies.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentEncoding">
      <summary>En-tête Content-Encoding qui spécifie les encodages appliqués aux données relatives au corps fournies.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLanguage">
      <summary>En-tête Content-Language qui spécifie le ou les langages naturels des données relatives au corps fournies.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLocation">
      <summary>En-tête Content-Location qui spécifie un URI à partir duquel le corps fourni peut être obtenu.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentMd5">
      <summary>En-tête Content-MD5 qui spécifie le résumé MD5 des données relatives au corps fournies en vue d'assurer un contrôle de l'intégrité des messages de bout en bout.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentRange">
      <summary>En-tête Content-Range qui spécifie à quel endroit du corps complet les données relatives au corps partiel fournies doivent être appliquées.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expires">
      <summary>En-tête Expires qui spécifie la date et l'heure après lesquelles les données relatives au corps fournies doivent être considérées comme périmées.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.LastModified">
      <summary>En-tête Last-Modified qui spécifie la date et l'heure de la dernière modification des données relatives au corps fournies.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Accept">
      <summary>En-tête Accept qui spécifie les types MIME admis pour la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptCharset">
      <summary>En-tête Accept-Charset qui spécifie les jeux de caractères admis pour la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptEncoding">
      <summary>En-tête Accept-Encoding qui spécifie les encodages de contenu admis pour la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptLanguage">
      <summary>En-tête Accept-Language qui spécifie les langages naturels préférés pour la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Authorization">
      <summary>En-tête Authorization qui spécifie les informations d'identification que le client doit présenter pour s'authentifier auprès du serveur.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Cookie">
      <summary>En-tête Cookie qui spécifie des données de cookie présentées au serveur.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expect">
      <summary>En-tête Expect qui spécifie les comportements de serveurs particuliers exigés par le client.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.From">
      <summary>En-tête From qui spécifie une adresse de messagerie Internet pour l'utilisateur humain qui contrôle l'agent utilisateur (user agent) demandeur.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Host">
      <summary>En-tête Host qui spécifie le nom d'hôte et le numéro de port de la ressource demandée.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfMatch">
      <summary>En-tête If-Match qui spécifie que l'opération demandée ne doit être exécutée que si la copie mise en cache du client de la ressource indiquée est actuelle.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfModifiedSince">
      <summary>En-tête If-Modified-Since qui spécifie que l'opération demandée ne doit être exécutée que si la ressource demandée a été modifiée depuis la date et l'heure indiquées.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfNoneMatch">
      <summary>En-tête If-None-Match qui spécifie que l'opération demandée ne doit être exécutée que si aucune des copies mises en cache du client de la ressource indiquée n'est actuelle.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfRange">
      <summary>En-tête If-Range qui spécifie que seule la plage spécifiée de la ressource demandée doit être envoyée, si la copie mise en cache du client est actuelle.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfUnmodifiedSince">
      <summary>En-tête If-Unmodified-Since qui spécifie que l'opération demandée ne doit être exécutée que si la ressource demandée n'a pas été modifiée depuis la date et l'heure indiquées.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.MaxForwards">
      <summary>En-tête Max-Forwards qui spécifie un entier indiquant le nombre de fois que cette requête peut encore être transférée.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ProxyAuthorization">
      <summary>En-tête Proxy-Authorization qui spécifie les informations d'identification que le client doit présenter pour s'authentifier auprès d'un proxy.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Referer">
      <summary>En-tête Referer qui spécifie l'URI de la ressource à partir de laquelle l'URI de la requête a été obtenu.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Range">
      <summary>En-tête Range qui spécifie à la ou les sous-plages de la réponse que les requêtes du client doivent être retournées plutôt que l'intégralité de la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Te">
      <summary>En-tête TE qui spécifie les encodages de transfert admis pour la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Translate">
      <summary>En-tête Translate (extension Microsoft à la spécification HTTP utilisée conjointement avec la fonctionnalité WebDAV).</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.UserAgent">
      <summary>En-tête User-Agent qui spécifie les informations relatives à l'agent client.</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>Contient les valeurs des codes d'état définis pour HTTP.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>Équivalent de l'état HTTP 100. Le champ <see cref="F:System.Net.HttpStatusCode.Continue" /> indique que le client peut poursuivre sa demande.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>Équivalent de l'état HTTP 101. Le champ <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> indique que la version du protocole ou que le protocole est en cours de changement.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>Équivalent de l'état HTTP 200. Le champ <see cref="F:System.Net.HttpStatusCode.OK" /> indique que la demande a abouti et que les informations demandées figurent dans la réponse. Ceci constitue le code d'état le plus fréquemment reçu.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>Équivalent de l'état HTTP 201. Le champ <see cref="F:System.Net.HttpStatusCode.Created" /> indique que la demande a provoqué la création d'une nouvelle ressource avant l'envoi de la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>Équivalent de l'état HTTP 202. Le champ <see cref="F:System.Net.HttpStatusCode.Accepted" /> indique que le traitement de la demande peut se poursuivre.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>Équivalent de l'état HTTP 203. Le champ <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> indique que les informations de métadonnées retournées proviennent d'une copie mise en cache, et non du serveur d'origine, et qu'elles risquent donc d'être incorrectes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>Équivalent de l'état HTTP 204. Le champ <see cref="F:System.Net.HttpStatusCode.NoContent" /> indique que la demande a été correctement traitée et que la réponse vide est intentionnelle.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>Équivalent de l'état HTTP 205. Le champ <see cref="F:System.Net.HttpStatusCode.ResetContent" /> indique que le client doit réinitialiser (et non recharger) la ressource actuelle.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>Équivalent de l'état HTTP 206. Le champ <see cref="F:System.Net.HttpStatusCode.PartialContent" /> indique que la réponse est une réponse partielle, comme indiqué par une demande GET qui spécifie une plage d'octets.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>Équivalent de l'état HTTP 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> indique que les informations demandées possèdent plusieurs représentations. L'action par défaut consiste à traiter cet état en tant que redirection et à suivre le contenu de l'en-tête Location associé à cette réponse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>Équivalent de l'état HTTP 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> indique que les informations demandées possèdent plusieurs représentations. L'action par défaut consiste à traiter cet état en tant que redirection et à suivre le contenu de l'en-tête Location associé à cette réponse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>Équivalent de l'état HTTP 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> indique que les informations demandées ont été déplacées vers l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>Équivalent de l'état HTTP 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> indique que les informations demandées ont été déplacées vers l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise la méthode GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>Équivalent de l'état HTTP 302. <see cref="F:System.Net.HttpStatusCode.Found" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise la méthode GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>Équivalent de l'état HTTP 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise la méthode GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>Équivalent de l'état HTTP 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> redirige automatiquement le client vers l'URI spécifié dans l'en-tête Location suite à une méthode POST. La demande à la ressource spécifiée par l'en-tête Location sera faite à l'aide de la méthode GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>Équivalent de l'état HTTP 303. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> redirige automatiquement le client vers l'URI spécifié dans l'en-tête Location suite à une méthode POST. La demande à la ressource spécifiée par l'en-tête Location sera faite à l'aide de la méthode GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>Équivalent de l'état HTTP 304. Le champ <see cref="F:System.Net.HttpStatusCode.NotModified" /> indique que la copie mise en cache du client est à jour. Le contenu de la ressource n'a pas été transféré.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>Équivalent de l'état HTTP 305. Le champ <see cref="F:System.Net.HttpStatusCode.UseProxy" /> indique que la demande doit utiliser le serveur proxy au niveau de l'URI spécifié dans l'en-tête Location.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>Équivalent de l'état HTTP 306. Le champ <see cref="F:System.Net.HttpStatusCode.Unused" /> est une proposition d'extension de la spécification HTTP/1.1 qui n'est pas complètement spécifiée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>Équivalent de l'état HTTP 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise également la méthode POST.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>Équivalent de l'état HTTP 307. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise également la méthode POST.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>Équivalent de l'état HTTP 400. Le champ <see cref="F:System.Net.HttpStatusCode.BadRequest" /> indique que le serveur n'a pas pu interpréter la demande. Le champ <see cref="F:System.Net.HttpStatusCode.BadRequest" /> est envoyé lorsqu'aucune autre erreur n'est applicable, ou si l'erreur exacte est inconnue ou n'a pas son propre code d'erreur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>Équivalent de l'état HTTP 401. Le champ <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> indique que la ressource demandée requiert une authentification. L'en-tête WWW-Authenticate contient les détails nécessaires à l'authentification.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>Équivalent de l'état HTTP 402. Le champ <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> est réservé à une utilisation ultérieure.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>Équivalent de l'état HTTP 403. Le champ <see cref="F:System.Net.HttpStatusCode.Forbidden" /> indique que le serveur refuse de donner suite à la demande.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>Équivalent de l'état HTTP 404. Le champ <see cref="F:System.Net.HttpStatusCode.NotFound" /> indique que la ressource demandée n'existe pas sur le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>Équivalent de l'état HTTP 405. Le champ <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> indique que la méthode de demande (POST ou GET) n'est pas autorisée sur la ressource demandée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>Équivalent de l'état HTTP 406. Le champ <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> indique que le client a spécifié, par le biais d'en-têtes Accept, qu'il n'acceptera aucune des représentations disponibles pour la ressource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>Équivalent de l'état HTTP 407. Le champ <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> indique que le proxy demandé requiert une authentification. L'en-tête Proxy-authenticate contient les détails nécessaires à l'authentification.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>Équivalent de l'état HTTP 408. Le champ <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> indique que le client n'a pas envoyé une demande dans le délai attendu par le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>Équivalent de l'état HTTP 409. Le champ <see cref="F:System.Net.HttpStatusCode.Conflict" /> indique que la demande n'a pas pu être exécutée en raison d'un conflit sur le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>Équivalent de l'état HTTP 410. Le champ <see cref="F:System.Net.HttpStatusCode.Gone" /> indique que la ressource demandée n'est plus disponible.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>Équivalent de l'état HTTP 411. Le champ <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> indique que l'en-tête Content-Length requis est manquant.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>Équivalent de l'état HTTP 412. Le champ <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> indique qu'une condition définie pour cette demande a échoué et que la demande n'a pas pu être exécutée. Les conditions sont définies à l'aide d'en-têtes de demande conditionnels tels que If-Match, If-None-Match ou If-Unmodified-Since.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>Équivalent de l'état HTTP 413. Le champ <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> indique que la demande ne peut pas être traitée par le serveur car elle est trop volumineuse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>Équivalent de l'état HTTP 414. Le champ <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> indique que l'URI est trop long.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>Équivalent de l'état HTTP 415. Le champ <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> indique que ce type de demande n'est pas pris en charge.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>Équivalent de l'état HTTP 416. Le champ <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> indique qu'il n'a pas été possible de retourner la plage de données demandée à partir de la ressource car le début de la plage se situe avant le début de la ressource ou la fin de la plage se trouve après la fin de la ressource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>Équivalent de l'état HTTP 417. Le champ <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> indique que le serveur n'a pas pu donner suite à une attente spécifiée dans un en-tête Expect.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>Équivalent de l'état HTTP 500. Le champ <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> indique qu'une erreur générique s'est produite sur le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>Équivalent de l'état 501. Le champ <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> indique que le serveur ne prend pas en charge la fonction demandée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>Équivalent de l'état HTTP 502. Le champ <see cref="F:System.Net.HttpStatusCode.BadGateway" /> indique qu'un serveur proxy intermédiaire a reçu une mauvaise réponse d'un autre proxy ou du serveur d'origine.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>Équivalent de l'état HTTP 503. Le champ <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> indique que le serveur n'est pas disponible temporairement. Cela est généralement dû à une charge élevée ou à des opérations de maintenance.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>Équivalent de l'état HTTP 504. Le champ <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> indique qu'un serveur proxy intermédiaire a dépassé le délai spécifié lors de l'attente d'une réponse d'un autre proxy ou du serveur d'origine.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>Équivalent de l'état HTTP 505. Le champ <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> indique que le serveur ne prend pas en charge la version HTTP demandée.</summary>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>Fournit une implémentation propre à HTTP de la classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>Annule une requête adressée à une ressource Internet.</summary>
      <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>Obtient ou définit la valeur de l'en-tête HTTP Accept.</summary>
      <returns>Valeur de l'en-tête HTTP Accept. La valeur par défaut est null.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary>Obtient ou définit une valeur qui indique si la demande doit suivre les réponses de redirection.</summary>
      <returns>La valeur est true si la demande doit suivre automatiquement les réponses de redirection en provenance de la ressource Internet, sinon false. La valeur par défaut est true.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit une valeur qui indique si les données lues à partir de la ressource Internet doivent être mises en mémoire tampon.</summary>
      <returns>La valeur est true pour activer la mise en mémoire tampon des données lues à partir de la ressource Internet ou false pour désactiver la mise en mémoire tampon. La valeur par défaut est true.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering"></member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Démarre une requête asynchrone d'un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire des données.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la requête asynchrone.</returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet d'état de cette demande. </param>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.HttpWebRequest.Method" /> a la valeur GET.– ou – La propriété <see cref="P:System.Net.WebRequest.ContentLength" /> a une valeur qui ne correspond pas à la taille du corps de demande fourni.</exception>
      <exception cref="T:System.InvalidOperationException">Le flux est actuellement utilisé par un appel antérieur à <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.– ou – Le pool de threads dispose d'un nombre insuffisant de threads. </exception>
      <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée. </exception>
      <exception cref="T:System.NotSupportedException">Le validateur de cache de la requête a indiqué que la réponse à cette requête peut être fournie à partir du cache ; toutefois, les requêtes qui écrivent des données ne doivent pas utiliser le cache. Cette exception peut se produire si vous utilisez un validateur de cache personnalisé qui est implémenté de manière incorrecte. </exception>
      <exception cref="T:System.Net.WebException">La méthode <see cref="M:System.Net.HttpWebRequest.Abort" /> a été appelée au préalable. </exception>
      <exception cref="T:System.ObjectDisposedException">Dans une application .NET Framework, un flux de requête avec une longueur de contenu nulle n'a pas été obtenu ni fermé correctement.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Démarre une requête asynchrone adressée à une ressource Internet.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la requête asynchrone d'une réponse.</returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objet d'état de cette demande. </param>
      <exception cref="T:System.InvalidOperationException">Le flux est déjà utilisé par un appel antérieur à <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.– ou – Le pool de threads dispose d'un nombre insuffisant de threads. </exception>
      <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée. </exception>
      <exception cref="T:System.NotSupportedException">Le paramètre <paramref name="callback" /> est null. </exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> a la valeur GET. </exception>
      <exception cref="T:System.Net.WebException">La méthode <see cref="M:System.Net.HttpWebRequest.Abort" /> a été appelée au préalable. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength"></member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>Obtient ou définit la valeur de l'en-tête HTTP Content-type.</summary>
      <returns>Valeur de l'en-tête HTTP Content-type. La valeur par défaut est null.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>Spécifie la collection d'objets <see cref="T:System.Net.CookieCollection" /> associée à la requête HTTP.</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> qui contient une collection d'objets <see cref="T:System.Net.CookieCollection" /> associée à la requête HTTP.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>Obtient ou définit les informations d'authentification pour la requête.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> qui contient les informations d'authentification associées à la requête. La valeur par défaut est null.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Met fin à une requête asynchrone d'un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire des données.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête.</returns>
      <param name="asyncResult">Requête d'un flux en attente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> est null. </exception>
      <exception cref="T:System.IO.IOException">La requête ne s'est pas achevée et aucun flux n'est disponible. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n’a pas été retourné par l’instance actuelle à partir d’un appel à la méthode <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a été appelée au préalable à l'aide de <paramref name="asyncResult" />. </exception>
      <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée. </exception>
      <exception cref="T:System.Net.WebException">La méthode <see cref="M:System.Net.HttpWebRequest.Abort" /> a été appelée au préalable.– ou – Une erreur s’est produite pendant le traitement de la requête. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Termine une requête asynchrone adressée à une ressource Internet.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> contenant la réponse de la ressource Internet.</returns>
      <param name="asyncResult">Requête d'une réponse en attente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> est null. </exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a été appelée au préalable à l'aide de <paramref name="asyncResult." /></exception>
      <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée. </exception>
      <exception cref="T:System.Net.WebException">La méthode <see cref="M:System.Net.HttpWebRequest.Abort" /> a été appelée au préalable.– ou – Une erreur s’est produite pendant le traitement de la requête. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n’a pas été retourné par l’instance actuelle à partir d’un appel à la méthode <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.Finalize">
      <summary>Libère les ressources détenues par l'instance <see cref="T:System.Net.HttpWebRequest" /> actuelle.</summary>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Obtient une valeur indiquant si une réponse a été reçue d'une ressource Internet.</summary>
      <returns>La valeur est true si une réponse a été reçue, sinon false.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Spécifie une collection de paires nom-valeur qui composent les en-têtes HTTP.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant les paires nom-valeur qui composent les en-têtes de la requête HTTP.</returns>
      <exception cref="T:System.InvalidOperationException">La requête a été lancée en appelant la méthode <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> ou <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Obtient ou définit la méthode pour la requête.</summary>
      <returns>Méthode de requête à utiliser pour contacter la ressource Internet. La valeur par défaut est GET.</returns>
      <exception cref="T:System.ArgumentException">Aucune méthode n'est fournie.– ou – La chaîne de la méthode contient des caractères non valides. </exception>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
      <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Net.HttpWebRequest.Method" /> n'a pas la valeur GET ou POST. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Obtient l'URI (Uniform Resource Identifier) d'origine de la requête.</summary>
      <returns>
        <see cref="T:System.Uri" /> contenant l'URI de la ressource Internet passée à la méthode <see cref="M:System.Net.WebRequest.Create(System.Uri)" />.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>Obtient une valeur qui indique si la propriété <see cref="P:System.Net.HttpWebRequest.CookieContainer" /> est prise en charge par l'instance <see cref="T:System.Net.HttpWebRequest" />.</summary>
      <returns>La valeur est true si la propriété <see cref="P:System.Net.HttpWebRequest.CookieContainer" /> est prise en charge par l'instance <see cref="T:System.Net.HttpWebRequest" />, sinon false.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>Obtient ou définit la valeur de l'en-tête HTTP User-agent.</summary>
      <returns>Valeur de l'en-tête HTTP User-agent. La valeur par défaut est null.Note:La valeur de cette propriété est stockée dans <see cref="T:System.Net.WebHeaderCollection" />. Si WebHeaderCollection est défini, la valeur de la propriété est perdue.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Fournit une implémentation propre à HTTP de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Ferme le flux de réponse.</summary>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Obtient la longueur du contenu retourné par la demande.</summary>
      <returns>Nombre d'octets retournés par la demande. La longueur de contenu n'inclut pas d'informations d'en-tête.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Obtient le type de contenu de la réponse.</summary>
      <returns>Chaîne qui contient le type de contenu de la réponse.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Obtient les cookies utilisés pour rendre persistantes les informations d'état de la réponse HTTP.</summary>
      <returns>Objet <see cref="T:System.Net.CookieCollection" /> associé à la réponse HTTP.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Net.HttpWebResponse" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">Valeur booléenne indiquant si les ressources managées doivent aussi être libérées.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Obtient le flux qui est utilisé pour lire le corps de la réponse du serveur.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> contenant le corps de la réponse.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Obtient du serveur les en-têtes qui sont associés à cette réponse.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> qui contient les informations d'en-tête retournées avec la réponse.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Obtient la méthode qui est utilisée pour retourner la réponse.</summary>
      <returns>Chaîne qui contient la méthode HTTP utilisée pour retourner la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L'instance actuelle a été supprimée. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Obtient l'URI de la ressource Internet qui a répondu à la demande.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'URI de la ressource Internet qui a répondu à la demande.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Obtient l'état de la réponse.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.HttpStatusCode" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L'instance actuelle a été supprimée. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Obtient la description d'état retournée avec la réponse.</summary>
      <returns>Chaîne qui décrit l'état de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L'instance actuelle a été supprimée. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#IDisposable#Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Net.HttpWebResponse" />.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Fournit l'interface d'authentification de base pour la récupération d'informations d'identification destinées à l'authentification des clients Web.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>Retourne un objet <see cref="T:System.Net.NetworkCredential" /> associé à l'URI et au type d'authentification spécifiés.</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> associé à l'URI et au type d'authentification spécifiés ou null si aucune information d'identification n'est disponible.</returns>
      <param name="uri">
        <see cref="T:System.Uri" /> pour lequel le client fournit des informations d'authentification.</param>
      <param name="authType">Chaîne qui spécifie le type d'authentification.</param>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary>Fournit une adresse IP (Internet Protocol).</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPAddress" /> avec l'adresse spécifiée sous forme de tableau <see cref="T:System.Byte" />.</summary>
      <param name="address">Tableau d'octets qui contient l'adresse IP.</param>
      <exception cref="T:System.ArgumentException">La longueur du paramètre <paramref name="address" /> n'est pas égale aux 4 octets requis pour une adresse IPv4 ou aux 16 octets requis pour une adresse IPv6.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null. </exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPAddress" /> avec une adresse IPv6 spécifiée sous forme de tableau <see cref="T:System.Byte" /> et l'identificateur de portée spécifié.</summary>
      <param name="address">Valeur du tableau d'octets de l'adresse IPv6.</param>
      <param name="scopeid">Valeur de type Long de l'identificateur de portée.</param>
      <exception cref="T:System.ArgumentException">La longueur du paramètre <paramref name="address" /> n'est pas égale aux 16 octets requis pour une adresse IPv6.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="scopeid" /> est inférieur à 0 ou le paramètre <paramref name="scopeid" /> est supérieur à 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPAddress" /> avec l'adresse spécifiée sous forme de <see cref="T:System.Int64" />.</summary>
      <param name="newAddress">Valeur Long de l'adresse IP. Par exemple, la valeur 0x2414188f au format big-endian correspond à l'adresse IP « 143.24.20.36 ».</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="newAddress" /> est en dehors de la plage définie pour une adresse IPv4. </exception>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary>Obtient ou définit une adresse IP pour l'IPv4.</summary>
      <returns>Adresse IPv4 représentée sous forme d'entier.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">La propriété <see cref="P:System.Net.IPAddress.AddressFamily" /> est <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary>Obtient la famille d'adresses de l'adresse IP.</summary>
      <returns>Retourne <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> pour IPv4 ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> pour IPv6.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary>Fournit une adresse IPv4 qui indique qu'un serveur doit écouter les activités des clients sur toutes les interfaces réseau pour IPv4. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary>Fournit une adresse de diffusion IPv4. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary>Compare deux adresses IP.</summary>
      <returns>La valeur est true si les deux adresses sont égaux, sinon false.</returns>
      <param name="comparand">Instance de <see cref="T:System.Net.IPAddress" /> à comparer à l'instance actuelle.</param>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary>Fournit une copie de <see cref="T:System.Net.IPAddress" /> sous forme de tableau d'octets.</summary>
      <returns>Tableau d'octets qui représente l'instance <see cref="T:System.Net.IPAddress" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary>Retourne une valeur de hachage pour une adresse IP.</summary>
      <returns>Valeur de hachage entier pour l'adresse IP.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary>Convertit une valeur courte pour qu'elle utilise l'ordre d'octet du réseau, et non celui de l'hôte.</summary>
      <returns>Valeur courte utilisant l'ordre d'octet du réseau.</returns>
      <param name="host">Nombre à convertir utilisant l'ordre d'octet de l'hôte.</param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary>Convertit une valeur entière pour qu'elle utilise l'ordre d'octet du réseau, et non celui de l'hôte.</summary>
      <returns>Valeur entière utilisant l'ordre d'octet du réseau.</returns>
      <param name="host">Nombre à convertir utilisant l'ordre d'octet de l'hôte.</param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary>Convertit une valeur de type Long pour qu'elle utilise l'ordre d'octet du réseau, et non celui de l'hôte.</summary>
      <returns>Valeur de type Long utilisant l'ordre d'octet du réseau.</returns>
      <param name="host">Nombre à convertir utilisant l'ordre d'octet de l'hôte.</param>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary>Fournit une adresse IPv6 qui indique qu'un serveur doit écouter les activités des clients sur toutes les interfaces réseau pour IPv6. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary>Fournit l'adresse de bouclage IP. Cette propriété est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary>Fournit une adresse IPv6 qui indique qu'aucune interface réseau ne doit être utilisée. Cette propriété est en lecture seule.</summary>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary>Indique si l'adresse est une adresse de lien local IPv6.</summary>
      <returns>La valeur est true si l'adresse IP est une adresse de lien local IPv6, sinon false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary>Indique si l'adresse est une adresse globale multicast IPv6.</summary>
      <returns>La valeur est true si l'adresse IP est une adresse globale multicast IPv6, sinon false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary>Indique si l'adresse est une adresse de site local IPv6.</summary>
      <returns>La valeur est true si l'adresse IP est une adresse de site local IPv6, sinon false.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary>Indique si l'adresse IP spécifiée est une adresse de bouclage.</summary>
      <returns>La valeur est true si <paramref name="address" /> est l'adresse de bouclage, sinon false.</returns>
      <param name="address">Adresse IP.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null. </exception>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary>Fournit l'adresse de bouclage IPv4. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary>Convertit une valeur courte pour qu'elle utilise l'ordre d'octet de l'hôte, et non celui du réseau.</summary>
      <returns>Valeur courte utilisant l'ordre d'octet de l'hôte.</returns>
      <param name="network">Nombre à convertir utilisant l'ordre d'octet du réseau.</param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary>Convertit une valeur entière pour qu'elle utilise l'ordre d'octet de l'hôte, et non celui du réseau.</summary>
      <returns>Valeur entière utilisant l'ordre d'octet de l'hôte.</returns>
      <param name="network">Nombre à convertir utilisant l'ordre d'octet du réseau.</param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary>Convertit une valeur de type Long pour qu'elle utilise l'ordre d'octet de l'hôte, et non celui du réseau.</summary>
      <returns>Valeur de type Long utilisant l'ordre d'octet de l'hôte.</returns>
      <param name="network">Nombre à convertir utilisant l'ordre d'octet du réseau.</param>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary>Fournit une adresse IP qui indique qu'aucune interface réseau ne doit être utilisée. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary>Convertit une chaîne d'adresse IP en instance de <see cref="T:System.Net.IPAddress" />.</summary>
      <returns>Instance de <see cref="T:System.Net.IPAddress" />.</returns>
      <param name="ipString">Chaîne qui contient une adresse IP en notation ponctuée à quatre nombres pour IPv4 ou une adresse IP et en notation hexadécimale utilisant le signe deux-points comme séparateur pour IPv6.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="ipString" /> est null. </exception>
      <exception cref="T:System.FormatException">Le paramètre <paramref name="ipString" /> n'est pas une adresse IP valide. </exception>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary>Obtient ou définit l'identificateur de portée d'adresse IPv6.</summary>
      <returns>Entier long qui spécifie la portée de l'adresse.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur lors de la définition de ScopeId est inférieure à 0 ou ou supérieure à 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">La propriété <see cref="P:System.Net.IPAddress.AddressFamily" /> a la valeur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />. </exception>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary>Convertit une adresse Internet en notation standard.</summary>
      <returns>Chaîne qui contient l'adresse IP en notation ponctuée à quatre nombres IPv4 ou en notation hexadécimale utilisant le signe deux-points comme séparateur en IPv6.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur a empêché l'adresse IPv6 d'être convertie en chaîne. </exception>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary>Détermine si une chaîne est une adresse IP valide.</summary>
      <returns>La valeur est true si <paramref name="ipString" /> est une adresse IP valide, sinon, false.</returns>
      <param name="ipString">Chaîne à valider.</param>
      <param name="address">Version <see cref="T:System.Net.IPAddress" /> de la chaîne.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ipString" /> n'a pas pu être analysé en tant qu'adresse IP.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipString" /> est null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="ipString" /> n’est pas une adresse IP valide. </exception>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary>Représente un point de terminaison du réseau comme une adresse IP et un numéro de port.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPEndPoint" /> avec l'adresse IP et le numéro de port spécifiés.</summary>
      <param name="address">Valeur Long de l'adresse IP pour l'hôte Internet. Par exemple, la valeur 0x2414188f au format big-endian correspond à l'adresse IP « 143.24.20.36 ».</param>
      <param name="port">Numéro de port associé à <paramref name="address" />, ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> est inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.– ou – <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" />.– ou – <paramref name="address" /> est hors limites pour une adresse IPv4.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPEndPoint" /> avec l'adresse et le numéro de port spécifiés.</summary>
      <param name="address">Adresse IP de l'hôte Internet représentée sous forme de <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port">Numéro de port associé à <paramref name="address" />, ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> est inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.– ou – <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary>Obtient ou définit l'adresse IP du point de terminaison.</summary>
      <returns>Adresse IP du point de terminaison.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary>Obtient la famille d'adresses IP (Internet Protocol).</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary>Crée un point de terminaison à partir d'une adresse de socket.</summary>
      <returns>Instance de <see cref="T:System.Net.EndPoint" /> qui utilise l'adresse de socket spécifiée.</returns>
      <param name="socketAddress">
        <see cref="T:System.Net.SocketAddress" /> à utiliser pour le point de terminaison.</param>
      <exception cref="T:System.ArgumentException">AddressFamily de <paramref name="socketAddress" /> est différent de AddressFamily de l'instance actuelle.– ou – <paramref name="socketAddress" /> .Size &lt; 8. </exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="socketAddress" /> est null.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary>Détermine si le <see cref="T:System.Object" /> spécifié est égal à l'instance de <see cref="T:System.Net.IPEndPoint" /> en cours.</summary>
      <returns>La valeur est true si les deux points de terminaison IP sont égaux, sinon false.</returns>
      <param name="comparand">
        <see cref="T:System.Object" /> spécifié pour tester pour l'égalité avec l'instance de <see cref="T:System.Net.IPEndPoint" /> en cours.</param>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary>Renvoie une valeur de hachage pour un point de terminaison IP.</summary>
      <returns>Valeur de hachage entier pour le point de terminaison IP.</returns>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary>Spécifie la valeur maximale qui peut être assignée à la propriété <see cref="P:System.Net.IPEndPoint.Port" />. MaxPort a la valeur 0x0000FFFF. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary>Spécifie la valeur minimale qui peut être assignée à la propriété <see cref="P:System.Net.IPEndPoint.Port" />. Ce champ est en lecture seule.</summary>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary>Obtient ou définit le numéro de port du point de terminaison.</summary>
      <returns>Valeur entière comprise entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" /> qui indique le numéro de port du point de terminaison.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure à celle du champ <see cref="F:System.Net.IPEndPoint.MinPort" /> ou supérieure à celle du champ <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary>Sérialise les informations sur le point de terminaison dans une instance de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>Instance de <see cref="T:System.Net.SocketAddress" /> contenant l'adresse de socket du point de terminaison.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary>Retourne l'adresse IP et le numéro de port du point de terminaison spécifié.</summary>
      <returns>Chaîne contenant l'adresse IP et le numéro de port du point de terminaison spécifié.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Fournit l'interface de base pour la création d'instances de <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Crée une instance de <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>Instance de <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="uri">URI (Uniform Resource Identifier) de la ressource Web.</param>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="uri" /> n’est pas pris en charge par cette instance de <see cref="T:System.Net.IWebRequestCreate" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> est null. </exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation de se connecter à l'URI demandé ou à l'URI vers lequel est redirigée la demande. </exception>
      <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="uri" /> n’est pas un URI valide. </exception>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>Fournit des informations d'identification pour les schémas d'authentification qui utilisent les mots de passe, tels que Basic, Digest, NTLM et Kerberos.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" />.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" /> avec le nom d'utilisateur et le mot de passe spécifiés.</summary>
      <param name="userName">Nom d'utilisateur associé aux informations d'identification.</param>
      <param name="password">Mot de passe du nom d'utilisateur associé aux informations d'identification.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" /> avec le nom d'utilisateur, le mot de passe et le domaine spécifiés.</summary>
      <param name="userName">Nom d'utilisateur associé aux informations d'identification.</param>
      <param name="password">Mot de passe du nom d'utilisateur associé aux informations d'identification.</param>
      <param name="domain">Domaine associé à ces informations d'identification.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>Obtient ou définit le nom de domaine ou d'ordinateur qui vérifie les informations d'identification.</summary>
      <returns>Nom du domaine associé aux informations d'identification.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>Retourne une instance de la classe <see cref="T:System.Net.NetworkCredential" /> pour l'URI (Uniform Resource Identifier) et le type d'authentification spécifiés.</summary>
      <returns>Objet <see cref="T:System.Net.NetworkCredential" />.</returns>
      <param name="uri">URI pour lequel le client fournit l'authentification.</param>
      <param name="authType">Chaîne qui spécifie le type d'authentification demandé.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>Obtient ou définit le mot de passe correspondant au nom d'utilisateur associé aux informations d'identification.</summary>
      <returns>Mot de passe associé aux informations d'identification.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>Obtient ou définit le nom d'utilisateur associé aux informations d'identification.</summary>
      <returns>Nom d'utilisateur associé aux informations d'identification.</returns>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.OpenReadCompleted" />. </summary>
    </member>
    <member name="P:System.Net.OpenReadCompletedEventArgs.Result">
      <summary>Obtient un flux lisible qui contient les résultats de la méthode <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> qui contient les résultats de la méthode <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />.</returns>
      <exception cref="T:System.InvalidOperationException">La demande asynchrone a été annulée. </exception>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri)" /> de <see cref="T:System.Net.WebClient" />. </summary>
      <param name="sender">Source de l'événement. </param>
      <param name="e">
        <see cref="T:System.Net.OpenReadCompletedEventArgs" /> qui contient les données de l'événement. </param>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.OpenWriteCompleted" />.</summary>
    </member>
    <member name="P:System.Net.OpenWriteCompletedEventArgs.Result">
      <summary>Obtient un flux accessible en écriture qui est utilisé pour envoyer des données à un serveur.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> dans lequel vous pouvez écrire les données à télécharger.</returns>
      <exception cref="T:System.InvalidOperationException">La demande asynchrone a été annulée. </exception>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> de <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>Exception levée en cas d'erreur durant l'utilisation d'un protocole réseau.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.ProtocolViolationException" />.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.ProtocolViolationException" /> avec le message spécifié.</summary>
      <param name="message">Chaîne du message d'erreur.</param>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary>Stocke des informations sérialisées provenant de classes dérivées <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.SocketAddress" /> pour la famille d'adresses donnée.</summary>
      <param name="family">Valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.SocketAddress" /> à l'aide de la famille d'adresses et de la taille de mémoire tampon spécifiées.</summary>
      <param name="family">Valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="size">Valeur à définir pour la propriété <see cref="P:System.Net.SocketAddress.Size" /> qui affecte le nombre d'octets à allouer pour la mémoire tampon sous-jacente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> est inférieur à 2. Ces 2 octets sont nécessaires pour stocker <paramref name="family" />. </exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary>Détermine si le <see cref="T:System.Object" /> spécifié est égal à l'instance de <see cref="T:System.Net.SocketAddress" /> en cours. </summary>
      <returns>La valeur est true si les deux instances de <see cref="T:System.Net.SocketAddress" /> sont égales, sinon false.</returns>
      <param name="comparand">
        <see cref="T:System.Object" /> spécifié à comparer avec l'instance de <see cref="T:System.Net.SocketAddress" /> en cours.</param>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary>Obtient la valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" /> du <see cref="T:System.Net.SocketAddress" /> actuel.</summary>
      <returns>Une des valeurs énumérées <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary>Retourne une valeur de hachage pour <see cref="T:System.Net.SocketAddress" />. </summary>
      <returns>Valeur de hachage entier pour l'adresse de socket.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary>Obtient ou définit l'élément d'index spécifié dans la mémoire tampon sous-jacente.</summary>
      <returns>Valeur de l'élément d'index spécifié dans la mémoire tampon sous-jacente.</returns>
      <param name="offset">Élément d'index de tableau des informations désirées.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index spécifié n'existe pas dans la mémoire tampon (<paramref name="offset" /> est inférieur à 0 ou supérieur ou égal à la valeur de la propriété <see cref="P:System.Net.SocketAddress.Size" />).</exception>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary>Obtient la taille de mémoire tampon disponible qui peut être utilisée pour <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>Taille de la mémoire tampon, en octets, disponible pour <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary>Retourne une chaîne qui représente des informations sur l'adresse de socket.</summary>
      <returns>Chaîne qui contient des informations sur la structure <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.UploadProgressChanged" /> de <see cref="T:System.Net.WebClient" />.</summary>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesReceived">
      <summary>Obtient le nombre d'octets reçus.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> qui indique le nombre d'octets reçus.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesSent">
      <summary>Obtient le nombre d'octets envoyés.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> qui indique le nombre d'octets envoyés.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Obtient le nombre total d'octets dans une opération de transfert de données <see cref="T:System.Net.WebClient" />.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> indiquant le nombre d'octets qui seront reçus.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend">
      <summary>Obtient le nombre total d'octets à envoyer.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> indiquant le nombre d'octets qui seront envoyés.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Net.WebClient.UploadProgressChanged" /> de <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Net.UploadProgressChangedEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.UploadStringCompleted" />.</summary>
    </member>
    <member name="P:System.Net.UploadStringCompletedEventArgs.Result">
      <summary>Obtient la réponse du serveur à une opération de transfert de chaînes qui est lancée par l'appel à une méthode <see cref="Overload:System.Net.WebClient.UploadStringAsync" />.</summary>
      <returns>Tableau <see cref="T:System.Byte" /> qui contient la réponse du serveur.</returns>
      <exception cref="T:System.InvalidOperationException">La demande asynchrone a été annulée. </exception>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Net.WebClient.UploadStringCompleted" /> de <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Net.UploadStringCompletedEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Net.WebClient">
      <summary>Fournit des méthodes communes pour l'envoi de données à une ressource identifiée par un URI ou pour la réception de données en provenance de cette ressource.</summary>
    </member>
    <member name="M:System.Net.WebClient.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebClient" />. </summary>
    </member>
    <member name="P:System.Net.WebClient.AllowReadStreamBuffering">
      <summary>Obtient ou définit une valeur indiquant si les données lues à partir de la ressource Internet pour une instance <see cref="T:System.Net.WebClient" /> doivent être mises en mémoire tampon.</summary>
      <returns>La valeur est true pour activer la mise en mémoire tampon des données lues à partir de la ressource Internet ou false pour désactiver la mise en mémoire tampon. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Net.WebClient.AllowWriteStreamBuffering">
      <summary>Obtient ou définit une valeur qui indique si les données écrites vers la ressource Internet pour une instance <see cref="T:System.Net.WebClient" /> doivent être mises en mémoire tampon.</summary>
      <returns>La valeur est true pour activer la mise en mémoire tampon des données écrites dans la ressource Internet ou false pour désactiver la mise en mémoire tampon. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Net.WebClient.BaseAddress">
      <summary>Obtient ou définit l'URI de base pour les requêtes effectuées par <see cref="T:System.Net.WebClient" />.</summary>
      <returns>URI de base pour les requêtes effectuées par <see cref="T:System.Net.WebClient" />. Si aucune adresse de base n'a été spécifiée, la propriété <see cref="P:System.Net.WebClient.BaseAddress" /> est initialisée à l'adresse d'origine de l'application (l'URI absolu du Windows Phone XAP)...</returns>
      <exception cref="T:System.ArgumentException">La valeur de <see cref="P:System.Net.WebClient.BaseAddress" /> est un URI non valide. L'exception interne peut contenir des informations qui vous aideront à trouver l'erreur.</exception>
    </member>
    <member name="M:System.Net.WebClient.CancelAsync">
      <summary>Annule une opération asynchrone en attente. </summary>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="P:System.Net.WebClient.Credentials">
      <summary>Obtient ou définit les informations d'identification réseau envoyées à l'hôte et utilisées pour authentifier la demande.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> contenant les informations d'authentification pour la demande. La valeur par défaut est null.</returns>
    </member>
    <member name="E:System.Net.WebClient.DownloadProgressChanged">
      <summary>Se produit lorsqu'une opération de téléchargement asynchrone transfère avec succès une partie ou l'ensemble des données.</summary>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri)">
      <summary>Télécharge la ressource à l'<see cref="T:System.Uri" /> spécifié sous forme de chaîne.</summary>
      <param name="address">Emplacement de la ressource à télécharger.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)">
      <summary>Télécharge la ressource à l'<see cref="T:System.Uri" /> spécifié sous forme de chaîne.</summary>
      <param name="address">Emplacement de la ressource à télécharger.</param>
      <param name="userToken">Fournit un identificateur spécifié par l'utilisateur pour la tâche asynchrone. </param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="E:System.Net.WebClient.DownloadStringCompleted">
      <summary>Se produit lorsqu'une opération asynchrone de téléchargement de ressources est terminée. </summary>
    </member>
    <member name="P:System.Net.WebClient.Encoding">
      <summary>Obtient et définit le <see cref="T:System.Text.Encoding" /> utilisé pour transférer et télécharger des chaînes.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> qui est utilisé pour encoder des chaînes. La valeur par défaut de cette propriété est <see cref="P:System.Text.Encoding.UTF8" />.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur null a été passée pour définir cette propriété.</exception>
    </member>
    <member name="M:System.Net.WebClient.GetWebRequest(System.Uri)">
      <summary>Retourne un objet <see cref="T:System.Net.WebRequest" /> pour la ressource spécifiée.</summary>
      <returns>Nouvel objet <see cref="T:System.Net.WebRequest" /> pour la ressource spécifiée.</returns>
      <param name="address">
        <see cref="T:System.Uri" /> qui identifie la ressource à demander.</param>
    </member>
    <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>Retourne <see cref="T:System.Net.WebResponse" /> pour le <see cref="T:System.Net.WebRequest" /> spécifié à l'aide du <see cref="T:System.IAsyncResult" /> spécifié.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> contenant la réponse du <see cref="T:System.Net.WebRequest" /> spécifié.</returns>
      <param name="request">
        <see cref="T:System.Net.WebRequest" /> qui est utilisé pour obtenir la réponse.</param>
      <param name="result">Objet <see cref="T:System.IAsyncResult" /> obtenu d'un appel précédent à <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.Net.WebClient.Headers">
      <summary>Obtient ou définit une collection de paires nom/valeur d'en-tête associées à la requête.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant les paires nom/valeur d'en-tête associées à cette demande.</returns>
    </member>
    <member name="P:System.Net.WebClient.IsBusy">
      <summary>Obtient une valeur qui indique si une requête Web est en cours.</summary>
      <returns>La valeur est true pour indiquer qu'une requête Web est en cours, sinon false.</returns>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.DownloadProgressChanged" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.DownloadStringCompleted" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.OpenReadCompleted" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.OpenReadCompletedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.OpenWriteCompleted" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.UploadProgressChanged" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.UploadProgressChangedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.UploadStringCompleted" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.UploadStringCompletedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Net.WebClient.WriteStreamClosed" />.</summary>
      <param name="e">Objet <see cref="T:System.Net.WriteStreamClosedEventArgs" /> contenant des données d'événement.</param>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri)">
      <summary>Ouvre un flux accessible en lecture vers la ressource spécifiée.</summary>
      <param name="address">Emplacement de la ressource à télécharger.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)">
      <summary>Ouvre un flux accessible en lecture vers la ressource spécifiée.</summary>
      <param name="address">Emplacement de la ressource à télécharger.</param>
      <param name="userToken">Fournit un identificateur spécifié par l'utilisateur pour la tâche asynchrone. </param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="E:System.Net.WebClient.OpenReadCompleted">
      <summary>Se produit lorsqu'une opération asynchrone de lecture de ressources est terminée.</summary>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri)">
      <summary>Ouvre un flux pour l'écriture de données sur la ressource spécifiée. Cette méthode ne bloque pas le thread appelant.</summary>
      <param name="address">URI de la ressource devant recevoir les données. </param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)">
      <summary>Ouvre un flux pour l'écriture de données sur la ressource spécifiée. Cette méthode ne bloque pas le thread appelant.</summary>
      <param name="address">URI de la ressource devant recevoir les données. </param>
      <param name="method">Méthode utilisée pour envoyer les données à la ressource. Si la valeur est null, la valeur par défaut est POST pour HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)">
      <summary>Ouvre un flux pour écrire des données dans la ressource spécifiée, à l'aide de la méthode spécifiée. Cette méthode ne bloque pas le thread appelant.</summary>
      <param name="address">URI de la ressource devant recevoir les données.</param>
      <param name="method">Méthode utilisée pour envoyer les données à la ressource. Si la valeur est null, la valeur par défaut est POST pour HTTP.</param>
      <param name="userToken">Objet défini par l'utilisateur, passé à la fin de l'opération asynchrone à la méthode appelée.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
      <exception cref="T:System.Net.WebException">L’URI formé en combinant la propriété <see cref="P:System.Net.WebClient.BaseAddress" /> et <paramref name="address" /> n’est pas valide.– ou – Une erreur s'est produite lors de l'ouverture du flux. </exception>
    </member>
    <member name="E:System.Net.WebClient.OpenWriteCompleted">
      <summary>Se produit lors d'une opération asynchrone d'ouverture d'un flux pour écrire des données dans une ressource.</summary>
    </member>
    <member name="P:System.Net.WebClient.ResponseHeaders">
      <summary>Obtient une collection de paires nom/valeur d'en-tête associées à la réponse.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant des paires nom/valeur d'en-tête associées à la réponse ou null si aucune réponse n'a été reçue.</returns>
    </member>
    <member name="E:System.Net.WebClient.UploadProgressChanged">
      <summary>Se produit lorsqu'une opération de transfert asynchrone transmet avec succès une partie ou l'ensemble des données.</summary>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)">
      <summary>Transfère la chaîne spécifiée vers la ressource spécifiée. Cette méthode ne bloque pas le thread appelant.</summary>
      <param name="address">URI de la ressource devant recevoir le fichier. Pour les ressources HTTP, cet URI doit identifier une ressource capable d'accepter une demande envoyée à l'aide de la méthode POST, telle qu'un script ou une page ASP. </param>
      <param name="data">Chaîne à transférer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.– ou – <paramref name="data" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
      <exception cref="T:System.Net.WebException">L’URI formé en combinant la propriété <see cref="P:System.Net.WebClient.BaseAddress" /> et <paramref name="address" /> n’est pas valide.– ou – Il n'y avait pas de réponse du serveur hébergeant la ressource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)">
      <summary>Transfère la chaîne spécifiée vers la ressource spécifiée. Cette méthode ne bloque pas le thread appelant.</summary>
      <param name="address">URI de la ressource devant recevoir le fichier. Pour les ressources HTTP, cet URI doit identifier une ressource capable d'accepter une demande envoyée à l'aide de la méthode POST, telle qu'un script ou une page ASP.</param>
      <param name="method">Méthode HTTP utilisée pour envoyer le fichier à la ressource. Si la valeur est null, la valeur par défaut est POST pour HTTP.</param>
      <param name="data">Chaîne à transférer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.– ou – <paramref name="data" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
      <exception cref="T:System.Net.WebException">L’URI formé en combinant la propriété <see cref="P:System.Net.WebClient.BaseAddress" /> et <paramref name="address" /> n’est pas valide.– ou – Il n'y avait pas de réponse du serveur hébergeant la ressource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)">
      <summary>Transfère la chaîne spécifiée vers la ressource spécifiée. Cette méthode ne bloque pas le thread appelant.</summary>
      <param name="address">URI de la ressource devant recevoir le fichier. Pour les ressources HTTP, cet URI doit identifier une ressource capable d'accepter une demande envoyée à l'aide de la méthode POST, telle qu'un script ou une page ASP.</param>
      <param name="method">Méthode HTTP utilisée pour envoyer le fichier à la ressource. Si la valeur est null, la valeur par défaut est POST pour HTTP.</param>
      <param name="data">Chaîne à transférer.</param>
      <param name="userToken">Objet défini par l'utilisateur, passé à la fin de l'opération asynchrone à la méthode appelée.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="address" /> est null.– ou – <paramref name="data" /> est null.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire est insuffisante pour poursuivre l'exécution du programme.</exception>
      <exception cref="T:System.StackOverflowException">La capacité de la pile d'exécution est dépassée en raison d'un trop grand nombre d'appels à la méthode imbriquée.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Un appel a été passé à la méthode <see cref="M:System.Threading.Thread.Abort" /> pour la destruction d'un thread.</exception>
      <exception cref="T:System.Net.WebException">L’URI formé en combinant la propriété <see cref="P:System.Net.WebClient.BaseAddress" /> et <paramref name="address" /> n’est pas valide.– ou – Il n'y avait pas de réponse du serveur hébergeant la ressource.</exception>
    </member>
    <member name="E:System.Net.WebClient.UploadStringCompleted">
      <summary>Se produit lors d'une opération asynchrone de transfert de chaînes.</summary>
    </member>
    <member name="P:System.Net.WebClient.UseDefaultCredentials">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si les informations d'identification par défaut sont envoyées avec les requêtes.</summary>
      <returns>La valeur est true si les informations d'identification par défaut sont utilisées, sinon false. La valeur par défaut est true.</returns>
    </member>
    <member name="E:System.Net.WebClient.WriteStreamClosed">
      <summary>Se produit lorsqu'une opération d'écriture de flux asynchrone est terminée.</summary>
    </member>
    <member name="T:System.Net.WebException">
      <summary>Exception levée en cas d'erreur lors de l'accès au réseau via un protocole enfichable.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" />.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">Texte du message d'erreur. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur et l'exception imbriquée spécifiés.</summary>
      <param name="message">Texte du message d'erreur. </param>
      <param name="innerException">Une exception imbriquée. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur, l'exception imbriquée, l'état et la réponse spécifiés.</summary>
      <param name="message">Texte du message d'erreur.</param>
      <param name="status">Une des valeurs de <see cref="T:System.Net.WebExceptionStatus" />.</param>
      <param name="response">Instance de <see cref="T:System.Net.WebResponse" /> qui contient la réponse de l'hôte distant.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur et l'état spécifiés.</summary>
      <param name="message">Texte du message d'erreur. </param>
      <param name="status">Une des valeurs de <see cref="T:System.Net.WebExceptionStatus" />. </param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Obtient la réponse retournée par l'hôte distant.</summary>
      <returns>Instance de <see cref="T:System.Net.WebResponse" /> qui contient la réponse d'erreur issue d'une ressource Internet, lorsqu'une réponse est disponible à partir de cette ressource, sinon null.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Obtient l'état de la réponse.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.WebExceptionStatus" />.</returns>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Définit les codes d'état pour la classe <see cref="T:System.Net.WebException" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>Aucune erreur n'a été rencontrée.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>Le service de résolution des noms n'a pas pu résoudre le nom d'hôte. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>Le point de service distant n'a pas pu être contacté au niveau du transport.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>Une réponse complète n'a pas été reçue du serveur distant. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>Une demande complète n'a pas pu être envoyée au serveur distant.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>La demande était une demande canalisée en rafale et la connexion a été fermée avant la réception de la réponse. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>La demande a été annulée, la méthode <see cref="M:System.Net.WebRequest.Abort" /> a été appelée ou une erreur inclassable s'est produite. Il s'agit de la valeur par défaut pour <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>La réponse reçue du serveur était terminée, mais indiquait une erreur au niveau du protocole. Par exemple, une erreur de protocole HTTP telle que « 401 Accès refusé » utilise cet état. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>La connexion a été fermée prématurément. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>Un certificat de serveur n'a pas pu être validé. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>Une erreur s'est produite lors de l'établissement d'une connexion à l'aide de SSL. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>La réponse du serveur n'était pas une réponse HTTP valide. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>La connexion pour une demande qui spécifie l'en-tête Keep-alive a été fermée de manière inattendue. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>Une demande asynchrone interne est en attente.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>Aucune réponse n'a été reçue pendant le délai d'attente d'une demande. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>Le service de résolution des noms n'a pas pu résoudre le nom d'hôte du proxy. Non pris en charge. Présent dans Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>Une exception d'un type inconnu s'est produite.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>Le message reçu dépassait la limite spécifiée lors de l'envoi d'une demande ou de la réception d'une réponse du serveur.</summary>
    </member>
    <member name="T:System.Net.WebHeaderCollection">
      <summary>Contient des en-têtes de protocole associés à une demande ou à une réponse.</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebHeaderCollection" />.</summary>
    </member>
    <member name="P:System.Net.WebHeaderCollection.AllKeys">
      <summary>Obtient la collection de paires nom/valeur d'en-têtes associée à la requête.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant des paires nom/valeur d'en-tête associées à cette demande.</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Count">
      <summary>Obtient le nombre d'en-têtes de la collection.</summary>
      <returns>
        <see cref="T:System.Int32" /> qui indique le nombre d'en-têtes dans une <see cref="T:System.Net.WebHeaderCollection" /> associée à une requête.</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
      <summary>Obtient ou définit l'en-tête de demande spécifié.</summary>
      <returns>Instance de <see cref="T:System.String" /> qui contient la valeur d'en-tête spécifiée.</returns>
      <param name="header">Valeur de l'en-tête de demande.</param>
      <exception cref="T:System.InvalidOperationException">Sur une opération get ou set, l'en-tête de requête spécifié dans le paramètre <paramref name="header" /> est un en-tête restreint. La classe <see cref="T:System.Net.WebHeaderCollection" /> ne permet pas à un utilisateur d'obtenir ou de définir des instances de cet en-tête restreint dans cette instance <see cref="T:System.Net.WebHeaderCollection" />. </exception>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.String)">
      <summary>Obtient ou définit l'en-tête de demande spécifié.</summary>
      <returns>Instance de <see cref="T:System.String" /> qui contient la valeur d'en-tête spécifiée.</returns>
      <param name="name">Nom de l'en-tête demandé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> contient des caractères non conformes – ou –une tentative a été faite pour définir un en-tête restreint sur l'objet <see cref="T:System.Net.WebHeaderCollection" /> a associé à un objet <see cref="T:System.Net.HttpWebRequest" />.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> était null.</exception>
      <exception cref="T:System.InvalidOperationException">Sur une opération get ou set, l'en-tête de requête spécifié dans le paramètre <paramref name="name" /> est un en-tête restreint. La classe <see cref="T:System.Net.WebHeaderCollection" /> ne permet pas à un utilisateur d'obtenir ou de définir des instances de cet en-tête restreint dans cette instance <see cref="T:System.Net.WebHeaderCollection" />. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein de l'instance de <see cref="T:System.Net.WebHeaderCollection" />. </summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Net.WebHeaderCollection" />.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.ToString">
      <summary>Retourne un <see cref="T:System.String" /> qui représente le <see cref="T:System.Net.WebHeaderCollection" /> actuel.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Net.WebHeaderCollection" /> actif.</returns>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Lance une demande à un URI (Uniform Resource Identifier). Il s'agit d'une classe abstraite.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Abandonne la demande.</summary>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe descendante, fournit une méthode asynchrone de requête d'un flux.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la requête asynchrone.</returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet contenant les informations d'état de cette demande asynchrone.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe descendante, démarre une demande asynchrone pour une ressource Internet.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la requête asynchrone.</returns>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet contenant les informations d'état de cette demande asynchrone.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit la longueur des données de demande envoyées.</summary>
      <returns>Nombre d'octets de données de demande envoyé.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit le type de contenu des données de demande envoyées.</summary>
      <returns>Type de contenu des données de demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le schéma URI spécifié.</summary>
      <returns>Descendant <see cref="T:System.Net.WebRequest" /> pour le schéma URI spécifique.</returns>
      <param name="requestUriString">Chaîne URI qui identifie la ressource Internet.</param>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUriString" /> n'a pas été inscrit. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> est null. </exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation de se connecter à l'URI demandé ou à l'URI vers lequel est redirigée la demande. </exception>
      <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUriString" /> n’est pas un URI valide. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le schéma URI spécifié.</summary>
      <returns>Descendant <see cref="T:System.Net.WebRequest" /> pour le schéma URI spécifique.</returns>
      <param name="requestUri">
        <see cref="T:System.Uri" /> contenant l'URI de la ressource demandée.</param>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> n'a pas été inscrit. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> est null. </exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation de se connecter à l'URI demandé ou à l'URI vers lequel est redirigée la demande. </exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne URI spécifiée.</summary>
      <returns>Instance <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne URI spécifique.</returns>
      <param name="requestUriString">Chaîne URI qui identifie la ressource Internet. </param>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUriString" /> est le schéma http ou https. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> est null. </exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation de se connecter à l'URI demandé ou à l'URI vers lequel est redirigée la demande. </exception>
      <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUriString" /> n’est pas un URI valide. </exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour l'URI spécifié.</summary>
      <returns>Instance <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne URI spécifique.</returns>
      <param name="requestUri">URI qui identifie la ressource Internet.</param>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> est le schéma http ou https. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> est null. </exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation de se connecter à l'URI demandé ou à l'URI vers lequel est redirigée la demande. </exception>
      <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUri" /> n’est pas un URI valide. </exception>
    </member>
    <member name="P:System.Net.WebRequest.CreatorInstance">
      <summary>En cas de substitution dans une classe descendante, obtient l'objet de fabrique dérivé de la classe <see cref="T:System.Net.IWebRequestCreate" /> utilisée afin de créer la <see cref="T:System.Net.WebRequest" /> instanciée pour créer la requête à l'URI spécifié.</summary>
      <returns>Type <see cref="T:System.Net.WebRequest" /> dérivé retourné par la méthode <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit les informations d'identification réseau utilisées pour authentifier la demande auprès de la ressource Internet.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> contenant les informations d'authentification associées à la demande. La valeur par défaut est null.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> dans lequel écrire les données.</returns>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> qui fait référence à une demande d'un flux en attente.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.Net.WebResponse" />.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> qui contient une réponse à la demande Internet.</returns>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> qui fait référence à une demande de réponse en attente.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit la collection de paires nom/valeur d'en-tête associées à la demande.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant des paires nom/valeur d'en-tête associées à cette demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit la méthode de protocole à utiliser dans cette demande.</summary>
      <returns>Méthode de protocole utilisée dans cette demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si elle n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Inscrit un descendant <see cref="T:System.Net.WebRequest" /> pour l'URI spécifié.</summary>
      <returns>La valeur est true si l'enregistrement est réussi ; sinon false.</returns>
      <param name="prefix">URI complet ou préfixe URI pris en charge par le descendant <see cref="T:System.Net.WebRequest" />.</param>
      <param name="creator">Méthode de création appelée par <see cref="T:System.Net.WebRequest" /> pour créer le descendant <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> a la valeur null.– ou – <paramref name="creator" /> est null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="prefix" /> est inconnu ou n'est pas pris en charge.</exception>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>En cas de substitution dans une classe descendante, obtient l'URI de la ressource Internet associée à la demande.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui représente la ressource associée à la demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si les informations d'identification par défaut sont envoyés avec les demandes.</summary>
      <returns>La valeur est true si les informations d'identification par défaut sont utilisées, sinon false. Pour les demandes créées à l'aide de la pile <see cref="P:System.Net.Browser.WebRequestCreator.ClientHttp" />, la valeur par défaut est false.</returns>
      <exception cref="T:System.NotImplementedException">Cette propriété n'est pas implémentée.</exception>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Fournit une réponse provenant d'un URI (Uniform Resource Identifier). Il s'agit d'une classe abstraite.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>En cas de substitution par une classe descendante, ferme le flux de réponse.</summary>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la longueur du contenu des données reçues.</summary>
      <returns>Nombre d'octets retournés par la ressource Internet.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le type de contenu des données reçues.</summary>
      <returns>Chaîne qui contient le type de contenu de la réponse.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>En cas de substitution dans une classe dérivée, retourne le flux de données de la ressource Internet.</summary>
      <returns>Instance de la classe <see cref="T:System.IO.Stream" /> pour la lecture de données de la ressource Internet.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>En cas de substitution dans une classe dérivée, obtient une collection de paires nom-valeur d'en-tête associées à cette demande.</summary>
      <returns>Instance de la classe <see cref="T:System.Net.WebHeaderCollection" /> qui contient les valeurs d'en-tête associées à cette réponse.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de la ressource Internet qui a réellement répondu à la demande.</summary>
      <returns>Instance de la classe <see cref="T:System.Uri" /> qui contient l'URI de la ressource Internet qui a réellement répondu à la demande.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n'est pas substituée dans une classe descendante. </exception>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>Obtient une valeur qui indique si la propriété <see cref="P:System.Net.WebResponse.Headers" /> est prise en charge par la classe descendante pour l'instance <see cref="T:System.Net.WebResponse" />.</summary>
      <returns>La valeur est true si la propriété <see cref="P:System.Net.WebResponse.Headers" /> est prise en charge par l'instance <see cref="T:System.Net.HttpWebRequest" /> de la classe descendante, sinon false.</returns>
    </member>
    <member name="T:System.Net.WriteStreamClosedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Net.WebClient.WriteStreamClosed" />.</summary>
    </member>
    <member name="P:System.Net.WriteStreamClosedEventArgs.Error">
      <summary>Obtient l'erreur associée à un événement <see cref="E:System.Net.WebClient.WriteStreamClosed" />.</summary>
      <returns>Exception associée à un événement <see cref="E:System.Net.WebClient.WriteStreamClosed" /> lorsqu'une erreur se produit.</returns>
    </member>
    <member name="T:System.Net.WriteStreamClosedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Net.WebClient.WriteStreamClosed" /> de <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Net.WriteStreamClosedEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkAddressChangedEventHandler">
      <summary>Référence une ou plusieurs méthodes à appeler lorsque l'adresse d'une interface réseau change.</summary>
      <param name="sender">Source de l'événement. </param>
      <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient des données relatives à l'événement. </param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkChange">
      <summary>Permet à des applications de recevoir une notification lorsque l'adresse IP (Internet Protocol) d'une interface réseau (ou carte réseau) change.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkChange.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.NetworkChange" />.</summary>
    </member>
    <member name="E:System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged">
      <summary>Se produit lorsque l'adresse IP d'une interface réseau change.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterface">
      <summary>Fournit des informations de disponibilité pour une interface réseau.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable">
      <summary>Indique si une connexion réseau est disponible.</summary>
      <returns>true si une connexion réseau est disponible, sinon false.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary>Spécifie le schéma d'adressage pouvant être utilisé par une instance de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary>Famille d'adresses inconnue.N'est pas pris en charge pour une utilisation avec l'application Windows Phone.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary>Aucune famille d'adresses n'a été spécifiée.N'est pas pris en charge pour une utilisation avec l'application Windows Phone.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary>Adresse IP version 4. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary>Adresse IP version 6.N'est pas pris en charge pour une utilisation avec l'application Windows Phone.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Spécifie le protocole pris en charge par la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Protocole TCP (Transmission Control Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>UDP (User Datagram Protocol). Ce type de protocole n'est pas pris en charge sur Windows Phone. </summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Le type de protocole n'est pas spécifié.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Type de protocole inconnu. </summary>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implémente l'interface de sockets Berkeley.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.Socket" /> à l'aide de la famille d'adresses, du type de socket et du protocole spécifiés.</summary>
      <param name="addressFamily">Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="socketType">Une des valeurs de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Une des valeurs de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.ArgumentException">Un paramètre n'était pas valide. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">La combinaison de <paramref name="addressFamily" />, <paramref name="socketType" /> et <paramref name="protocolType" /> crée un socket non valide. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</summary>
      <returns>Renvoie la valeur true si l'opération est en attente. L'événement SocketAsyncEventArgs.Completed sur le paramètre e va être déclenché à la fin de l'opération. Renvoie false si l'opération est terminée de manière synchrone. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre e ne sera pas déclenché et l'objet e transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Obtient la famille d'adresses de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Associe un socket à un point de terminaison local spécifique. Vous n'avez pas besoin d'appeler Bind avant d'utiliser la méthode <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />, à moins que vous n'ayez besoin d'utiliser un point de terminaison local spécifique.</summary>
      <param name="localEP">
        <see cref="T:System.Net.EndPoint" /> local à associer à <see cref="T:System.Net.Sockets.Socket" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Annule une opération de socket asynchrone en attente pour une connexion d'hôte distant.</summary>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> pour l'opération de socket asynchrone qui doit être annulée.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> est null. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Ferme la connexion <see cref="T:System.Net.Sockets.Socket" /> et libère toutes les ressources associées.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Ferme la connexion <see cref="T:System.Net.Sockets.Socket" /> et libère toutes les ressources associées avec un délai d'attente spécifié pour permettre l'envoi des données en file d'attente.</summary>
      <param name="timeout">Durée d'attente maximale, en secondes, pour envoyer les données restantes, puis fermer le <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> est inférieur à 0. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Démarre une demande asynchrone pour une connexion d'hôte distant.</summary>
      <returns>Renvoie la valeur true si l'opération d'E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée. Renvoie la valeur false si l'opération d'E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> de l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> n'est pas déclenché. L'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <exception cref="T:System.ArgumentException">Un argument n'est pas valide. Cette exception se produit si plusieurs mémoires tampons sont spécifiées, la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas null. </exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> est à l'écoute ou une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode. Cette exception se produit également si les familles d'adresses de <see cref="T:System.Net.Sockets.Socket" /> et de <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne sont pas les mêmes.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
      <exception cref="T:System.Security.SecurityException">Un appelant situé plus haut dans la pile des appels n'a pas l'autorisation pour l'opération demandée.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Démarre une demande asynchrone pour une connexion d'hôte distant.</summary>
      <returns>Renvoie la valeur true si l'opération d'E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée. Renvoie la valeur false si l'opération d'E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> de l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> n'est pas déclenché. L'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="socketType">Type de socket à utiliser pour établir la connexion.</param>
      <param name="protocolType">Type de protocole à utiliser pour établir la connexion.</param>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <exception cref="T:System.ArgumentException">Un argument n'est pas valide. Cette exception se produit si plusieurs mémoires tampons sont spécifiées, la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas null. </exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> est à l'écoute ou une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode. Cette exception se produit également si les familles d'adresses de <see cref="T:System.Net.Sockets.Socket" /> et de <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne sont pas les mêmes.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
      <exception cref="T:System.Security.SecurityException">Un appelant situé plus haut dans la pile des appels n'a pas l'autorisation pour l'opération demandée.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Net.Sockets.Socket" /> est connecté à un hôte distant depuis la dernière opération.</summary>
      <returns>La valeur est true si <see cref="T:System.Net.Sockets.Socket" /> était connecté à une ressource distante lors de l'opération la plus récente, sinon false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Sockets.Socket" /> et supprime éventuellement les ressources managées.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Sockets.Socket" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">La valeur est true pour libérer les ressources managées et non managées, ou false pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Écoute les tentatives de connexions entrantes.</summary>
      <param name="backlog">Longueur maximale de la file d'attente des connexions en attente.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Obtient le point de terminaison local contenant l'adresse IP locale et le numéro de port auxquels le socket est lié. Il s'agit du point de terminaison utilisant le socket pour les communications.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> que <see cref="T:System.Net.Sockets.Socket" /> utilise pour les communications.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si le <see cref="T:System.Net.Sockets.Socket" /> utilise l'algorithme Nagle.</summary>
      <returns>La valeur est false si <see cref="T:System.Net.Sockets.Socket" /> utilise l'algorithme Nagle, sinon true. La valeur par défaut est false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />. Pour plus d'informations, consultez la section Notes. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Obtient une valeur indiquant si la prise en charge d'IPv4 est disponible et active sur l'hôte en cours.</summary>
      <returns>La valeur est true si l'hôte en cours prend en charge le protocole IPv4, sinon false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Obtient une valeur qui indique si la prise en charge d'IPv6 est disponible et active sur l'hôte en cours.</summary>
      <returns>La valeur est true si l'hôte en cours prend en charge le protocole IPv4, sinon false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Obtient le type de protocole de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.Sockets.ProtocolType" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Démarre une demande asynchrone pour recevoir les données d'un objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <returns>Renvoie la valeur true si l'opération d'E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée. Renvoie la valeur false si l'opération d'E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> de l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> n'est pas déclenché. L'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> dans le paramètre <paramref name="e" /> peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <exception cref="T:System.ArgumentException">Un argument n'était pas valide. La propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ou <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> sur l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre de <paramref name="e" /> doit référencer des mémoires tampons valides. L'une ou l'autre de ces propriétés peut être définie, mais pas les deux à la fois.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur d'une option de socket interne associée au <see cref="T:System.Net.Sockets.Socket" /> était incorrecte.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Obtient ou définit une valeur spécifiant la taille de la mémoire tampon de réception de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> contenant la taille de la mémoire tampon de réception en octets. La valeur par défaut est 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure à 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Démarre une demande asynchrone pour recevoir les données d'un hôte distant spécifique.</summary>
      <returns>Renvoie la valeur true si l'opération d'E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.Renvoie la valeur false si l'opération d'E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Obtient le point de terminaison distant.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> avec lequel <see cref="T:System.Net.Sockets.Socket" /> communique.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envoie des données de façon asynchrone à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <returns>Renvoie la valeur true si l'opération d'E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée. Renvoie la valeur false si l'opération d'E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> de l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> n'est pas déclenché. L'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ou <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> sur l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre de <paramref name="e" /> doit référencer des mémoires tampons valides. L'une ou l'autre de ces propriétés peut être définie, mais pas les deux à la fois.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur d'une option de socket interne associée au <see cref="T:System.Net.Sockets.Socket" /> était incorrecte.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> passé dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> n'est pas encore connecté.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Obtient ou définit une valeur spécifiant la taille de la mémoire tampon d'envoi de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> contenant la taille de la mémoire tampon d'envoi en octets. La valeur par défaut est 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure à 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envoie des données de façon asynchrone à un hôte distant spécifique.</summary>
      <returns>Renvoie la valeur true si l'opération d'E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.Renvoie la valeur false si l'opération d'E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <param name="e">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Cette erreur peut se produire si le socket spécifié est orienté connexion et de type <see cref="F:System.Net.Sockets.SocketType.Stream" />, mais que le <see cref="T:System.Net.Sockets.Socket" /> n’est pas encore connecté.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Désactive les envois et les réceptions sur un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">Une des valeurs de <see cref="T:System.Net.Sockets.SocketShutdown" /> spécifiant l'opération qui ne sera plus autorisée.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Obtient ou définit une valeur qui spécifie la durée de vie des paquets IP (Internet Protocol) envoyés par <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Durée de vie.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La durée de vie ne peut pas avoir une valeur inférieure à 0.</exception>
      <exception cref="T:System.NotSupportedException">Cette propriété ne peut être définie que pour les sockets dans les familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé. </exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Représente une opération de socket asynchrone.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Crée une instance <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> vide.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Obtient ou définit le socket à utiliser ou le socket créé pour accepter une connexion avec une méthode de socket asynchrone.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> à utiliser ou socket créé pour accepter une connexion avec une méthode de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Obtient la mémoire tampon des données à utiliser avec une méthode de socket asynchrone.</summary>
      <returns>Tableau <see cref="T:System.Byte" /> qui représente la mémoire tampon des données à utiliser avec une méthode de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Obtient ou définit un tableau de la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</summary>
      <returns>Tableau de mémoires tampons de données à utiliser avec une méthode de socket asynchrone.</returns>
      <exception cref="T:System.ArgumentException">Des mémoires tampon ambiguës sont spécifiées sur une opération ensembliste. Cette exception se produit si une valeur autre que Null est passée et que la valeur de la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ne soit pas non plus Null.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Obtient le nombre d'octets transférés dans l'opération de socket.</summary>
      <returns>Nombre d'octets transférés dans l'opération de socket.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>Événement qui indique qu'une opération asynchrone est effectuée.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Obtient l'exception dans le cas d'un échec de connexion lorsqu'un <see cref="T:System.Net.DnsEndPoint" /> a été utilisé.</summary>
      <returns>
        <see cref="T:System.Exception" /> qui indique la cause de l'erreur de connexion lorsqu'un <see cref="T:System.Net.DnsEndPoint" /> a été spécifié pour la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>Objet <see cref="T:System.Net.Sockets.Socket" /> créé et connecté après l'exécution correcte de la méthode <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</summary>
      <returns>Objet <see cref="T:System.Net.Sockets.Socket" /> connecté. </returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Obtient la quantité maximale de données, en octets, à envoyer ou recevoir dans une opération asynchrone.</summary>
      <returns>Quantité maximale de données, en octets, à envoyer ou à recevoir.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Libère les ressources non managées utilisées par l'instance <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> et supprime éventuellement les ressources managées.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Obtient le type d'opération de socket exécuté le plus récemment avec cet objet.</summary>
      <returns>Type d'opération de socket exécuté le plus récemment avec cet objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Obtient l'offset, en octets, dans la mémoire tampon de données référencée par la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</summary>
      <returns>Offset, en octets, dans la mémoire tampon de données référencée par la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Représente une méthode qui est appelée lorsqu'une opération asynchrone se termine.</summary>
      <param name="e">Événement qui est signalé.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Obtient ou définit le point de terminaison IP ou DNS distant d'une opération asynchrone.</summary>
      <returns>Point de terminaison IP distant d'une opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Définit la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</summary>
      <param name="buffer">Mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</param>
      <param name="offset">Offset, en octets, dans la mémoire tampon de données où l'opération démarre.</param>
      <param name="count">Quantité maximale de données, en octets, à envoyer ou à recevoir dans la mémoire tampon.</param>
      <exception cref="T:System.ArgumentException">Des mémoires tampons ambiguës sont spécifiées. Cette exception se produit si la valeur des propriétés <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argument est hors limites. Cette exception se produit si le paramètre <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Cette exception se produit également si le paramètre <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> moins le paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Définit la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</summary>
      <param name="offset">Offset, en octets, dans la mémoire tampon de données où l'opération démarre.</param>
      <param name="count">Quantité maximale de données, en octets, à envoyer ou à recevoir dans la mémoire tampon.</param>
      <exception cref="T:System.ArgumentException">Des mémoires tampons ambiguës sont spécifiées. Cette exception se produit si la valeur des propriétés <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argument est hors limites. Cette exception se produit si le paramètre <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Cette exception se produit également si le paramètre <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> moins le paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Obtient ou définit le résultat de l'opération de socket asynchrone.</summary>
      <returns>Résultat de l'opération de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Obtient ou définit un objet utilisateur ou application associé à cette opération de socket asynchrone.</summary>
      <returns>Objet qui représente l'objet utilisateur ou application associé à cette opération de socket asynchrone.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>Type d'opération de socket asynchrone exécutée le plus récemment avec cet objet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>Aucune des opérations de socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>Opération Accept du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>Opération Connect du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>Opération Receive du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>Opération ReceiveFrom du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>Opération Send du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>Opération SendTo du socket.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary>Définit les codes d'erreur pour la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary>L'opération <see cref="T:System.Net.Sockets.Socket" /> a réussi.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary>Une erreur <see cref="T:System.Net.Sockets.Socket" /> non spécifiée s'est produite.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary>Un appel <see cref="T:System.Net.Sockets.Socket" /> bloquant a été annulé.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary>Une tentative d'accès à un <see cref="T:System.Net.Sockets.Socket" /> a été effectuée d'une manière interdite par ses autorisations d'accès.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary>Une adresse de pointeur non valide a été détectée par le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary>Un argument non valide a été fourni à un membre <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary>Trop de sockets sont ouverts dans le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary>Une opération sur un socket non bloquant ne peut pas être effectuée immédiatement.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary>Une opération de blocage est en cours d'exécution.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary>Le <see cref="T:System.Net.Sockets.Socket" /> non bloquant a déjà une opération en cours.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary>Une opération <see cref="T:System.Net.Sockets.Socket" /> a été tentée sur un objet autre qu'un socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary>Une adresse nécessaire a été omise d'une opération sur un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary>Le datagramme est trop long.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary>Le type de protocole est incorrect pour ce <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary>Une option ou un niveau inconnu, non valide ou non pris en charge a été utilisé avec <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary>Le protocole n'est pas implémenté ou n'est pas configuré.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary>La prise en charge du type de socket spécifié n'existe pas dans cette famille d'adresses.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary>La famille d'adresses n'est pas prise en charge par la famille de protocoles.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary>La famille de protocoles n'est pas implémentée ou n'est pas configurée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary>La famille d'adresses indiquée n'est pas prise en charge. Cette erreur est retournée si la famille d'adresses IPv6 a été spécifiée et que la pile IPv6 ne soit pas installée sur l'ordinateur local. Cette erreur est retournée si la famille d'adresses IPv4 a été spécifiée et que la pile IPv4 ne soit pas installée sur l'ordinateur local.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary>Une seule utilisation d'une adresse est normalement autorisée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary>L'adresse IP sélectionnée n'est pas valide dans ce contexte.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary>Le réseau n'est pas disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary>Il n'existe aucun itinéraire vers l'hôte distant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary>L'application a essayé de définir une option sur une connexion dont le délai d'attente est déjà dépassé.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary>La connexion a été abandonnée par le .NET Framework ou le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary>La connexion a été réinitialisée par le pair distant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary>Aucun espace de mémoire tampon libre n'est disponible pour une opération <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> est déjà connecté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary>L'application a essayé d'envoyer ou de recevoir des données et <see cref="T:System.Net.Sockets.Socket" /> n'est pas connecté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary>Une demande d'envoi ou de réception de données a été interdite car <see cref="T:System.Net.Sockets.Socket" /> a déjà été arrêté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary>Le délai pour la tentative de connexion a expiré ou l'hôte connecté n'a pas pu répondre.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary>L'hôte distant refuse expressément une connexion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary>L'opération a échoué parce que l'hôte distant ne fonctionne pas.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary>Il n'existe aucun itinéraire de réseau vers l'hôte spécifié.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary>Trop de processus utilisent le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary>Le sous-système réseau n'est pas disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary>La version du fournisseur de sockets sous-jacent est hors limites.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary>Le fournisseur de sockets sous-jacent n'a pas été initialisé.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary>Un arrêt correct est en cours.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary>La classe spécifiée est introuvable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary>Hôte inconnu. Le nom n'est pas un nom d'hôte officiel ni un alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary>Le nom de l'hôte n'a pas pu être résolu. Réessayez ultérieurement.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary>L'erreur est irrécupérable ou la base de données demandée est introuvable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary>Le nom ou l'adresse IP demandés n'ont pas été trouvés sur le serveur de noms.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary>L'application a initialisé une opération avec chevauchement qui ne peut pas être achevée immédiatement.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary>L'opération avec chevauchement a été abandonnée en raison de la fermeture du <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary>Exception levée lorsqu'une erreur de socket se produit.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SocketException" /> avec le dernier code d'erreur du système d'exploitation.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SocketException" /> avec le code d'erreur spécifié.</summary>
      <param name="errorCode">Code d'erreur qui indique l'erreur qui s'est produite.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary>Obtient le code d'erreur associé à cette exception.</summary>
      <returns>Code d'erreur entier associé à cette exception.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary>Obtient le code d'erreur associé à cette exception.</summary>
      <returns>Instance <see cref="T:System.Net.Sockets.SocketError" /> associée à cette exception.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Définit les constantes qui sont utilisées par la méthode <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Désactive <see cref="T:System.Net.Sockets.Socket" /> pour la réception.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Désactive <see cref="T:System.Net.Sockets.Socket" /> pour l'envoi.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Désactive <see cref="T:System.Net.Sockets.Socket" /> pour l'envoi et la réception.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Spécifie le type de socket que représente une instance de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Type de socket qui prend en charge les flux d'octets fiables, bidirectionnels, orientés connexion sans la duplication de données et sans préservation de limites. Un <see cref="T:System.Net.Sockets.Socket" /> de ce type communique avec un homologue unique et nécessite une connexion d'hôte distant avant que la communication puisse débuter. Ce type de socket utilise le protocole TCP (<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) et <see cref="T:System.Net.Sockets.AddressFamily" />.peut être <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Prend en charge des datagrammes, qui sont des messages peu fiables, sans connexion, d'une longueur maximale fixe (généralement réduite). Des messages pourraient être perdus ou dupliqués et arriver dans le désordre. Un socket de type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> ne requiert aucune connexion avant d'envoyer et de recevoir des données, et peut communiquer avec plusieurs homologues. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> utilise le protocole UDP (<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) et le <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /><see cref="T:System.Net.Sockets.AddressFamily" />. Cette valeur n'est pas prise en charge pour Windows Phone.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Type Socket inconnu.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpAnySourceMulticastClient">
      <summary>Récepteur client pour le trafic multicast de toutes les sources, également appelé Any Source Multicast (ASM) ou Internet Standard Multicast (ISM).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Crée un client UDP (User Datagram Protocol) <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> qui peut s'abonner à une adresse de groupe et recevoir des datagrammes de toutes les sources.</summary>
      <param name="groupAddress">Adresse de groupe multicast à laquelle ce récepteur doit s'abonner.</param>
      <param name="localPort">Port local pour ce récepteur avec lequel établir une liaison.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupAddress" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> est inférieur à 0.– ou –<paramref name="localPort" /> est supérieur à 65 535.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> est inférieur à 1 024.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>Lie le socket et commence une opération de jointure au groupe multicast pour autoriser la réception de datagrammes provenant de tous les participants de groupe.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast a déjà été joint ou une opération de jointure est actuellement en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Commence l'opération de réception d'un paquet provenant du groupe multicast joint et appelle le rappel spécifié lorsqu'un paquet est arrivé sur le groupe en provenance de l'un des expéditeurs.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="buffer">Mémoire tampon dans laquelle stocker les données reçues.</param>
      <param name="offset">Offset, en octets, du début de <paramref name="buffer" /> où les données doivent être stockées.</param>
      <param name="count">Nombre maximal d'octets à recevoir et à stocker dans le <paramref name="buffer" />. </param>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à 0.– ou –La valeur de <paramref name="offset" /> est supérieure à la longueur de <paramref name="buffer" />.– ou –<paramref name="count" /> est inférieur à 0.– ou – La somme des valeurs de <paramref name="offset" /> et de <paramref name="count" /> est supérieure à la longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket en vue de son envoi. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Commence l'opération d'envoi d'un paquet monodiffusion à la destination spécifiée.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="buffer">Mémoire tampon qui contient les données à envoyer.</param>
      <param name="offset">Offset, en octets, du début de <paramref name="buffer" /> pour lire les données à envoyer.</param>
      <param name="count">Nombre d'octets à envoyer à partir de <paramref name="buffer" />.</param>
      <param name="remoteEndPoint">Point de terminaison distant auquel le paquet doit être envoyé.</param>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à 0.– ou –La valeur de <paramref name="offset" /> est supérieure à la longueur de <paramref name="buffer" />.– ou –<paramref name="count" /> est inférieur à 0.– ou – La somme des valeurs de <paramref name="offset" /> et de <paramref name="count" /> est supérieure à la longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket en vue de son envoi. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Commence l'opération d'envoi d'un paquet à un groupe multicast joint et appelle le rappel spécifié lorsqu'un paquet a été envoyé au groupe.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="buffer">Mémoire tampon qui contient les données à envoyer.</param>
      <param name="offset">Offset, en octets, du début de <paramref name="buffer" /> pour lire les données à envoyer.</param>
      <param name="count">Nombre d'octets à envoyer à partir de <paramref name="buffer" />.</param>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à 0.– ou –La valeur de <paramref name="offset" /> est supérieure à la longueur de <paramref name="buffer" />.– ou –<paramref name="count" /> est inférieur à 0.– ou – La somme des valeurs de <paramref name="offset" /> et de <paramref name="count" /> est supérieure à la longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket en vue de son envoi. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
      <summary>Bloque une source afin que les paquets multicast provenant de celle-ci ne soient plus reçus.</summary>
      <param name="sourceAddress">Adresse de la source à bloquer.</param>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
      <summary>Quitte le groupe multicast et libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> et du <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>Termine l'opération d'envoi de groupe de jointure asynchrone à un groupe multicast.</summary>
      <param name="result">Résultat de l'opération de jointure asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Termine l'opération asynchrone de réception d'un paquet provenant du groupe multicast joint et fournit les informations reçues.</summary>
      <returns>Longueur, en octets, du message stocké dans le paramètre <paramref name="buffer" /> passé à la méthode <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
      <param name="result">Résultat de l'opération de réception asynchrone.</param>
      <param name="source">Point de terminaison source duquel le paquet a été reçu.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
      <summary>Termine l'opération d'envoi d'un paquet monodiffusion à la destination spécifiée.</summary>
      <param name="result">Résultat de l'opération d'envoi asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
      <summary>Termine l'opération d'envoi d'un paquet à un groupe multicast.</summary>
      <param name="result">Résultat de l'opération d'envoi asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Finalize">
      <summary>Libère les ressources détenues par la classe <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> actuelle.</summary>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
      <summary>Obtient ou définit une valeur spécifiant si les paquets multicast sortants sont remis à l'application émettrice.</summary>
      <returns>Valeur qui indique si des paquets sortants envoyés à un groupe multicast sont remis à l'application émettrice.</returns>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
      <summary>Obtient ou définit la taille, en octets, de la mémoire tampon de réception du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations de réception multicast sur cette instance <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />. </summary>
      <returns>Taille, en octets, de la mémoire tampon de réception.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La taille de mémoire tampon spécifiée est inférieure à 0.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
      <summary>Obtient ou définit la taille, en octets, de la mémoire tampon d'envoi du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations d'envoi multicast sur cette instance <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />.</summary>
      <returns>Taille, en octets, de la mémoire tampon d'envoi.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La taille de mémoire tampon spécifiée est inférieure à 0.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
      <summary>Débloque une source précédemment bloquée par un appel de la méthode <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />, afin que les paquets multicast provenant de celui-ci puissent être reçus.</summary>
      <param name="sourceAddress">Adresse de la source à débloquer.</param>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
      <summary>Récepteur client pour le trafic multicast d'une source unique, également appelé Source Specific Multicast (SSM).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
      <summary>Crée un client UDP (User Datagram Protocol) <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> qui peut s'abonner à une adresse de groupe et recevoir des datagrammes d'une source unique.</summary>
      <param name="sourceAddress">Adresse source de l'expéditeur pour ce récepteur à laquelle s'abonner.</param>
      <param name="groupAddress">Adresse de groupe multicast à laquelle ce récepteur doit s'abonner.</param>
      <param name="localPort">Port local pour ce récepteur avec lequel établir une liaison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceAddress" /> et <paramref name="groupAddress" /> doivent être de la même famille d'adresses.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceAddress" /> est null.– ou –<paramref name="groupAddress" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> est inférieur à 0.– ou –<paramref name="localPort" /> est supérieur à 65 535.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> est inférieur à 1 024.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>Lie le socket et commence une opération de jointure au groupe multicast pour autoriser la réception de datagrammes provenant d'une adresse source unique.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast a déjà été joint ou une opération de jointure est actuellement en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Commence l'opération de réception d'un paquet provenant du groupe multicast joint et appelle le rappel spécifié lorsqu'un paquet est arrivé sur le groupe en provenance d'un expéditeur spécifié.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="buffer">Mémoire tampon dans laquelle stocker les données reçues.</param>
      <param name="offset">Offset, en octets, du début de <paramref name="buffer" /> où les données doivent être stockées.</param>
      <param name="count">Nombre maximal d'octets à recevoir et à stocker dans le <paramref name="buffer" />. </param>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à 0.– ou –La valeur de <paramref name="offset" /> est supérieure à la longueur de <paramref name="buffer" />.– ou –<paramref name="count" /> est inférieur à 0.– ou – La somme des valeurs de <paramref name="offset" /> et de <paramref name="count" /> est supérieure à la longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket pour la réception. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Commence l'opération d'envoi d'un paquet monodiffusion à la source précédemment spécifiée.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui référence cette opération.</returns>
      <param name="buffer">Mémoire tampon qui contient les données à envoyer.</param>
      <param name="offset">Offset, en octets, du début de <paramref name="buffer" /> pour lire les données à envoyer.</param>
      <param name="count">Nombre d'octets à envoyer à partir de <paramref name="buffer" />.</param>
      <param name="remotePort">Port distant auquel le paquet doit être envoyé. L'adresse distante est spécifiée par le constructeur <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />.</param>
      <param name="callback">Méthode de rappel à appeler lorsque l'opération se termine.</param>
      <param name="state">Informations d'état facultatives à transmettre à la méthode <paramref name="callback" /> pour cette opération.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> est inférieur à 0.– ou –La valeur de <paramref name="offset" /> est supérieure à la longueur de <paramref name="buffer" />.– ou –<paramref name="count" /> est inférieur à 0.– ou – La somme des valeurs de <paramref name="offset" /> et de <paramref name="count" /> est supérieure à la longueur de <paramref name="buffer" />.<paramref name="remotePort" /> est inférieur à 0.– ou –<paramref name="remotePort" /> est supérieur à 65 535.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket en vue de son envoi. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
      <summary>Quitte le groupe multicast et libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> et du <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>Termine l'opération d'envoi de groupe de jointure asynchrone à un groupe multicast.</summary>
      <param name="result">Résultat de l'opération de jointure asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
      <summary>Termine l'opération asynchrone de réception d'un paquet provenant du groupe multicast joint et fournit les informations reçues d'un expéditeur spécifié.</summary>
      <returns>Longueur, en octets, du message stocké dans le paramètre <paramref name="buffer" /> passé à la méthode <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
      <param name="result">Résultat de l'opération de réception asynchrone.</param>
      <param name="sourcePort">Port source duquel le paquet a été reçu.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
      <summary>Termine l'opération d'envoi d'un paquet monodiffusion à une source unique.</summary>
      <param name="result">Résultat de l'opération d'envoi asynchrone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Une erreur s'est produite lors de la tentative d'accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Finalize">
      <summary>Libère les ressources détenues par la classe <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> actuelle.</summary>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
      <summary>Obtient ou définit la taille, en octets, de la mémoire tampon de réception du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations de réception multicast sur cette instance <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
      <returns>Taille, en octets, de la mémoire tampon de réception.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La taille de mémoire tampon spécifiée est inférieure à 0.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
      <summary>Obtient ou définit la taille, en octets, de la mémoire tampon d'envoi du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations d'envoi multicast sur cette instance <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
      <returns>Taille, en octets, de la mémoire tampon d'envoi.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La taille de mémoire tampon spécifiée est inférieure à 0.</exception>
      <exception cref="T:System.InvalidOperationException">Le groupe multicast n'a pas encore été joint.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé. </exception>
    </member>
  </members>
</doc>