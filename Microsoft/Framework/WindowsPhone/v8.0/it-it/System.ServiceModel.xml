<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Fornisce un insieme i cui elementi sono tipi che fungono da chiavi.</summary>
      <typeparam name="TItem">Tipi di elementi contenuti nell'insieme che fungono anche come chiavi per l'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Restituisce il primo elemento dell'insieme di un tipo specificato.</summary>
      <returns>Oggetto del tipo <paramref name="T" /> se è un tipo di riferimento e valore del tipo <paramref name="T" /> se è un tipo di valore. Se l'insieme non contiene alcun oggetto di tipo <paramref name="T" />, viene restituito il valore predefinito del tipo; se si tratta di un tipo di riferimento viene restituito null, se si tratta di un tipo di valore viene restituito 0.</returns>
      <typeparam name="T">Tipo di elemento nell'insieme da trovare.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Restituisce un insieme di oggetti di tipo <paramref name="T" /> contenuti in <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tipo <paramref name="T" /> che contiene gli oggetti di tipo <paramref name="T" /> dall'insieme originale.</returns>
      <typeparam name="T">Tipo di elemento nell'insieme da trovare.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Ottiene il tipo di un elemento contenuto nell'insieme.</summary>
      <returns>Tipo di <paramref name="item" /> specificato nell'insieme.</returns>
      <param name="item">Elemento dell'insieme di cui è necessario recuperare il tipo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserisce un elemento in un insieme in una posizione specifica.</summary>
      <param name="index">Indice a base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire nell'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Rimuove dall'insieme un oggetto di un tipo specificato.</summary>
      <returns>Oggetto rimosso dall'insieme.</returns>
      <typeparam name="T">Tipo di elemento da rimuovere nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Rimuove dall'insieme tutti gli elementi di un tipo specificato.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> che contiene gli oggetti di tipo <paramref name="T" /> dell'insieme originale.</returns>
      <typeparam name="T">Tipo di elemento da rimuovere nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Sostituisce l'elemento in corrispondenza dell'indice specificato con un nuovo oggetto.</summary>
      <param name="index">Indice in base zero dell'oggetto <paramref name="item" /> da sostituire.</param>
      <param name="item">Oggetto da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Fornisce un insieme thread-safe di sola lettura, contenente come elementi gli oggetti di un tipo specificato dal parametro generico.</summary>
      <typeparam name="T">Tipo di oggetto contenuto come elementi nell'insieme thread-safe, di sola lettura.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> da un elenco di elementi enumerabile specificato e con l'oggetto utilizzato per sincronizzare l'accesso all'insieme thread-safe di sola lettura.</summary>
      <param name="syncRoot">Oggetto utilizzato per sincronizzare l'accesso all'insieme thread-safe, di sola lettura.</param>
      <param name="list">Insieme <see cref="T:System.Collections.Generic.IEnumerable`1" /> di elementi utilizzati per inizializzare l'insieme thread-safe di sola lettura.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Determina se l'insieme contiene un elemento con un valore specifico.</summary>
      <returns>true se l'elemento <paramref name="value" /> è presente nell'insieme; in caso contrario, false.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un oggetto del tipo contenuto nell'insieme.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi dell'insieme in una matrice specificata, a partire da un particolare indice.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati dall'insieme.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Ottiene il numero di elementi contenuti nell'insieme thread-safe, di sola lettura.</summary>
      <returns>Numero di elementi contenuti nell'insieme thread-safe di sola lettura.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Restituisce un enumeratore che scorre l'insieme sincronizzato di sola lettura.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> per gli oggetti del tipo archiviato nell'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Restituisce l'indice della prima occorrenza di un valore nell'insieme.</summary>
      <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> nell'insieme.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Ottiene un elemento dall'insieme thread-safe di sola lettura con un indice specificato.</summary>
      <returns>Elemento dall'insieme di sola lettura con l'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da recuperare da recuperare dall'insieme.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Ottiene l'elenco degli elementi contenuti nell'insieme thread-safe di sola lettura.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IList`1" /> degli elementi contenuti nell'insieme thread-safe di sola lettura.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Se chiamato, genera un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Elemento da aggiungere all'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere aggiunti all'insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Se chiamato, genera un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere cancellati da un insieme di sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Restituisce true.</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Il metodo restituisce false per indicare che l'elemento non è stato rimosso dall'insieme di sola lettura.</returns>
      <param name="value">Valore da rimuovere dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere cancellati da un insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Se chiamato, genera un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito <paramref name="value" />.</param>
      <param name="value">Oggetto da inserire nell'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere inseriti in un insieme di sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>Elemento del tipo <paramref name="T" /> in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da recuperare da recuperare dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere impostati in un insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Se chiamato, genera un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da recuperare da recuperare dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere cancellati da un insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'insieme in una matrice specificata, a partire da un indice specificato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati dall'insieme.</param>
      <param name="index">Indice in base zero della matrice in corrispondenza del quale ha inizio la copia.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è sincronizzato.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l’accesso all’insieme.</summary>
      <returns>Un oggetto che può essere utilizzato per sincronizzare l'accesso all'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che scorre l'insieme sincronizzato di sola lettura.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> che scorre l'insieme sincronizzato di sola lettura.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Genera <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Struttura <see cref="T:System.NotSupportedException" />.</returns>
      <param name="value">Elemento da aggiungere all'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere aggiunti all'insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Genera <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere cancellati da un insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se l'insieme contiene un elemento con un valore specifico.</summary>
      <returns>Restituisce true se l'elemento <paramref name="value" /> è presente nell'insieme; in caso contrario, false.</returns>
      <param name="value">Oggetto da individuare nell'insieme.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un oggetto del tipo contenuto nell'insieme.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <returns>Indice di <paramref name="value" /> se presente nell'elenco; in caso contrario -1.</returns>
      <param name="value">Elemento del quale viene recuperato l'indice.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Se chiamato, genera un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito <paramref name="value" />.</param>
      <param name="value">Oggetto da inserire nell'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere inseriti in un insieme di sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se l'insieme è di dimensioni fisse.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se l'insieme è di sola lettura.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice e genera un'eccezione se è impostato un elemento.</summary>
      <returns>Oggetto nella posizione specificata nell'insieme.</returns>
      <param name="index">Indice in base zero dell'elemento nell'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere impostati in un insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'oggetto <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Indice in base zero dell'elemento da recuperare da recuperare dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere cancellati da un insieme di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Se chiamato, genera un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da recuperare da recuperare dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Elementi che non possono essere cancellati da un insieme di sola lettura.</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Questa eccezione viene generata nel client quando l'azione correlata all'operazione richiamata non corrisponde all'azione di una qualsiasi operazione disponibile nel servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente. </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Rappresenta un'associazione che può essere utilizzata da un client Windows Phone per configurare endpoint in grado di comunicare con i servizi Web basati su ASMX e altri servizi conformi a WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.BasicHttpBinding" /> con un tipo di protezione specificato utilizzato dall'associazione.</summary>
      <param name="securityMode">Valore di <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> che specifica il tipo di protezione utilizzato con il messaggio SOAP e per il client.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Restituisce un insieme ordinato di elementi di binding contenuti nell'associazione corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> contenente lo stack ordinato degli elementi di binding descritti da <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>Ottiene o imposta un valore che indica se <see cref="T:P:System.ServiceModel.BasicHttpBinding" /> includerà l'oggetto <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
      <returns>true se l'associazione contiene <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Ottiene la versione di SOAP utilizzata per i messaggi che vengono elaborati da questa associazione.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.ServiceModel.EnvelopeVersion" /> utilizzato con questa associazione. Il valore è sempre SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Ottiene o imposta la dimensione massima per un buffer che riceve messaggi dal canale.</summary>
      <returns>Dimensione massima, in byte, di un buffer in cui vengono archiviati i messaggi mentre vengono elaborati per un endpoint configurato con questa associazione. Il valore predefinito è 65.536 byte.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Ottiene o imposta la dimensione massima per un messaggio che è possibile ricevere su un canale configurato con questa associazione.</summary>
      <returns>Dimensione massima, in byte, di un messaggio elaborato dall'associazione. Il valore predefinito è 65.536 byte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è minore di zero.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Ottiene lo schema di trasporto URI per i canali e i listener configurati con questa associazione.</summary>
      <returns>"https" se la modalità di protezione nell'elemento di binding di trasporto è impostata su <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> o su <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" />; in caso contrario, "http".</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Ottiene il tipo di protezione utilizzato da questa associazione. </summary>
      <returns>The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> utilizzato con questa associazione. Il valore predefinito è <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Ottiene o imposta la codifica di caratteri utilizzata per il testo del messaggio.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> che indica la codifica di caratteri utilizzata. Il valore predefinito è <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Enumera i tipi di credenziali che il client può utilizzare per l'autenticazione quando è abilitata la protezione nell'associazione BasicHttpBinding.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Indica che il client deve essere autenticato tramite una credenziale nome utente.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Presente solo in Windows Phone, ma non supportato.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Specifica la protezione utilizzata per un client Windows Phone configurato con <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Ottiene o imposta la modalità di protezione per un client configurato con <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
      <returns>Valore presente nell'enumerazione <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />. Il valore predefinito per questa proprietà è <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore non è un valore valido per <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Specifica i tipi di protezione che è possibile utilizzare con l'associazione <see cref="T:System.ServiceModel.BasicHttpBinding" /> fornita dal sistema.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>Il messaggio SOAP non è protetto durante il trasferimento. Questo è il funzionamento predefinito.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>La protezione viene fornita tramite HTTPS. Il servizio deve essere configurato con i certificati SSL. Il messaggio SOAP viene protetto interamente utilizzando HTTPS. Il servizio viene autenticato dal client mediante il certificato SSL del servizio.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Questa modalità fornisce integrità, riservatezza e autenticazione server tramite HTTPS. Il servizio deve essere configurato con un certificato. L'autenticazione client viene fornita dalla protezione dei messaggi SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>Questa modalità fornisce solo l'autenticazione client basata su HTTP. Non fornisce l'integrità del messaggio né la riservatezza.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Crea e gestisce i canali utilizzati dai client per inviare messaggi agli endpoint del servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Inizializza la channel factory con i comportamenti forniti da un file di configurazione specificato e con quelli nell'endpoint del servizio della channel factory.</summary>
      <param name="configurationName">Nome del file di configurazione.</param>
      <exception cref="T:System.InvalidOperationException">L'endpoint del servizio della channel factory è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Se implementato in una classe derivata, crea una descrizione dell'endpoint del servizio associato alla channel factory.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associato alla channel factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Compila la channel factory per l'endpoint corrente della factory.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> per l'endpoint della factory corrente.</returns>
      <exception cref="T:System.InvalidOperationException">L'endpoint del servizio al quale si connettono le factory channel è null,oppure l'associazione dell'endpoint è null o l'elemento con il nome di configurazione specificato manca.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Ottiene le credenziali utilizzate dai client per comunicare un endpoint del servizio nei canali prodotti dalla factory.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> utilizzato dai client se sono configurati per la factory o se l'endpoint non è un riferimento null e non è nello stato di comunicazione <see cref="F:System.ServiceModel.CommunicationState.Created" />oppure <see cref="F:System.ServiceModel.CommunicationState.Opening" />; in caso contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di chiusura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di apertura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Ottiene l'endpoint del servizio a cui si connettono i canali prodotti dalla factory.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> a cui si connettono i canali prodotti dalla factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Apre la channel factory corrente se non è ancora aperta.</summary>
      <exception cref="T:System.ObjectDisposedException">La factory corrente è in fase di chiusura oppure chiusa, pertanto non è possibile aprirla.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Restituisce l'oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali oppure null se non è presente.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza l'endpoint del servizio della channel factory con un'associazione e un indirizzo specificati.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> con il quale inizializzare l'endpoint per la channel factory.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> con il quale inizializzare l'endpoint per la channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza l'endpoint del servizio della channel factory con un indirizzo e una configurazione specificati.</summary>
      <param name="configurationName">Nome del file di configurazione con il quale inizializzare la channel factory.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> con il quale inizializzare gli endpoint per la channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Termina la channel factory interna della channel factory corrente.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di chiusura asincrona sulla channel factory interna della channel factory corrente alla quale è associato un oggetto stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di apertura asincrona sulla channel factory interna della channel factory corrente alla quale è associato un oggetto stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Chiamata della chiusura sulla channel factory interna con un timeout specificato per il completamento dell'operazione.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione prima del timeout.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completa un'operazione di chiusura asincrona sulla channel factory interna della channel factory corrente. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione di apertura asincrona sulla channel factory interna della channel factory corrente. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Chiamata dell'apertura sulla channel factory interna della channel factory corrente con un timeout specificato per il completamento dell'operazione.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di apertura prima del timeout.</param>
      <exception cref="T:System.InvalidOperationException">Il canale interno del canale corrente è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Inizializza una copia di sola lettura dell'oggetto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> per la channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Compila la channel factory interna per il canale corrente.</summary>
      <exception cref="T:System.InvalidOperationException">La channel factory interna per la channel factory è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Chiude la channel factory corrente.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Factory che crea canali di tipi diversi utilizzati dai client per inviare messaggi agli endpoint del servizio configurati in modo vario.</summary>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory. Questo tipo deve essere <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> o <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> con un indirizzo endpoint e una configurazione associazione specificati.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilizzato per configurare i canali creati dalla factory.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> di destinazione per i canali creati dalla factory.</param>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="binding" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> e configura l'endpoint.</summary>
      <param name="endpointConfigurationName">Nome del file contenente la configurazione dell'endpoint del servizio per i canali creati dalla factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ChannelFactory`1" /> con un indirizzo endpoint e una configurazione endpoint specificati.</summary>
      <param name="endpointConfigurationName">Nome del file contenente la configurazione dell'endpoint del servizio per i canali creati dalla factory.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> di destinazione per i canali creati dalla factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canale che viene utilizzato per inviare messaggi a un servizio a un indirizzo endpoint specifico.</summary>
      <returns>
        <paramref name="TChannel" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creato dalla factory.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canale che viene utilizzato per inviare messaggi a un servizio a un indirizzo endpoint specifico tramite un indirizzo di trasporto specificato.</summary>
      <returns>
        <paramref name="TChannel" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creato dalla factory.</returns>
      <param name="via">
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale il canale invia i messaggi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" /> dispone di operazioni duplex non supportate.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Crea una descrizione dell'endpoint del servizio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> del servizio.</returns>
      <exception cref="T:System.InvalidOperationException">Il contratto di callback è null, ma l'endpoint del servizio ne richiede uo che non sia null (Nothing).</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Fornisce l'implementazione di base utilizzata per creare oggetti client (proxy) Windows Phone in grado di chiamare i servizi.</summary>
      <typeparam name="TChannel">Canale utilizzato per la connessione al servizio che identifica il tipo di contratto di servizio incapsulato da questo proxy.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando l'endpoint di destinazione predefinito dal file di configurazione dell'applicazione. </summary>
      <exception cref="T:System.InvalidOperationException">Non sono presenti informazioni sull'endpoint predefinito nel file di configurazione, nel file sono presenti più endpoint oppure non è presente un file di configurazione.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando un'associazione e un indirizzo di destinazione specificati. </summary>
      <param name="binding">Associazione utilizzata per configurare il modo in cui vengono eseguite le chiamate al servizio.</param>
      <param name="remoteAddress">Indirizzo dell'endpoint del servizio.</param>
      <exception cref="T:System.ArgumentNullException">L'associazione è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'indirizzo remoto è null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando le informazioni di configurazione specificate nel file di configurazione dell'applicazione da <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">Nome dell'endpoint nel file di configurazione dell'applicazione.</param>
      <exception cref="T:System.ArgumentNullException">Le informazioni sull'endpoint specificato sono null.</exception>
      <exception cref="T:System.InvalidOperationException">Impossibile trovare l'endpoint oppure il contratto dell'endpoint non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> utilizzando un indirizzo di destinazione e informazioni endpoint specificati. </summary>
      <param name="endpointConfigurationName">Nome dell'endpoint nel file di configurazione dell'applicazione.</param>
      <param name="remoteAddress">Indirizzo del servizio.</param>
      <exception cref="T:System.ArgumentNullException">L'endpoint è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'indirizzo remoto è null.</exception>
      <exception cref="T:System.InvalidOperationException">Impossibile trovare l'endpoint oppure il contratto dell'endpoint non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Nome dell'endpoint nel file di configurazione dell'applicazione.</param>
      <param name="remoteAddress">Indirizzo del servizio.</param>
      <exception cref="T:System.ArgumentNullException">L'endpoint è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'indirizzo remoto è null.</exception>
      <exception cref="T:System.InvalidOperationException">Impossibile trovare l'endpoint oppure il contratto dell'endpoint non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Causa la transizione immediata dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Ottiene il canale interno utilizzato per comunicare con il servizio.</summary>
      <returns>Implementazione dell'interfaccia del contratto di servizio passata al costruttore come parametro di tipo.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Ottiene l'oggetto <see cref="T:System.ServiceModel.ChannelFactory`1" /> sottostante.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Ottiene le credenziali client utilizzate per chiamare un'operazione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> che rappresenta la prova dell'identità presentata dal client.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Restituisce un nuovo canale dal client al servizio.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> che identifica il tipo di contratto di servizio incapsulato da questo oggetto client (proxy).</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Ottiene l'endpoint di destinazione per il servizio al quale il client Windows Phone è in grado di connettersi.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> di destinazione.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replica il comportamento della parola chiave predefinita in C#.</summary>
      <returns>Restituisce null se T è un tipo di riferimento e zero se T è un tipo di valore numerico.</returns>
      <typeparam name="T">Tipo C#.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Ottiene l'implementazione di <see cref="T:System.ServiceModel.IClientChannel" /> sottostante.</summary>
      <returns>Canale del client per l'oggetto client Windows Phone.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Fornisce il supporto per implementare il modello asincrono basato su eventi. 
    For more information about 
   questo modello, vedere Cenni preliminari sul modello asincrono basato su eventi.</summary>
      <param name="beginOperationDelegate">Delegato utilizzato per chiamare l'operazione asincrona.</param>
      <param name="inValues">Valori di input per la chiamata asincrona.</param>
      <param name="endOperationDelegate">Delegato utilizzato per terminare la chiamata asincrona dopo che è stata completata.</param>
      <param name="operationCompletedCallback">Callback fornito dal client che viene richiamato quando il metodo asincrono è completo. Il callback viene passato a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Oggetto <paramref name="userState" /> da associare alla chiamata asincrona.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Ottiene lo stato corrente dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.ServiceModel.CommunicationState" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inizia l'operazione asincrona per chiudere <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="callback">Metodo che riceve il callback al completamento.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> con un timeout specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura con inizio asincrono.</returns>
      <param name="timeout">Periodo entro il quale è necessario completare la chiamata.</param>
      <param name="callback">Oggetto callback richiamato al completamento dell'operazione.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per aprire l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="callback">Metodo che riceve il callback al completamento.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per aprire l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona.</returns>
      <param name="timeout">Tempo entro il quale è necessario completare la chiamata.</param>
      <param name="callback">Metodo che riceve il callback al completamento.</param>
      <param name="state">Dati relativi allo stato.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Causa la transizione dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dal relativo stato corrente allo stato chiuso.</summary>
      <param name="timeout">Tempo entro il quale è necessario completare la chiamata.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> ha eseguito la transizione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> esegue la transizione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilizzato per completare l'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per aprire l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> utilizzato per completare l'operazione di apertura finale asincrona.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestore eventi che viene richiamato quando si verifica un errore durante l'esecuzione di un'operazione sull'oggetto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Causa la transizione dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dallo stato creato allo stato aperto.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> dallo stato creato allo stato aperto entro un intervallo di tempo specificato.</summary>
      <param name="timeout">Periodo di tempo entro il quale è necessario completare la chiamata.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> ha eseguito la transizione dallo stato creato allo stato aperto.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1" /> ha eseguito la transizione dallo stato creato allo stato aperto.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Delegato utilizzato da <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> per chiamare le operazioni asincrone sul client. </summary>
      <returns>Risultato della chiamata asincrona.</returns>
      <param name="inValues">Valori di input per la chiamata asincrona.</param>
      <param name="asyncCallback">Riferimento al metodo da chiamare al completamento dell'operazione asincrona corrispondente.</param>
      <param name="state">
        <see cref="T:System.Object" /> che consente al client di distinguere tra due chiamate asincrone diverse. Viene reso disponibile al client nel parametro <paramref name="arguments" /> del callback di completamento dell'evento.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Questa classe viene utilizzata da proxy client generati automaticamente per chiamare i servizi e non deve essere utilizzata altrimenti. 
</summary>
      <typeparam name="T">Classe generica.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ClientBase`1" /> da un'istanza della classe esistente.</summary>
      <param name="client">Oggetto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> utilizzato per inizializzare la nuova istanza della classe.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Avvia una chiamata asincrona di un metodo specificato tramite nome.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento al metodo asincrono richiamato.</returns>
      <param name="methodName">Nome del metodo da chiamare in modo asincrono.</param>
      <param name="args">Matrice di argomenti per il metodo richiamato.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Delegato <see cref="T:System.AsyncCallback" />. </param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Completa una chiamata asincrona mediante il nome di un metodo specificato. </summary>
      <returns>
Oggetto <see cref="T:System.Object" /> che costituisce l'output del metodo richiamato.
</returns>
      <param name="methodName">Nome del metodo chiamato in modo asincrono.</param>
      <param name="args">Matrice di argomenti per il metodo richiamato.</param>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Esegue attività definite dall'applicazione, ad esempio libera, rilascia o reimposta risorse non gestite associate al canale.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="TProperty">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione asincrona del messaggio. </returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output. </param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di invio asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di invio asincrona.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di invio asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di invio asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Ottiene la destinazione del servizio al quale vengono inviati i messaggi sul canale di output.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del servizio a cui vengono inviati i messaggi dal canale di output.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Trasmette un messaggio alla destinazione del canale di output. </summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia un messaggio sul canale di output corrente entro un intervallo di tempo specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Ottiene l'URI che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale di output.</summary>
      <returns>
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale di output.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio di richiesta al lato di risposta di uno scambio di messaggi di richiesta/risposta.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione asincrona del messaggio. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona che trasmette un messaggio di richiesta.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona che trasmette un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio di richiesta al lato di risposta di uno scambio di messaggi di richiesta/risposta entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione asincrona del messaggio. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale deve essere ricevuta una risposta. (sulle impostazioni predefinite, vedere le osservazioni)</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona che trasmette un messaggio di richiesta.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona che trasmette un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per restituire una risposta basata sul messaggio a una richiesta trasmessa. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuta come risposta alla richiesta. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Ottiene l'indirizzo remoto al quale il canale di richiesta invia i messaggi. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> al quale il canale di richiesta invia i messaggi. </returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuta come risposta alla richiesta. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuta come risposta alla richiesta. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale deve essere ricevuta una risposta.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Ottiene l'indirizzo di trasporto al quale viene inviata la richiesta.</summary>
      <returns>
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale viene inviato il messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>
        <see cref="T:System.ServiceModel.EndpointAddress" /> funge da destinazione finale e da indirizzo fisico se non è specificato un oggetto <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />. Se è specificato <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />, si tratta dell'indirizzo fisico effettivo al quale viene inviato il messaggio e tramite il quale il messaggio deve arrivare alla relativa destinazione.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Chiamata asincrona da iniziare utilizzando un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> da utilizzare per il callback al termine dell'elaborazione.</returns>
      <param name="callback">Metodo che viene chiamato quando viene completato questo metodo.</param>
      <param name="state">Informazioni sullo stato del canale.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Ottiene un valore che indica se è stata effettuata una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali. </summary>
      <returns>true se è stato chiamato il metodo <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (oppure i metodi <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> e <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Viene chiamato al termine della chiamata a <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Struttura <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Si tratta di un evento riservato.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Ottiene l'URI che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale client.</summary>
      <returns>
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Causa la transizione immediata dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere l'oggetto di comunicazione con un timeout specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per aprire un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per aprire l'oggetto di comunicazione entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Causa la transizione dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> ha eseguito la transizione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> esegue la transizione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> metodo.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per aprire un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" /> metodo.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Gestore eventi che viene richiamato quando si verifica un errore durante l'esecuzione di un'operazione sull'oggetto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato creato allo stato aperto.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato creato allo stato aperto entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> ha eseguito la transizione dallo stato creato allo stato aperto.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Gestore eventi che viene richiamato quando l'oggetto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> ha eseguito la transizione dallo stato creato allo stato aperto.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Ottiene lo stato corrente dell'oggetto orientato alla comunicazione.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.ServiceModel.CommunicationState" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Ottiene o imposta un valore che indica a Windows Phone di archiviare un insieme di messaggi prima di affidare i messaggi al trasporto.</summary>
      <returns>true se è consentito l'invio in batch dei messaggi in uscita; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Ottiene la sessione di input per il canale.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IInputSession" /> per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Ottiene l'endpoint locale per il canale.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> locale per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Ottiene o imposta il periodo di tempo entro il quale è necessario completare un'operazione o viene generata un'eccezione.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> che specifica il periodo di tempo entro il quale è necessario completare un'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Ottiene la sessione di output associata al canale, se presente.</summary>
      <returns>Implementazione di <see cref="T:System.ServiceModel.Channels.IOutputSession" /> se esiste una sessione di input; in caso contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Ottiene l'indirizzo remoto associato al canale.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> remoto per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Restituisce un identificatore per la sessione corrente, se presente.</summary>
      <returns>Identificatore della sessione corrente, se presente.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Ottiene un insieme di oggetti estensione per questo oggetto estensibile.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> di oggetti di estensione.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Delegato che viene richiamato da <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> dopo il completamento corretto della chiamata eseguita da <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <returns>Matrice di <see cref="T:System.Object" /> contenente i risultati della chiamata al metodo asincrono. Per l'operazione potrebbero essere restituiti più valori, tutti in questa matrice di oggetti.</returns>
      <param name="result">Risultato restituito dalla chiamata eseguita da <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Archivia i risultati di una chiamata asincrona eseguita dal client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Ottiene i risultati di una chiamata asincrona eseguita dal client.</summary>
      <returns>Matrice di tipo <see cref="T:System.Object" /> contenente i risultati di una chiamata asincrona eseguita dal client.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Rappresenta un errore di comunicazione nel servizio o nell'applicazione client.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Descrizione della condizione di errore.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationException" />, utilizzando il messaggio specificato e l'eccezione interna.</summary>
      <param name="message">Descrizione della condizione di errore.</param>
      <param name="innerException">Eccezione interna da utilizzare.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Eccezione che viene generata quando la chiamata viene eseguita a un oggetto <see cref="T:System.ServiceModel.ICommunicationObject" /> che è stato interrotto.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> con il messaggio specificato. </summary>
      <param name="message">Messaggio contenuto nell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />, utilizzando il messaggio specificato e l'eccezione interna. </summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Eccezione che viene generata quando viene eseguita una chiamata a un oggetto di comunicazione nel quale si è verificato un errore. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />, utilizzando il messaggio specificato e l'eccezione interna.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Definisce gli stati in cui può esistere un oggetto <see cref="T:System.ServiceModel.ICommunicationObject" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indica che è stata creata un'istanza dell'oggetto di comunicazione e che l'oggetto può essere configurato ma che non è ancora aperto o pronto per l'uso.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indica che l'oggetto di comunicazione è in fase di transizione dallo stato <see cref="F:System.ServiceModel.CommunicationState.Created" /> allo stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indica che l'oggetto di comunicazione ora è aperto e pronto per essere utilizzato. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indica che l'oggetto di comunicazione è in fase di transizione allo stato <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indica che l'oggetto di comunicazione è stato chiuso e non è più utilizzabile. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indica che nell'oggetto di comunicazione si è verificato un errore o un problema che non è possibile ripristinare e a causa del quale non è più utilizzabile. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Indica l'infrastruttura Windows Phone per l'utilizzo di <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Ottiene o imposta lo stile SOAP dei dati serializzati.</summary>
      <returns>Uno dei valori di <see cref="T:System.ServiceModel.OperationFormatStyle" />. Il valore predefinito è <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Fornisce un indirizzo di rete univoco che viene utilizzato da un client per comunicare con un endpoint del servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con una stringa URI specificata.</summary>
      <param name="uri">URI che identifica l'endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddress" /> con un URI e intestazioni specificati.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> che identifica la posizione dell'endpoint.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> che contiene le informazioni di indirizzo utilizzate per interagire con l'endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Ottiene una rappresentazione dell'URI anonimo indipendente dalla versione.</summary>
      <returns>
        <see cref="T:System.Uri" /> con il valore http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assegna l'URI e le proprietà dell'indirizzo dell'endpoint ai valori delle intestazioni di un messaggio specificato.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di cui sono assegnati i valori di intestazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Restituisce un valore che indica se un oggetto specificato è equivalente all'indirizzo dell'endpoint corrente.</summary>
      <returns>true se l'oggetto specificato è equivalente all'indirizzo corrente, in caso contrario,false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> da confrontare all'indirizzo dell'endpoint corrente.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Fornisce un codice hash univoco per l'indirizzo dell'endpoint corrente. </summary>
      <returns>Codice hash univoco per l'indirizzo dell'endpoint corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Ottiene l'insieme di intestazioni di indirizzo per gli endpoint che il generatore è in grado di creare.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> contenente le informazioni di indirizzo per l'endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Ottiene un valore che indica se l'endpoint è anonimo.</summary>
      <returns>true se l'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Ottiene un valore che indica se l'URI per l'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>true se l'URI dell'endpoint è <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; in caso contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Ottiene un URI indipendente dalla versione utilizzato per l'indirizzo di un endpoint al quale non deve essere inviato un messaggio.</summary>
      <returns>
        <see cref="T:System.Uri" /> con il valore http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Restituisce un valore che indica se gli indirizzi degli endpoint specificati non sono equivalenti.</summary>
      <returns>true se gli indirizzi degli endpoint sono equivalenti; in caso contrario, false.</returns>
      <param name="address1">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> che vengono confrontati.</param>
      <param name="address2">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> che vengono confrontati.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Restituisce un valore che indica se gli indirizzi degli endpoint specificati non sono equivalenti.</summary>
      <returns>true se gli indirizzi degli endpoint non sono equivalenti; in caso contrario, false.</returns>
      <param name="address1">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> che vengono confrontati.</param>
      <param name="address2">Uno degli oggetti <see cref="T:System.ServiceModel.EndpointAddress" /> che vengono confrontati.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Legge l'indirizzo di un endpoint per una versione di indirizzo specificata da un lettore di dizionario XML specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> della versione specificata letta dal lettore XML.</returns>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo dell'endpoint corrente.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> dal quale viene ottenuto l'indirizzo dell'endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa canonica dell'URI contenuto nell'indirizzo dell'endpoint.</summary>
      <returns>URI che identifica l'endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Ottiene l'URI per l'endpoint.</summary>
      <returns>
        <see cref="T:System.Uri" /> per l'endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Salva tutti i nodi figlio del nodo nel writer di dizionario XML specificato.</summary>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> dell'indirizzo dell'endpoint corrente.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> nel quale viene salvato l'indirizzo dell'endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> o <paramref name="addressingVersion" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Factory per la produzione di nuovi (immutabili) indirizzi di endpoint con valori di proprietà specifici.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> dai valori di un indirizzo endpoint esistente.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> i cui valori di proprietà vengono utilizzati per inizializzare i valori di proprietà di questa istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Ottiene l'insieme di intestazioni di indirizzo per gli endpoint che il generatore è in grado di creare.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente le intestazioni di indirizzo per gli endpoint che il generatore è in grado di creare.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Crea un nuovo indirizzo endpoint inizializzato con i valori di proprietà del generatore di indirizzi endpoint corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> le cui proprietà sono inizializzate con i valori del generatore di indirizzi endpoint corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Ottiene o imposta l'URI per gli endpoint che il generatore è in grado di creare.</summary>
      <returns>
        <see cref="T:System.Uri" /> che specifica l'indirizzo endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Eccezione che viene generata quando è impossibile trovare o raggiungere un endpoint remoto.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointNotFoundException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con un messaggio di errore specificato e l'eccezione interna che ha causato l'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Ottiene una stringa contenente il nome URI per il ruolo SOAP associato alla versione del messaggio corrente per la destinazione finale.</summary>
      <returns>Stringa vuota se viene utilizzato SOAP 1.1; stringa contenente http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver se viene utilizzato SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Ottiene una stringa contenente il nome URI per il ruolo SOAP associato alla versione del messaggio corrente per la destinazione successiva.</summary>
      <returns>Stringa contenente http://schemas.xmlsoap.org/soap/actor/next se viene utilizzato <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" />; stringa contenente http://www.w3.org/2003/05/soap-envelope/role/next se viene utilizzato <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />; e stringa vuota se <see cref="T:System.ServiceModel.EnvelopeVersion" /> è <see cref="P:System.ServiceModel.EnvelopeVersion.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Ottiene la versione di envelope che non utilizza una versione di SOAP.</summary>
      <returns>Versione di envelope che non utilizza la formattazione SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Ottiene la versione di envelope di SOAP 1,1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> di SOAP 1,1.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Ottiene la versione di envelope di SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> di SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Ottiene una stringa che rappresenta la versione di envelope corrente.</summary>
      <returns>Versione di envelope corrente.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Rappresenta le informazioni dettagliate sull'errore.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ExceptionDetail" /> dall'eccezione. </summary>
      <param name="exception">Eccezione da serializzare come oggetto <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="exception" /> parametro è null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.ServiceModel.ExceptionDetail" /> che rappresenta l'eccezione interna.</summary>
      <returns>Informazioni relative all'eccezione interna.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Ottiene o imposta il messaggio dall'eccezione passata al costruttore.</summary>
      <returns>Messaggio di eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Ottiene o imposta le informazioni di analisi dello stack dall'eccezione passata al costruttore.</summary>
      <returns>Analisi dello stack dell'eccezione.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Restituisce le informazioni dettagliate sull'eccezione per l'eccezione passata al costruttore.</summary>
      <returns>Analisi del messaggio e dello stack dell'eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Ottiene o imposta la stringa del tipo per l'eccezione passata al costruttore.</summary>
      <returns>Stringa del tipo per l'eccezione passata al costruttore.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Rappresenta un codice di errore SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Nome del codice di errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" />.</summary>
      <param name="name">Nome del codice di errore.</param>
      <param name="subCode">Sottocodice di errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" /> con il nome e lo spazio dei nomi specificati. </summary>
      <param name="name">Nome locale del codice di errore. </param>
      <param name="ns">Nome dello spazio dei nomi del codice di errore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è una stringa vuota. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultCode" /> con il nome, lo spazio dei nomi e il sottocodice di errore specificati.</summary>
      <param name="name">Nome locale del codice di errore. </param>
      <param name="ns">Nome dello spazio dei nomi del codice di errore. </param>
      <param name="subCode">Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che rappresenta il sottocodice di errore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è una stringa vuota. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Crea un codice di errore mittente con il sottocodice specificato. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultCode" /> con il sottocodice di errore SOAP creato nella proprietà <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che rappresenta il sottocodice di errore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> è null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Ottiene un valore che indica se l'errore è un errore SOAP 1.1 oppure SOAP 1.2.</summary>
      <returns>true se l'errore è un errore SOAP 1.1 oppure SOAP 1.2; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Ottiene un valore che indica se l'errore è un errore server SOAP 1.1 oppure un errore destinatario SOAP 1.2.</summary>
      <returns>true se l'errore è un errore server SOAP 1.1 oppure un errore destinatario SOAP 1.2; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Ottiene un valore che indica se l'errore è un errore client SOAP 1.1 oppure un errore mittente SOAP 1.2.</summary>
      <returns>true se l'errore è un errore client SOAP 1.1 oppure un errore mittente SOAP 1.2; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Ottiene il nome locale del codice di errore. </summary>
      <returns>Nome locale del codice di errore. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Ottiene lo spazio dei nomi per il codice di errore. </summary>
      <returns>URI per il nome dello spazio dei nomi. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Ottiene il sottocodice di errore. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che rappresenta il sottocodice di errore. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Specifica uno o più errori SOAP restituiti quando per un'operazione di servizio si verificano errori di elaborazione.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultContractAttribute" />. </summary>
      <param name="detailType">Tipo serializzabile contenente informazioni sull'errore per il chiamante.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento <paramref name="detailType" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Ottiene o imposta l'azione del messaggio di errore SOAP specificato come parte del contratto dell'operazione.</summary>
      <returns>Valore dell'azione per il messaggio di errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Ottiene il tipo di un oggetto serializzabile che contiene informazioni sull'errore.</summary>
      <returns>Tipo che rappresenta la classe di errore serializzabile.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Ottiene o imposta il nome del messaggio di errore in WSDL (Web Services Description Language).</summary>
      <returns>Nome del messaggio di errore. Il nome predefinito è il nome del tipo utilizzato come dettaglio dell'errore.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'errore SOAP.</summary>
      <returns>Spazio dei nomi dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Rappresenta errore SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException" /> utilizzando i valori di errore del messaggio specificati e la stringa di azione fornita.</summary>
      <param name="fault">Errore del messaggio contenente i valori di errore SOAP predefiniti da utilizzare.</param>
      <param name="action">Azione dell'errore SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException" /> utilizzando il motivo specificato, il codice di errore e il valore dell'azione.</summary>
      <param name="reason">Motivo per l'errore SOAP.</param>
      <param name="code">Codice di errore per l'errore SOAP.</param>
      <param name="action">Valore dell'azione per l'errore SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Ottiene il valore dell'azione SOAP per il messaggio di errore.</summary>
      <returns>Valore dell'azione SOAP per il messaggio di errore.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Ottiene il codice di errore per l'errore SOAP.</summary>
      <returns>Codice di errore per l'errore SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Restituisce un oggetto <see cref="T:System.ServiceModel.FaultException" /> dall'errore del messaggio specificato, l'azione e una matrice di tipi di dettaglio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultException" /> che è possibile generare per indicare che è stato ricevuto il messaggio di errore SOAP.</returns>
      <param name="messageFault">Errore del messaggio contenente le informazioni di errore SOAP predefinite.</param>
      <param name="action">Valore dell'azione di errore.</param>
      <param name="faultDetailTypes">Matrice di tipi contenente i dettagli dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Restituisce un oggetto <see cref="T:System.ServiceModel.FaultException" /> dall'errore del messaggio specificato e una matrice di tipi di dettaglio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultException" /> che è possibile generare per indicare che è stato ricevuto il messaggio di errore SOAP.</returns>
      <param name="messageFault">Errore del messaggio contenente le informazioni di errore SOAP predefinite.</param>
      <param name="faultDetailTypes">Matrice di tipi contenente i dettagli dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Restituisce un oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" /> in memoria.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" /> che viene passato a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> per creare un messaggio contenente un errore.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Ottiene il messaggio per l'eccezione.</summary>
      <returns>Messaggio di eccezione.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Ottiene l'oggetto <see cref="T:System.ServiceModel.FaultReason" /> per l'errore SOAP.</summary>
      <returns>Motivo per l'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Utilizzato nell'applicazione client per intercettare gli errori SOAP specificati a livello di contratto.</summary>
      <typeparam name="TDetail">Tipo di dettaglio dell'errore serializzabile.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultException`1" /> che utilizza un oggetto dettaglio specificato e un motivo, un codice e i valori di azione dell'errore SOAP. </summary>
      <param name="detail">Oggetto utilizzato come dettaglio dell'errore SOAP.</param>
      <param name="reason">Motivo per l'errore SOAP.</param>
      <param name="code">Codice di errore per l'errore SOAP.</param>
      <param name="action">Azione dell'errore SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Ottiene l'oggetto contenente le informazioni dettagliate della condizione di errore.</summary>
      <returns>Oggetto dettaglio che è il parametro di tipo dell'oggetto <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Restituisce una stringa per l'oggetto <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Stringa per l'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Fornisce una descrizione testuale di un errore SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReason" /> utilizzando l'elenco specificato di conversioni dell'errore. </summary>
      <param name="translations">Elenco di oggetti <see cref="T:System.ServiceModel.FaultReasonText" /> in cui ciascun oggetto descrive l'errore in un linguaggio specifico. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> è vuoto oppure uno o più elemeti sono null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReason" /> utilizzando l'elemento di testo specificato che descrive l'errore in un linguaggio specifico. </summary>
      <param name="translation">Matrice di oggetti <see cref="T:System.ServiceModel.FaultReasonText" /> che corrispondono alle descrizioni dell'errore in linguaggi differenti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translation" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReason" /> utilizzando il testo specificato.</summary>
      <param name="text">Descrizione del motivo per cui si è verificato l'errore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Ottiene la descrizione dell'errore nel linguaggio utilizzato dal thread corrente.</summary>
      <returns>Testo dell'errore nel linguaggio specificato.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Ottiene la descrizione dell'errore nel linguaggio specificato.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultReasonText" /> contenente la descrizione dell'errore tradotta.</returns>
      <param name="cultureInfo">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica il linguaggio della descrizione dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Restituisce il motivo dell'errore come stringa.</summary>
      <returns>Motivo per l'errore.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Ottiene un insieme di descrizioni dell'errore in linguaggi differenti.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> di oggetti <see cref="T:System.ServiceModel.FaultReasonText" />, in cui ciascun oggetto descrive l'errore in un linguaggio diverso.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Rappresenta il testo del motivo di un errore SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReasonText" /> che utilizza un testo dell'errore specificato.</summary>
      <param name="text">Testo che rappresenta il motivo dell'errore SOAP.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.FaultReasonText" /> che utilizza il testo dell'errore specificato.</summary>
      <param name="text">Testo che rappresenta il motivo dell'errore SOAP.</param>
      <param name="xmlLang">Linguaggio dell'errore.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Restituisce un valore che indica se il linguaggio della descrizione corrisponde all'oggetto <see cref="T:System.Globalization.CultureInfo" /> fornito.</summary>
      <returns>true se l'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato corrisponde; in caso contrario, false.</returns>
      <param name="cultureInfo">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da confrontare con il linguaggio della descrizione.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Ottiene il testo del motivo dell'errore SOAP.</summary>
      <returns>Testo del motivo dell'errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Ottiene il linguaggio del motivo dell'errore SOAP.</summary>
      <returns>Linguaggio del motivo dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Definisce il comportamento dei canali di richiesta e di richiesta/risposta in uscita utilizzati dalle applicazioni client.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Ottiene o imposta un valore che indica se <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> tenta di chiamare gli oggetti <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> nella proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> o genera un'eccezione se l'insieme non è vuoto. </summary>
      <returns>true se Windows Communication Foundation (WCF) è consentito richiamare gli inizializzatori di canali interattivi; in caso contrario, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Chiamata asincrona da iniziare utilizzando un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> da utilizzare per il callback al termine dell'elaborazione.</returns>
      <param name="callback">Metodo che viene chiamato quando viene completato questo metodo.</param>
      <param name="state">Informazioni sullo stato del canale.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Ottiene un valore che indica se è stata effettuata una chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali. </summary>
      <returns>true se è stato chiamato il metodo <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (oppure i metodi <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> e <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Chiamata a un'interfaccia utente per ottenere informazioni sulle credenziali.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Viene chiamato al termine della chiamata a <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Struttura <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Si tratta di un evento riservato. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Ottiene l'URI che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale client.</summary>
      <returns>
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Definisce il contratto per la macchina a stati di base per tutti gli oggetti del sistema orientati alla comunicazione, inclusi i canali, i gestori canali, le factory, i listener, i dispatcher e gli host di servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Causa la transizione immediata dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout predefinito è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse chiudersi normalmente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere l'oggetto di comunicazione con un timeout specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout specificato è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse chiudersi normalmente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per aprire un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Impossibile aprire <see cref="T:System.ServiceModel.ICommunicationObject" />. L'oggetto è entrato nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout di apertura predefinito è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse entrare nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ed entrasse nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per aprire l'oggetto di comunicazione entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Impossibile aprire <see cref="T:System.ServiceModel.ICommunicationObject" />. L'oggetto è entrato nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout specificato è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse entrare nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ed entrasse nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Causa la transizione dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout di chiusura predefinito è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse chiudersi normalmente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse chiudersi normalmente.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Si verifica quando l'oggetto di comunicazione completa la transizione dallo stato di chiusura allo stato chiuso.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Si verifica appena l'oggetto di comunicazione entra nello stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse chiudersi normalmente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per aprire un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Impossibile aprire <see cref="T:System.ServiceModel.ICommunicationObject" />. L'oggetto è entrato nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse entrare nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ed entrasse nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Si verifica appena l'oggetto di comunicazione entra nello stato di errore.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato creato allo stato aperto.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">Impossibile aprire <see cref="T:System.ServiceModel.ICommunicationObject" />. L'oggetto è entrato nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout di apertura predefinito è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse entrare nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ed entrasse nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato creato allo stato aperto entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Impossibile aprire <see cref="T:System.ServiceModel.ICommunicationObject" />. L'oggetto è entrato nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Il timeout specificato è trascorso prima che <see cref="T:System.ServiceModel.ICommunicationObject" /> potesse entrare nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ed entrasse nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Si verifica quando l'oggetto di comunicazione completa la transizione dallo stato di apertura allo stato aperto.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Si verifica appena l'oggetto di comunicazione entra nello stato di apertura.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Ottiene lo stato corrente dell'oggetto orientato alla comunicazione.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.ServiceModel.CommunicationState" />.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Definisce l'interfaccia per il controllo del contesto di un canale.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Ottiene o imposta un valore che indica a Windows Phone di archiviare un insieme di messaggi prima di affidare i messaggi al trasporto.</summary>
      <returns>true se è consentito l'invio in batch dei messaggi in uscita; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Ottiene la sessione di input per il canale.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IInputSession" /> per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Ottiene l'endpoint locale per il canale.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> locale per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Ottiene o imposta il periodo di tempo entro il quale è necessario completare un'operazione o viene generata un'eccezione.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> che specifica il periodo di tempo entro il quale è necessario completare un'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Ottiene la sessione di output associata al canale, se presente.</summary>
      <returns>Implementazione di <see cref="T:System.ServiceModel.Channels.IOutputSession" /> se esiste una sessione di input; in caso contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Ottiene l'indirizzo remoto associato al canale.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> remoto per il canale.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Restituisce un identificatore per la sessione corrente, se presente.</summary>
      <returns>Identificatore della sessione corrente, se presente.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Definisce l'interfaccia per specificare i timeout di comunicazione utilizzati dai canali e dai gestori di canali, ad esempio le channel factory.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di chiusura richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di chiusura.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di apertura richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di ricezione richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di ricezione.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di invio richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di invio.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Consente a un oggetto di partecipare a un comportamento personalizzato, ad esempio la registrazione a eventi o il controllo delle transizioni di stato.</summary>
      <typeparam name="T">Tipo di classe di estensione.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Ottiene un insieme di oggetti estensione per questo oggetto estensibile.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> di oggetti di estensione.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Consente a un oggetto di estendere un altro oggetto tramite l'aggregazione.</summary>
      <typeparam name="T">Oggetto che partecipa al comportamento personalizzato.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Consente a un oggetto di estensione di scoprire quando è stato aggregato. Viene chiamato quando l'estensione viene aggiunta alla proprietà <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Oggetto estensibile che aggrega questa estensione.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Consente a un oggetto di scoprire se non è più aggregato. Viene chiamato quando un'estensione viene rimossa dalla proprietà <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Oggetto estensibile che aggrega questa estensione.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Insieme di oggetti <see cref="T:System.ServiceModel.IExtension`1" /> che consentono il recupero degli oggetti <see cref="T:System.ServiceModel.IExtension`1" /> in base al relativo tipo.</summary>
      <typeparam name="T">Tipo degli oggetti di estensione.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Trova l'oggetto di estensione specificato nell'insieme.</summary>
      <returns>L'oggetto di estensione che è stato trovato.</returns>
      <typeparam name="E">Tipo di oggetto di estensione.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Trova tutti gli oggetti di estensione dell'insieme specificato da <paramref name="E" />.</summary>
      <returns>Insieme di tutti gli oggetti di estensione dell'insieme che implementa il tipo specificato.</returns>
      <typeparam name="E">Tipo di oggetto di estensione.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Rappresenta un contratto di messaggio non valido.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.InvalidMessageContractException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Messaggio per l'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.InvalidMessageContractException" /> che utilizza il messaggio specificato e l'eccezione interna.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Specifica che un membro viene serializzato come elemento interno al corpo SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Ottiene o imposta un valore che indica la posizione in cui il membro viene serializzato nel corpo SOAP.</summary>
      <returns>Posizione dell'elemento nel corpo SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore passato al metodo di impostazione della proprietà è un intero negativo.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Definisce una classe fortemente tipizzata che corrisponde a un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Ottiene o imposta un valore che specifica se il corpo del messaggio dispone di un elemento wrapper.</summary>
      <returns>true se il corpo del messaggio dispone di un elemento wrapper; in caso contrario, false. Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Ottiene o imposta il nome dell'elemento wrapper del corpo del messaggio.</summary>
      <returns>Nome dell'elemento wrapper nel corpo del messaggio.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'elemento wrapper del corpo del messaggio.</summary>
      <returns>Spazio dei nomi dell'elemento wrapper.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Dichiara i membri di base per <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Specifica il nome dell'elemento che corrisponde a questo membro. </summary>
      <returns>Nome dell'elemento che corrisponde a questo membro. Questa stringa deve essere un nome elemento XML valido. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Specifica lo spazio dei nomi dell'elemento che corrisponde a questo membro. </summary>
      <returns>URI dello spazio dei nomi dell'elemento che corrisponde a questo membro. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Eccezione che viene generata quando le aspettative riguardo le intestazioni di un messaggio SOAP non vengono soddisfatte quando il messaggio viene elaborato.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio contenuto nell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> che utilizza il messaggio specificato e un valore che indica se l'intestazione del messaggio è un duplicato oppure manca.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="isDuplicate">true se l'intestazione multipla del messaggio è un duplicato; false se non è presente alcuna intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> che utilizza il messaggio specificato e l'eccezione interna che ha causato l'eccezione.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che contiene l'eccezione interna che ha causato l'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> che utilizza il messaggio, il nome intestazione e lo spazio dei nomi specificati.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> che utilizza il messaggio, il nome dell'intestazione e lo spazio dei nomi specificati nonché un valore che indica se l'intestazione del messaggio è un duplicato oppure manca.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
      <param name="isDuplicate">true se l'intestazione multipla del messaggio è un duplicato; false se non è presente alcuna intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> che utilizza il messaggio, il nome dell'intestazione e lo spazio dei nomi specificati, un valore che indica se l'intestazione del messaggio è un duplicato oppure manca e l'eccezione interna che ha causato l'eccezione.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
      <param name="isDuplicate">true se l'intestazione multipla del messaggio è un duplicato; false se non è presente alcuna intestazione del messaggio.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che contiene l'eccezione interna che ha causato l'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageHeaderException" /> che utilizza il messaggio, il nome dell'intestazione e lo spazio dei nomi specificati nonché l'eccezione interna che ha causato l'eccezione.</summary>
      <param name="message">Messaggio di eccezione.</param>
      <param name="headerName">Nome dell'intestazione del messaggio.</param>
      <param name="ns">Spazio dei nomi dell'intestazione del messaggio.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che contiene l'eccezione interna che ha causato l'eccezione.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Ottiene il nome dell'intestazione SOAP che ha causato l'eccezione.</summary>
      <returns>Nome dell'intestazione SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Ottiene lo spazio dei nomi dell'intestazione SOAP che ha causato l'eccezione.</summary>
      <returns>Spazio dei nomi dell'intestazione SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Ottiene un valore che indica se sono presenti più intestazioni di messaggio o nessuna.</summary>
      <returns>true se l'intestazione multipla del messaggio è un duplicato; false se non è presente alcuna intestazione del messaggio.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controlla il nome della richiesta e i nomi dei parametri di risposta. Non può essere utilizzato con <see cref="T:System.ServiceModel.Channels.Message" /> o con i contratti di messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Ottiene o imposta l'attributo nome del parametro di XML Schema.</summary>
      <returns>Attributo nome del parametro in XSD.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Fornisce l'accesso al contesto di esecuzione di un metodo di servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContext" /> che utilizza l'oggetto <see cref="T:System.ServiceModel.IContextChannel" /> specificato in un'applicazione client. </summary>
      <param name="channel">
        <see cref="T:System.ServiceModel.IContextChannel" /> utilizzato per creare un nuovo client <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Il canale è null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Ottiene o imposta il contesto di esecuzione per il thread corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationContext" /> che rappresenta il contesto di messaggistica e di esecuzione del metodo corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Ottiene le intestazioni dei messaggi in ingresso per l'oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> contenente le intestazioni dei messaggi in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Ottiene le proprietà del messaggio per il messaggio in ingresso nell'oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenente le proprietà del messaggio sul messaggio in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Ottiene la versione del messaggio SOAP in ingresso per l'oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Versione SOAP del messaggio in ingresso.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Questa proprietà è destinata a essere utilizzata dal sistema e non deve essere chiamata dagli utenti.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Si verifica al completamento dell'operazione.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Ottiene le intestazioni dei messaggi in uscita per l'oggetto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> contenente le intestazioni dei messaggi in uscita per l'oggetto <see cref="T:System.ServiceModel.OperationContext" /> attivo.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Ottiene le proprietà del messaggio per il messaggio in uscita nell'oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contenente le proprietà del messaggio sul messaggio in uscita.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Ottiene o imposta l'implementazione del contesto di richiesta per questo metodo.</summary>
      <returns>Implementazione <see cref="T:System.ServiceModel.Channels.RequestContext" /> oppure null in assenza del contesto di richiesta.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Crea un blocco che funge da ambito per un oggetto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> che utilizza l'oggetto <see cref="T:System.ServiceModel.IContextChannel" /> specificato per creare un nuovo <see cref="T:System.ServiceModel.OperationContext" /> per l'ambito.</summary>
      <param name="channel">Canale da utilizzare nella creazione dell'ambito per un nuovo <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContextScope" /> per creare un ambito per l'oggetto <see cref="T:System.ServiceModel.OperationContext" /> specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.OperationContext" /> attivo nell'ambito creato.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Ripristina l'oggetto <see cref="T:System.ServiceModel.OperationContext" /> originale nel contesto attivo e ricicla l'oggetto <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indica che un metodo definisce un'operazione che fa parte di un contratto di servizio in un'applicazione Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Ottiene o imposta l'azione WS-Addressing del messaggio di richiesta. </summary>
      <returns>Azione da utilizzare nella generazione dell'intestazione Action di WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indica che un'operazione viene implementata in modo asincrono utilizzando una coppia di metodi Begin&lt;methodName&gt; e End&lt;methodName&gt; in un contratto di servizio. </summary>
      <returns>true se il metodo Begin&lt;methodName&gt; corrisponde a un metodo End&lt;methodName&gt; e può essere trattato dall'infrastruttura come un'operazione che viene implementata come una coppia di metodi asincrona sull'interfaccia di servizio; in caso contrario, false. L'impostazione predefinita è false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Ottiene o imposta un valore che indica se un'operazione restituisce un messaggio di risposta.</summary>
      <returns>true se un'operazione non restituisce un messaggio di risposta; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Ottiene o imposta il nome dell'operazione.</summary>
      <returns>Nome dell'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Ottiene o imposta il valore dell'azione SOAP per il messaggio di risposta dell'operazione.</summary>
      <returns>Valore dell'azione SOAP per il messaggio di risposta.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Rappresenta lo stile SOAP che determina il modo in cui vengono formattati i metadati WSDL per il servizio.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Causa il fatto che la rappresentazione WSDL contenga un solo elemento che rappresenta il documento che viene scambiato per l'operazione.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Causa la rappresentazione WSDL dei messaggi scambiati per un'operazione e contiene i parametri come se si trattasse di una RPC (remote procedure call).</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Eccezione osservata sul client che viene generata quando la comunicazione con una parte remota è impossibile a causa di protocolli di trasferimento dati non corrispondenti.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ProtocolException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ProtocolException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ProtocolException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Eccezione che viene generata quando è stata superata una quota messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.QuotaExceededException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.QuotaExceededException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.QuotaExceededException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Eccezione che viene generata quando un server è troppo occupato per accettare un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServerTooBusyException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServerTooBusyException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Eccezione che viene generata quando l'attivazione di un servizio non riesce.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceActivationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceActivationException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceActivationException" /> con un messaggio di errore specificato e l'eccezione interna fornita.  </summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> che ha causato la generazione dell'eccezione corrente. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indica che un'interfaccia o una classe definisce un contratto di servizio in un'applicazione client Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Ottiene o imposta il tipo di contratto di callback in caso di contratto duplex.</summary>
      <returns>
        <see cref="T:System.Type" /> che indica il contratto di callback. L'impostazione predefinita è null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Ottiene o imposta il nome utilizzato per individuare il servizio nel file di configurazione di un'applicazione.</summary>
      <returns>Nome utilizzato per individuare l'elemento servizio nel file di configurazione di un'applicazione. Il valore predefinito è il nome della classe di implementazione del servizio.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Ottiene o imposta il nome dell'elemento &lt;portType&gt; in WSDL (Web Services Description Language). </summary>
      <returns>Il valore predefinito è il nome della classe o dell'interfaccia a cui è applicato l'oggetto <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'elemento &lt;portType&gt; in WSDL (Web Services Description Language).</summary>
      <returns>Spazio dei nomi WSDL dell'elemento &lt;portType&gt;. Il valore predefinito è "http://tempuri.org". </returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Specifica i tipi noti che devono essere utilizzati da un servizio durante la serializzazione o la deserializzazione.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> e specifica il nome di un metodo che restituisce i tipi noti.</summary>
      <param name="methodName">Nome di un metodo che restituisce i tipi noti.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con il nome di un metodo che restituisce i tipi noti e il tipo che contiene il metodo (o i metodi) che restituisce i tipi noti.</summary>
      <param name="methodName">Nome di un metodo che restituisce i tipi noti.</param>
      <param name="declaringType">Tipo che può utilizzare i tipi noti nel relativo oggetto grafico.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con il tipo noto specificato.</summary>
      <param name="type">Specifica un tipo noto che può essere utilizzato in un parametro o in un valore restituito definito dal servizio.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Ottiene il tipo contenente i metodi che restituiscono i tipi noti.</summary>
      <returns>Metodi che restituiscono i tipi noti.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Ottiene il nome di un metodo che restituisce l'insieme di tipi noti.</summary>
      <returns>Nome del metodo che restituisce i tipi noti.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Tipo noto che può essere incluso in un oggetto grafico.</summary>
      <returns>
        <see cref="T:System.Type" /> del tipo noto.</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contiene il messaggio ricevuto da un canale e non può essere associato a nessuna richiesta in sospeso.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Ottiene il messaggio sconosciuto che ha causato l'evento.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> che ha causato l'evento.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Rappresenta un'intestazione che incapsula un elemento delle informazioni di indirizzo utilizzato per identificare o interagire con un endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeader" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con un valore, un nome e uno spazio dei nomi specificati.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con l'oggetto <paramref name="name" /> specificato e con <paramref name="ns" /> che contiene l'elemento delle informazioni specificato da <paramref name="value" />.</returns>
      <param name="name">Nome dell'intestazione di indirizzo.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo.</param>
      <param name="value">Elemento informazioni per l'intestazione di indirizzo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null oppure <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con un nome specificato e uno spazio dei nomi che utilizza un formattatore specificato per serializzare l'elemento informazioni di un oggetto specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con l'oggetto <paramref name="name" /> specificato e con <paramref name="ns" /> che contiene l'elemento delle informazioni specificato da <paramref name="value" />.</returns>
      <param name="name">Nome dell'intestazione di indirizzo.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo.</param>
      <param name="value">Elemento informazioni per l'intestazione di indirizzo.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzato per serializzare l'oggetto specificato nel parametro <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oppure <paramref name="serializer" /> è null oppure <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determina se l'elemento informazioni in un oggetto specificato è uguale all'oggetto contenuto nell'intestazione di indirizzo corrente.</summary>
      <returns>true se l'elemento informazioni in un <paramref name="obj" /> specificato è equivalente all'elemento informazioni contenuto nell'intestazione di indirizzo corrente; in caso contrario, false. In particolare, restituisce false se <paramref name="obj" /> è null.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> da confrontare con l'oggetto contenuto nell'intestazione di indirizzo corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Restituisce un lettore XML in grado di serializzare l'oggetto intestazione di indirizzo corrente.</summary>
      <returns>Istanza di <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di serializzare l'oggetto intestazione di indirizzo corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Fornisce un codice hash univoco per un'intestazione di indirizzo. </summary>
      <returns>Codice hash univoco per l'intestazione di indirizzo corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializza l'elemento informazioni dall'intestazione indirizzo corrente a un oggetto di un tipo specificato.</summary>
      <returns>Istanza di una classe di tipo <paramref name="T" /> con i relativi campi e proprietà impostati sui valori forniti dall'oggetto intestazione di indirizzo corrente.</returns>
      <typeparam name="T">Classe di tipo <paramref name="T" /> con i relativi campi e proprietà impostati sui valori forniti dall'oggetto intestazione di indirizzo corrente.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializza l'elemento informazioni dall'intestazione di indirizzo corrente a un oggetto di un tipo specificato che utilizza un formattatore specificato per serializzare queste informazioni.</summary>
      <returns>Istanza di una classe di tipo <paramref name="T" /> con i relativi campi e proprietà impostati sui valori forniti dall'oggetto intestazione di indirizzo corrente.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> utilizzato per deserializzare l'elemento informazioni dall'oggetto intestazione di indirizzo corrente.</param>
      <typeparam name="T">Classe di tipo <paramref name="T" /> con i relativi campi e proprietà impostati sui valori forniti dall'oggetto intestazione di indirizzo corrente.</typeparam>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="serializer" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>Se implementato, ottiene il nome dell'intestazione di indirizzo.</summary>
      <returns>Nome dell'intestazione di indirizzo.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>Se implementato, ottiene lo spazio dei nomi dell'intestazione di indirizzo.</summary>
      <returns>Spazio dei nomi dell'intestazione di indirizzo.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Se sottoposto a override in una classe derivata, viene richiamato quando il contenuto dell'intestazione di indirizzo viene scritto in un flusso o in un file.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il contenuto dell'intestazione di indirizzo in un flusso o in un file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Se sottoposto a override in una classe derivata, viene richiamato quando il contenuto dell'intestazione di indirizzo comincia a essere scritto in un flusso o in un file.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'intestazione di indirizzo in un flusso o in un file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Esegue il wrapping dell'intestazione di indirizzo come intestazione del messaggio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> che esegue il wrapping dell'intestazione di indirizzo corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive l'intestazione di indirizzo in un flusso o in un file utilizzando un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'intestazione di indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="writer" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Scrive l'intestazione di indirizzo in un flusso o in un file utilizzando un oggetto <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere l'intestazione di indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="writer" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive il contenuto dell'intestazione di indirizzo in un flusso o in un file.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il contenuto dell'intestazione di indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="writer" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Inizia a scrivere il contenuto dell'intestazione di indirizzo in un flusso o in un file.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'intestazione di indirizzo in un flusso o in un file.</param>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="writer" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Rappresenta un insieme di intestazioni di indirizzo thread-safe di sola lettura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> da un insieme enumerabile di intestazioni di indirizzo.</summary>
      <param name="addressHeaders">Insieme <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.ServiceModel.Channels.AddressHeader" /> utilizzati per inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentException">Una delle intestazioni di indirizzo nel <paramref name="addressHeaders" /> parametro è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Aggiunge le intestazioni della raccolta alle intestazioni di un messaggio specificato.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> a cui vengono aggiunte le intestazioni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Trova tutte le intestazioni di indirizzo nell'insieme con il nome e lo spazio dei nomi specificati.</summary>
      <returns>
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> contenente tutte le intestazioni nell'insieme con il nome e lo spazio dei nomi specificati.</returns>
      <param name="name">Nome dell'intestazione di indirizzo da trovare.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo da trovare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Trova la prima intestazione di indirizzo dell'insieme con il nome e lo spazio dei nomi specificati.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> dell'insieme con il nome e lo spazio dei nomi specificati.</returns>
      <param name="name">Nome dell'intestazione di indirizzo da trovare.</param>
      <param name="ns">Spazio dei nomi dell'intestazione di indirizzo da trovare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Esistono più intestazioni con <paramref name="name" /> e <paramref name="ns" /> specificati.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Versione di WS-Addressing associata a un messaggio SOAP o riconosciuta da un endpoint.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Ottiene la versione di indirizzamento che indica che non è utilizzata alcuna versione di WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> che non utilizza una versione di WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Stringa che rappresenta la versione di indirizzamento corrente.</summary>
      <returns>Versione di indirizzamento corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Ottiene un identificatore per la versione di indirizzo associata a WS-Addressing 1.0.</summary>
      <returns>Istanza singleton che identifica l'oggetto <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associato a WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Elemento di binding che specifica il formato binario .NET per XML utilizzato per la codifica dei messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Compila lo stack di channel factory sul client che crea un tipo di canale specificato per un contesto specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> per il contesto specificato.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il canale.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Crea un nuovo oggetto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> inizializzato dall'oggetto corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> con valori di proprietà uguali a quelli dell'elemento corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea una factory per i codificatori di messaggi binari che impiegano le versioni di SOAP e WS-Addressing e la codifica dei caratteri specificata dall'elemento di binding della codifica corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> creato da questo elemento di binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Ottiene o imposta le versioni di messaggio SOAP e di WS-Addressing utilizzate o previste.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato o previsto.</returns>
      <exception cref="T:System.ArgumentNullException">L'impostazione del valore è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore impostato è una versione di envelope non supportata.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contiene gli elementi di binding che specificano i protocolli, i trasporti e i codificatori di messaggi utilizzati per la comunicazione tra i client e i servizi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.Binding" /> con un nome e uno spazio dei nomi predefiniti. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.Binding" /> da un'associazione del servizio specificato.</summary>
      <param name="name">
        <see cref="P:System.ServiceModel.Channels.Binding.Name" /> dell'associazione.</param>
      <param name="ns">
        <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> dell'associazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è null oppure una stringa vuota.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Compila lo stack di channel factory sul client che crea un tipo di canale specificato e che soddisfa le funzionalità specificate da una matrice di oggetti.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> che soddisfa le funzionalità specificate dall'insieme.</returns>
      <param name="parameters">Matrice di oggetti che specifica i requisiti per la channel factory che viene compilata.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
      <exception cref="T:System.InvalidOperationException">L'elemento di trasporto manca oppure non è corretto o lo schema non è valido oppure la versione del messaggio non è specificata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Compila lo stack di channel factory sul client che crea un tipo di canale specificato e che soddisfa le funzionalità specificate da insieme di parametri di associazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> che soddisfa le funzionalità specificate dall'insieme.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che specifica i requisiti per la channel factory compilata.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
      <exception cref="T:System.InvalidOperationException">L'elemento di trasporto manca oppure non è corretto o lo schema non è valido oppure la versione del messaggio non è specificata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Restituisce un valore che indica se l'associazione corrente può compilare uno stack di channel factory sul client che soddisfa i requisiti specificati da una matrice di oggetti.</summary>
      <returns>true se lo stack di channel factory può essere compilato sul client; in caso contrario, false.</returns>
      <param name="parameters">Matrice di oggetti che specifica i requisiti per la channel factory che viene compilata.</param>
      <typeparam name="TChannel">Tipo di canale per il quale la factory viene sottoposta a test.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Restituisce un valore che indica se l'associazione corrente può compilare uno stack di channel factory sul client che soddisfa l'insieme di parametri di associazione specificati.</summary>
      <returns>true se lo stack di channel factory può essere compilato sul client; in caso contrario, false.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che specifica i requisiti per la channel factory che viene compilata.</param>
      <typeparam name="TChannel">Tipo di canale per il quale la factory viene sottoposta a test.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo fornito per la chiusura di una connessione prima che il trasporto generi un'eccezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di chiusura prima del timeout. Il valore predefinito è 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è inferiore a zero o troppo grande.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>Se sottoposto a override in una classe derivata, crea un insieme che contiene gli elementi di binding che sono parte dell'associazione corrente. </summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> contenente gli elementi di binding dell'oggetto associazione corrente nell'ordine giusto.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack dell'associazione.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> che specifica i requisiti per il canale che viene compilato.</param>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Ottiene la versione di messaggio utilizzata dai client e dai servizi configurati con l'associazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato dai client e dai servizi configurati con l'associazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Ottiene o imposta il nome dell'associazione.</summary>
      <returns>Nome dell'associazione. Il nome predefinito è null.</returns>
      <exception cref="T:System.ArgumentException">Il valore impostato non può essere null o una stringa vuota.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi XML dell'associazione.</summary>
      <returns>Spazio dei nomi XML dell'associazione. Il valore predefinito è "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">Il valore imostato non può essere null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo fornito per l'apertura di una connessione prima che il trasporto generi un'eccezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di apertura prima del timeout. Il valore predefinito è 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è inferiore a zero o troppo grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo per il quale una connessione può rimanere attiva e durante il quale non vengono ricevuti messaggi dell'applicazione prima che venga rilasciata.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione dell'applicazione per ricevere un messaggio prima del timeout. Il valore predefinito è 10 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è inferiore a zero o troppo grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>Se implementato in una classe derivata, imposta lo schema URI che specifica il trasporto utilizzato dalle channel factory compilate dalle associazioni.</summary>
      <returns>Schema URI utilizzato dai canali che vengono creati dalle factory compilate dall'associazione corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Ottiene o imposta l'intervallo di tempo fornito per il completamento di un'operazione di scrittura prima che il trasporto generi un'eccezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di scrittura prima del timeout. Il valore predefinito è 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è inferiore a zero o troppo grande.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Fornisce informazioni sugli indirizzi, le associazioni, gli elementi di associazione e i parametri di associazione richiesti per compilare le channel factory in un client Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingContext" /> per un'associazione specificata e un insieme di parametri di associazione.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> per il canale.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> per il canale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Ottiene l'associazione per il canale compilato nel contesto corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> per il canale compilato nel contesto corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Ottiene l'insieme di parametri di associazione per il canale compilato nel contesto corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> per il canale compilato nel contesto corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Compila la channel factory interna per i canali di un tipo specificato al di sotto della channel factory corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> che rappresenta la channel factory interna della channel factory corrente.</returns>
      <typeparam name="TChannel">Tipo di oggetto <see cref="T:System.ServiceModel.Channels.IChannel" /> prodotto dalla channel factory interna.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Restituisce un valore che indica se la channel factory interna è in grado di produrre il tipo di canale specificato.</summary>
      <returns>true se la channel factory interna è in grado di produrre l'oggetto <paramref name="TChannel" />specificato; in caso contrario, false.</returns>
      <typeparam name="TChannel">Tipo di oggetto <see cref="T:System.ServiceModel.Channels.IChannel" /> prodotto dalla channel factory interna.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Restituisce una copia del contesto di compilazione dei canali corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> che è una copia del contesto di compilazione dei canali corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack dell'associazione.</summary>
      <returns>Oggetto con tipo <paramref name="T " /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Ottiene gli elementi di binding che sono utilizzati da altri elementi di binding per costruire lo stack di canali.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> contenente gli elementi di binding utilizzati da altri elementi di binding per costruire lo stack di canali.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Elementi delle associazioni che compilano le channel factory per vari tipi di canali utilizzati per elaborare i messaggi in uscita in un client Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> da un elemento di binding specificato.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> da clonare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Inizializza una channel factory per produrre canali di un tipo specificato dal contesto di associazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> inizializzato da <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di binding. </param>
      <typeparam name="TChannel">Tipo di canale compilato dalla factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Restituisce un valore che indica se l'elemento di binding è in grado di compilare una channel factory per un tipo di canale specifico.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> può essere compilato dall'elemento di binding; in caso contrario, false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di binding. </param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>Se sottoposto a override in una classe derivata, restituisce una copia dell'oggetto elemento di binding.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> che costituisce un clone completo dell'originale.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Se sottoposto a override in una classe derivata, restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack dell'associazione.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di binding.</param>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Rappresenta l'insieme di elementi di binding utilizzati in un'associazione.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> da un insieme enumerabile di elementi di binding.</summary>
      <param name="elements">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di tipo generico <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> da una matrice di elementi di associazione.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Aggiunge gli elementi di binding da una matrice all'insieme di elementi di binding.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Crea una copia dell'insieme di elementi di binding.</summary>
      <returns>Copia dell'oggetto <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Restituisce un valore che indica se un tipo specificato di elemento di binding appartiene all'insieme di elementi di binding.</summary>
      <returns>true se il tipo di elemento di binding specificato è contenuto nell'insieme; in caso contrario, false.</returns>
      <param name="bindingElementType">Tipo di elemento di binding sottoposto a test per l'inclusione nell'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Restituisce il primo elemento di un tipo specificato di un insieme di elementi di binding.</summary>
      <returns>Elemento di tipo <see cref="T:System.Type" /> se trovato; se non viene trovato, 0 se <paramref name="T" /> è un tipo di valore e null se <paramref name="T" /> è un tipo di riferimento.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> dell'elemento da trovare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Restituisce tutti gli elementi di un tipo specificato di un insieme di elementi di binding.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tutti gli elementi di tipo <see cref="T:System.Type" /> , se trovati; se non vengono trovati, 0 se <paramref name="T" /> è un tipo di valore e null se <paramref name="T" /> è un tipo di riferimento.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> dell'elemento da trovare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserisce un elemento di binding in una posizione specificata all'interno di un insieme di elementi di binding.</summary>
      <param name="index">Posizione dell'insieme in cui inserire l'elemento di binding.</param>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Rimuove un elemento di binding di un tipo specificato dall'insieme di elementi di binding.</summary>
      <returns>Elemento di tipo <see cref="T:System.Type" /> rimosso.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> dell'elemento da trovare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Rimuove tutti gli elementi di binding di un tipo specificato dall'insieme di elementi di binding.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tutti gli elementi di tipo <see cref="T:System.Type" /> trovati.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> dell'elemento da trovare.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Sostituisce un elemento di binding in corrispondenza dell'indice specificato nell'insieme di elementi di binding.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Nuovo valore per l'elemento <see cref="T:System.ServiceModel.Channels.BindingElement" /> nell'oggetto <paramref name="index" /> specificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Rappresenta un insieme di parametri di binding in cui vengono archiviate le informazioni utilizzate dagli elementi di binding per compilare le factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Rappresenta il writer del corpo del messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BodyWriter" /> che indica in modo esplicito se utilizzare il buffer.</summary>
      <param name="isBuffered">true se il writer del corpo può essere chiamato più volte; in caso contrario, false.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Ottiene un valore che indica se il metodo di scrittura può essere utilizzato più volte.</summary>
      <returns>true se il writer del corpo può essere chiamato più volte; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Se implementato, fornisce un punto di estensibilità quando viene scritto il contenuto del corpo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il corpo del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive il contenuto del corpo del messaggio.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere il corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Se implementato in una classe derivata, è possibile utilizzare la classe <see cref="T:System.ServiceModel.Channels.BufferManager" /> per gestire un pool di buffer. Il pool e i relativi buffer vengono creati quando si crea un'istanza di questa classe e il pool di buffer viene recuperato dalla procedura di Garbage Collection. Ogni volta che è necessario utilizzare un buffer, è sufficiente estrarne uno dal pool, utilizzarlo e restituirlo al pool una volta terminata l'operazione. Si tratta di un processo molto più rapido e con un utilizzo di risorse inferiore rispetto alla creazione e all'eliminazione di un buffer ogni volta che è necessario utilizzarne uno.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.BufferManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Rilascia i buffer attualmente memorizzati nella cache del gestore.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Crea un nuovo BufferManager con una dimensione minima e una massima specificate per il pool di buffer per ogni singolo buffer del pool.</summary>
      <returns>Restituisce un oggetto <see cref="T:System.ServiceModel.Channels.BufferManager" /> con i parametri specificati.</returns>
      <param name="maxBufferPoolSize">Dimensione massima del pool.</param>
      <param name="maxBufferSize">Dimensione massima di un singolo buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> o <paramref name="maxBufferSize" /> è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Restituisce un buffer al pool.</summary>
      <param name="buffer">Riferimento al buffer restituito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> il riferimento non può essere null.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="buffer" /> non corrisponde alla proprietà della lunghezza del buffer del pool.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Ottiene un buffer almeno della dimensione specificata dal pool. </summary>
      <returns>Matrice di byte delle dimensioni richieste del buffer.</returns>
      <param name="bufferSize">Dimensioni, in byte, del buffer di richiesta.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> non può essere inferiore a zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Fornisce l'implementazione di base per i canali personalizzati.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelBase" />. </summary>
      <param name="channelManager">
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> che fornisce i timeout predefiniti per le operazioni di canale (invio, ricezione, apertura e chiusura).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di chiusura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di apertura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di ricezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di ricezione prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di invio.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di invio prima del timeout.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Restituisce l'oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Ottiene il gestore canali associato al canale corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> associato al canale corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Richiamato durante la transizione di un oggetto di comunicazione allo stato di chiusura.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di chiusura richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di chiusura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di apertura richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di ricezione richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di ricezione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di invio richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di invio.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Fornisce un'implementazione di base comune per tutte le channel factory personalizzate.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> con i timeout di comunicazione predefiniti specificati.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> che specifica i timeout predefiniti per le operazioni di apertura, invio, ricezione e chiusura durante lo scambio di messaggi. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di chiusura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di apertura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di ricezione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di ricezione prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Ottiene l'intervallo di tempo predefinito fornito per il completamento di un'operazione di invio.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di invio prima del timeout.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Restituisce l'oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo la transizione di questo allo stato di chiusura a causa della chiamata di un'operazione di interruzione asincrona.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere ciascuno dei canali creati dalla factory.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona alla chiusura. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione alla chiusura prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona alla chiusura.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona alla chiusura.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserisce l'elaborazione su un oggetto di comunicazione dopo che questo esegue la transizione allo stato di apertura, che deve essere completata entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione alla chiusura prima del timeout.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere i canali aperti dalla factory.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Fornisce un'implementazione di base comune per consentire alle channel factory del client di creare canali di un tipo specificato connesso a un indirizzo specificato.</summary>
      <typeparam name="TChannel">Tipo di canale prodotto dalla factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> con i timeout di comunicazione predefiniti specificati.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> che specifica i timeout predefiniti per le operazioni di apertura, invio, ricezione e chiusura durante lo scambio di messaggi.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un tipo di canale particolare con un indirizzo di endpoint specificato.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> con l'oggetto <paramref name="address" /> specificato.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> dell'endpoint remoto al quale il canale invia i messaggi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un tipo di canale particolare con gli indirizzi di trasporto ed endpoint specificati.</summary>
      <returns>Tipo di canale <paramref name="TChannel" /> con gli indirizzi remoto e di trasporto specificati.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> dell'endpoint remoto al quale il canale invia i messaggi.</param>
      <param name="via">
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale di output.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> o <paramref name="via" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Interrompe ciascun canale gestito dalla channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere tutti i canali associati alla channel factory entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona alla chiusura. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione alla chiusura prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento asincrono dell'operazione di chiusura.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Chiude tutti i canali associati con la channel factory entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione alla chiusura prima del timeout.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Se implementato in una classe derivata, fornisce un punto di estensibilità al momento della creazione dei canali.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> con gli indirizzi specificati.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> dell'endpoint remoto al quale il canale invia i messaggi.</param>
      <param name="via">
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere tutti i canali associati alla channel factory entro un intervallo di tempo specificato.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Conferma che la channel factory è aperta e pronta per creare canali.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">La channel factory corrente non è nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Fornisce un'implementazione di base per la gestione dei timeout predefiniti che sono associati al canale e alle factory di listener.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>Se sottoposto a override in una classe derivata, ottiene l'intervallo di tempo predefinito di cui dispone un canale per completare la ricezione di un messaggio.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione del canale per completare la ricezione di un messaggio prima del timeout una volta che il metodo di ricezione è stato richiamato.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>Se sottoposto a override in una classe derivata, ottiene l'intervallo di tempo predefinito di cui dispone un canale per completare l'invio di un messaggio.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione del canale per completare l'invio di un messaggio prima del timeout una volta che il metodo di invio è stato richiamato.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di chiusura richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di chiusura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di apertura richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di ricezione richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di ricezione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ottiene l'intervallo di tempo dopo il quale si verifica il timeout del metodo di invio richiamato da un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo di attesa affinché si verifichi il timeout del metodo di invio.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Rappresenta un insieme di parametri di canale.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
      <param name="channel">Canale i cui parametri sono presenti in questo insieme.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Ottiene il canale i cui parametri sono presenti in questo insieme. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannel" /> i cui parametri sono presenti in questo insieme.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Cancella l'insieme di parametri.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserisce l'elemento specificato nell'insieme utilizzando l'indice specificato.</summary>
      <param name="index">Indice dell'elemento nell'insieme.</param>
      <param name="item">Elemento da aggiungere all'insieme.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Aggiunge i parametri dell'insieme corrente all'oggetto <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> di un canale specificato.</summary>
      <param name="innerChannel">Canale che riceve i parametri dell'insieme corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Rimuove un parametro dall'insieme.</summary>
      <param name="index">Indice del parametro da rimuovere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Sostituisce un elemento nell'insieme in corrispondenza di un indice specificato.</summary>
      <param name="index">Indice dell'elemento da sostituire.</param>
      <param name="item">Valore dell'elemento di sostituzione.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Fornisce un'implementazione di base comune per la macchina a stati di base comune a tutti gli oggetti del sistema orientati alla comunicazione, inclusi i canali e le channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> con il blocco esclusivo reciproco per proteggere le transizioni di stato specificate.</summary>
      <param name="mutex">Blocco esclusivo reciproco che protegge l'istanza della classe durante una transizione di stato.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Causa la transizione immediata dell'oggetto di comunicazione dal relativo stato corrente allo stato di chiusura.</summary>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" /> della classe di base o il metodo <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" /> della classe di base non viene chiamato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere l'oggetto di comunicazione con un timeout specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di chiusura asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di chiusura prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di chiusura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di chiusura asincrona.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per chiudere l'oggetto di comunicazione entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di apertura asincrona. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di apertura asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di apertura asincrona.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Causa la transizione dell'oggetto di comunicazione dal relativo stato corrente allo stato chiuso.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato corrente allo stato chiuso entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di chiusura prima del timeout.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> è stato chiamato su un oggetto nello stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Si verifica quando un oggetto di comunicazione effettua la transizione a uno stato chiuso.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Si verifica quando un oggetto di comunicazione effettua la transizione a uno stato di chiusura.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>Se sottoposto a override in una classe derivata, ottiene l'intervallo di tempo fornito per il completamento di un'operazione di chiusura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di chiusura prima del timeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>Se sottoposto a override in una classe derivata, ottiene l'intervallo di tempo fornito per il completamento di un'operazione di apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predefinito che specifica il tempo a disposizione per il completamento di un'operazione di apertura prima del timeout.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per chiudere un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per aprire un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Causa la transizione dell'oggetto di comunicazione dal relativo stato corrente allo stato di errore.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Si verifica quando un oggetto di comunicazione effettua la transizione a uno stato di errore.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Ottiene il tipo di oggetto di comunicazione.</summary>
      <returns>Tipo di oggetto di comunicazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Ottiene un valore che indica se l'oggetto di comunicazione è stato eliminato.</summary>
      <returns>true se l'oggetto di comunicazione si trova in uno stato chiuso; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Se implementato in una classe derivata, inserisce l'elaborazione in un oggetto di comunicazione dopo la transizione di questo allo stato di chiusura a causa della chiamata di un'operazione di interruzione asincrona.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Se implementato in una classe derivata, inserisce l'elaborazione dopo la transizione di un oggetto di comunicazione allo stato di chiusura a causa della chiamata di un'operazione di chiusura asincrona.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona alla chiusura. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione alla chiusura prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona alla chiusura.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona alla chiusura.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Se implementato in una classe derivata, inserisce l'elaborazione in un oggetto di comunicazione dopo la transizione di questo allo stato di apertura a causa della chiamata di un'operazione di apertura asincrona.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona all'apertura. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione all'apertura prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona all'apertura.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona all'apertura.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Se implementato in una classe derivata, inserisce l'elaborazione in un oggetto di comunicazione dopo la transizione di questo allo stato di chiusura a causa della chiamata di un'operazione di chiusura asincrona.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione alla chiusura prima del timeout.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Richiamato durante la transizione di un oggetto di comunicazione allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Richiamato durante la transizione di un oggetto di comunicazione allo stato di chiusura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Se implementato in una classe derivata, completa un'operazione asincrona alla chiusura di un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Se implementato in una classe derivata, completa un'operazione asincrona all'apertura di un oggetto di comunicazione.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserisce l'elaborazione in un oggetto di comunicazione dopo la transizione di questo allo stato di errore a causa della chiamata di un'operazione di errore asincrona.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Se implementato in una classe derivata, inserisce l'elaborazione su un oggetto di comunicazione dopo che questo esegue la transizione allo stato di apertura, che deve essere completata entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione all'apertura prima del timeout.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Richiamato durante la transizione di un oggetto di comunicazione allo stato aperto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Richiamato durante la transizione di un oggetto di comunicazione allo stato di apertura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato creato allo stato aperto.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo predefinito assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Causa la transizione dell'oggetto di comunicazione dallo stato creato allo stato aperto entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di apertura prima del timeout.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è minore di zero.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere modificato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
      <exception cref="T:System.TimeoutException">L'intervallo di tempo specificato da <paramref name="timeout" /> che è stato assegnato all'operazione è stato superato prima che l'operazione fosse completata.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Si verifica quando un oggetto di comunicazione effettua la transizione a uno stato aperto.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Si verifica quando un oggetto di comunicazione effettua la transizione a uno stato di apertura.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Ottiene un valore che indica lo stato corrente dell'oggetto di comunicazione.</summary>
      <returns>Valore dell'enumerazione <see cref="T:System.ServiceModel.CommunicationState" /> che indica lo stato corrente dell'oggetto.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Ottiene il blocco esclusivo reciproco che protegge l'istanza della classe durante una transizione di stato.</summary>
      <returns>Blocco esclusivo reciproco che protegge l'istanza della classe durante una transizione di stato.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Genera un'eccezione se l'oggetto di comunicazione viene eliminato.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Genera un'eccezione se la proprietà <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> dell'oggetto di comunicazione non è impostata sullo stato <see cref="F:System.ServiceModel.CommunicationState.Created" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione è in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Genera un'eccezione se l'oggetto di comunicazione non si trova nello stato <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione non si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Created" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" /> e non può essere utilizzato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e non può essere modificato.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e non può essere modificato.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Definisce un'associazione da un elenco di elementi di binding. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> con gli elementi di binding di uno stack di canali completo.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> contenente gli elementi di associazione dello stack di canali in ordine discendente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> dai valori di un'associazione specificata.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilizzato per inizializzare l'associazione personalizzata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> da una matrice di elementi di associazione.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare l'associazione personalizzata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.CustomBinding" /> da una matrice di elementi di binding con un nome e uno spazio dei nomi specificato.</summary>
      <param name="name">Nome dell'associazione.</param>
      <param name="ns">Spazio dei nomi dell'associazione.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizzato per inizializzare l'associazione personalizzata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Restituisce un insieme generico degli elementi di binding dell'associazione personalizzata.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> contenente gli elementi di binding dell'associazione personalizzata.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Ottiene gli elementi di binding dell'associazione personalizzata.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> contenente gli elementi di binding dell'associazione personalizzata.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Ottiene lo schema URI per il trasporto utilizzato dall'associazione personalizzata.</summary>
      <returns>Schema URI per il trasporto utilizzato dall'associazione personalizzata; oppure una stringa vuota in assenza di trasporto (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> è null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Converte le eccezioni generate da un canale in messaggi di errore SOAP conformi al protocollo del canale.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Ottiene il convertitore di errori predefinito.</summary>
      <returns>Istanza dell'oggetto <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Struttura <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Se implementato in una classe derivata, prova a creare l'eccezione.</summary>
      <returns>true è stato convertito correttamente; in caso contrario, false. L'impostazione predefinita è false.</returns>
      <param name="message">Errore <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="fault">L'errore.</param>
      <param name="exception">Se la conversione ha esito positivo, l'oggetto <see cref="T:System.Exception" /> SOAP restituito come parametro out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Se implementato in una classe derivata, prova a creare il messaggio di errore dopo che l'errore è stato convertito in un'eccezione SOAP.</summary>
      <returns>true se il messaggio di errore è stato creato; in caso contrario, false. L'impostazione predefinita è false.</returns>
      <param name="exception">Eccezione SOAP.</param>
      <param name="message">Messaggio di errore restituito come parametro out.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> ha restituito true ma <paramref name="message" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Esegue il wrapping di <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> con il controllo degli errori.</summary>
      <returns>true è stato convertito correttamente; in caso contrario, false. L'impostazione predefinita è false.</returns>
      <param name="message">Il messaggio di errore.</param>
      <param name="fault">L'errore.</param>
      <param name="exception">Se la conversione ha esito positivo, l'eccezione SOAP restituita come parametro out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> o <paramref name="fault" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> ha restituito true, ma <paramref name="exception" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> ha restituito false, ma <paramref name="exception" /> non è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>Consente la gestione della modalità di gestione dei cookie HTTP nelle richieste e nelle risposte HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> da un elemento di binding specificato.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> da clonare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Inizializza una channel factory per produrre canali di un tipo specificato dal contesto di associazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> inizializzato da <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> che fornisce il contesto per l'elemento di binding.</param>
      <typeparam name="TChannel">Tipo di canale compilato dalla factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>Restituisce una copia dell'oggetto elemento di binding corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> che costituisce un clone completo dell'originale.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack dell'associazione.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di binding.</param>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Fornisce l'accesso alla richiesta HTTP per accedere e rispondere alle informazioni aggiuntive rese disponibili per le richieste tramite il protocollo HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Ottiene le intestazioni HTTP dalla richiesta HTTP.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenente le intestazioni HTTP nella richiesta HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Ottiene o imposta il verbo HTTP per la richiesta HTTP.</summary>
      <returns>Verbo HTTP per la richiesta HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> impostato è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Ottiene il nome della proprietà del messaggio associata alla classe <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
      <returns>Valore "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Ottiene o imposta la stringa di query per la richiesta HTTP.</summary>
      <returns>Stringa di query della richiesta HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> impostato è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Ottiene o imposta un valore che indica se il corpo del messaggio viene ignorato e vengono inviate solo le intestazioni.</summary>
      <returns>true se il corpo del messaggio viene eliminato; in caso contrario, false. L'impostazione predefinita è false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Fornisce l'accesso alla risposta HTTP per accedere e rispondere alle informazioni aggiuntive rese disponibili per le richieste tramite il protocollo HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Ottiene le intestazioni HTTP dalla risposta HTTP.</summary>
      <returns>Restituisce un oggetto <see cref="T:System.Net.WebHeaderCollection" /> contenente le intestazioni HTTP della risposta HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Ottiene il nome della proprietà del messaggio associata alla classe <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
      <returns>Restituisce “httpResponse”.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Ottiene o imposta il codice di stato della risposta HTTP corrente alla quale è allegata questa proprietà.</summary>
      <returns>
        <see cref="T:System.Net.HttpStatusCode" /> per inviare la risposta HTTP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore è impostato su minore di 100 o maggiore di 599.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Ottiene o imposta la descrizione del codice di stato della risposta HTTP corrente alla quale è allegata questa proprietà.</summary>
      <returns>Descrizione dello stato da inviare per la risposta HTTP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Rappresenta l'elemento di binding utilizzato per specificare un trasporto HTTPS per la trasmissione dei messaggi. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Istanza della classe <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea una channel factory di un tipo specificato che può essere utilizzata per creare un canale.</summary>
      <returns>Channel factory del tipo specificato che viene configurata in base ai valori impostati nell'elemento di binding del trasporto.</returns>
      <param name="context">Membri <see cref="T:System.ServiceModel.Channels.BindingContext" /> che descrivono associazioni, comportamenti, contratti e altre informazioni richieste per creare la channel factory.</param>
      <typeparam name="TChannel">Tipo di canale.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> non può essere null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Crea una copia dell'elemento di binding corrente.</summary>
      <returns>Copia dell'elemento di binding corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ottiene un oggetto specificato tramite l'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" />. Questo metodo ottiene l'oggetto specificato dalla classe di base o da uno dei predecessori di tale classe.</summary>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Restituisce lo schema URI per il trasporto.</summary>
      <returns>Schema URI per il trasporto, vale a dire "HTTPS".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Rappresenta l'elemento di binding utilizzato per specificare un trasporto HTTP per la trasmissione dei messaggi. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
      <param name="elementToBeCloned">Istanza della classe <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea una channel factory che può essere utilizzata per creare un canale.</summary>
      <returns>Channel factory del tipo specificato.</returns>
      <param name="context">Membri <see cref="T:System.ServiceModel.Channels.BindingContext" /> che descrivono associazioni, comportamenti, contratti e altre informazioni richieste per creare la channel factory.</param>
      <typeparam name="TChannel">Tipo di channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> non può essere null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determina se è possibile compilare una channel factory del tipo specificato.</summary>
      <returns>true se è possibile compilare una channel factory; in caso contrario, false.</returns>
      <param name="context">Impossibile compilare l'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il canale.</param>
      <typeparam name="TChannel">Tipo di canale da controllare.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Crea una copia dell'elemento di binding corrente.</summary>
      <returns>Copia dell'elemento di binding corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ottiene una proprietà dall'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</summary>
      <returns>Proprietà dell'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</returns>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Proprietà da ottenere.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Ottiene o imposta la dimensione massima del buffer da utilizzare. Per i messaggi inseriti nel buffer questo valore è identico a <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />. Per i messaggi inseriti nel flusso, questo valore è la dimensione massima delle intestazioni SOAP che deve essere letto in modalità buffer.</summary>
      <returns>Dimensione massima, in byte, del buffer. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Ottiene lo schema URI per il trasporto.</summary>
      <returns>Restituisce <see cref="F:System.Uri.UriSchemeHttp" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Definisce l'interfaccia di base che deve essere implementata in tutti gli oggetti canale. Richiede che venga implementata l'interfaccia della macchina a stati, condivisa da tutti gli oggetti di comunicazione e che questi implementino un metodo per recuperare gli oggetti dallo stack di canali. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Definisce l'interfaccia che deve essere implementata da una channel factory per produrre canali.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Definisce l'interfaccia che deve essere implementata dalle channel factory che creano canali specifici del tipo.</summary>
      <typeparam name="TChannel">Tipo di canale creato dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canale di un tipo specificato per un indirizzo endpoint specificato.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> per l'indirizzo endpoint specificato.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce il percorso del servizio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canale di un tipo specificato per un indirizzo endpoint e un indirizzo di trasporto specificati ai quali vengono inviati i messaggi.</summary>
      <returns>Canale di tipo <paramref name="TChannel" /> per l'indirizzo endpoint e l'indirizzo di trasporto specificati.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> che fornisce il percorso del servizio.</param>
      <param name="via">
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale viene inviato il messaggio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Definisce l'interfaccia che un canale deve implementare sia per inviare che per ricevere i messaggi.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Definisce l'interfaccia per la sessione implementata su ciascun lato di una comunicazione bidirezionale tra due endpoint di messaggistica.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per terminare la sessione in uscita.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla terminazione della sessione in uscita asincrona.</returns>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Oggetto contenente le informazioni di stato per questa richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Avvia un'operazione asincrona per terminare la sessione in uscita con un timeout specificato entro il quale l'operazione deve essere completata.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla terminazione della sessione in uscita asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale è necessario completare l'operazione.</param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Oggetto contenente le informazioni di stato per questa richiesta. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Termina la sessione in uscita che indica che non verranno più inviati messaggi da questo endpoint sul canale associato alla sessione. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Termina la sessione in uscita che indica che non verranno più inviati messaggi da questo endpoint sul canale associato alla sessione entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale è necessario completare l'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per terminare la sessione in uscita che indica che non verranno più inviati messaggi da questo endpoint sul canale associato alla sessione. </summary>
      <param name="result">Oggetto <see cref="T:System.IAsyncResult" /> restituito da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Definisce l'interfaccia che associa un canale duplex a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>Definisce l'interfaccia utilizzata per fornire l'accesso a un'istanza facoltativa di <see cref="T:System.Net.CookieContainer" /> che può essere utilizzata per gestire un insieme di cookie.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.CookieContainer" /> da utilizzare, se deve essere utilizzato un oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Net.CookieContainer" /> da utilizzare, se deve essere utilizzato un contenitore oppure null se non deve essere utilizzato un contenitore.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Definisce l'interfaccia che deve essere implementata da un canale per ricevere un messaggio. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per ricevere un messaggio al quale è associato un oggetto di stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla ricezione asincrona del messaggio. </returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per ricevere un messaggio al quale sono associati un timeout specificato e un oggetto di stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di ricezione asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo che è necessario attendere affinché un messaggio diventi disponibile.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona.</param>
      <exception cref="T:System.TimeoutException">L'oggetto <paramref name="timeout" /> viene superato prima che l'operazione venga completata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per ricevere un messaggio al quale sono associati un timeout specificato e un oggetto di stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di ricezione asincrona.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo che è necessario attendere affinché un messaggio diventi disponibile.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona.</param>
      <exception cref="T:System.TimeoutException">L'oggetto <paramref name="timeout" /> viene superato prima che l'operazione venga completata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona di attesa dell'arrivo di un messaggio alla quale sono associati un timeout specificato e un oggetto di stato. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione asincrona di attesa dell'arrivo di un messaggio.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo che è necessario attendere affinché un messaggio diventi disponibile.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona.</param>
      <exception cref="T:System.TimeoutException">L'oggetto <paramref name="timeout" /> viene superato prima che l'operazione venga completata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per ricevere un messaggio. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </returns>
      <param name="result">Oggetto <see cref="T:System.IAsyncResult" /> restituito da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Completa l'operazione asincrona specificata per ricevere un messaggio.</summary>
      <returns>true se un messaggio viene ricevuto prima che trascorra l'intervallo di tempo specificato; in caso contrario, false.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Completa l'operazione asincrona di attesa di un messaggio specificata.</summary>
      <returns>true se un messaggio è arrivato prima che <paramref name="timeout" /> venga superato; in caso contrario, false.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> che identifica l'operazione <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> da terminare e dalla quale recuperare un risultato finale.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Ottiene l'indirizzo sul quale il canale di input riceve i messaggi. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> sul quale il canale di input riceve i messaggi. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Restituisce il messaggio ricevuto, se è disponibile un messaggio. Se non è disponibile un messaggio, si blocca per un intervallo di tempo predefinito.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Restituisce il messaggio ricevuto, se è disponibile un messaggio. Se non è disponibile un messaggio, si blocca per un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di ricezione prima del timeout e della generazione di un'eccezione <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">L'oggetto <paramref name="timeout" /> viene superato prima che l'operazione venga completata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Prova a ricevere un messaggio entro un intervallo di tempo specificato. </summary>
      <returns>true se un messaggio viene ricevuto prima che <paramref name="timeout" /> venga superato; in caso contrario, false.</returns>
      <param name="timeout">Oggetto <see cref="T:System.IAsyncResult" /> restituito da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuto. </param>
      <exception cref="T:System.TimeoutException">L'oggetto <paramref name="timeout" /> viene superato prima che l'operazione venga completata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Restituisce un valore che indica se un messaggio è arrivato entro un intervallo di tempo specificato.</summary>
      <returns>true se un messaggio è arrivato prima che <paramref name="timeout" /> venga superato; in caso contrario, false.</returns>
      <param name="timeout">L'oggetto <see cref="T:System.Timespan" /> specifica l'intervallo di tempo massimo che è necessario attendere affinché un messaggio arrivi prima del timeout.</param>
      <exception cref="T:System.TimeoutException">L'oggetto <paramref name="timeout" /> viene superato prima che l'operazione venga completata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato è minore di zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Definisce l'interfaccia per la sessione implementata sul lato della ricezione di una comunicazione unidirezionale tra due endpoint di messaggistica. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Definisce l'interfaccia che associa un canale di input a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Definisce un'interfaccia che è possibile implementare per descrivere un insieme di proprietà per un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Crea una copia dell'istanza corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Definisce l'interfaccia che deve essere implementata da un canale per inviare un messaggio. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione asincrona del messaggio. </returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output. </param>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di invio asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di invio asincrona.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di invio asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di invio asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per trasmettere un messaggio alla destinazione del canale di output. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Ottiene la destinazione del servizio al quale vengono inviati i messaggi sul canale di output. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del servizio a cui vengono inviati i messaggi dal canale di output. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Trasmette un messaggio alla destinazione del canale di output. </summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia un messaggio sul canale di output corrente entro un intervallo di tempo specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> inviato sul canale di output.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica il tempo a disposizione per il completamento dell'operazione di invio prima del timeout.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Ottiene l'URI che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale di output.</summary>
      <returns>
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale vengono inviati i messaggi sul canale di output.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Definisce l'interfaccia per la sessione implementata sul lato della invio di una comunicazione unidirezionale tra due endpoint di messaggistica. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Definisce l'interfaccia che associa un canale di output a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Definisce il contratto che un canale deve implementare per essere sul lato di richiesta di una comunicazione richiesta-risposta tra due endpoint di messaggistica. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio di richiesta al lato di risposta di uno scambio di messaggi di richiesta/risposta. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione asincrona del messaggio. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona che trasmette un messaggio di richiesta.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona che trasmette un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione asincrona per trasmettere un messaggio di richiesta al lato di risposta di uno scambio di messaggi di richiesta/risposta entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento alla trasmissione asincrona del messaggio. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale deve essere ricevuta una risposta. (sulle impostazioni predefinite, vedere le osservazioni)</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione asincrona che trasmette un messaggio di richiesta.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione asincrona che trasmette un messaggio di richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per restituire una risposta basata sul messaggio a una richiesta trasmessa. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuta come risposta alla richiesta. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Ottiene l'indirizzo remoto al quale il canale di richiesta invia i messaggi. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> al quale il canale di richiesta invia i messaggi. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuta come risposta alla richiesta. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Invia una richiesta basata sul messaggio e restituisce la risposta basata sul messaggio correlata entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> ricevuta come risposta alla richiesta. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> di richiesta da trasmettere.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che specifica l'intervallo di tempo entro il quale deve essere ricevuta una risposta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Ottiene l'indirizzo di trasporto al quale viene inviata la richiesta.</summary>
      <returns>
        <see cref="T:System.Uri" /> che contiene l'indirizzo di trasporto al quale viene inviato il messaggio.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Definisce l'interfaccia per associare un canale di richiesta a una sessione.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Definisce l'interfaccia per stabilire un contesto condiviso tra parti che scambiano messaggi fornendo un ID per la sessione di comunicazione. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Ottiene l'ID che identifica la sessione in modo univoco. </summary>
      <returns>ID che identifica la sessione in modo univoco. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Definisce l'interfaccia che associa un canale a un tipo di sessione specifico.</summary>
      <typeparam name="TSession">Tipo di <see cref="T:System.ServiceModel.Channels.ISession" /> associato al canale.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Ottiene il tipo di sessione associato al canale.</summary>
      <returns>Parametro generico <paramref name="TSession" /> che definisce la sessione associata al canale.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Specifica le impostazioni di protezione del client locali.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Crea una nuova istanza di questa classe che è una copia dell'istanza corrente.</summary>
      <returns>Nuova istanza clonata di <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Ottiene o imposta la differenza di tempo massimo consentita tra i clock di sistema delle due parti in comunicazione. </summary>
      <returns>
        <see cref="T:System.TimeSpan" /> che rappresenta la differenza di tempo massimo consentita tra i clock di sistema delle due parti in comunicazione. Il valore predefinito è 5 minuti.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore della proprietà è minore di 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Ottiene o imposta il tempo massimo di validità del nonce di un messaggio.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> che rappresenta il tempo massimo di validità del nonce di un messaggio. Il valore predefinito è cinque minuti.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore della proprietà è minore di 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Ottiene o imposta la durata massima di validità dei messaggi inviati dal client. Se un messaggio viene ricevuto dal servizio dopo tale durata, deve essere eliminato.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> che rappresenta la durata massima di validità dei messaggi inviati dal client. Il valore predefinito è cinque minuti.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore della proprietà è minore di 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Rappresenta l'unità di comunicazione tra due endpoint in un ambiente distribuito. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Chiude l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> e rilascia eventuali risorse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Crea un messaggio contenente una versione e un'azione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio.</param>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> o <paramref name="action" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Crea un messaggio con la versione, l'azione e il corpo specificati. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio. </param>
      <param name="body">Corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un messaggio utilizzando la versione, l'azione, il corpo del messaggio e il serializzatore specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio. </param>
      <param name="body">Corpo del messaggio. </param>
      <param name="serializer">Oggetto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> o <paramref name="action" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Crea un messaggio con un corpo che consiste in una matrice di byte. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio. </param>
      <param name="body">Oggetto <see cref="T:System.ServiceModel.Channels.BodyWriter" /> di tipo byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Crea un messaggio con la versione, l'azione e il corpo specificati. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio. </param>
      <param name="body">Corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Crea un messaggio utilizzando il lettore, l'azione e la versione specificati. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> per il messaggio creato. </returns>
      <param name="version">Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica la versione SOAP da utilizzare per il messaggio. </param>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio. </param>
      <param name="body">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare per la lettura del messaggio SOAP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Recupera il corpo di questa istanza di <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Oggetto di tipo <paramref name="T" /> contenente il corpo di questo messaggio.</returns>
      <typeparam name="T">Corpo del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera il corpo di questo <see cref="T:System.ServiceModel.Channels.Message" /> utilizzando il serializzatore specificato.</summary>
      <returns>Oggetto di tipo <paramref name="T" /> contenente il corpo di questo messaggio.</returns>
      <param name="serializer">Oggetto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Corpo del messaggio.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Recupera gli attributi del corpo del messaggio.</summary>
      <returns>Attributi del corpo del messaggio.</returns>
      <param name="localName">Nome locale del nodo XML.Nome dell'elemento che corrisponde a questo membro. Questa stringa deve essere un nome elemento XML valido.</param>
      <param name="ns">Spazio dei nomi  a cui appartiene l'elemento XML.URI dello spazio dei nomi dell'elemento che corrisponde a questo membro. Il sistema non convalida URI diversi dagli indirizzi di trasporto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> o <paramref name="ns" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Ottiene il lettore di dizionario XML che accede al contenuto del corpo di questo messaggio.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è vuoto oppure è stato copiato, letto o scritto.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>Se sottoposto a override in una classe derivata, ottiene le intestazioni del messaggio. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> che rappresenta le intestazioni del messaggio. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> è eliminato. </summary>
      <returns>true se il messaggio è eliminato; in caso contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> è vuoto. </summary>
      <returns>true se il messaggio è vuoto; in caso contrario, false. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Ottiene un valore che indica se questo messaggio genera errori SOAP.</summary>
      <returns>true se questo messaggio genera errori SOAP; in caso contrario, false.</returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando il corpo del messaggio viene convertito in una stringa.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che viene utilizzato per convertire il corpo del messaggio in una stringa. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Viene chiamato in fase di chiusura del messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Viene chiamato quando vengono recuperati gli attributi del corpo del messaggio.</summary>
      <returns>Attributi del corpo del messaggio.</returns>
      <param name="localName">Nome locale del nodo XML.Nome dell'elemento che corrisponde a questo membro. Questa stringa deve essere un nome elemento XML valido.</param>
      <param name="ns">Spazio dei nomi  a cui appartiene l'elemento XML.URI dello spazio dei nomi dell'elemento che corrisponde a questo membro. Il sistema non convalida URI diversi dagli indirizzi di trasporto.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Viene chiamato quando è possibile recuperare un lettore di dizionario XML in grado di accedere al contenuto del corpo di questo messaggio.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando il corpo del messaggio viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che viene utilizzato per scrivere il corpo di questo messaggio in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando l'intero messaggio viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che viene utilizzato per scrivere questo messaggio in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando il corpo iniziale viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che viene utilizzato per scrivere il corpo iniziale in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando l'envelope iniziale viene scritto in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che viene utilizzato per scrivere l'envelope iniziale in un file XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Viene chiamato quando l'intestazione iniziale viene scritta in un file XML.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che viene utilizzato per scrivere l'intestazione iniziale in un file XML.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>Se sottoposto a override in una classe derivata, ottiene un insieme di annotazioni per il messaggio a livello di elaborazione. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> che contiene un insieme di annotazioni per il messaggio a livello di elaborazione.</returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Ottiene lo stato corrente di questo <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" /> che contiene lo stato corrente di questo <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Chiude tutte le risorse utilizzate da questo messaggio. Questo metodo non può essere ereditato.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> corrente. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> corrente. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>Se sottoposto a override in una classe derivata, ottiene le versioni SOAP e WS-Addressing del messaggio. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che rappresenta le versioni SOAP e WS-Addressing utilizzate dal messaggio. </returns>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è stato eliminato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive l'elemento del corpo utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere l'elemento del corpo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serializza il corpo del messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlWriter" /> da utilizzare per scrivere il corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio viene eliminato. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza il contenuto del corpo utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere l'elemento del corpo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />è null.</exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'intero messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere il messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serializza l'intero messaggio utilizzando l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlWriter" /> da utilizzare per scrivere il corpo del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
      <exception cref="T:System.ObjectDisposedException">Il messaggio è chiuso.</exception>
      <exception cref="T:System.InvalidOperationException">Il messaggio è stato copiato, letto o scritto.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza il corpo iniziale utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere il corpo iniziale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serializza il corpo iniziale utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere il corpo iniziale del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'envelope iniziale utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> specificato. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> da utilizzare per scrivere l'envelope iniziale.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Rappresenta un buffer di memoria nel quale viene archiviato un intero messaggio per l'utilizzo futuro.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Ottiene il numero approssimativo di byte a cui accede questo oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>Numero approssimativo di byte a cui accede questo oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Termina l'utilizzo del buffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Restituisce una copia del messaggio originale.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Ottiene il tipo di contenuto del messaggio archiviato in questo buffer.</summary>
      <returns>Tipo di contenuto del messaggio archiviato in questo buffer.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> ed eventualmente rilascia le risorse gestite. Questo metodo non può essere ereditato.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Scrive l'intero contenuto di questo buffer nel flusso I/O specificato.</summary>
      <param name="stream">Flusso I/O nel quale viene scritto l'intero contenuto di questo buffer.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>Il codificatore è il componente utilizzato per scrivere i messaggi in un flusso e per leggere i messaggi da un flusso.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncoder" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>Se sottoposto a override in una classe derivata, ottiene il tipo di contenuto MIME utilizzato dal codificatore.</summary>
      <returns>Tipo di contenuto supportato dal codificatore di messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T " /> richiesto se presente; in caso contrario, null.</returns>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Restituisce un valore che indica se un valore di tipo di contenuto a livello di messaggio è supportato dal codificatore di messaggi.</summary>
      <returns>true se il tipo di contenuto a livello di messaggio specificato è supportato; in caso contrario, false.</returns>
      <param name="contentType">Tipo di contenuto a livello di messaggio sottoposto a test.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>Se sottoposto a override in una classe derivata, ottiene il valore di tipo di supporto utilizzato dal codificatore.</summary>
      <returns>Tipo di supporto supportato dal codificatore di messaggi.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>Se sottoposto a override in una classe derivata, ottiene il valore di versione di messaggio utilizzato dal codificatore.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato dal codificatore.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>Se sottoposto a override in una classe derivata, legge un messaggio da un buffer specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> letto dal buffer specificato.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> che fornisce il buffer dal quale il messaggio viene deserializzato.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer dal quale il messaggio viene deserializzato.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>Se sottoposto a override in una classe derivata, legge un messaggio da un flusso specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> letto dal flusso specificato.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> di tipo <see cref="T:System.Byte" /> che fornisce il buffer dal quale il messaggio viene deserializzato.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer dal quale il messaggio viene deserializzato.</param>
      <param name="contentType">Tipo di contenuto a livello di messaggio MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>Se sottoposto a override in una classe derivata, legge un messaggio da un flusso specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> letto dal flusso specificato.</returns>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> da cui viene letto il messaggio.</param>
      <param name="maxSizeOfHeaders">Dimensione massima delle intestazioni che è possibile leggere dal messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>Se sottoposto a override in una classe derivata, legge un messaggio da un flusso specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> letto dal flusso specificato.</returns>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> da cui viene letto il messaggio.</param>
      <param name="maxSizeOfHeaders">Dimensione massima delle intestazioni che è possibile leggere dal messaggio.</param>
      <param name="contentType">Tipo di contenuto a livello di messaggio MIME (Multipurpose Internet Mail Extensions).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Restituisce il tipo di contenuto utilizzato dal codificatore di messaggi.</summary>
      <returns>Tipo di contenuto utilizzato dal codificatore di messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Scrive un messaggio inferiore a una dimensione specificata in un buffer di matrici di byte.</summary>
      <returns>A <see cref="T:System.ArraySegment`1" /> di tipo byte che fornisce il buffer nel quale viene deserializzato il messaggio.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> da scrivere nel buffer di messaggi.</param>
      <param name="maxMessageSize">Dimensione massima del messaggio che è possibile scrivere.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer nel quale viene scritto il messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>Se sottoposto a override in una classe derivata, scrive un messaggio inferiore a una dimensione specificata in un buffer di matrici di byte in un offset specificato.</summary>
      <returns>A <see cref="T:System.ArraySegment`1" /> di tipo byte che fornisce il buffer nel quale viene deserializzato il messaggio.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> da scrivere nel buffer di messaggi.</param>
      <param name="maxMessageSize">Dimensione massima del messaggio che è possibile scrivere.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> che gestisce il buffer nel quale viene scritto il messaggio.</param>
      <param name="messageOffset">Offset del segmento che comincia dall'inizio della matrice di byte che fornisce il buffer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>Se sottoposto a override in una classe derivata, scrive un messaggio in un flusso specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da scrivere nell'oggetto <paramref name="stream" />.</param>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> nel quale viene scritto l'oggetto <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Classe di base astratta che rappresenta la factory per produrre codificatori di messaggi in grado di leggere i messaggi di un flusso e di scriverli in un flusso per vari tipi di codifica di messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Restituisce un codificatore di messaggi che può essere utilizzato per correlare i messaggi in scambi basati sulla sessione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> che viene utilizzato negli scambi di messaggi basati sulla sessione.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>Se sottoposto a override in una classe derivata, ottiene il codificatore di messaggio prodotto dalla factory.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizzato dalla factory.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>Se sottoposto a override in una classe derivata, ottiene la versione del messaggio che viene utilizzata dai codificatori prodotti dalla factory per codificare i messaggi.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato dalla factory.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Elemento di binding che specifica la versione di messaggio utilizzata per codificare i messaggi.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> inizializzata da un elemento esistente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> da clonare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Se sottoposto a override in una classe derivata, crea una factory per produrre codificatori di messaggi.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> utilizzato per produrre codificatori di messaggi.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Restituisce l'oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di canali.</summary>
      <returns>Oggetto con tipo <paramref name="T" /> richiesto se presente; in caso contrario, null.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di binding corrente.</param>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>Se sottoposto a override in una classe derivata, ottiene o imposta la versione di messaggio che può essere gestita dai codificatori di messaggio prodotti dalla factory del codificatore di messaggi.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato dai codificatori prodotti dalla factory del codificatore di messaggi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Rappresenta una rappresentazione in memoria di un errore SOAP che può essere passata a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> per creare un messaggio contenente un errore. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>Se viene chiamato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageFault" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Ottiene o imposta il valore dell'attore.</summary>
      <returns>Valore dell'attore.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Ottiene il codice di errore SOAP. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultCode" /> che contiene il codice di errore SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" /> che utilizza l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> specificato e la dimensione di buffer massima specificata per il buffer dei messaggi.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> specificato da utilizzare per creare l'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Dimensione di buffer massima specificata per il buffer di messaggi.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Restituisce l'oggetto dettaglio dell'errore del messaggio.</summary>
      <returns>Oggetto dettaglio dell'errore del messaggio.</returns>
      <typeparam name="T">Tipo di oggetto dettaglio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Restituisce l'oggetto dettagli che utilizza l'oggetto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> specificato.</summary>
      <returns>Oggetto dettaglio contenuto nell'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> da utilizzare nella deserializzazione dell'oggetto dettaglio. </param>
      <typeparam name="T">Tipo dell'oggetto dettaglio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Restituisce un oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che viene posizionato sull'oggetto dettaglio dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che viene posizionato sull'oggetto dettaglio dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Ottiene un valore che indica se <see cref="T:System.ServiceModel.Channels.MessageFault" /> dispone di un oggetto dettaglio.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageFault" /> dispone di un oggetto dettaglio; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Ottiene il nodo SOAP.</summary>
      <returns>Nodo SOAP che contiene informazioni su quale nodo SOAP nel percorso di un messaggio causa l'errore.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>Se viene chiamato in una classe derivata, restituisce un oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che viene posizionato sull'oggetto dettaglio dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> che viene posizionato sull'oggetto dettaglio dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Viene richiamato prima di scrivere il contenuto del dettaglio.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'elemento dettaglio.</param>
      <param name="version">Versione di envelope SOAP da scrivere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>Se sottoposto a override in una classe derivata non astratta, scrive il contenuto dell'elemento dettaglio. </summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'elemento dettaglio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Scrive l'elemento iniziale utilizzando l'oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> e la versione di envelope SOAP specificati.</summary>
      <param name="writer">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzato per scrivere l'elemento dettaglio.</param>
      <param name="version">Versione di envelope SOAP da scrivere.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Ottiene una descrizione testuale di un errore SOAP. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.FaultReason" /> che contiene una descrizione testuale di un errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Rappresenta il contenuto di un'intestazione SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeader" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Ottiene o imposta il destinatario di destinazione dell'intestazione del messaggio.</summary>
      <returns>Destinatario di destinazione dell'intestazione del messaggio. Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere riconosciuta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere riconosciuta.</param>
      <param name="actor">Destinatario di destinazione dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere riconosciuta.</param>
      <param name="actor">Destinatario di destinazione dell'intestazione del messaggio.</param>
      <param name="relay">Valore che indica se l'intestazione deve essere inoltrata.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un'intestazione da un oggetto da serializzare utilizzando XmlFormatter. </summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere riconosciuta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere riconosciuta.</param>
      <param name="actor">Destinatario di destinazione dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Crea una nuova intestazione di messaggio con la data specificata.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nome locale dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="value">Contenuto dell'intestazione da creare.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valore che indica se l'intestazione deve essere riconosciuta.</param>
      <param name="actor">Destinatario di destinazione dell'intestazione del messaggio.</param>
      <param name="relay">Valore che indica se l'intestazione deve essere inoltrata.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Verifica se la versione di messaggio specificata è supportata.</summary>
      <returns>true se la versione di messaggio specificata è supportata; in caso contrario, false.</returns>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Ottiene un valore che specifica se questa intestazione di messaggio contiene i parametri di riferimento di un riferimento a un endpoint.</summary>
      <returns>true se l'intestazione del messaggio contiene i parametri di riferimento di un riferimento a un endpoint; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Ottiene o imposta un valore che indica se l'intestazione deve essere riconosciuta, in base alla specifica SOAP 1.1 o 1.2. </summary>
      <returns>true se l'intestazione deve essere riconosciuta; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Viene chiamato quando il contenuto dell'intestazione viene serializzato utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Viene chiamato quando l'intestazione iniziale viene serializzata utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Ottiene un valore che indica se l'intestazione deve essere inoltrata.</summary>
      <returns>true se l'intestazione deve essere inoltrata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Converte questa intestazione di messaggio in una stringa.</summary>
      <returns>Intestazione del messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza l'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza l'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza il contenuto dell'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza il contenuto dell'intestazione utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializza l'intestazione iniziale utilizzando il writer XML specificato. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene informazioni relative alla versione di SOAP associata a un messaggio e al relativo scambio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Rappresenta le informazioni di sistema relative all'intestazione di un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Ottiene o imposta il destinatario previsto dell'intestazione del messaggio.</summary>
      <returns>URI che indica il destinatario previsto dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Ottiene un valore che specifica se l'intestazione del messaggio rappresenta i parametri di riferimento di un riferimento a un endpoint.</summary>
      <returns>true se l'intestazione del messaggio rappresenta i parametri di riferimento di un riferimento a un endpoint; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Ottiene o imposta un valore che indica se l'elaborazione dell'intestazione del messaggio è obbligatoria o facoltativa.</summary>
      <returns>true se l'elaborazione dell'intestazione del messaggio è obbligatoria; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Ottiene il nome dell'intestazione del messaggio.</summary>
      <returns>Nome dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Ottiene lo spazio dei nomi dell'intestazione del messaggio.</summary>
      <returns>Spazio dei nomi dell'intestazione del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Ottiene o imposta un valore che indica se l'intestazione del messaggio può essere inoltrata.</summary>
      <returns>true se l'intestazione del messaggio può essere inoltrata; in caso contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Rappresenta un insieme di intestazioni di messaggio per un messaggio. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con l'insieme di intestazioni di messaggio specificato.</summary>
      <param name="collection">Insieme di intestazioni di messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versione di messaggio specificata.</summary>
      <param name="version">Versione SOAP del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versione e la dimensione del messaggio specificate.</summary>
      <param name="version">Versione SOAP del messaggio.</param>
      <param name="initialSize">Dimensione dell'intestazione.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Ottiene o imposta una descrizione del modo in cui deve essere elaborato il messaggio.</summary>
      <returns>Descrizione del modo in cui deve essere elaborato il messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Aggiunge l'intestazione del messaggio specificata all'insieme.</summary>
      <param name="header">Intestazione del messaggio da aggiungere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Rimuove tutte le intestazioni dall'insieme.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copia il contenuto dell'intestazione situato in corrispondenza dell'indice specificato dal messaggio specificato a questa istanza.</summary>
      <param name="message">Messaggio.</param>
      <param name="headerIndex">Posizione dell'intestazione del messaggio originale, dal quale viene copiato il contenuto.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copia il contenuto dell'intestazione situato in corrispondenza dell'indice specificato dall'insieme di intestazioni di messaggio specificato a questa istanza.</summary>
      <param name="collection">Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Posizione dell'intestazione del messaggio originale, dal quale viene copiato il contenuto.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copia il contenuto di tutte le intestazioni dal messaggio specificato a questa istanza.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copia il contenuto dall'insieme di intestazioni specificato a questa istanza.</summary>
      <param name="collection">Oggetto <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copia le intestazioni da questo insieme a una matrice, a partire da un particolare indice della matrice. </summary>
      <param name="array">Matrice unidimensionale che rappresenta la destinazione degli oggetti intestazione del messaggio copiati da questa istanza. L'indice della matrice deve essere in base zero. </param>
      <param name="index">Indice in base zero della matrice in corrispondenza del quale ha inizio la copia. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Ottiene il numero di intestazioni di messaggio in questo insieme.</summary>
      <returns>Numero di intestazioni di messaggio in questo insieme.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Ottiene o imposta l'indirizzo del nodo al quale devono essere inviati gli errori.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo al quale devono essere inviati gli errori.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Trova un'intestazione di messaggio in questo insieme mediante l'oggetto LocalName e l'URI dello spazio dei nomi dell'elemento intestazione specificati.</summary>
      <returns>Indice dell'intestazione del messaggio in questo insieme.</returns>
      <param name="name">Oggetto LocalName dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Trova un'intestazione di messaggio in questo insieme mediante l'oggetto LocalName, l'URI dello spazio dei nomi e gli attori dell'elemento intestazione specificati.</summary>
      <returns>Indice dell'intestazione del messaggio in questo insieme.</returns>
      <param name="name">Oggetto LocalName dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="actors">Destinatario di destinazione dell'intestazione del messaggio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Ottiene o imposta l'indirizzo del nodo che ha inviato il messaggio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo che ha inviato il messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Restituisce un enumeratore in grado di scorrere un insieme. Questo metodo non può essere ereditato.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Recupera un'intestazione di messaggio in una posizione specifica di questo insieme.</summary>
      <returns>Intestazione del messaggio.</returns>
      <param name="index">Indice in base zero dell'intestazione da ottenere.</param>
      <typeparam name="T">Intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un'intestazione di messaggio in una posizione specifica di questo insieme.</summary>
      <returns>Intestazione del messaggio.</returns>
      <param name="index">Indice in base zero dell'intestazione da ottenere.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Trova un'intestazione di messaggio in questo insieme mediante l'oggetto LocalName e l'URI dello spazio dei nomi dell'elemento intestazione specificati.</summary>
      <returns>Intestazione del messaggio.</returns>
      <param name="name">Oggetto LocalName dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <typeparam name="T">Intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un'intestazione di messaggio in questo insieme mediante l'oggetto LocalName, l'URI dello spazio dei nomi e il serializzatore specificati.</summary>
      <returns>Intestazione del messaggio.</returns>
      <param name="name">Oggetto LocalName dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="serializer">Oggetto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />,</param>
      <typeparam name="T">Intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Recupera un'intestazione di messaggio in questo insieme mediante l'oggetto LocalName, l'URI dello spazio dei nomi e gli attori dell'elemento intestazione specificati.</summary>
      <returns>Intestazione del messaggio.</returns>
      <param name="name">Oggetto LocalName dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
      <param name="actors">Destinatario di destinazione dell'intestazione del messaggio.</param>
      <typeparam name="T">Intestazione del messaggio.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Ottiene un lettore di dizionario XML che accede all'intestazione del messaggio in un posizione specificata dell'insieme.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">Indice in base zero dell'intestazione da ottenere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Verifica se tutte le intestazioni di messaggio contrassegnate con MustUnderstand vengono interpretate ed elaborate in modo corretto. </summary>
      <returns>true se i destinatari specificati da <paramref name="actors" />  hanno interpretato ed elaborato correttamente tutte le intestazioni di messaggio contrassegnate con MustUnderstand; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Verifica se i destinatari specificati hanno interpretato ed elaborato correttamente tutte le intestazioni di messaggio contrassegnate con MustUnderstand. </summary>
      <returns>true se i destinatari specificati da <paramref name="actors" />  hanno interpretato ed elaborato correttamente tutte le intestazioni di messaggio contrassegnate con MustUnderstand; in caso contrario, false.</returns>
      <param name="actors">Destinatario di destinazione dell'intestazione del messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Inserisce un'intestazione di messaggio nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="headerIndex">Indice a base zero nel quale <paramref name="header" /> deve essere inserito.</param>
      <param name="header">Intestazione di messaggio da inserire.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Recupera un'intestazione in corrispondenza dell'indice specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> nell'insieme. Se <paramref name="index" /> è maggiore di o uguale al numero di intestazioni dell'elenco, restituisce null.</returns>
      <param name="index">Indice in base zero dell'elenco di intestazioni.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Ottiene o imposta l'ID univoco del messaggio.</summary>
      <returns>ID univoco del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Ottiene la versione SOAP del messaggio.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Ottiene gli ID dei messaggi correlati a questo messaggio.</summary>
      <returns>ID dei messaggi correlati a questo messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Rimuove dall'insieme tutte le intestazioni con il nome e lo spazio dei nomi specificati.</summary>
      <param name="name">Oggetto LocalName dell'elemento XML dell'intestazione.</param>
      <param name="ns">URI dello spazio dei nomi dell'elemento XML dell'intestazione.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Rimuove dall'insieme l'intestazione del messaggio in corrispondenza dell'indice specificato.</summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da rimuovere.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Ottiene o imposta l'indirizzo del nodo al quale deve essere inviata una risposta per una richiesta.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo al quale deve essere inviata una risposta per una richiesta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Imposta l'elemento di azione dell'intestazione.</summary>
      <param name="action">Descrizione del modo in cui deve essere elaborato il messaggio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore in grado di scorrere un insieme. Questo metodo non può essere ereditato.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Ottiene o imposta l'endpoint di destinazione di un messaggio.</summary>
      <returns>URI contenente l'endpoint di destinazione di un messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'intestazione dalla posizione specificata utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializza l'intestazione dalla posizione specificata utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializza il contenuto dell'intestazione specificato utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializza il contenuto dell'intestazione specificato utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializza l'intestazione iniziale utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializza l'intestazione iniziale utilizzando il writer XML specificato. </summary>
      <param name="headerIndex">Indice in base zero dell'intestazione da serializzare.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Rappresenta un insieme di proprietà per un messaggio. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.MessageProperties" /> con le proprietà preimpostate.</summary>
      <param name="properties">Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Aggiunge all'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> un elemento con il nome e la proprietà specificati. Questo metodo non può essere ereditato.</summary>
      <param name="name">Nome dell'elemento da aggiungere.</param>
      <param name="property">Valore dell'elemento da aggiungere. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Ottiene o imposta un valore che specifica se archiviare questo messaggio prima di affidarlo al trasporto. </summary>
      <returns>true se è consentito l'invio in batch dei messaggi in uscita; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Questo metodo non può essere ereditato.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Stabilisce se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nome specifico. Questo metodo non può essere ereditato.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con l'oggetto <paramref name="name" /> specificato; in caso contrario, false.</returns>
      <param name="name">Nome da individuare in <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copia in questa istanza il contenuto dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> specificato.</summary>
      <param name="properties">Oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Ottiene il numero totale di proprietà nell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Numero totale di proprietà nell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Ottiene il codificatore utilizzato per scrivere i messaggi in un flusso e per leggere i messaggi da un flusso.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizzato per scrivere i messaggi in un flusso e per leggere i messaggi da un flusso.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ha una dimensione fissa.</summary>
      <returns>true se le dimensioni dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> sono fisse; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Ottiene un valore che indica se questo insieme di proprietà è di sola lettura.</summary>
      <returns>true se questo insieme di proprietà è di sola lettura; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Recupera una proprietà in corrispondenza dell'indice specificato.</summary>
      <returns>Proprietà con l'oggetto <paramref name="name" /> specificato oppure null se la proprietà non esiste.</returns>
      <param name="name">Nome della proprietà da ottenere dall'insieme.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> che contiene le chiavi dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Rimuove dall'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> l'elemento con il nome specificato. Questo metodo non può essere ereditato.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con l'oggetto <paramref name="name" /> specificato e può essere rimosso; in caso contrario, false.</returns>
      <param name="name">Nome dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Aggiunge all'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> un elemento con il nome e la proprietà specificati. Questo metodo non può essere ereditato.</summary>
      <param name="pair">Coppia chiave/valore che contiene il nome e il valore dell'elemento da aggiungere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Stabilisce se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nome specifico. Questo metodo non può essere ereditato.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con il nome e il valore specificati <paramref name="pair" />; in caso contrario, false.</returns>
      <param name="pair">Coppia chiave/valore che contiene il nome e il valore dell'elemento da individuare all'interno di <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia il contenuto dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> nella matrice specificata, partendo dall'indice specificato. Questo metodo non può essere ereditato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> in cui copiare l'insieme.</param>
      <param name="index">Indice da cui iniziare.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Rimuove dall'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> l'elemento con il nome specificato. Questo metodo non può essere ereditato.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con il nome e il valore specificati nel parametro <paramref name="pair" /> e può essere rimosso; in caso contrario, false.</returns>
      <param name="pair">Coppia chiave/valore che contiene il nome e il valore dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore in grado di scorrere un insieme. Questo metodo non può essere ereditato.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore in grado di scorrere un insieme. Questo metodo non può essere ereditato.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Stabilisce se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nome specifico e ne recupera il valore. Questo metodo non può essere ereditato.</summary>
      <returns>true se <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con l'oggetto <paramref name="name" /> specificato; in caso contrario, false.</returns>
      <param name="name">Nome dell'elemento da individuare.</param>
      <param name="value">Valore dell'elemento trovato.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Ottiene i valori dell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente i valori presenti nell'oggetto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Ottiene o imposta l'indirizzo di trasporto utilizzato per inviare i messaggi.</summary>
      <returns>URI contenente l'indirizzo di trasporto utilizzato per inviare i messaggi.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Specifica lo stato di un messaggio. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Il messaggio è stato creato. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Il messaggio viene letto.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Il messaggio è stato scritto.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Il messaggio è stato copiato.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Il messaggio è stato chiuso e non è più possibile accedervi.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Specifica le versioni SOAP e WS-Addressing associate a un messaggio e al relativo scambio.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Ottiene la versione di WS-Addressing associata alla versione del messaggio corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> associato alla versione del messaggio corrente. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Crea un oggetto versione messaggio utilizzando WS-Addressing 1.0 e una versione SOAP specificata.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> con la versione di envelope specificata</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> che indica la versione SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Crea un oggetto versione del messaggio con le versioni di WS-Addressing e SOAP specificate.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che utilizza le versioni di WS-Addressing e SOAP specificate.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> che indica la versione SOAP.</param>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> che indica la versione di WS-Addressing.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Ottiene la versione del messaggio predefinita utilizzata da Windows Phone.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che utilizza SOAP 1.2 e WS-Addressing versione 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Ottiene la versione SOAP associata alla versione del messaggio corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> associata all'oggetto versione del messaggio.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la versione del messaggio corrente è uguale a un oggetto specificato.</summary>
      <returns>true se l'oggetto specificato equivale all'oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con la versione del messaggio corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Ottiene un codice hash per la versione del messaggio corrente.</summary>
      <returns>Codice hash univoco per l'oggetto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> corrente.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Ottiene la versione del messaggio che non utilizza SOAP o WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che non utilizza SOAP o WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Ottiene la versione del messaggio che utilizza SOAP 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che utilizza SOAP 1.1 ma nessuna versione di WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Ottiene la versione del messaggio che utilizza WS-Addressing 1.0 e SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che utilizza la versione di WS-Addressing 1.0 e SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Versione del messaggio corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> corrente. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Fornisce una risposta correlata a una richiesta in ingresso.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>Se sottoposto a override in una classe derivata, interrompe l'elaborazione della richiesta associata al contesto. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Se sottoposto a override in una classe derivata, inizia un'operazione asincrona per rispondere alla richiesta associata al contesto corrente.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risposta asincrona.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> in ingresso contenente la richiesta.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di risposta asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di risposta asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Se sottoposto a override in una classe derivata, inizia un'operazione asincrona per rispondere alla richiesta associata al contesto corrente entro un intervallo di tempo specificato.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risposta asincrona.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> in ingresso contenente la richiesta.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo che è necessario attendere per la risposta a una richiesta disponibile.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> delegato che riceve la notifica del completamento dell'operazione di risposta asincrona.</param>
      <param name="state">Oggetto specificato dall'applicazione che contiene le informazioni di stato associate all'operazione di risposta asincrona.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>Se sottoposto a override in una classe derivata, chiude l'operazione di risposta al contesto di richiesta associato al contesto corrente.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>Se sottoposto a override in una classe derivata, chiude l'operazione di risposta al contesto di richiesta associato al contesto corrente entro un intervallo di tempo specificato.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo entro il quale è necessario chiudere l'operazione di risposta associata al contesto corrente.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Rilascia le risorse associate al contesto.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Se sottoposto a override in una classe derivata, completa un'operazione asincrona per rispondere a un messaggio di richiesta.</summary>
      <param name="result">Oggetto <see cref="T:System.IAsyncResult" /> restituito da una chiamata a uno dei metodi <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>Se sottoposto a override in una classe derivata, risponde a un messaggio di richiesta.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> in ingresso contenente la richiesta.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Se sottoposto a override in una classe derivata, risponde a un messaggio di richiesta entro un intervallo di tempo specificato.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> in ingresso contenente la richiesta.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> che specifica l'intervallo di tempo che è necessario attendere per la risposta a una richiesta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>Se sottoposto a override in una classe derivata, ottiene il messaggio che contiene la richiesta.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> che contiene la richiesta.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Rilascia le risorse gestite e non gestite associate al contesto.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>Classe astratta che, se implementata, rappresenta un elemento di binding che supporta la protezione dei messaggi SOAP del canale.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea una channel factory basata sulle impostazioni <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> e il contesto di associazione passati. La channel factory creata è una channel factory di protezione di un messaggio SOAP, che ha all'interno un riferimento alla channel factory corrispondente al contesto di associazione (che include la channel factory di trasporto).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Struttura <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Tipo di channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Un canale di tipo <paramref name="TChannel" /> non è supportato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Se implementato in una classe derivata, crea una channel factory di un tipo specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> che crea canali di tipo <paramref name="TChannel" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per la channel factory.</param>
      <typeparam name="TChannel">Tipo di channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Un canale di tipo <paramref name="TChannel" /> non è supportato.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ottiene un valore che indica se è possibile compilare una channel factory del tipo specificato.</summary>
      <returns>true se è possibile compilare una channel factory di tipo <paramref name="TChannel" />; in caso contrario, false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per la channel factory.</param>
      <typeparam name="TChannel">Tipo di channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Crea un elemento di associazione di protezione che viene configurato per l'autenticazione client basata su un nome utente e una password inviati come parte del messaggio SOAP. L'elemento di associazione richiede che il trasporto fornisca l'autenticazione del server e la protezione del messaggio (ad esempio, HTTPS).</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ottiene un oggetto specificato tramite l'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Oggetto specificato da <see cref="T:System.ServiceModel.Channels.BindingContext" /> oppure null se l'oggetto non viene trovato.</returns>
      <param name="context">Struttura <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Proprietà da ottenere.</typeparam>
      <exception cref="T:System.ArgumentNullException">Il <paramref name="context" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Ottiene o imposta un valore che indica se in ogni messaggio vengono inclusi dei timestamp.</summary>
      <returns>true se in ogni messaggio vengono inclusi dei timestamp; in caso contrario, false. Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Ottiene le proprietà di associazione specifiche per le impostazioni di protezione locali utilizzate dal client.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> contenente le impostazioni per la protezione del client locale.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Elemento di binding che specifica la codifica dei caratteri e il controllo delle versioni dei messaggi utilizzati per i messaggi SOAP basati su testo.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con una versione e una dimensione del messaggio specificate.</summary>
      <param name="messageVersion">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato per la versione del messaggio.</param>
      <param name="writeEncoding">
        <see cref="T:System.Text.Encoding" /> utilizzato per formattare i caratteri del messaggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> o <paramref name="writeEncoding" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> il valore non è valido.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Compila lo stack di channel factory sul client che crea un tipo di canale specificato per un contesto specificato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> di tipo <paramref name="TChannel" /> per il contesto specificato.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per il canale.</param>
      <typeparam name="TChannel">Tipo di canale prodotto dalla channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Crea un nuovo oggetto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> inizializzato dall'oggetto corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con valori di proprietà uguali a quelli dell'elemento corrente.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea una factory per i codificatori dei messaggi di testo che utilizza la versione del messaggio e la codifica dei caratteri specificate dall'elemento di binding della codifica corrente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> creato da questa factory.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Restituisce un oggetto con tipo richiesto, se presente, dal livello appropriato dello stack di elementi di binding.</summary>
      <returns>Oggetto T con tipo richiesto, se presente, o un riferimento null (Nothing in Visual Basic) in caso contrario.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> per l'elemento di binding.</param>
      <typeparam name="T">L'oggetto con tipo per il quale il metodo esegue la query.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Ottiene o imposta le versioni di SOAP e di WS-Addressing utilizzate per formattare il messaggio di testo.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizzato per formattare i messaggi. Il valore predefinito è <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Ottiene o imposta la codifica utilizzata per formattare i caratteri nel messaggio di testo.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> utilizzato per formattare i caratteri del messaggio di testo. La codifica di testo predefinita è il formato UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> il valore non è valido.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Classe di base abstract che rappresenta un elemento di binding di trasporto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Crea una nuova istanza di questa classe.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Crea una nuova istanza di questa classe da un'istanza esistente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> da clonare. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ottiene una proprietà dall'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</summary>
      <returns>Proprietà dell'oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" /> specificato.</returns>
      <param name="context">Oggetto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Proprietà da ottenere.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> non può essere null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Ottiene o imposta un valore che indica se è necessario l'indirizzamento manuale del messaggio.</summary>
      <returns>true se è necessario l'indirizzamento manuale del messaggio; in caso contrario, false. L'impostazione predefinita è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Ottiene e imposta la dimensione massima che è consentito ricevere.</summary>
      <returns>Dimensione massima del messaggio che è consentito ricevere. Il valore predefinito è 65.536 byte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <paramref name="value" /> impostato non può essere negativo.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Ottiene lo schema URI per il trasporto.</summary>
      <returns>Restituisce lo schema URI per il trasporto, che varia a seconda della classe derivata che implementa questo metodo.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Rappresenta un elemento di binding personalizzato che supporta la protezione in modalità mista (ad esempio la protezione dei messaggi ottimizzata tramite un trasporto protetto).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Crea un'istanza della classe <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Crea un nuovo oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> inizializzato dalla classe corrente.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.BindingElement" /> con valori di proprietà uguali a quelli dell'istanza corrente.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Consente all'utente di configurare le credenziali client utilizzate per autenticare il client per un servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Crea una copia dell'oggetto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> esistente. </summary>
      <param name="other">Istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" /> da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Crea una nuova copia di questa istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
      <exception cref="T:System.NotImplementedException">Le credenziali correnti sono null o non sono digitate correttamente.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Crea una nuova copia di questa istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Istanza di <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Ottiene un oggetto credenziale che è possibile utilizzare per impostare il nome utente e la password utilizzate dal client per l'autenticazione a un servizio. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> che rappresenta il nome utente e la password correnti delle credenziali del client.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Descrive un contratto che specifica il contenuto della comunicazione di un endpoint al mondo esterno.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> con un nome specificato.</summary>
      <param name="name">Nome del contratto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è vuoto.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ContractDescription" /> con un nome qualificato con lo spazio dei nomi specificato.</summary>
      <param name="name">Nome del contratto.</param>
      <param name="ns">Spazio dei nomi che contiene il nome del contratto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è vuoto.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Ottiene o imposta il tipo di contratto di callback specificato dalla descrizione del contratto.</summary>
      <returns>
        <see cref="T:System.Type" /> di contratto di callback specificato dalla descrizione del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Ottiene o imposta il nome di configurazione per la descrizione del contratto.</summary>
      <returns>Nome di configurazione per il contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Ottiene o imposta il tipo di contratto specificato dalla descrizione del contratto.</summary>
      <returns>
        <see cref="T:System.Type" /> di contratto specificato dalla descrizione del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Ottiene o imposta il nome del contratto.</summary>
      <returns>Nome della descrizione del contratto.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi per il contratto.</summary>
      <returns>Spazio dei nomi del contratto.</returns>
      <exception cref="T:System.ArgumentNullException">L'impostazione del valore è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Ottiene l'insieme delle descrizioni dell'operazione associate al contratto.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> contenente le descrizioni dell'operazione associate alla descrizione del contratto.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Rappresenta errore SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.FaultDescription" /> utilizzando il valore di azione specificato.</summary>
      <param name="action">Azione del messaggio di errore SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Ottiene il valore dell'azione nel messaggio di errore SOAP.</summary>
      <returns>Azione dell'errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Ottiene o imposta il tipo di dettaglio dell'errore SOAP.</summary>
      <returns>Tipo dell'oggetto dettaglio serializzabile.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Ottiene o imposta il nome dell'errore SOAP.</summary>
      <returns>Nome dell'errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'errore SOAP.</summary>
      <returns>Spazio dei nomi dell'errore SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Insieme di oggetti <see cref="T:System.ServiceModel.Description.FaultDescription" /> che è possibile utilizzare per ottenere informazioni sugli errori SOAP in un contratto.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Rappresenta il corpo di un messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Ottiene le parti del corpo del messaggio SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> contenente le parti del corpo del messaggio SOAP che è possibile controllare o modificare.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Ottiene o imposta la porzione del messaggio SOAP che contiene il valore restituito.</summary>
      <returns>Valore restituito, se presente.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Ottiene o imposta il nome dell'elemento wrapper all'interno dell'elemento corpo SOAP, se presente.</summary>
      <returns>Nome dell'elemento wrapper, se presente; in caso contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Ottiene o imposta lo spazio dei nomi dell'elemento wrapper all'interno del corpo SOAP, se presente.</summary>
      <returns>Spazio dei nomi dell'elemento wrapper, se presente.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Rappresenta la descrizione di un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessageDescription" /> con un'azione e una direzione specificate.</summary>
      <param name="action">Parametro di azione del messaggio SOAP che identifica l'intento del messaggio.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> se il messaggio è in ingresso o <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> se il messaggio è in uscita.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> non è né <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> né <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Ottiene il parametro di azione del messaggio SOAP che identifica l'intento del messaggio.</summary>
      <returns>URI dell'azione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Ottiene il corpo del messaggio SOAP.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> che contiene il corpo del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Ottiene la direzione che indica se il messaggio è in ingresso o in uscita.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDirection" /> che indica se il messaggio è in ingresso o in uscita dal servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Ottiene o imposta un tipo che identifica il tipo di contratto del messaggio.</summary>
      <returns>Tipo di contratto del messaggio.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Fornisce un insieme utilizzato per archiviare le descrizioni dei messaggi che costituiscono un'operazione che appartiene a un contratto.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Trova e restituisce la prima descrizione di messaggio in un insieme per un messaggio con un'azione specificata.</summary>
      <returns>Primo oggetto <see cref="T:System.ServiceModel.Description.MessageDescription" /> dell'insieme in cui per il messaggio viene specificato un oggetto <paramref name="action" /> e null se non viene trovato un oggetto <paramref name="action" /> corrispondente.</returns>
      <param name="action">Azione del messaggio trovata.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Trova e restituisce tutte le descrizioni di messaggio di un insieme in cui per i messaggi è stata specificata un'azione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> contenente le descrizioni di messaggio dell'insieme corrente in cui per i messaggi è stato specificato un oggetto <paramref name="action" />. Se non vengono trovati oggetti <see cref="T:System.ServiceModel.Description.MessageDescription" /> corrispondenti, viene restituito un insieme vuoto.</returns>
      <param name="action">Azione dei messaggi trovata.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Specifica la direzione del messaggio.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Il messaggio è in ingresso.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Il messaggio è in uscita.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Rappresenta una descrizione di una parte del messaggio SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.MessagePartDescription" />. </summary>
      <param name="name">Nome XML della parte del messaggio.</param>
      <param name="ns">Spazio dei nomi XML della parte del messaggio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Ottiene o imposta l'indice della parte del messaggio.</summary>
      <returns>Indice della parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Ottiene o imposta le informazioni sul membro per la parte del messaggio.</summary>
      <returns>Informazioni sul membro per questa parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Ottiene il nome della parte del messaggio.</summary>
      <returns>Nome della parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Ottiene lo spazio dei nomi della parte del messaggio.</summary>
      <returns>Spazio dei nomi della parte del messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Ottiene o imposta il tipo della parte del messaggio.</summary>
      <returns>Tipo della parte del messaggio.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Rappresenta un insieme di oggetti <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>Se viene chiamato in una classe derivata, restituisce l'oggetto <see cref="T:System.Xml.XmlQualifiedName" /> dell'oggetto <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> di <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> da individuare.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Contratto che caratterizza un'operazione in termini di messaggi scambiati.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.OperationDescription" /> con un nome e una descrizione contratto specificati.</summary>
      <param name="name">Nome della descrizione dell'operazione.</param>
      <param name="declaringContract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> utilizzato per inizializzare la descrizione dell'operazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="declaringContract" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> è vuoto.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Ottiene o imposta il nome di inizio dell'operazione.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> che fornisce l'accesso agli attributi e ai metadati del metodo.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Ottiene o imposta il contratto al quale appartiene l'operazione.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Description.ContractDescription" /> per l'operazione.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> impostato è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Ottiene o imposta il nome di fine dell'operazione.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> che fornisce l'accesso agli attributi e ai metadati del metodo.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Ottiene un insieme delle descrizioni degli errori associati alla descrizione dell'operazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> contenente i dettagli sugli errori associati alla descrizione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Ottiene un valore che indica se un'operazione restituisce un messaggio di risposta.</summary>
      <returns>true se questo metodo riceve un messaggio di richiesta e non restituisce alcun messaggio di risposta; in caso contrario, false. L'impostazione predefinita è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Ottiene i tipi noti associati alla descrizione dell'operazione.</summary>
      <returns>Insieme dei tipi noti associati alla descrizione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Ottiene o imposta le descrizioni dei messaggi che costituiscono l'operazione.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> contenente le descrizioni dei messaggi che costituiscono l'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Ottiene o imposta il nome della descrizione dell'operazione.</summary>
      <returns>Nome della descrizione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Ottiene o imposta metodo di sincronizzazione del servizio della descrizione dell'operazione.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> che fornisce l'accesso agli attributi e ai metadati del metodo.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Rappresenta un insieme che contiene le descrizioni delle operazioni.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Restituisce la prima occorrenza della descrizione di un'operazione con un nome specificato dall'insieme delle descrizioni delle operazioni.</summary>
      <returns>Prima occorrenza di un oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> con il nome specificato o null in assenza di un'operazione con il nome specificato.</returns>
      <param name="name">Nome dell'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Restituisce un insieme di tutte le descrizioni di operazioni dall'insieme con il nome specificato.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> di tipo <see cref="T:System.ServiceModel.Description.OperationDescription" /> che contiene tutte le descrizioni delle operazioni con il nome specificato.</returns>
      <param name="name">Nome dell'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Inserisce un elemento in un insieme di descrizioni delle operazioni in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice a base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Sostituisce l'elemento descrizione dell'operazione nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice a base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto <see cref="T:System.ServiceModel.Description.OperationDescription" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Rappresenta l'endpoint per un servizio che consente ai client del servizio di trovare e comunicare con un servizio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per un contratto specificato.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> per l'endpoint del servizio.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> con un contratto, un'associazione e un indirizzo specificati.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> per l'endpoint del servizio.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> che specifica il modo in cui l'endpoint del servizio comunica con il mondo.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> per l'endpoint del servizio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Ottiene o imposta l'indirizzo dell'endpoint per l'endpoint del servizio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> che specifica il percorso dell'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Ottiene o imposta l'associazione per l'endpoint del servizio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> per l'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Ottiene il contratto per l'endpoint del servizio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> che specifica il contratto per l'endpoint del servizio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Ottiene o imposta il nome dell'endpoint del servizio.</summary>
      <returns>Nome dell'endpoint del servizio. Il valore predefinito è la concatenazione del nome dell'associazione e del nome di descrizione del contratto. Ad esempio, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Controlla il comportamento in fase di esecuzione di <see cref="T:System.Xml.Serialization.XmlSerializer" /> in associazione a un'operazione.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Utilizzato per modificare o estendere il comportamento di esecuzione di un'operazione di contratto specifica in un oggetto client o in un oggetto canale client. Questa classe non può essere ereditata. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> utilizzando i valori <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, nome e azione specificati. </summary>
      <param name="parent">Oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenitore.</param>
      <param name="name">Nome dell'operazione.</param>
      <param name="action">Azione dell'operazione.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> utilizzando i valori <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, nome, azione e azione di risposta specificati. </summary>
      <param name="parent">Oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenitore.</param>
      <param name="name">Nome dell'operazione.</param>
      <param name="action">Azione dell'operazione.</param>
      <param name="replyAction">Azione del messaggio di risposta.</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> o <paramref name="name" /> è null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Ottiene l'azione dell'operazione.</summary>
      <returns>Azione dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Ottiene o imposta il metodo associato a un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo che gestisce la porzione iniziale di una coppia di metodi asincrona oppure null se l'operazione non è parte di una coppia di metodi asincrona.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Ottiene o imposta un valore che indica se il valore della proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> viene utilizzato per deserializzare il messaggio di risposta.</summary>
      <returns>true se il tipo restituito non è un <see cref="T:System.ServiceModel.Channels.Message" />; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Ottiene o imposta il metodo che implementa il metodo di fine asincrono per l'operazione.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo di fine per l'operazione oppure null se l'operazione non è asincrona.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Ottiene o imposta il formattatore che serializza gli oggetti nei messaggi e deserializza i messaggi negli oggetti.</summary>
      <returns>Implementazione di <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Ottiene o imposta un valore che indica se una sessione può essere avviata da un messaggio a questa operazione.</summary>
      <returns>true se un messaggio a questa operazione può avviare la sessione; in caso contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Ottiene o imposta un valore che indica se l'operazione è unidirezionale.</summary>
      <returns>true se il client WCF non deve aspettarsi una risposta; in caso contrario, false. Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Ottiene o imposta un valore che indica se questa operazione è l'ultima di una sessione.</summary>
      <returns>true se la sessione associata viene chiusa dopo che è stata richiamata l'operazione; in caso contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Ottiene il nome dell'operazione.</summary>
      <returns>Nome dell'operazione.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Ottiene l'oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenitore.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenitore.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Ottiene l'azione del messaggio di risposta per questa operazione.</summary>
      <returns>Azione della risposta.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Ottiene o imposta un valore che specifica se l'oggetto <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializza un messaggio in uscita.</summary>
      <returns>true se la proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializza i valori restituiti in un messaggio di risposta; in caso contrario, false. Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Ottiene o imposta il metodo associato a questa operazione.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo che implementa l'operazione. Se l'operazione è asincrona, questo valore è null e i metodi di implementazione vengono archiviati nelle proprietà <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> e <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Punto di inserzione per le classi che estendono la funzionalità degli oggetti client Windows Phone per tutti i messaggi gestiti da un'applicazione client.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Ottiene il tipo di contratto associato al client.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il contratto associato a questo client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Ottiene il nome del contratto associato al client.</summary>
      <returns>Nome contratto utilizzato per questo client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Ottiene lo spazio dei nomi del contratto associato al client.</summary>
      <returns>Spazio dei nomi del contratto associato al client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Ottiene o imposta un valore che indica se il client aggiunge le intestazioni di indirizzamento ai messaggi di richiesta-risposta.</summary>
      <returns>true se il client non aggiunge alcuna intestazione di indirizzamento; in caso contrario, false. Il valore predefinito è false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Ottiene o imposta la dimensione massima dei messaggi di errore. </summary>
      <returns>Dimensione massima dell'errore. Il valore predefinito è 64 KB.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Ottiene o imposta un'implementazione di <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> che può essere utilizzata per selezionare un oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> che seleziona un oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Ottiene l'operazione client per i metodi per i quali non esiste un oggetto <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> corrispondente nell'insieme <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> che rappresenta il metodo al quale viene indirizzato il contenuto del messaggio corrente quando il selettore dell'operazione non riesce a trovare l'operazione che corrisponde al messaggio.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Ottiene o imposta l'indirizzo di trasporto utilizzato per inviare i messaggi tramite il client.</summary>
      <returns>
        <see cref="T:System.Uri" /> che rappresenta l'indirizzo di destinazione per il trasporto. Il valore predefinito è il valore <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> del client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Questa classe non è supportata nella versione corrente di Windows Phone. È presente per ragioni di compatibilità.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Rappresenta le informazioni su un errore SOAP specificato in un attributo <see cref="T:System.ServiceModel.FaultContractAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> che utilizza l'azione e il tipo di dettaglio specificati.</summary>
      <param name="action">Azione dell'errore SOAP.</param>
      <param name="detail">Tipo di dettaglio che viene serializzato come dettaglio di errore SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Ottiene il valore dell'azione di errore SOAP.</summary>
      <returns>Valore dell'azione di errore SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>Tipo di oggetto che viene serializzato  come dettaglio dell'errore SOAP.</summary>
      <returns>
        <see cref="T:System.Type" /> che rappresenta il dettaglio dell'errore SOAP serializzato.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Definisce i metodi utilizzati per controllare la conversione dei messaggi in oggetti e gli oggetti in messaggi per le applicazioni client.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Converte un messaggio in un valore restituito e nei parametri <paramref name="out" /> passati nuovamente all'operazione di chiamata.</summary>
      <returns>Valore restituito dell'operazione.</returns>
      <param name="message">Messaggio in ingresso.</param>
      <param name="parameters">Tutti i valori <paramref name="out" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Converte una matrice <see cref="T:System.Object" /> in un oggetto <see cref="T:System.ServiceModel.Channels.Message" /> in uscita. </summary>
      <returns>Messaggio SOAP inviato all'operazione del servizio.</returns>
      <param name="messageVersion">Versione del messaggio SOAP da utilizzare.</param>
      <param name="parameters">Parametri passati all'operazione client XAML.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Definisce il contratto per un selettore di operazioni.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Ottiene un valore che indica se per determinare la selezione sono richiesti dei parametri.</summary>
      <returns>true se i parametri sono necessari; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Restituisce l'operazione selezionata.</summary>
      <returns>Operazione selezionata dal selettore di operazioni personalizzato.</returns>
      <param name="method">Metodo richiamato.</param>
      <param name="parameters">Parametri passati al metodo.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Definisce i metodi che deserializzano i messaggi di richiesta e serializzano i messaggi di risposta in un'applicazione.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Deserializza un messaggio in una matrice di parametri.</summary>
      <param name="message">Messaggio in ingresso.</param>
      <param name="parameters">Matrice di oggetti che vengono passati all'operazione come parametri.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Serializza un messaggio di risposta da una versione di messaggio, una matrice di parametri e un valore restituito specificati.</summary>
      <returns>Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> di risposta serializzato.</returns>
      <param name="messageVersion">Versione del messaggio SOAP.</param>
      <param name="parameters">Matrice di parametri out.</param>
      <param name="result">Valore restituito.</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Rappresenta un'eccezione che si verifica in presenza di problemi relativi alla protezione applicata a un messaggio.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con un messaggio di errore e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore.</param>
      <param name="innerException">Riferimento all'eccezione interna.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Rappresenta l'eccezione di protezione generata in caso di errore di una richiesta di autorizzazione di sicurezza.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> utilizzando il messaggio specificato.</summary>
      <param name="message">Descrizione della condizione di errore.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> utilizzando il messaggio specificato e l'eccezione interna.</summary>
      <param name="message">Descrizione della condizione di errore.</param>
      <param name="innerException">Eccezione interna da utilizzare.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Rappresenta un credenziale client basata su nome utente e password.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Ottiene o imposta la password.</summary>
      <returns>Password.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Ottiene o imposta il nome dell'utente.</summary>
      <returns>Nome utente.</returns>
    </member>
  </members>
</doc>