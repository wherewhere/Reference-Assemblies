<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System</name>
  </assembly>
  <members>
    <member name="T:System.FileStyleUriParser">
      <summary>Parser personalizzabile basato sullo schema file.</summary>
    </member>
    <member name="M:System.FileStyleUriParser.#ctor">
      <summary>Crea un parser personalizzabile basato sullo schema file.</summary>
    </member>
    <member name="T:System.FtpStyleUriParser">
      <summary>Parser personalizzabile basato sullo schema FTP (File Transfer Protocol).</summary>
    </member>
    <member name="M:System.FtpStyleUriParser.#ctor">
      <summary>Crea un parser personalizzabile basato sullo schema FTP (File Transfer Protocol).</summary>
    </member>
    <member name="T:System.GenericUriParser">
      <summary>Parser personalizzabile per un URI gerarchico.</summary>
    </member>
    <member name="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)">
      <summary>Crea un parser personalizzabile per un URI gerarchico.</summary>
      <param name="options">Specificare le opzioni per questo oggetto <see cref="T:System.GenericUriParser" />.</param>
    </member>
    <member name="T:System.GenericUriParserOptions">
      <summary>Specifica le opzioni per un <see cref="T:System.UriParser" />.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.AllowEmptyAuthority">
      <summary>Il parser consente un URI senza autorità.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.Default">
      <summary>Il parser:</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontCompressPath">
      <summary>Il parser non converte l'URI in formato canonico.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontConvertPathBackslashes">
      <summary>Il parser non converte le barre rovesciate in barre.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontUnescapePathDotsAndSlashes">
      <summary>Il parser non converte in caratteri non di escape punti di percorso, barre o barre rovesciate.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.GenericAuthority">
      <summary>Il parser consente un'autorità basata sul Registro di sistema.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.Idn">
      <summary>Il parser supporta l'analisi IDN (Internationalized Domain Name) dei nomi host.L'utilizzo o meno di IDN dipende dai valori di configurazione.Per ulteriori informazioni, vedere la sezione delle osservazioni.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.IriParsing">
      <summary>Il parser supporta le regole di analisi indicate nella specifica RFC 3987 per gli identificatori IRI (International Resource Identifier).L'utilizzo o meno di IRI dipende dai valori di configurazione.Per ulteriori informazioni, vedere la sezione delle osservazioni.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoFragment">
      <summary>Lo schema non definisce una parte di frammento.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoPort">
      <summary>Lo schema non definisce una porta.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoQuery">
      <summary>Lo schema non definisce una parte di query.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoUserInfo">
      <summary>Lo schema non definisce una parte di informazioni utente.</summary>
    </member>
    <member name="T:System.HttpStyleUriParser">
      <summary>Parser personalizzabile basato sullo schema HTTP.</summary>
    </member>
    <member name="M:System.HttpStyleUriParser.#ctor">
      <summary>Crea un parser personalizzabile basato sullo schema HTTP.</summary>
    </member>
    <member name="T:System.Uri">
      <summary>Fornisce una rappresentazione in forma di oggetto di un identificatore URI (uniform resource identifier) e un pratico accesso alle parti dell'URI.</summary>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> con l'URI specificato.</summary>
      <param name="uriString">Descrizione di URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> è null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> è vuoto.-oppure- Lo schema specificato in <paramref name="uriString" /> non è formato correttamente. Vedere <see cref="M:System.Uri.CheckSchemeName(System.String)" />.-oppure- <paramref name="uriString" /> contiene troppe barre.-oppure- La password specificata in <paramref name="uriString" /> non è valida.-oppure- Il nome host specificato in <paramref name="uriString" /> non è valido.-oppure- Il nome file specificato in <paramref name="uriString" /> non è valido. -oppure- Il nome utente specificato in <paramref name="uriString" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato in <paramref name="uriString" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato in <paramref name="uriString" /> non è valido o non può essere analizzato.-oppure- La lunghezza di <paramref name="uriString" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato in <paramref name="uriString" /> supera i 1024 caratteri.-oppure- In <paramref name="uriString" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> con l'URI specificato. Questo costruttore consente di specificare se la stringa URI è un URI relativo, un URI assoluto o se è indeterminata.</summary>
      <param name="uriString">Stringa che identifica la risorsa che deve essere rappresentata dall'istanza di <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Specifica se la stringa URI è un URI relativo, un URI assoluto o se è indeterminata.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> non è valido (i valori possibili sono <see cref="F:System.UriKind.Absolute" />, <see cref="F:System.UriKind.Relative" /> o <see cref="F:System.UriKind.RelativeOrAbsolute" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> è null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> contiene un URI relativo e <paramref name="uriKind" /> è <see cref="F:System.UriKind.Absolute" />.oppure<paramref name="uriString" /> contiene un URI assoluto e <paramref name="uriKind" /> è <see cref="F:System.UriKind.Relative" />.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> basata sull'URI di base specificato e sulla stringa URI relativa.</summary>
      <param name="baseUri">URI di base. </param>
      <param name="relativeUri">URI relativo da aggiungere all'URI di base. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> non è un'istanza di <see cref="T:System.Uri" /> assoluta.</exception>
      <exception cref="T:System.UriFormatException">L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è vuoto o contiene solo spazi.-oppure- Lo schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> contiene troppe barre.-oppure- La password specificata nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valida.-oppure- Il nome host specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome file specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido. -oppure- Il nome utente specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido o non può essere analizzato.-oppure- La lunghezza dell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 1024 caratteri.-oppure- Nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Uri" /> sulla combinazione di un'istanza di <see cref="T:System.Uri" /> di base specificata e un'istanza di <see cref="T:System.Uri" /> relativa.</summary>
      <param name="baseUri">Oggetto <see cref="T:System.Uri" /> assoluto che costituisce la base per la nuova istanza di <see cref="T:System.Uri" />. </param>
      <param name="relativeUri">Istanza di <see cref="T:System.Uri" /> relativa combinata con <paramref name="baseUri" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> non è un'istanza di <see cref="T:System.Uri" /> assoluta.</exception>
      <exception cref="T:System.UriFormatException">L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è vuoto o contiene solo spazi.-oppure- Lo schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- L'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> contiene troppe barre.-oppure- La password specificata nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valida.-oppure- Il nome host specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome file specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido. -oppure- Il nome utente specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido.-oppure- Il nome host o il nome dell'autorità specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non può essere terminato da barre rovesciate.-oppure- Il numero di porta specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> non è valido o non può essere analizzato.-oppure- La lunghezza dell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 65519 caratteri.-oppure- La lunghezza dello schema specificato nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> supera i 1024 caratteri.-oppure- Nell'URI formato dalla combinazione di <paramref name="baseUri" /> e <paramref name="relativeUri" /> è presente una sequenza di caratteri non valida.-oppure- Il percorso MS-DOS specificato in <paramref name="uriString" /> deve iniziare con c:\\.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Ottiene il percorso assoluto dell'URI.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il percorso assoluto della risorsa.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Ottiene l'URI assoluto.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente l'URI intero.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Ottiene il nome host DNS (Domain Name System) o l'indirizzo IP e il numero di porta per un server.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il componente autorità dell'URI rappresentato da questa istanza.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Determina se il nome host specificato è un nome DNS valido.</summary>
      <returns>
        <see cref="T:System.UriHostNameType" /> che indica il tipo del nome host. Se non è possibile determinare il tipo del nome host o se il nome host è null oppure è una stringa di lunghezza zero, questo metodo restituisce <see cref="F:System.UriHostNameType.Unknown" />.</returns>
      <param name="name">Nome host da convalidare. Può essere un indirizzo IPv4 o IPv6 oppure un nome host Internet. </param>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Determina se il nome dello schema specificato è valido.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il nome dello schema è valido; in caso contrario, false.</returns>
      <param name="schemeName">Nome dello schema da convalidare. </param>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Confronta le parti specificate dei due URI utilizzando le regole di confronto specificate.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che indica la relazione lessicale tra i componenti <see cref="T:System.Uri" /> confrontati.ValoreSignificatoMinore di zero<paramref name="uri1" /> è minore di <paramref name="uri2" />.Zero<paramref name="uri1" /> è uguale a <paramref name="uri2" />.Maggiore di zero<paramref name="uri1" /> è maggiore di <paramref name="uri2" />.</returns>
      <param name="uri1">Primo oggetto <see cref="T:System.Uri" />.</param>
      <param name="uri2">Secondo oggetto <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">Combinazione bit per bit dei valori di <see cref="T:System.UriComponents" /> che specifica le parti di <paramref name="uri1" /> e <paramref name="uri2" /> da confrontare.</param>
      <param name="compareFormat">Uno dei valori di <see cref="T:System.UriFormat" /> che specifica l'escape dei caratteri utilizzato durante il confronto dei componenti dell'URI.</param>
      <param name="comparisonType">Uno dei valori di <see cref="T:System.StringComparison" />.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="comparisonType" /> non è un valore <see cref="T:System.StringComparison" /> valido.</exception>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Ottiene un nome host senza caratteri escape che può essere utilizzato in modo sicuro per la risoluzione DNS.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la parte host non sottoposta a escape dell'URI adatta per la risoluzione DNS oppure stringa host non sottoposta a escape originale, se già adatta per la risoluzione.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Verifica l'uguaglianza tra due istanze di <see cref="T:System.Uri" />.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se le due istanze rappresentano lo stesso URI; in caso contrario, false.</returns>
      <param name="comparand">Istanza di <see cref="T:System.Uri" /> o identificatore URI da confrontare con l'istanza corrente. </param>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Converte una stringa nella relativa rappresentazione in sequenza di escape.</summary>
      <returns>
        <see cref="T:System.String" /> che contiene la rappresentazione in sequenza escape di <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Stringa di cui effettuare l'escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> è null. </exception>
      <exception cref="T:System.UriFormatException">La lunghezza di <paramref name="stringToEscape" /> supera i 32766 caratteri.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Converte una stringa URI nella relativa rappresentazione escape.</summary>
      <returns>
        <see cref="T:System.String" /> che contiene la rappresentazione in sequenza escape di <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Stringa di cui effettuare l'escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> è null. </exception>
      <exception cref="T:System.UriFormatException">La lunghezza di <paramref name="stringToEscape" /> supera i 32766 caratteri.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Ottiene il frammento URI in sequenza escape.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene informazioni sui frammenti URI.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="M:System.Uri.FromHex(System.Char)">
      <summary>Ottiene il valore decimale di una cifra esadecimale.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che contiene un numero compreso tra 0 e 15 corrispondente alla cifra esadecimale specificata.</returns>
      <param name="digit">Cifra esadecimale (0-9, a-f, A-F) da convertire. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="digit" /> non è una cifra esadecimale valida (0-9, a-f, A-F). </exception>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Ottiene i componenti specificati dell'istanza corrente utilizzando l'escape specificato per caratteri speciali.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene i componenti.</returns>
      <param name="components">Combinazione bit per bit dei valori di <see cref="T:System.UriComponents" /> che specifica quali parti dell'istanza corrente restituire al chiamante.</param>
      <param name="format">Uno dei valori di <see cref="T:System.UriFormat" /> che controlla come viene eseguito l'escape dei caratteri speciali. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" /> non è una combinazione di valori <see cref="T:System.UriComponents" /> validi.</exception>
      <exception cref="T:System.InvalidOperationException">Questo metodo è valido solo per un'istanza assoluta di <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Ottiene il codice hash per l'URI.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il valore hash generato per questo URI.</returns>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Ottiene il componente host di questa istanza.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene il nome host. Si tratta in genere del nome host DNS o dell'indirizzo IP del server.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Ottiene il tipo del nome host specificato nell'URI.</summary>
      <returns>Membro dell'enumerazione <see cref="T:System.UriHostNameType" />.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Ottiene un valore che indica se l'istanza di <see cref="T:System.Uri" /> è assoluta.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'istanza di <see cref="T:System.Uri" /> è assoluta; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Determina se l'istanza di <see cref="T:System.Uri" /> corrente è una base dell'istanza di <see cref="T:System.Uri" /> specificata.</summary>
      <returns>true se l'istanza di <see cref="T:System.Uri" /> corrente è una base di <paramref name="uri" />; in caso contrario, false.</returns>
      <param name="uri">Istanza di <see cref="T:System.Uri" /> specificata da testare. </param>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Ottiene un valore che indica se il valore relativo alla porta dell'URI è quello predefinito per questo schema.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il valore della proprietà <see cref="P:System.Uri.Port" /> corrisponde alla porta predefinita per questo schema; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Ottiene un valore che indica se la classe <see cref="T:System.Uri" /> specificata è un URI di file.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se <see cref="T:System.Uri" /> è l'URI di un file; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="M:System.Uri.IsHexDigit(System.Char)">
      <summary>Determina se un carattere specificato è una cifra esadecimale valida.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il carattere è una cifra esadecimale valida; in caso contrario, false.</returns>
      <param name="character">Carattere da convalidare. </param>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Uri" /> specificato fa riferimento all'host locale.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> corrente fa riferimento all'host locale; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Uri" /> specificato è un percorso UNC (Universal Naming Convention).</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se <see cref="T:System.Uri" /> è un percorso UNC; in caso contrario, false.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Indica se la stringa utilizzata per costruire questo oggetto <see cref="T:System.Uri" /> è ben formata e se non è necessario sottoporla ulteriormente a escape.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se la stringa è costruita correttamente; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Indica se la stringa è ben formata mediante un tentativo di costruire un oggetto <see cref="T:System.Uri" /> con tale stringa e assicura che la stringa non deve essere ulteriormente sottoposta ad escape.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il formato della stringa è corretto in base allo standard RFC 3986; in caso contrario, false.</returns>
      <param name="uriString">Oggetto <see cref="T:System.Uri" /> rappresentato come stringa.</param>
      <param name="uriKind">Tipo dell'URI nel parametro <paramref name="uriString" />.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Ottiene una rappresentazione di un nome file nel formato del sistema operativo locale.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene la rappresentazione del sistema operativo locale di un nome file.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Determina la differenza tra due istanze di <see cref="T:System.Uri" />.</summary>
      <returns>Se il nome host e lo schema di questa istanza di URI e <paramref name="toUri" /> sono identici, questo metodo restituisce un oggetto <see cref="T:System.Uri" /> relativo che, se aggiunto all'istanza di URI corrente, restituisce <paramref name="toUri" />.Se il nome host o lo schema è differente, questo metodo restituisce un oggetto <see cref="T:System.Uri" /> che rappresenta il parametro <paramref name="toUri" />.</returns>
      <param name="uri">URI da confrontare con l'URI corrente.</param>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Determina se due istanze di <see cref="T:System.Uri" /> hanno lo stesso valore.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se le istanze di <see cref="T:System.Uri" /> sono equivalenti; in caso contrario, false.</returns>
      <param name="uri1">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri2" />. </param>
      <param name="uri2">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri1" />. </param>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Determina se due istanze di <see cref="T:System.Uri" /> non hanno lo stesso valore.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se le due istanze di <see cref="T:System.Uri" /> non sono uguali; in caso contrario, false. Se uno dei parametri è null, questo metodo restituisce true.</returns>
      <param name="uri1">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri2" />. </param>
      <param name="uri2">Istanza di <see cref="T:System.Uri" /> da confrontare con <paramref name="uri1" />. </param>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Ottiene la stringa URI originale passata al costruttore <see cref="T:System.Uri" />.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente l'URI esatto specificato alla costruzione di questa istanza, in caso contrario, <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Ottiene le proprietà <see cref="P:System.Uri.AbsolutePath" /> e <see cref="P:System.Uri.Query" /> separate da un punto interrogativo (?).</summary>
      <returns>Oggetto <see cref="T:System.String" /> che contiene le proprietà <see cref="P:System.Uri.AbsolutePath" /> e <see cref="P:System.Uri.Query" /> separate da un punto interrogativo (?).</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Ottiene il numero di porta di questo URI.</summary>
      <returns>Valore di <see cref="T:System.Int32" /> contenente il numero di porta per questo URI.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Ottiene le informazioni sulle query incluse nell'URI specificato.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente le informazioni sulle query incluse nell'URI specificato.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Ottiene il nome di schema per questo URI.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente lo schema per questo URI, convertito in caratteri minuscoli.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="F:System.Uri.SchemeDelimiter">
      <summary>Specifica i caratteri che separano lo schema del protocollo di comunicazione dalla parte di indirizzo dell'URI. Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Ottiene una matrice contenente i segmenti di percorso che compongono l'URI specificato.</summary>
      <returns>Matrice <see cref="T:System.String" /> contenente i segmenti di percorso che compongono l'URI specificato.</returns>
      <exception cref="T:System.InvalidOperationException">Questa istanza rappresenta un URI relativo e questa proprietà è valida solo per URI assoluti. </exception>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Ottiene una rappresentazione in forma di stringa canonica per l'istanza di <see cref="T:System.Uri" /> specificata.</summary>
      <returns>Istanza di <see cref="T:System.String" /> che contiene la rappresentazione canonica senza caratteri escape dell'istanza di <see cref="T:System.Uri" />. Non viene effettuato l'escape di alcun carattere, ad eccezione di #, ? e %.</returns>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Uri" /> utilizzando l'istanza di <see cref="T:System.String" /> specificata e un oggetto <see cref="T:System.UriKind" />.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> è stato creato correttamente; in caso contrario, false.</returns>
      <param name="uriString">Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Tipo dell'URI.</param>
      <param name="result">Quando termina, questo metodo contiene l'oggetto <see cref="T:System.Uri" /> costruito.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Uri" /> utilizzando le istanze di <see cref="T:System.String" /> relativa e di base.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> è stato creato correttamente; in caso contrario, false.</returns>
      <param name="baseUri">Oggetto <see cref="T:System.Uri" /> di base.</param>
      <param name="relativeUri">Oggetto <see cref="T:System.Uri" /> relativo, rappresentato come oggetto <see cref="T:System.String" />, da aggiungere all'oggetto <see cref="T:System.Uri" /> di base.</param>
      <param name="result">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Uri" /> costruito da <paramref name="baseUri" /> e <paramref name="relativeUri" />. Questo parametro viene passato in forma non inizializzata.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Uri" /> utilizzando le istanze di <see cref="T:System.Uri" /> relativa e di base.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se l'oggetto <see cref="T:System.Uri" /> è stato creato correttamente; in caso contrario, false.</returns>
      <param name="baseUri">Oggetto <see cref="T:System.Uri" /> di base. </param>
      <param name="relativeUri">Oggetto <see cref="T:System.Uri" /> relativo da aggiungere all'oggetto <see cref="T:System.Uri" /> di base. </param>
      <param name="result">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Uri" /> costruito da <paramref name="baseUri" /> e <paramref name="relativeUri" />. Questo parametro viene passato in forma non inizializzata.</param>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Converte una stringa nella relativa rappresentazione senza caratteri escape.</summary>
      <returns>
        <see cref="T:System.String" /> che contiene la rappresentazione senza caratteri escape di <paramref name="stringToUnescape" />. </returns>
      <param name="stringToUnescape">Stringa da convertire in stringa senza caratteri escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" /> è null. </exception>
    </member>
    <member name="F:System.Uri.UriSchemeFile">
      <summary>Specifica che l'URI è un puntatore a un file. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeFtp">
      <summary>Specifica che l'accesso all'URI viene eseguito tramite FTP (File Transfer Protocol). Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeGopher">
      <summary>Specifica che l'accesso all'URI viene eseguito tramite il protocollo Gopher. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeHttp">
      <summary>Specifica che l'accesso all'URI viene eseguito tramite HTTP (Hypertext Transfer Protocol). Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeHttps">
      <summary>Specifica che l'accesso all'URI viene eseguito tramite HTTPS (Secure Hypertext Transfer Protocol). Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeMailto">
      <summary>Specifica che l'URI è un indirizzo di posta elettronica a cui si accede tramite SMTP (Simple Mail Transport Protocol). Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNetPipe">
      <summary>Specifica che all'URI si accede tramite lo schema NetPipe del sistema "Indigo". Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNetTcp">
      <summary>Specifica che all'URI si accede tramite lo schema NetTcp del sistema "Indigo". Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNews">
      <summary>Specifica che l'URI è un newsgroup Internet a cui si accede tramite NNTP (Network News Transport Protocol). Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNntp">
      <summary>Specifica che l'URI è un newsgroup Internet a cui si accede tramite NNTP (Network News Transport Protocol). Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Indica che la stringa URI è stata sottoposta a escape completo prima della creazione dell'istanza di <see cref="T:System.Uri" />.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che restituisce true se il parametro <paramref name="dontEscape" /> è stato impostato su true al momento della creazione dell'istanza di <see cref="T:System.Uri" />; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Ottiene il nome utente, la password o altre informazioni specifiche dell'utente associate all'URI specificato.</summary>
      <returns>
        <see cref="T:System.String" /> contenente le informazioni utente associate all'URI. Il valore restituito non include il carattere "@" riservato per la delimitazione della parte di informazioni utente dell'URI.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà è valida solo per un'istanza assoluta di <see cref="T:System.Uri" />. </exception>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Fornisce un costruttore personalizzato per gli identificatori URI (Uniform Resource Identifier) e modifica gli URI per la classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con l'URI specificato.</summary>
      <param name="uri">Stringa URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> è null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uri" /> è una stringa di lunghezza zero oppure contiene solo spazi.-oppure- Durante la routine di analisi è stato rilevato uno schema in un formato non valido.-oppure- Il parser ha consentito di rilevare più di due barre consecutive in un URI in cui non è utilizzato lo schema "file".-oppure- <paramref name="uri" /> non è un URI valido. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema e l'host specificati.</summary>
      <param name="schemeName">Protocollo di accesso Internet. </param>
      <param name="hostName">Nome dominio di tipo DNS o indirizzo IP. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="schemeName" /> non è un nome di schema valido.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema, l'host e la porta specificati.</summary>
      <param name="scheme">Protocollo di accesso Internet. </param>
      <param name="host">Nome dominio di tipo DNS o indirizzo IP. </param>
      <param name="portNumber">Numero di porta IP per il servizio. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scheme" /> non è un nome di schema valido. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="portNumber" /> è minore di zero o maggiore di 65535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema, l'host, il numero di porta e il percorso specificati.</summary>
      <param name="scheme">Protocollo di accesso Internet. </param>
      <param name="host">Nome dominio di tipo DNS o indirizzo IP. </param>
      <param name="port">Numero di porta IP per il servizio. </param>
      <param name="pathValue">Percorso alla risorsa Internet. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scheme" /> non è un nome di schema valido. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> è minore di zero o maggiore di 65535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema, l'host, il numero di porta, il percorso e la stringa di query o l'identificatore di frammento specificati.</summary>
      <param name="scheme">Protocollo di accesso Internet. </param>
      <param name="host">Nome dominio di tipo DNS o indirizzo IP. </param>
      <param name="port">Numero di porta IP per il servizio. </param>
      <param name="path">Percorso alla risorsa Internet. </param>
      <param name="extraValue">Stringa di query o identificatore di frammento. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extraValue" /> non è null né <see cref="F:System.String.Empty" />, né un identificatore di frammento valido che inizia con un simbolo di cancelletto (#), né una stringa di query valida che inizia con un punto interrogativo (?)-oppure- <paramref name="scheme" /> non è un nome di schema valido. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> è minore di zero o maggiore di 65535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con l'istanza di <see cref="T:System.Uri" /> specificata.</summary>
      <param name="uri">Istanza della classe <see cref="T:System.Uri" />. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="uri" /> è null. </exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Confronta un'istanza esistente di <see cref="T:System.Uri" /> con il contenuto della classe <see cref="T:System.UriBuilder" /> per trovare un'uguaglianza.</summary>
      <returns>true se <paramref name="rparam" /> rappresenta lo stesso oggetto <see cref="T:System.Uri" /> di <see cref="T:System.Uri" /> costruito dalla presente istanza di <see cref="T:System.UriBuilder" />; in caso contrario, false.</returns>
      <param name="rparam">Oggetto da confrontare con l'istanza corrente. </param>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Ottiene o imposta la parte di frammento dell'URI.</summary>
      <returns>Parte di frammento dell'URI. L'identificatore di frammento ("#") viene aggiunto all'inizio del frammento.</returns>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Restituisce il codice hash dell'URI.</summary>
      <returns>Codice hash generato per l'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Ottiene o imposta il nome host DNS (Domain Name System) o l'indirizzo IP di un server.</summary>
      <returns>Nome host DNS o indirizzo IP del server.</returns>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Ottiene o imposta la password associata all'utente che accede all'URI.</summary>
      <returns>Password dell'utente che accede all'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Ottiene o imposta il percorso alla risorsa cui fa riferimento l'URI.</summary>
      <returns>Percorso alla risorsa cui fa riferimento l'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Ottiene o imposta il numero di porta dell'URI.</summary>
      <returns>Numero di porta dell'URI.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Non è possibile impostare il numero di porta su un valore minore di 0 o maggiore di 65535. </exception>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Ottiene o imposta le informazioni sulle query incluse nell'URI.</summary>
      <returns>Informazioni sulle query incluse nell'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Ottiene o imposta il nome dello schema dell'URI.</summary>
      <returns>Schema dell'URI.</returns>
      <exception cref="T:System.ArgumentException">È possibile impostare il nome di schema solo su un nome di schema valido. </exception>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Restituisce la stringa di visualizzazione dell'istanza di <see cref="T:System.UriBuilder" /> specificata.</summary>
      <returns>Stringa contenente la stringa di visualizzazione senza caratteri escape dell'oggetto <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">L'URI costruito dalle proprietà <see cref="T:System.UriBuilder" /> ha nome utente e password errati (la proprietà <see cref="P:System.UriBuilder.UserName" /> è null o una stringa vuota, ma la proprietà <see cref="P:System.UriBuilder.Password" /> non è vuota. </exception>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Ottiene l'istanza di <see cref="T:System.Uri" /> costruita dall'istanza di <see cref="T:System.UriBuilder" /> specificata.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> contenente l'URI costruito dalla classe <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">L'URI costruito dalle proprietà di <see cref="T:System.UriBuilder" /> non è valido. </exception>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>Nome utente associato all'utente che accede all'URI.</summary>
      <returns>Nome dell'utente che accede all'URI.</returns>
    </member>
    <member name="T:System.UriComponents">
      <summary>Specifica le parti di un oggetto <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" /> e <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>Dati di <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>Dati di <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>Dati di <see cref="P:System.Uri.Host" /> e <see cref="P:System.Uri.Port" />. Se nell'URI non è presente alcun dato di porta e alla proprietà <see cref="P:System.Uri.Scheme" /> è stata assegnata una porta predefinita, viene restituita la porta predefinita. Se non è presente alcuna porta predefinita, viene restituito -1.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /> e <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Specifica che deve essere incluso il delimitatore.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>Forma normalizzata del parametro <see cref="P:System.Uri.Host" /> specificato.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>Dati di <see cref="P:System.Uri.LocalPath" />.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>Dati di <see cref="P:System.Uri.LocalPath" /> e <see cref="P:System.Uri.Query" />. </summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>Dati di <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>Dati di <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>Dati di <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> e <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>Contesto completo dell'oggetto <see cref="T:System.Uri" /> necessario per i serializzatori URI. Include l'ambito IPv6.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>Dati di <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> e <see cref="P:System.Uri.Port" />. Se nell'oggetto <see cref="T:System.Uri" /> non è presente alcun dato di porta e alla proprietà <see cref="P:System.Uri.Scheme" /> è stata assegnata una porta predefinita, viene restituita la porta predefinita. Se non è presente alcuna porta predefinita, viene restituito -1.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>Dati di <see cref="P:System.Uri.Port" />. Se nell'oggetto <see cref="T:System.Uri" /> non è presente alcun dato di porta e alla proprietà <see cref="P:System.Uri.Scheme" /> è stata assegnata una porta predefinita, viene restituita la porta predefinita. Se non è presente alcuna porta predefinita, viene restituito -1.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>Dati di <see cref="P:System.Uri.UserInfo" />.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Controlla come viene effettuato l'escape delle informazioni sull'URI.</summary>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>I caratteri con un significato riservato nei componenti URI richiesti restano sottoposti a escape. Per tutti gli altri non viene effettuato l'escape. Vedere la sezione relativa alle note.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>Non viene effettuata alcuna operazione di escape.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>L'escape viene eseguito in base alle regole indicate nel documento RFC 3986.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>Eccezione generata quando viene rilevato un URI (Uniform Resource Identifier) non valido.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriFormatException" />.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriFormatException" /> con il messaggio specificato.</summary>
      <param name="textString">La stringa del messaggio di errore </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriFormatException" /> con il messaggio specificato e un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="textString">La stringa del messaggio di errore</param>
      <param name="e">Eccezione che è la causa di questa eccezione. Se il parametro <paramref name="e" /> non è un riferimento null (Nothing in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna. </param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Definisce i tipi di nomi host per il metodo <see cref="M:System.Uri.CheckHostName(System.String)" />.</summary>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>L'host è impostato, ma non è possibile determinare il tipo.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>Il nome host è un nome host di tipo DNS (domain name system).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>Il nome host è un indirizzo IP (Internet Protocol) host versione 4.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>Il nome host è un indirizzo IP (Internet Protocol) host versione 6.</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>Il tipo del nome host non è fornito.</summary>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>Fornisce i possibili valori per l'analisi IDN (Internationalized Domain Name) delle impostazioni di configurazione.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>Questo valore convertirà qualsiasi nome di dominio Unicode negli equivalenti Punycode (nomi IDN).</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>Questo valore convertirà tutti i nomi di dominio Unicode esterni per l'utilizzo degli equivalenti Punycode (nomi IDN). In questo caso, per gestire nomi internazionali sulla rete Intranet locale, è necessario che i server DNS utilizzati per la rete Intranet supportino i nomi Unicode.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>Questo valore non convertirà alcun nome di dominio Unicode per l'utilizzo di Punycode. Si tratta del valore predefinito coerente con il comportamento di .NET Framework 2.0.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Definisce i tipi di <see cref="T:System.Uri" /> per diversi metodi <see cref="Overload:System.Uri.#ctor" />.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>L'URI è un URI assoluto.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>L'URI è un URI relativo.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>Il tipo dell'URI non è determinato.</summary>
    </member>
    <member name="T:System.UriParser">
      <summary>Analizza un nuovo schema URI. Si tratta di una classe abstract.</summary>
    </member>
    <member name="M:System.UriParser.#ctor">
      <summary>Costruisce un parser URI predefinito.</summary>
    </member>
    <member name="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
      <summary>Ottiene i componenti da un URI.</summary>
      <returns>Stringa che contiene i componenti.</returns>
      <param name="uri">Oggetto <see cref="T:System.Uri" /> da analizzare.</param>
      <param name="components">Oggetto <see cref="T:System.UriComponents" /> da recuperare da <paramref name="uri" />.</param>
      <param name="format">Uno dei valori di <see cref="T:System.UriFormat" /> che controlla come viene eseguito l'escape dei caratteri speciali.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> non è valido.-oppure-<paramref name="components" /> non è una combinazione di valori di <see cref="T:System.UriComponents" /> validi. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="uri" /> richiede un'analisi eseguita dall'utente.-oppure-<paramref name="uri" /> non è un URI assoluto. Non è possibile utilizzare URI relativi con questo metodo.</exception>
    </member>
    <member name="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
      <summary>Inizializza lo stato del parser e convalida l'URI.</summary>
      <param name="uri">Oggetto <see cref="T:System.Uri" /> da convalidare.</param>
      <param name="parsingError">Errori di convalida, se presenti.</param>
    </member>
    <member name="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
      <summary>Determina se <paramref name="baseUri" /> è un URI di base per <paramref name="relativeUri" />.</summary>
      <returns>true se <paramref name="baseUri" /> è un URI di base per <paramref name="relativeUri" />; in caso contrario, false.</returns>
      <param name="baseUri">URI di base.</param>
      <param name="relativeUri">URI da sottoporre a test.</param>
    </member>
    <member name="M:System.UriParser.IsKnownScheme(System.String)">
      <summary>Indica se è registrato il parser per uno schema.</summary>
      <returns>true se <paramref name="schemeName" /> è stato registrato; in caso contrario, false.</returns>
      <param name="schemeName">Nome di schema da verificare.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="schemeName" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="schemeName" /> non è valido. </exception>
    </member>
    <member name="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
      <summary>Indica se un URI è ben formato.</summary>
      <returns>true se <paramref name="uri" /> è ben formato; in caso contrario, false.</returns>
      <param name="uri">URI da verificare.</param>
    </member>
    <member name="M:System.UriParser.OnNewUri">
      <summary>Richiamato da un costruttore <see cref="T:System.Uri" /> per ottenere un'istanza di <see cref="T:System.UriParser" />.</summary>
      <returns>Oggetto <see cref="T:System.UriParser" /> per il controllo <see cref="T:System.Uri" /> costruito.</returns>
    </member>
    <member name="M:System.UriParser.OnRegister(System.String,System.Int32)">
      <summary>Richiamato da Framework quando è registrato un metodo <see cref="T:System.UriParser" />.</summary>
      <param name="schemeName">Schema associato all'oggetto <see cref="T:System.UriParser" />.</param>
      <param name="defaultPort">Numero di porta dello schema.</param>
    </member>
    <member name="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
      <summary>Associa uno schema e un numero di porta a un oggetto <see cref="T:System.UriParser" />.</summary>
      <param name="uriParser">Oggetto <see cref="T:System.UriParser" /> da registrare.</param>
      <param name="schemeName">Nome dello schema associato a questo parser.</param>
      <param name="defaultPort">Numero di porta predefinito per lo schema specificato.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="uriParser" /> è null-oppure-Il parametro <paramref name="schemeName" /> è null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="schemeName" /> non è valido-oppure-Il parametro <paramref name="defaultPort" /> non è valido. Il parametro <paramref name="defaultPort" /> non deve essere minore di zero o maggiore di 65534.</exception>
    </member>
    <member name="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
      <summary>Chiamato dai costruttori <see cref="T:System.Uri" /> e da <see cref="Overload:System.Uri.TryCreate" /> per risolvere un URI relativo.</summary>
      <returns>Stringa dell'oggetto <see cref="T:System.Uri" /> relativo risolto.</returns>
      <param name="baseUri">URI di base.</param>
      <param name="relativeUri">URI relativo.</param>
      <param name="parsingError">Errori durante il processo di risoluzione, se presenti.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="baseUri" /> Il parametro non è un oggetto assoluto <see cref="T:System.Uri" />-oppure-Il parametro <paramref name="baseUri" /> richiede un'analisi eseguita dall'utente.</exception>
    </member>
    <member name="T:System.UriTypeConverter">
      <summary>Converte le istanze di tipo <see cref="T:System.String" /> in istanze <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.UriTypeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriTypeConverter" />.</summary>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore se questo convertitore può convertire un oggetto del tipo di origine specificato in un'istanza del tipo <see cref="T:System.Uri" />. </summary>
      <returns>Valore <see cref="T:System.Boolean" /> impostato su true se il convertitore è in grado di convertire il tipo specificato in un'istanza di <see cref="T:System.Uri" />; in caso contrario, false.</returns>
      <param name="context">Interfaccia <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> è null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire l'oggetto nel tipo specificato utilizzando il contesto specificato.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> impostato su true se <paramref name="destinationType" /> è di tipo <see cref="T:System.String" /> o <see cref="T:System.Uri" />; in caso contrario, false.</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo verso il quale si desidera effettuare la conversione.</param>
    </member>
    <member name="M:System.UriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo di questo convertitore, utilizzando le informazioni sulle impostazioni cultura e il contesto specificati. </summary>
      <returns>Istanza <see cref="T:System.Uri" /> che rappresenta un oggetto <see cref="T:System.Object" /> convertito. Se il parametro <paramref name="value" /> è null; viene restituito null .</returns>
      <param name="context">Interfaccia <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire in un'istanza di <see cref="T:System.Uri" />.</param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. Questa eccezione si verifica se <paramref name="value" /> è un tipo diverso da <see cref="T:System.String" /> o <see cref="T:System.Uri" />. oppure i parametri <paramref name="context" /> o <paramref name="culture" /> non sono supportati per il parametro <paramref name="value" />.</exception>
    </member>
    <member name="M:System.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato nel tipo di questo convertitore, utilizzando le informazioni sulle impostazioni cultura e il contesto specificati.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Interfaccia <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato null, verranno utilizzate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="destinationType" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.CodeDom.Compiler.GeneratedCodeAttribute">
      <summary>Identifica il codice generato da uno strumento.Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.GeneratedCodeAttribute" />. </summary>
      <param name="tool">Nome dello strumento che ha generato il codice.</param>
      <param name="version">Versione dello strumento che ha generato il codice.</param>
    </member>
    <member name="P:System.CodeDom.Compiler.GeneratedCodeAttribute.Tool">
      <summary>Ottiene il nome dello strumento che ha generato il codice.</summary>
      <returns>Nome dello strumento che ha generato il codice.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.GeneratedCodeAttribute.Version">
      <summary>Ottiene la versione dello strumento che ha generato il codice.</summary>
      <returns>Versione dello strumento che ha generato il codice.</returns>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Fornisce l'interfaccia di base per l'astrazione di set.</summary>
      <typeparam name="T">Tipo di elementi presenti nel set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Aggiunge un elemento al set corrente e restituisce un valore che indica se l'aggiunta è stata eseguita correttamente. </summary>
      <returns>true se l'elemento è stato aggiunto al set; false se l'elemento è già presente nel set.</returns>
      <param name="item">Elemento da aggiungere all'insieme.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Rimuove tutti gli elementi dell'insieme specificato dal set corrente.</summary>
      <param name="other">Insieme di elementi da rimuovere dal set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica il set corrente in modo che contenga solo elementi inclusi anche in un insieme specificato.</summary>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è un subset di proprietà (strict) di un insieme specificato.</summary>
      <returns>true se il set corrente è un subset corretto di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è un superset corretto di un insieme specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.ISet`1" /> è un superset corretto di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con il set corrente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un set è un subset di un insieme specificato.</summary>
      <returns>true se il set corrente è un subset di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è un superset di un insieme specificato.</summary>
      <returns>true se il set corrente è un superset di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente è sovrapposto all'insieme specificato.</summary>
      <returns>true se il set corrente e <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se il set corrente e l'insieme specificato contengono gli stessi elementi.</summary>
      <returns>true se il set corrente è uguale a <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica il set corrente in modo che contenga solo elementi presenti in tale set o nell'insieme specificato, ma non in entrambi. </summary>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica il set corrente in modo che contenga tutti gli elementi presenti in tale set e nell'insieme specificato.</summary>
      <param name="other">Insieme da confrontare con il set corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1">
      <summary>Rappresenta un elenco a doppio collegamento.</summary>
      <typeparam name="T">Specifica il tipo di elemento dell'elenco collegato.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> contenente gli elementi copiati dall'interfaccia <see cref="T:System.Collections.IEnumerable" /> specificata e la cui capacità è sufficiente a contenere il numero di elementi copiati. </summary>
      <param name="collection">Interfaccia <see cref="T:System.Collections.IEnumerable" /> i cui elementi sono copiati nella nuova classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nuovo nodo specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale inserire il nuovo nodo indicato nel parametro <paramref name="newNode" />.</param>
      <param name="newNode">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.-oppure-<paramref name="newNode" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.-oppure-<paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Aggiunge un nuovo nodo che contiene il valore specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale viene inserito un nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</param>
      <param name="value">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nuovo nodo specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale inserire il nuovo nodo indicato nel parametro <paramref name="newNode" />.</param>
      <param name="newNode">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.-oppure-<paramref name="newNode" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.-oppure-<paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Aggiunge un nuovo nodo che contiene il valore specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale viene inserito un nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</param>
      <param name="value">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nuovo nodo specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
      <summary>Aggiunge un nuovo nodo contenente il valore specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
      <param name="value">Valore da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nodo specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nuovo oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
      <summary>Aggiunge un nuovo nodo contenente il valore specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
      <param name="value">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Clear">
      <summary>Rimuove tutti i nodi dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
      <summary>Determina se un valore è incluso nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="value" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />; in caso contrario, false.</returns>
      <param name="value">Valore da individuare nella classe <see cref="T:System.Collections.Generic.LinkedList`1" />. Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Generic.LinkedList`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere a base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è maggiore o uguale alla lunghezza di <paramref name="array" />.-oppure-<paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Count">
      <summary>Ottiene il numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Find(`0)">
      <summary>Trova il primo nodo che contiene il valore specificato.</summary>
      <returns>Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, null.</returns>
      <param name="value">Valore da individuare nella classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
      <summary>Trova l'ultimo nodo che contiene il valore specificato.</summary>
      <returns>Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, null.</returns>
      <param name="value">Valore da individuare nella classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.First">
      <summary>Ottiene il primo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Last">
      <summary>Ottiene l'ultimo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Rimuove il nodo specificato da <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Classe <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da rimuovere dalla classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
      <summary>Rimuove dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> la prima occorrenza del valore specificato.</summary>
      <returns>true se l'elemento contenente <paramref name="value" /> viene rimosso; in caso contrario, false.  Questo metodo restituisce anche false se <paramref name="value" /> non è stato trovato nell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> originale.</returns>
      <param name="value">Valore da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
      <summary>Rimuove il nodo all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveLast">
      <summary>Rimuove il nodo alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="value">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in un oggetto <see cref="T:System.Array" />, a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere a base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-<paramref name="array" /> non dispone di indicizzazione in base zero.-oppure-Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Collections.ICollection" /> è sincronizzato, ovvero thread-safe.</summary>
      <returns>È true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'elenco collegato come un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'elenco collegato come un insieme.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme. Questa classe non può essere ereditata.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedListNode`1">
      <summary>Rappresenta un nodo in una classe <see cref="T:System.Collections.Generic.LinkedList`1" />. Questa classe non può essere ereditata.</summary>
      <typeparam name="T">Specifica il tipo di elemento dell'elenco collegato.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedListNode`1.#ctor(`0)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente i dati specificati.</summary>
      <param name="value">Valore contenuto nell'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.List">
      <summary>Ottiene l'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> a cui appartiene il nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</summary>
      <returns>Riferimento all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> a cui appartiene l'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> oppure null se l'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> non è collegato.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Next">
      <summary>Ottiene il nodo successivo dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Riferimento al nodo successivo nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, o null se il nodo corrente è l'ultimo elemento (<see cref="P:System.Collections.Generic.LinkedList`1.Last" />) dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Previous">
      <summary>Ottiene il nodo precedente dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Riferimento al nodo precedente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> o null se il nodo corrente è il primo elemento (<see cref="P:System.Collections.Generic.LinkedList`1.First" />) dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Value">
      <summary>Ottiene il valore contenuto nel nodo.</summary>
      <returns>Valore contenuto nel nodo.</returns>
    </member>
    <member name="T:System.Collections.Generic.Queue`1">
      <summary>Rappresenta un insieme di oggetti FIFO (First-In First-Out).</summary>
      <typeparam name="T">Specifica il tipo di elementi della coda.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> che è vuota e ha la capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> contenente gli elementi copiati dall'insieme specificato e la cui capacità è sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection">Insieme i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Queue`1" />, con la capacità iniziale specificata.</summary>
      <param name="capacity">Il numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Queue`1" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Clear">
      <summary>Consente di rimuovere tutti gli oggetti dallo <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="item" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare in <see cref="T:System.Collections.Generic.Queue`1" />. Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
      <summary>Consente di copiare gli elementi della <see cref="T:System.Collections.Generic.Queue`1" /> in una <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Generic.Queue`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere a base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Dequeue">
      <summary>Consente di rimuovere e restituire l'oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>Oggetto rimosso dall'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> .</returns>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Collections.Generic.Queue`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
      <summary>Aggiunge un oggetto alla fine dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <param name="item">Oggetto da aggiungere a <see cref="T:System.Collections.Generic.Queue`1" />. Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Peek">
      <summary>Restituisce l'oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> senza rimuoverlo.</summary>
      <returns>Oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> .</returns>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Collections.Generic.Queue`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in un oggetto <see cref="T:System.Array" />, a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere a base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-<paramref name="array" /> non dispone di indicizzazione in base zero.-oppure-Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Collections.ICollection" /> è sincronizzato, ovvero thread-safe.</summary>
      <returns>È true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.ToArray">
      <summary>Consente di copiare gli elementi della <see cref="T:System.Collections.Generic.Queue`1" /> in una nuova matrice.</summary>
      <returns>Nuova matrice contenente gli elementi copiati dalla <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TrimExcess">
      <summary>Imposta la capacità dell'insieme sul numero reale di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="T:System.Collections.Generic.Queue`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Queue`1" /> nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.Queue`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2">
      <summary>Rappresenta un insieme di coppie chiave/valore ordinate in base alla chiave. </summary>
      <typeparam name="TKey">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e utilizza l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e utilizza l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per il confronto delle chiavi.</summary>
      <param name="comparer">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> da utilizzare per confrontare le chiavi oppure null per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.Comparer`1" /> predefinita del tipo di chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene utilizzata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</summary>
      <param name="dictionary">Interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nella nuova classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene utilizzata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per confrontare le chiavi.</summary>
      <param name="dictionary">Interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nella nuova classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <param name="comparer">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> da utilizzare per confrontare le chiavi oppure null per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.Comparer`1" /> predefinita del tipo di chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
      <summary>Consente di aggiungere al metodo <see cref="T:System.Collections.Generic.SortedDictionary`2" /> un elemento con la chiave e il valore specificati.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere. Il valore può essere null per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Un elemento con la stessa chiave esiste già nell'interfaccia <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Comparer">
      <summary>Ottiene l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> utilizzata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> utilizzata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
      <summary>Determina se l'interfaccia <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, false.</returns>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
      <summary>Determina se l'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato; in caso contrario, false.</returns>
      <param name="value">Valore da individuare nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Copia gli elementi dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nella matrice di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> indicata, a partire dall'indice specificato.</summary>
      <param name="array">Matrice unidimensionale di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> in cui effettuare la copia degli elementi dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> corrente. La matrice deve avere indice in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Count">
      <summary>Ottiene il numero di coppie chiave/valore contenute nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Numero di coppie chiave/valore contenute nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> per <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <returns>Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione get genera un'eccezione <see cref="T:System.Collections.Generic.KeyNotFoundException" />, mentre un'operazione di impostazione crea una nuovo elemento con la chiave specificata.</returns>
      <param name="key">Chiave del valore da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Durante il recupero della proprietà, la chiave indicata nel parametro <paramref name="key" /> non è stata trovata nell'insieme.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Keys">
      <summary>Ottiene un insieme contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
      <summary>Consente di rimuovere l'elemento con la chiave specificata dalla <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>true se l'elemento viene rimosso; in caso contrario, false.  Questo metodo restituisce anche false se il parametro <paramref name="key" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da aggiungere all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyValuePair" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Un elemento con la stessa chiave esiste già nell'interfaccia <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene una coppia chiave/valore specifica.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="keyValuePair" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false.</returns>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, false. Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Rimuove dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> la prima occorrenza dell'elemento specificato.</summary>
      <returns>true se <paramref name="keyValuePair" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false. Questo metodo restituisce anche false se <paramref name="keyValuePair" /> non è stato trovato in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da rimuovere dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi presenti in <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori presenti in <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati da <see cref="T:System.Collections.Generic.ICollection`1" />. L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-<paramref name="array" /> non dispone di indicizzazione in base zero.-oppure-Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Collections.ICollection" /> è sincronizzato, ovvero thread-safe.</summary>
      <returns>È true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. </returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Oggetto da utilizzare come chiave dell'elemento da aggiungere.</param>
      <param name="value">Oggetto da utilizzare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.IDictionary" />.-oppure-<paramref name="value" /> è un tipo che non è possibile assegnare al tipo di valore <paramref name="TValue" /> dell'oggetto <see cref="T:System.Collections.IDictionary" />.-oppure-Un elemento con la stessa chiave esiste già nell'interfaccia <see cref="T:System.Collections.IDictionary" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se l'interfaccia <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <returns>true se <see cref="T:System.Collections.IDictionary" /> contiene un elemento contenente la chiave; in caso contrario, false.</returns>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Viene restituito un oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Ottiene un valore che indica se le dimensioni di <see cref="T:System.Collections.IDictionary" /> sono fisse.</summary>
      <returns>true se le dimensioni di <see cref="T:System.Collections.IDictionary" /> sono fisse; in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è in sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <returns>L'elemento con la chiave specificata o null se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
      <param name="key">Chiave dell'elemento da ottenere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.-oppure-Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti in <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Consente di rimuovere l'elemento con la chiave specificata dalla <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente i valori presenti in <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, false.</returns>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Values">
      <summary>Ottiene un insieme contenente i valori della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> contenente i valori dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore come una struttura <see cref="T:System.Collections.DictionaryEntry" />.</summary>
      <returns>Elemento nell'insieme in corrispondenza della posizione corrente del dizionario, restituito come una struttura <see cref="T:System.Collections.DictionaryEntry" />.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>Ottiene la chiave dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <returns>Ottiene la chiave dell'elemento nell'insieme in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>Ottiene il valore dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <returns>Valore dell'elemento nell'insieme in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
      <summary>Rappresenta l'insieme di chiavi in un controllo <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Questa classe non può essere ereditata. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in cui sono riprodotte le chiavi dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> specificato.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> le cui chiavi vengono riprodotte nella nuova classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary>Consente di copiare gli elementi dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in una matrice unidimensionale esistente, a partire dall'indice della matrice specificata.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati da <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />. L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>Struttura <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere a <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Consente di rimuovere tutti gli elementi dal controllo <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Determina se l'insieme <see cref="T:System.Collections.Generic.ICollection`1" /> contiene il valore specificato.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="item" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare in <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true se <paramref name="item" /> viene rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false. Questo metodo restituisce anche false se il parametro <paramref name="item" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'oggetto <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando in corrispondenza di un particolare indice di matrice.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati da <see cref="T:System.Collections.ICollection" />. L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-<paramref name="array" /> non dispone di indicizzazione in base zero.-oppure-Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Collections.ICollection" /> è sincronizzato, ovvero thread-safe.</summary>
      <returns>È true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection">
      <summary>Rappresenta l'insieme di valori in una classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in cui sono riprodotti i valori dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> specificato.</summary>
      <param name="dictionary">Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> i cui valori sono riportati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary>Consente di copiare gli elementi dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in una matrice unidimensionale esistente, a partire dall'indice della matrice specificata.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati da <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />. L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>Struttura <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" /> dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Add(`1)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere a <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Consente di rimuovere tutti gli elementi dal controllo <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Contains(`1)">
      <summary>Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="item" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare in <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</summary>
      <returns>true se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Remove(`1)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true se <paramref name="item" /> viene rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false. Questo metodo restituisce anche false se il parametro <paramref name="item" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true se <paramref name="item" /> viene rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, false. Questo metodo restituisce anche false se il parametro <paramref name="item" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException">Generata sempre; l'insieme è in sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'oggetto <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando in corrispondenza di un particolare indice di matrice.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati da <see cref="T:System.Collections.ICollection" />. L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-<paramref name="array" /> non dispone di indicizzazione in base zero.-oppure-Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Collections.ICollection" /> è sincronizzato, ovvero thread-safe.</summary>
      <returns>È true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1">
      <summary>Rappresenta un insieme di oggetti di cui viene mantenuto l'ordinamento.</summary>
      <typeparam name="T">Tipo di elementi presenti nel set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che utilizza un operatore di confronto specificato.</summary>
      <param name="comparer">Operatore di confronto predefinito da utilizzare per il confronto degli oggetti. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene elementi copiati da un insieme enumerabile specificato.</summary>
      <param name="collection">Insieme enumerabile da copiare. </param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene elementi copiati da un insieme enumerabile specificato e che utilizza un operatore di confronto specificato.</summary>
      <param name="collection">Insieme enumerabile da copiare. </param>
      <param name="comparer">Operatore di confronto predefinito da utilizzare per il confronto degli oggetti. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Add(`0)">
      <summary>Aggiunge un elemento al set e restituisce un valore che indica se l'aggiunta è stata eseguita correttamente.</summary>
      <returns>true se <paramref name="item" /> viene aggiunto al set; in caso contrario, false. </returns>
      <param name="item">Elemento da aggiungere all'insieme.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Clear">
      <summary>Rimuove tutti gli elementi dal set.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Comparer">
      <summary>Ottiene l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> utilizzato per determinare l'uguaglianza dei valori in <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Operatore di confronto utilizzato per determinare l'uguaglianza dei valori in <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
      <summary>Determina se il set contiene un elemento specifico.</summary>
      <returns>true se il set contiene <paramref name="item" />; in caso contrario, false.</returns>
      <param name="item">Elemento da individuare nel set.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'inizio della matrice di destinazione.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /></param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> di origine supera il numero di elementi che può essere contenuto nella matrice di destinazione. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Copia un numero specificato di elementi da <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <param name="count">Numero degli elementi da copiare.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.-oppure-<paramref name="count" /> è minore di zero.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Count">
      <summary>Ottiene il numero di elementi in <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Numero di elementi nella <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Rimuove tutti gli elementi inclusi in un insieme specificato dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</summary>
      <param name="other">Insieme di elementi da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedSet`1" /> secondo l'ordine.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
      <summary>Restituisce una visualizzazione di un subset in un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Visualizzazione di un subset contenente solo i valori inclusi nell'intervallo specificato.</returns>
      <param name="lowerValue">Valore minimo desiderato nella visualizzazione.</param>
      <param name="upperValue">Valore massimo desiderato nella visualizzazione. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="lowerValue" /> è maggiore di <paramref name="upperValue" /> secondo l'operatore di confronto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un'operazione che si è tentato di eseguire nella visualizzazione non rientra nell'intervallo specificato da <paramref name="lowerValue" /> e <paramref name="upperValue" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga solo elementi inclusi anche in un insieme specificato.</summary>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un sottoinsieme corretto dell'insieme specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un sottoinsieme corretto di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset corretto dell'insieme specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset corretto di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset dell'insieme specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente è un sottoinsieme di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset dell'insieme specificato.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset di <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Max">
      <summary>Ottiene il valore massimo in <see cref="T:System.Collections.Generic.SortedSet`1" />, come definito dall'operatore di confronto.</summary>
      <returns>Valore massimo nel set.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Min">
      <summary>Ottiene il valore minimo in <see cref="T:System.Collections.Generic.SortedSet`1" />, come definito dall'operatore di confronto.</summary>
      <returns>Valore minimo nel set.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente e un insieme specificato condividono elementi comuni.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> e il parametro <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
      <summary>Rimuove un elemento specificato da <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>true se l'elemento viene trovato e rimosso; in caso contrario, false. </returns>
      <param name="item">Elemento da rimuovere.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato da un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Numero di elementi rimossi dall'insieme <see cref="T:System.Collections.Generic.SortedSet`1" />. </returns>
      <param name="match">Delegato che definisce le condizioni degli elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Reverse">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> che scorre <see cref="T:System.Collections.Generic.SortedSet`1" /> in ordine inverso.</summary>
      <returns>Enumeratore che scorre <see cref="T:System.Collections.Generic.SortedSet`1" /> in ordine inverso.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente e l'insieme specificato contengono gli stessi elementi.</summary>
      <returns>true se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente è uguale a <paramref name="other" />; in caso contrario, false.</returns>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga solo elementi presenti in tale oggetto o nell'insieme specificato, ma non in entrambi.</summary>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento a un oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> è in sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se un oggetto <see cref="T:System.Collections.ICollection" /> è di sola lettura.</summary>
      <returns>true se l'insieme è di sola lettura; in caso contrario false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> L'indice della matrice deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga tutti gli elementi presenti in tale oggetto o nell'insieme specificato.</summary>
      <param name="other">Insieme da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'insieme <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.Generic.Stack`1">
      <summary>Rappresenta un insieme LIFO (last-in-first-out) di dimensioni variabili costituito da istanze dello stesso tipo arbitrario.</summary>
      <typeparam name="T">Specifica il tipo di elementi nello stack.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" /> che è vuota e ha la capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" /> contenente gli elementi copiati dall'insieme specificato e la cui capacità è sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection">Insieme da cui copiare gli elementi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" />, che è vuota e ha la capacità iniziale maggiore tra quella specificata e quella predefinita.</summary>
      <param name="capacity">Il numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Stack`1" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Clear">
      <summary>Consente di rimuovere tutti gli oggetti dallo <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>true se il valore indicato nel parametro <paramref name="item" /> è presente nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare in <see cref="T:System.Collections.Generic.Stack`1" />. Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
      <summary>Consente di copiare lo <see cref="T:System.Collections.Generic.Stack`1" /> in una <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.Generic.Stack`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere a base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.GetEnumerator">
      <summary>Restituisce un enumeratore per <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Peek">
      <summary>Viene restituito l'oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" /> senza rimuoverlo.</summary>
      <returns>Oggetto all'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Collections.Generic.Stack`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Pop">
      <summary>Rimuove e restituisce l'oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>Oggetto rimosso dall'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Collections.Generic.Stack`1" /> è vuoto.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Push(`0)">
      <summary>Inserisce un oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <param name="item">Oggetto da inserire nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />. Il valore può essere null per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.ICollection" /> in un oggetto <see cref="T:System.Array" />, a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere a base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.-oppure-<paramref name="array" /> non dispone di indicizzazione in base zero.-oppure-Il numero degli elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.-oppure-Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Collections.ICollection" /> è sincronizzato, ovvero thread-safe.</summary>
      <returns>È true se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, false.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />, questa proprietà restituisce sempre false.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere un insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.ToArray">
      <summary>Consente di copiare lo <see cref="T:System.Collections.Generic.Stack`1" /> in una nuova matrice.</summary>
      <returns>Nuova matrice contenente le copie degli elementi dello <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TrimExcess">
      <summary>Imposta la capacità dell'insieme sul numero reale di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="T:System.Collections.Generic.Stack`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Stack`1" /> nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.Dispose">
      <summary>Consente di rilasciare tutte le risorse utilizzate dall'oggetto <see cref="T:System.Collections.Generic.Stack`1.Enumerator" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>true se l'enumeratore ha completato il passaggio all'elemento successivo; false se l'enumeratore ha raggiunto la fine dell'insieme.</returns>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento o dopo l'ultimo elemento dell'insieme. </exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme. Questa classe non può essere ereditata.</summary>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato dopo la creazione dell'enumeratore. </exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableCollection`1">
      <summary>Rappresenta una raccolta di dati dinamica che fornisce notifiche in caso di aggiunta o rimozione di elementi o di aggiornamento dell'intero elenco.</summary>
      <typeparam name="T">Tipo di elementi nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> e la popola con elementi copiati dall'insieme specificato.</summary>
      <param name="collection">Insieme da cui vengono copiati gli elementi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> e la popola con elementi copiati dall'elenco specificato.</summary>
      <param name="list">Elenco da cui vengono copiati gli elementi.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
      <summary>Impedisce i tentativi di reentrancy finalizzati a modificare l'insieme.</summary>
      <returns>Oggetto <see cref="T:System.IDisposable" /> utilizzabile per eliminare l'oggetto.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
      <summary>Verifica se vengono eseguiti tentativi di reentrancy finalizzati a modificare l'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">Questa eccezione si verifica se viene eseguita una chiamata al metodo <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /> il cui valore restituito <see cref="T:System.IDisposable" /> non è stato ancora eliminato. In genere ciò significa che durante un evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> sono stati eseguiti tentativi aggiuntivi di modifica dell'insieme. Tuttavia, ciò dipende dal momento in cui le classi derivate scelgono di chiamare il metodo <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
      <summary>Rimuove tutti gli elementi dall'insieme.</summary>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato in un gestore per l'evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> o <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />. </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
      <summary>Viene generato quando viene modificato un elemento dell'insieme o l'intero insieme.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary>Consente di inserire un elemento nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice a base zero nel quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato in un gestore per l'evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> o <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
      <summary>Sposta l'elemento in corrispondenza dell'indice specificato in una nuova posizione dell'insieme.</summary>
      <param name="oldIndex">Indice in base zero che specifica la posizione dell'elemento da spostare.</param>
      <param name="newIndex">Indice in base zero che specifica la nuova posizione dell'elemento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
      <summary>Sposta l'elemento in corrispondenza dell'indice specificato in una nuova posizione dell'insieme.</summary>
      <param name="oldIndex">Indice in base zero che specifica la posizione dell'elemento da spostare.</param>
      <param name="newIndex">Indice in base zero che specifica la nuova posizione dell'elemento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> con i dati dell'evento forniti.</summary>
      <param name="e">Dati dell'evento da restituire nell'evento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> con gli argomenti forniti.</summary>
      <param name="e">Dati dell'evento da restituire nell'evento.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
      <summary>Viene generato quando viene modificata una proprietà in un singolo elemento dell'insieme.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
      <summary>Rimuove l'elemento dall'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice con inizio zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato in un gestore per l'evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> o <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary>Sostituisce l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Nuovo valore dell'elemento in corrispondenza dell'indice specificato.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato in un gestore per l'evento <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> o <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />. </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Viene generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1">
      <summary>Rappresenta un oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> in sola lettura.</summary>
      <typeparam name="T">Tipo di oggetti contenuti nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> che funge da wrapper per l'oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> specificato.</summary>
      <param name="list">Insieme di cui eseguire il wrapping.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged">
      <summary>Si verifica quando un elemento viene aggiunto o rimosso.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged" />. </summary>
      <param name="args">Dati dell'evento.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged" />. </summary>
      <param name="args">Dati dell'evento.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged">
      <summary>Viene generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Per una descrizione di questo membro, vedere <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Per una descrizione di questo membro, vedere <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="T:System.Collections.Specialized.INotifyCollectionChanged">
      <summary>Notifica ai listener le modifiche dinamiche apportate a un insieme, ad esempio l'aggiunta e la rimozione di elementi o la reimpostazione dell'intero oggetto insieme.</summary>
    </member>
    <member name="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <summary>Si verifica quando l'elenco degli elementi dell'insieme viene modificato oppure viene reimpostato l'insieme.</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedAction">
      <summary>Descrive l'azione che ha causato un evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />. </summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add">
      <summary>Uno o più elementi sono stati aggiunti all'insieme.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move">
      <summary>Uno o più elementi sono stati spostati nell'insieme.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove">
      <summary>Uno o più elementi sono stati rimossi dall'insieme.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace">
      <summary>Uno o più elementi sono stati sostituiti nell'insieme.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset">
      <summary>Il contenuto dell'insieme è stato modificato in modo significativo.</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <summary>Fornisce i dati per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />, specificando il valore <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction" />.</summary>
      <param name="action">Valore dell'azione, come valore dell'enumerazione. Deve essere sempre <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />; vedere la sezione Osservazioni.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> non è <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica di più elementi.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />, <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />..</param>
      <param name="changedItems">Elementi interessati dalla modifica.</param>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> di più elementi.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro solo su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</param>
      <param name="newItems">Elementi nuovi che sostituiscono gli elementi originali.</param>
      <param name="oldItems">Elementi originali sostituiti.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Replace.</exception>
      <exception cref="T:System.ArgumentNullException">Se <paramref name="oldItems" /> o <paramref name="newItems" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> di più elementi.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro solo su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</param>
      <param name="newItems">Elementi nuovi che sostituiscono gli elementi originali.</param>
      <param name="oldItems">Elementi originali sostituiti.</param>
      <param name="startingIndex">Indice del primo elemento degli elementi che vengono sostituiti.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Replace.</exception>
      <exception cref="T:System.ArgumentNullException">Se <paramref name="oldItems" /> o <paramref name="newItems" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica di più elementi o una modifica di <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />, <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />..</param>
      <param name="changedItems">Elementi interessati dalla modifica.</param>
      <param name="startingIndex">Indice in corrispondenza del quale è stata apportata la modifica.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Reset, Add o Remove, se <paramref name="action" /> è Reset e <paramref name="changedItems" /> non è null o <paramref name="startingIndex" /> non è -1 oppure se l'azione è Add o Remove e <paramref name="startingIndex" /> è inferiore a -1.</exception>
      <exception cref="T:System.ArgumentNullException">Se <paramref name="action" /> è Add o Remove e <paramref name="changedItems" /> è null.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" /> di più elementi.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro solo su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />.</param>
      <param name="changedItems">Elementi interessati dalla modifica.</param>
      <param name="index">Indice nuovo per gli elementi modificati.</param>
      <param name="oldIndex">Indice precedente per gli elementi modificati.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Move o <paramref name="index" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica di un elemento.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />, <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />..</param>
      <param name="changedItem">Elemento interessato dalla modifica.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Reset, Add o Remove o se <paramref name="action" /> è Reset e <paramref name="changedItem" /> non è null.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica di <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</summary>
      <param name="action">Valore dell'azione, come valore dell'enumerazione. Deve essere <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />; vedere la sezione Osservazioni.</param>
      <param name="changedItem">Elemento interessato dalla modifica.</param>
      <param name="index">Indice in corrispondenza del quale è stata apportata la modifica.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> non è <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" /> di un elemento.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro solo su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />.</param>
      <param name="changedItem">Elemento interessato dalla modifica.</param>
      <param name="index">Indice nuovo per l'elemento modificato.</param>
      <param name="oldIndex">Indice precedente per l'elemento modificato.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Move o <paramref name="index" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> di un elemento.</summary>
      <param name="action">Azione che ha causato l'evento. È possibile impostare questo parametro solo su <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</param>
      <param name="newItem">Elemento nuovo che sostituisce l'elemento originale.</param>
      <param name="oldItem">Elemento originale sostituito.</param>
      <exception cref="T:System.ArgumentException">Se <paramref name="action" /> non è Replace.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> che descrive una modifica di <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</summary>
      <param name="action">Valore dell'azione, come valore dell'enumerazione. Deve essere <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />; vedere la sezione Osservazioni.</param>
      <param name="newItem">Elemento nuovo che sostituisce l'elemento originale.</param>
      <param name="oldItem">Elemento originale sostituito.</param>
      <param name="index">Indice dell'elemento sostituito.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> non è <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</exception>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action">
      <summary>Ottiene la descrizione dell'azione che ha provocato l'evento. </summary>
      <returns>Descrizione dell'azione che ha provocato l'evento, come valore dell'enumerazione .</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems">
      <summary>Ottiene gli elementi interessati da un'azione.</summary>
      <returns>Elenco degli elementi interessati da un'azione. L'impostazione predefinita è null.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary>Ottiene l'indice in corrispondenza del quale è stata eseguita la modifica.</summary>
      <returns>Indice in corrispondenza del quale è stata eseguita la modifica.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems">
      <summary>Ottiene l'elemento interessato da un'azione <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</summary>
      <returns>Elenco di elementi interessati da un'azione <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary>Ottiene l'indice in corrispondenza del quale è stata apportata la modifica per un'azione <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</summary>
      <returns>Indice in corrispondenza del quale è stata apportata la modifica per un'azione <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> o <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler">
      <summary>Rappresenta il metodo per la gestione degli eventi che implementano l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <param name="sender">Oggetto che ha generato l'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventArgs">
      <summary>Fornisce i dati per l'evento NomeMetodoCompleted. </summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</summary>
      <param name="error">Qualsiasi errore verificatosi durante l'esecuzione dell'operazione asincrona.</param>
      <param name="cancelled">Valore che indica l'eventuale annullamento dell'operazione asincrona.</param>
      <param name="userState">Oggetto di stato facoltativo fornito dall'utente utilizzato per identificare l'attività che ha generato l'evento Completed.</param>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">
      <summary>Ottiene un valore che indica se un'operazione asincrona è stata annullata.</summary>
      <returns>true se l'operazione asincrona è stata annullata; in caso contrario, false.L'impostazione predefinita è false.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Error">
      <summary>Ottiene un valore che indica l'errore verificatosi durante un'operazione asincrona.</summary>
      <returns>Un'istanza dell'oggetto <see cref="T:System.Exception" /> se si è verificato un errore durante un'operazione asincrona; in caso contrario null.</returns>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary">
      <summary>Genera un'eccezione fornita dall'utente in caso di errore in un'operazione asincrona.</summary>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> è true.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">La proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> è stata impostata dall'operazione asincrona.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">
      <summary>Ottiene l’identificatore univoco per l'attività asincrona.</summary>
      <returns>Un riferimento a un oggetto che identifica in modo univoco l'attività asincrona. In caso contrario, null se non è stato impostato alcun valore.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento MethodNameCompleted di un'operazione asincrona. </summary>
      <param name="sender">L'origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncOperation">
      <summary>Rileva la durata di un'operazione asincrona. </summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.OperationCompleted">
      <summary>Pone fine alla durata di un'operazione asincrona.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> è già stato chiamato per l'attività.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Richiama un delegato nel thread o contesto adeguato al modello di applicazione.</summary>
      <param name="d">Oggetto <see cref="T:System.Threading.SendOrPostCallback" /> che esegue il wrapping del delegato da chiamare al completamento dell'operazione.</param>
      <param name="arg">Argomento per il delegato contenuto nel parametro <paramref name="d" />.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> è già stato chiamato per l'attività.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è null.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Pone fine alla durata di un'operazione asincrona.</summary>
      <param name="d">Oggetto <see cref="T:System.Threading.SendOrPostCallback" /> che esegue il wrapping del delegato da chiamare al completamento dell'operazione.</param>
      <param name="arg">Argomento per il delegato contenuto nel parametro <paramref name="d" />.</param>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> è già stato chiamato per l'attività.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è null.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
      <summary>Ottiene l'oggetto <see cref="T:System.Threading.SynchronizationContext" /> passato al costruttore quando l'oggetto è stato creato da <see cref="T:System.ComponentModel.AsyncOperationManager" />.</summary>
      <returns>Oggetto <see cref="T:System.Threading.SynchronizationContext" /> passato al costruttore.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
      <summary>Ottiene un oggetto utilizzato per identificare in modo univoco un'operazione asincrona.</summary>
      <returns>L'oggetto di stato passato alla chiamata di metodo asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncOperationManager">
      <summary>Fornisce gestione della concorrenza per le classi che supportano le chiamate asincrone.Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
      <summary>Restituisce un oggetto <see cref="T:System.ComponentModel.AsyncOperation" /> per rilevare la durata di una particolare operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.AsyncOperation" /> utilizzabile per tenere traccia della durata di una chiamata asincrona a un metodo.</returns>
      <param name="userSuppliedState">Oggetto utilizzato per associare informazioni sullo stato del client, ad esempio un ID attività, a una determinata operazione asincrona.</param>
    </member>
    <member name="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Threading.SynchronizationContext" /> per l'operazione asincrona.</summary>
      <returns>
        <see cref="T:System.Threading.SynchronizationContext" /> per l'operazione asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.BackgroundWorker">
      <summary>Esegue un'operazione in un thread separato.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BackgroundWorker" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.CancelAsync">
      <summary>Richiede l'annullamento di un'operazione in background in attesa.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> è false. </exception>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.CancellationPending">
      <summary>Ottiene un valore che indica se l'applicazione ha richiesto l'annullamento di un'operazione in background.</summary>
      <returns>true se l'applicazione ha richiesto l'annullamento di un operazione in background; in caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.DoWork">
      <summary>L'evento si verifica quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.IsBusy">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.ComponentModel.BackgroundWorker" /> sta eseguendo un'operazione in background.</summary>
      <returns>true se l'oggetto <see cref="T:System.ComponentModel.BackgroundWorker" /> sta eseguendo un'operazione background; in caso contrario, false.</returns>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
      <summary>Viene generato l'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</summary>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.DoWorkEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
      <summary>Viene generato l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.ProgressChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
      <summary>Viene generato l'evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />.</summary>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
      <summary>L'evento si verifica quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
      <summary>Viene generato l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
      <param name="percentProgress">Percentuale di completamento, da 0 a 100, dell'operazione in background.</param>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> è impostata su false. </exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
      <summary>Viene generato l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
      <param name="percentProgress">Percentuale di completamento, da 0 a 100, dell'operazione in background.</param>
      <param name="userState">L'oggetto di stato passato a <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</param>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> è impostata su false. </exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <summary>Avvia l'esecuzione di un'operazione in background.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> è true.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
      <summary>Avvia l'esecuzione di un'operazione in background e include un parametro che deve essere utilizzato dall'operazione in background.</summary>
      <param name="argument">Parametro che deve essere utilizzato dall'operazione in background nel gestore eventi <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> è true.</exception>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
      <summary>Viene generato quando l'operazione in background è stata annullata o ha generato un'eccezione.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
      <summary>Ottiene o imposta un valore che indica se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> è in grado di segnalare gli aggiornamenti dello stato di avanzamento.</summary>
      <returns>true se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta gli aggiornamenti dello stato; in caso contrario false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
      <summary>Ottiene o imposta un valore che indica se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta l'annullamento asincrono.</summary>
      <returns>true se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta l'annullamento; in caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary>Specifica se una proprietà o un evento deve essere visualizzato in una finestra delle proprietà.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable">true se una proprietà o un evento può essere modificato in fase di progettazione. In caso contrario, false.ll valore predefinito è true.</param>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary>Ottiene un valore che indica se un oggetto è esplorabile.</summary>
      <returns>true se l'oggetto è esplorabile, in caso contrario, false.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary>Consente di specificare il valore predefinito per l'attributo <see cref="T:System.ComponentModel.BrowsableAttribute" />, che è <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />.Questo campo statico è in sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary>Indica se questa istanza e un oggetto specificato sono uguali.</summary>
      <returns>true se <paramref name="obj" /> è uguale a questa istanza; in caso contrario, false.</returns>
      <param name="obj">Altro oggetto da confrontare. </param>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary>Restituisce il codice hash per questa istanza.</summary>
      <returns>Codice hash di valori interi con segno a 32 bit.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary>Specifica che una proprietà o un evento non può essere modificato in fase di progettazione.Questo campo statico è in sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary>Specifica che una proprietà o un evento può essere modificato in fase di progettazione.Questo campo statico è in sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.CancelEventArgs">
      <summary>Fornisce dati per un evento annullabile.</summary>
    </member>
    <member name="M:System.ComponentModel.CancelEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CancelEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CancelEventArgs" /> con la proprietà <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" />impostata sul valore dato.</summary>
      <param name="cancel">true per annullare l'operazione; in caso contrario, false.</param>
    </member>
    <member name="P:System.ComponentModel.CancelEventArgs.Cancel">
      <summary>Ottiene o imposta un valore che indica se l'operazione deve essere annullata.</summary>
      <returns>true se l'operazione deve essere annullata. In caso contrario, false.</returns>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary>Specifica il nome della categoria in cui raggruppare la proprietà o l'evento se visualizzato in un controllo griglia delle proprietà impostato sulla modalità Per categoria.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.ComponentModel.CategoryAttribute" /> con il nome di categoria Default.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CategoryAttribute" /> con il nome di categoria specificato.</summary>
      <param name="category">Il nome della categoria. </param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary>Ottiene un attributo <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Action.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria action.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary>Ottiene un attributo <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Appearance.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria appearance.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary>Ottiene un attributo <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Asynchronous.</summary>
      <returns>Un attributo <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria Asynchronous.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary>Ottiene un attributo <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Behavior.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria behavior.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary>Ottiene il nome della categoria per la proprietà o l'evento a cui è applicato questo attributo.</summary>
      <returns>Il nome della categoria per la proprietà o l'evento a cui è applicato questo attributo.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Data.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria data.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary>Ottiene un attributo <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Default.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria default.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Design.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria design.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria DragDrop.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria drag-and-drop.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.CategoryAttribute" />; in caso contrario, false.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary>Ottiene un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Focus.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria focus.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Format.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria format.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary>Restituisce il codice hash per questo attributo.</summary>
      <returns>Codice hash di interi con segno a 32 bit</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary>Consente di cercare il nome localizzato della categoria specificata.</summary>
      <returns>Il nome localizzato della categoria oppure null se non esiste un nome localizzato.</returns>
      <param name="value">Identificatore della categoria da cercare. </param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Key.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria key.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Layout.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria layout.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria Mouse.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria mouse.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary>Ottiene un <see cref="T:System.ComponentModel.CategoryAttribute" /> che rappresenta la categoria WindowStyle.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.CategoryAttribute" /> per la categoria window style.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary>Ottiene un componente specifico nel contenitore.</summary>
    </member>
    <member name="T:System.ComponentModel.DataErrorsChangedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataErrorsChangedEventArgs" />. </summary>
      <param name="propertyName">Nome della proprietà per cui sono cambiati gli errori oppure null o <see cref="F:System.String.Empty" /> per errori a livello di entità.</param>
    </member>
    <member name="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName">
      <summary>Ottiene il nome della proprietà per cui sono cambiati gli errori oppure null o <see cref="F:System.String.Empty" /> per errori a livello di entità.</summary>
      <returns>Nome della proprietà interessata oppure null o <see cref="F:System.String.Empty" /> per errori a livello di entità.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>Consente di specificare il valore predefinito per una proprietà.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un valore <see cref="T:System.Boolean" />.</summary>
      <param name="value">
        <see cref="T:System.Boolean" /> che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un intero senza segno a 8 bit.</summary>
      <param name="value">Intero senza segno a 8 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un carattere Unicode.</summary>
      <param name="value">Carattere Unicode che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un numero in virgola mobile e precisione doppia.</summary>
      <param name="value">Numero in virgola mobile e precisione doppia che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un valore signed integer a 16 bit.</summary>
      <param name="value">Intero con segno a 16 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un valore signed integer a 32 bit.</summary>
      <param name="value">Intero con segno a 32 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un valore signed integer a 64 bit.</summary>
      <param name="value">Intero con segno a 64 bit che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> che rappresenta il valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando un numero in virgola mobile e precisione singola.</summary>
      <param name="value">Numero in virgola mobile a precisione singola che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> utilizzando <see cref="T:System.String" />.</summary>
      <param name="value">
        <see cref="T:System.String" /> che corrisponde al valore predefinito. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultValueAttribute" /> convertendo il valore specificato nel tipo indicato e utilizzando le impostazioni cultura invarianti come contesto di conversione.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera convertire il valore. </param>
      <param name="value">Oggetto <see cref="T:System.String" /> che può essere convertito nel tipo utilizzando l'oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo e le impostazioni cultura inglesi(Stati Uniti).</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DefaultValueAttribute" /> corrente.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode"></member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.SetValue(System.Object)">
      <summary>Imposta il valore predefinito della proprietà a cui è associato questo attributo.</summary>
      <param name="value">Valore predefinito.</param>
    </member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>Ottiene il valore predefinito della proprietà a cui è associato questo attributo.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore predefinito della proprietà a cui è associato questo attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary>Specifica una descrizione per una proprietà o un evento.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> senza parametri.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> con una descrizione.</summary>
      <param name="description">Testo della descrizione. </param>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary>Specifica il valore predefinito per <see cref="T:System.ComponentModel.DescriptionAttribute" />, che è una stringa vuota ("").Il campo static è in sola lettura.</summary>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary>Ottiene la descrizione memorizzata in questo attributo.</summary>
      <returns>La descrizione memorizzata in questo attributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary>Ottiene o imposta la stringa memorizzata come descrizione.</summary>
      <returns>La stringa memorizzata come descrizione.Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DescriptionAttribute" />; in caso contrario, false.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode"></member>
    <member name="T:System.ComponentModel.DoWorkEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DoWorkEventArgs" />.</summary>
      <param name="argument">Specifica un argomento per un'operazione asincrona.</param>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Argument">
      <summary>Ottiene un valore che rappresenta l'argomento di un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta l'argomento di un'operazione asincrona.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Cancel">
      <summary>Ottiene o imposta un valore che indica se l'operazione asincrona è stata annullata.</summary>
      <returns>true se l'operazione è stata annullata; in caso contrario, false.Il valore predefinito è false.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Result">
      <summary>Ottiene o imposta un valore che rappresenta il risultato di un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il risultato di un'operazione asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> generato quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />.</summary>
      <param name="sender">Origine dell’evento. </param>
      <param name="e">
        <see cref="T:System.ComponentModel.DoWorkEventArgs" /> contenente i dati dell'evento. </param>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>Consente di specificare se una proprietà o un metodo è visualizzabile in un editor.Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> con la proprietà <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" /> impostata sullo stato predefinito.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> con <see cref="T:System.ComponentModel.EditorBrowsableState" />.</summary>
      <param name="state">Oggetto <see cref="T:System.ComponentModel.EditorBrowsableState" /> per impostare <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" />. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> corrente.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente; in caso, false.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>Ottiene lo stato esplorabile della proprietà o del metodo.</summary>
      <returns>Attributo <see cref="T:System.ComponentModel.EditorBrowsableState" /> che rappresenta lo stato esplorabile della proprietà o del metodo.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>Consente di specificare lo stato esplorabile di una proprietà o di un metodo all'interno di un editor. </summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>La proprietà o il metodo sono funzionalità che dovrebbero essere accessibile ai soli utenti avanzati.Tramite un editor è possibile mostrare o nascondere tali proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>È possibile visualizzare sempre la proprietà o il metodo all'interno di un editor.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>Non è mai possibile visualizzare la proprietà o il metodo all'interno di un editor.</summary>
    </member>
    <member name="T:System.ComponentModel.IChangeTracking">
      <summary>Definisce il meccanismo per la richiesta delle modifiche all'oggetto e la reimpostazione dello stato modificato. </summary>
    </member>
    <member name="M:System.ComponentModel.IChangeTracking.AcceptChanges">
      <summary>Reimposta lo stato dell'oggetto su non modificato accettando le modifiche. </summary>
    </member>
    <member name="P:System.ComponentModel.IChangeTracking.IsChanged">
      <summary>Ottiene lo stato modificato dell'oggetto.</summary>
      <returns>true se il contenuto dell'oggetto è stato modificato dall'ultima chiamata al metodo <see cref="M:System.ComponentModel.IChangeTracking.AcceptChanges" />; in caso contrario, false. </returns>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary>Quando viene implementato da una classe, ottiene o imposta l'oggetto <see cref="T:System.ComponentModel.ISite" /> associato al componente.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary>Aggiunge un gestore eventi per restare in attesa dell'evento Disposed sul componente.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary>Quando viene implementato da una classe, ottiene o imposta l'oggetto <see cref="T:System.ComponentModel.ISite" /> associato al componente.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> associato al componente.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary>Fornisce funzionalità per i contenitori.I contenitori sono oggetti che contengono logicamente zero o più componenti.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary>Aggiunge un componente al contenitore.</summary>
      <param name="component">Componente da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Aggiunge un componente al contenitore.</summary>
      <param name="component">Componente da aggiungere.</param>
      <param name="name">Nome identificativo del componente.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary>Ottiene tutti i componenti presenti in <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns>Insieme dei componenti nell'oggetto <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary>Rimuove un componente dal contenitore.</summary>
      <param name="component">Componente da rimuovere.</param>
    </member>
    <member name="T:System.ComponentModel.IEditableObject">
      <summary>Rappresenta un oggetto che dispone di una modalità di modifica e della funzionalità per l'esecuzione del commit o l'annullamento delle modifiche. </summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.BeginEdit">
      <summary>Attiva la modalità di modifica dell'oggetto.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.CancelEdit">
      <summary>Disattiva la modalità di modifica dell'oggetto e ripristina il valore precedente non modificato.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.EndEdit">
      <summary>Disattiva la modalità di modifica dell'oggetto ed esegue il commit del valore modificato.</summary>
    </member>
    <member name="T:System.ComponentModel.INotifyDataErrorInfo">
      <summary>Definisce i membri che le classi di entità dati possono implementare per fornire un supporto di convalida sincrono e asincrono personalizzato.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
      <summary>Si verifica quando gli errori di convalida cambiano per una proprietà o per l'intera entità. </summary>
    </member>
    <member name="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
      <summary>Ottiene gli errori di convalida per una proprietà specificata o per l'intera entità.</summary>
      <returns>Errori di convalida per la proprietà o per l'entità.</returns>
      <param name="propertyName">Nome della proprietà per cui recuperare gli errori di convalida oppure null o <see cref="F:System.String.Empty" />, per recuperare gli errori a livello di entità.</param>
    </member>
    <member name="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
      <summary>Ottiene un valore che indica se l'entità presenta errori di convalida. </summary>
      <returns>true se l'entità attualmente presenta errori di convalida; in caso contrario, false.</returns>
    </member>
    <member name="T:System.ComponentModel.INotifyPropertyChanged">
      <summary>Notifica i client che il valore di una proprietà è cambiato.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <summary>Viene generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="T:System.ComponentModel.INotifyPropertyChanging">
      <summary>Definisce un evento per notificare ai client che il valore di una proprietà è in fase di modifica.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging">
      <summary>Si verifica quando il valore di una proprietà è in fase di modifica.</summary>
    </member>
    <member name="T:System.ComponentModel.IRevertibleChangeTracking">
      <summary>Fornisce supporto per il rollback delle modifiche.</summary>
    </member>
    <member name="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
      <summary>Reimposta lo stato dell'oggetto su non modificato, rifiutando le modifiche. </summary>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary>Fornisce le funzionalità richieste dai siti.I siti associano un componente a un contenitore e consentono la comunicazione tra i due, fornendo inoltre al contenitore un modo per gestire i relativi componenti.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary>Quando viene implementato da una classe, ottiene il componente associato a <see cref="T:System.ComponentModel.ISite" />.</summary>
      <returns>Componente associato all'oggetto <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary>Quando viene implementato da una classe, ottiene il contenitore associato a <see cref="T:System.ComponentModel.ISite" />.</summary>
      <returns>Contenitore associato a <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary>Quando viene implementato da una classe, determina se il componente è in modalità progettazione.</summary>
      <returns>true se in modalità progettazione; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary>Quando viene implementato da una classe, ottiene o imposta il nome del componente associato all'oggetto <see cref="T:System.ComponentModel.ISite" />.</summary>
      <returns>Nome del componente.</returns>
    </member>
    <member name="T:System.ComponentModel.ITypeDescriptorContext">
      <summary>Fornisce informazioni su un contesto a un convertitore di tipi o a un editor di valori per l'esecuzione di una conversione.</summary>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Container">
      <summary>Ottiene il contenitore con il gruppo di oggetti per questo formattatore.</summary>
      <returns>Contenitore con il gruppo di oggetti per questo formattatore.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Instance">
      <summary>Ottiene l'istanza che richiama il metodo nell'oggetto formattatore.</summary>
      <returns>Istanza che richiama il metodo nell'oggetto formattatore.</returns>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
      <summary>Viene generato l'evento <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
      <summary>Ottiene un valore che indica se è possibile modificare questo oggetto.</summary>
      <returns>true se questo oggetto può essere modificato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rileva l'elemento di contesto indicato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rileva l'elemento di contesto indicato.</returns>
    </member>
    <member name="T:System.ComponentModel.ListSortDirection">
      <summary>Specifica la direzione di un'operazione di ordinamento.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Ascending">
      <summary>Ordinamento in senso crescente.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Descending">
      <summary>Ordinamento in senso decrescente.</summary>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />.</summary>
      <param name="progressPercentage">Percentuale dell'operazione asincrona già completata.</param>
      <param name="userState">Stato utente univoco.</param>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage">
      <summary>Ottiene la percentuale dell'operazione asincrona completata.</summary>
      <returns>Valore percentuale che indica l'avanzamento dell'operazione asincrona.</returns>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.UserState">
      <summary>Ottiene uno stato utente univoco.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> univoco che indica lo stato utente.</returns>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> generato quando lo stato di avanzamento viene comunicato da <see cref="T:System.ComponentModel.BackgroundWorker" />.</summary>
      <param name="sender">Origine dell’evento. </param>
      <param name="e">
        <see cref="T:System.ComponentModel.ProgressChangedEventArgs" /> contenente i dati dell'evento. </param>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventArgs.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />.</summary>
      <param name="propertyName">Nome della proprietà modificata. </param>
    </member>
    <member name="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName">
      <summary>Ottiene il nome della proprietà modificata.</summary>
      <returns>Nome della proprietà modificata; <see cref="F:System.String.Empty" /> o null se tutte le proprietà sono state modificate.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="sender">Origine dell'evento. </param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> che contiene i dati dell'evento. </param>
    </member>
    <member name="T:System.ComponentModel.PropertyChangingEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyChangingEventArgs" />.</summary>
      <param name="propertyName">Nome della proprietà in corso di modifica.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyChangingEventArgs.PropertyName">
      <summary>Ottiene il nome della proprietà in corso di modifica.</summary>
      <returns>Nome della proprietà in corso di modifica.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyChangingEventHandler">
      <summary>Rappresenta un metodo in base al quale verrà gestito l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />.</summary>
      <param name="sender">L'origine dell'evento.</param>
      <param name="e">Dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptor">
      <summary>Fornisce la descrizione di una proprietà.</summary>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary>Specifica se la proprietà a cui è applicato questo attributo è di sola lettura o di lettura/scrittura.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly">true indica che la proprietà a cui è applicato questo attributo è di sola lettura, false indica che è di lettura/scrittura.</param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary>Indica se questa istanza e un oggetto specificato sono uguali.</summary>
      <returns>true se <paramref name="obj" /> è uguale a questa istanza; in caso contrario, false. </returns>
      <param name="obj">Oggetto con cui eseguire il confronto. </param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary>Restituisce il codice hash per questa istanza. </summary>
      <returns>Codice hash per la classe <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary>Ottiene un valore che indica se la proprietà a cui è applicato questo attributo è di sola lettura. </summary>
      <returns>true se la proprietà cui è applicato questo attributo è di sola lettura, false se è di lettura/scrittura. </returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />.</summary>
    </member>
    <member name="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />.</summary>
      <param name="result">Il risultato dell'operazione asincrona.</param>
      <param name="error">Qualsiasi errore verificatosi durante l'esecuzione dell'operazione asincrona.</param>
      <param name="cancelled">Valore che indica l'eventuale annullamento dell'operazione asincrona.</param>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
      <summary>Ottiene un valore che rappresenta il risultato di un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il risultato di un'operazione asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> generato quando l'operazione eseguita da un oggetto <see cref="T:System.ComponentModel.BackgroundWorker" /> viene completata, annullata o genera un'eccezione.</summary>
      <param name="sender">Origine dell'evento. </param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> che contiene i dati dell'evento. </param>
    </member>
    <member name="T:System.ComponentModel.TypeConverter">
      <summary>Fornisce un modo unificato per convertire tipi di valori in altri tipi.<see cref="T:System.ComponentModel.TypeConverter" /> supporta in genere la conversione stringa-oggetto per gli editor di proprietà negli ambienti di progettazione o per abilitare la sintassi XAML.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore di tipi può convertire un oggetto dal tipo specificato al tipo del convertitore.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto che fornisce un contesto di formato.</param>
      <param name="sourceType">Tipo da cui si desidera eseguire la conversione.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
      <summary>Restituisce un valore che indica se il convertitore di tipi può convertire un oggetto dal tipo specificato al tipo del convertitore.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="sourceType">Tipo da cui si desidera eseguire la conversione.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore di tipi può convertire un oggetto nel tipo specificato. </summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo in cui si desidera effettuare la conversione.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
      <summary>Restituisce un valore che indica se il convertitore di tipi può convertire un oggetto nel tipo specificato. </summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="destinationType">Tipo in cui si desidera effettuare la conversione.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte dal valore specificato nel tipo di conversione prevista del convertitore.</summary>
      <returns>Valore convertito.</returns>
      <param name="context">Oggetto che fornisce un contesto di formato. </param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti. </param>
      <param name="value">Valore da convertire nel tipo del convertitore.</param>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> non implementato nella base <see cref="T:System.ComponentModel.TypeConverter" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
      <summary>Converte il valore specificato nel tipo del convertitore.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire nel tipo del convertitore.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
      <summary>Converte il testo specificato in un oggetto.</summary>
      <returns>Oggetto che rappresenta la stringa di testo convertita.</returns>
      <param name="text">Rappresentazione di testo dell'oggetto da convertire.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto del valore specificato nel tipo specificato.</summary>
      <returns>Oggetto convertito.</returns>
      <param name="context">Oggetto che fornisce un contesto di formato. </param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti. </param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> non implementato nella base <see cref="T:System.ComponentModel.TypeConverter" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
      <summary>Converte l'oggetto del valore specificato nel tipo specificato.</summary>
      <returns>Oggetto convertito.</returns>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
      <summary>Converte l'oggetto specificato in una rappresentazione in forma di stringa.</summary>
      <returns>Oggetto che rappresenta il valore convertito.</returns>
      <param name="value">Oggetto da convertire</param>
    </member>
    <member name="T:System.ComponentModel.TypeConverterAttribute">
      <summary>Specifica la classe da utilizzare come convertitore di tipi per il tipo o la proprietà a cui è associato questo attributo.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />. </summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</summary>
      <param name="typeName">Nome completo della classe da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />, utilizzando il tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</summary>
      <param name="type">Tipo di classe del convertitore da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo.</param>
    </member>
    <member name="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
      <summary>Ottiene il nome completo del tipo da utilizzare come convertitore per l'oggetto a cui è associato questo attributo.</summary>
      <returns>Nome completo del tipo da utilizzare come convertitore per l'oggetto a cui è associato questo attributo o una stringa vuota ("") se tale nome non esiste.Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="T:System.Diagnostics.Debug">
      <summary>Fornisce un insieme di metodi e di proprietà che consentono di eseguire il debug del codice.Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>Verifica una condizione e restituisce lo stack di chiamate se la condizione è false.</summary>
      <param name="condition">Espressione condizionale da valutare.Se la condizione è true, lo stack di chiamate non è visualizzato.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>Verifica una condizione e visualizza un messaggio specificato se la condizione è false.</summary>
      <param name="condition">Espressione condizionale da valutare.Se la condizione è true, il messaggio specificato non è visualizzato.</param>
      <param name="message">Messaggio da visualizzare. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Verifica una condizione e visualizza due messaggi specificati se la condizione è false.</summary>
      <param name="condition">Espressione condizionale da valutare.Se la condizione è true, i messaggi specificati non sono visualizzati.</param>
      <param name="message">Messaggio da visualizzare. </param>
      <param name="detailMessage">Messaggio dettagliato da visualizzare. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>Verifica una condizione e restituisce il messaggio e lo stack di chiamate se la condizione è false. </summary>
      <param name="condition">Espressione condizionale da valutare.Se la condizione è true, il messaggio specificato e lo stack di chiamate non vengono visualizzati.</param>
      <param name="message">Messaggio da visualizzare.</param>
      <param name="detailMessageFormat">Stringa di formato composta che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <paramref name="args" />.</param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>Scrive il valore del metodo <see cref="M:System.Object.ToString" /> di un oggetto specificato nel debugger tramite la funzione OutputDebugString.</summary>
      <param name="value">Oggetto il cui nome viene inviato al debugger tramite la funzione OutputDebugString.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>Scrive un messaggio specificato seguito da un terminatore di riga nel debugger tramite la funzione OutputDebugString.</summary>
      <param name="message">Messaggio da scrivere nel debugger. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>Scrive una stringa formattata seguita da un terminatore di riga nel debugger tramite la funzione OutputDebugString.</summary>
      <param name="format">Stringa di formato composta che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <paramref name="args" />.</param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>Scrive un messaggio specificato seguito da un terminatore di riga nel debugger tramite la funzione OutputDebugString se la condizione è true.</summary>
      <param name="condition">Espressione condizionale da valutare.Se la condizione è true, il messaggio specificato non è scritto nel debugger.</param>
      <param name="message">Messaggio da scrivere nel debugger. </param>
    </member>
    <member name="T:System.Diagnostics.Stopwatch">
      <summary>Fornisce un insieme di metodi e proprietà che è possibile utilizzare per misurare con precisione il tempo trascorso.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Diagnostics.Stopwatch" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.Elapsed">
      <summary>Ottiene il tempo trascorso totale misurato dall'istanza corrente.</summary>
      <returns>Restituisce <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <summary>Ottiene il tempo trascorso totale misurato dall'istanza corrente, in millisecondi.</summary>
      <returns>Restituisce <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente, in segni di graduazione del timer.</summary>
      <returns>Restituisce <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.Frequency">
      <summary>Ottiene la frequenza del timer come numero di segni di graduazione al secondo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetElapsedDateTimeTicks">
      <summary>Ottiene il numero di segni di graduazione che rappresentano data e ora dell'istanza.</summary>
      <returns>Restituisce <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetRawElapsedTicks">
      <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente, in segni di graduazione del timer.</summary>
      <returns>Restituisce <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <summary>Ottiene il numero di segni di graduazione nel meccanismo del timer.</summary>
      <returns>Restituisce <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <summary>Indica se il timer si basa su un contatore delle prestazioni a risoluzione elevata. Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.IsRunning">
      <summary>Ottiene o imposta un valore che indica se il timer Stopwatch è in esecuzione.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.true se l'istanza di Stopwatch è attualmente in esecuzione e misura il tempo trascorso per un intervallo; in caso contrario, false. </returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Reset">
      <summary>Interrompe la misurazione degli intervalli di tempo e reimposta il tempo trascorso su zero.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Restart">
      <summary>Arresta la misurazione dell'intervallo di tempo, azzera il tempo trascorso e avvia la misurazione del tempo trascorso.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Start">
      <summary>Avvia o riprende la misurazione del tempo trascorso per un intervallo.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.StartNew">
      <summary>Consente di inizializzare una nuova istanza di Stopwatch, impostare a zero la proprietà del tempo trascorso e avviare la misurazione del tempo trascorso.</summary>
      <returns>Restituisce <see cref="T:System.Diagnostics.Stopwatch" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Stop">
      <summary>Interrompe la misurazione del tempo trascorso per un intervallo.</summary>
    </member>
    <member name="T:System.IO.InvalidDataException">
      <summary>Eccezione generata se un flusso di dati è in un formato non valido.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.InvalidDataException" />.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.InvalidDataException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.InvalidDataException" /> con un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicata la causa dell'eccezione.</param>
      <param name="innerException">Eccezione che è la causa di questa eccezione. Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Fornisce metodi per codificare e decodificare URL durante l'elaborazione di richieste Web. </summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Consente di convertire una stringa codificata in HTML per la trasmissione HTTP in una stringa decodificata.</summary>
      <returns>Stringa decodificata.</returns>
      <param name="value">Stringa da decodificare.</param>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Consente di eseguire la conversione di una stringa in una stringa codificata in HTML.</summary>
      <returns>Stringa codificata.</returns>
      <param name="value">Stringa da codificare.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecode(System.String)">
      <summary>Consente di convertire in una stringa decodificata una stringa codificata per la trasmissione in un URL.</summary>
      <returns>Stringa decodificata.</returns>
      <param name="encodedValue">Stringa da decodificare.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di convertire una matrice di byte codificata in URL in una stringa decodificata utilizzando il metodo di codifica specificato, a partire dalla posizione specificata nella matrice e continuando per il numero di byte specificato.</summary>
      <returns>Stringa decodificata.</returns>
      <param name="encodedValue">Matrice di byte da decodificare.</param>
      <param name="offset">Posizione da cui iniziare la decodifica.</param>
      <param name="count">Numero di byte da decodificare.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
      <summary>Codifica una stringa URL.</summary>
      <returns>Stringa codificata.</returns>
      <param name="value">Testo da codificare.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di convertire una matrice di byte in una stringa codificata in URL, a partire dalla posizione specificata nella matrice e continuando per il numero di byte specificato.</summary>
      <returns>Stringa codificata.</returns>
      <param name="value">Matrice di byte da codificare.</param>
      <param name="offset">Posizione nella matrice di byte da cui iniziare la codifica.</param>
      <param name="count">Numero di byte da codificare.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Rappresenta i risultati di una singola acquisizione di sottoespressioni. </summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>Posizione nella stringa originale in cui è stato trovato il primo carattere della sottostringa acquisita.</summary>
      <returns>Posizione iniziale con inizio zero nella stringa originale in cui è stata trovata la sottostringa acquisita.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>Lunghezza della sottostringa acquisita.</summary>
      <returns>Lunghezza della sottostringa acquisita.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Ottiene la sottostringa acquisita dalla stringa di input.</summary>
      <returns>Sottostringa effettiva acquisita dalla corrispondenza.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Ottiene la sottostringa acquisita dalla stringa di input.</summary>
      <returns>Sottostringa effettiva acquisita dalla corrispondenza.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Rappresenta il set di acquisizioni eseguite da un unico gruppo di acquisizione. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi dell'insieme nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array">Matrice in cui copiare l'insieme. </param>
      <param name="arrayIndex">Posizione nella matrice di destinazione in cui iniziare la copiatura. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.-oppure-<paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> non rientrano nei limiti di <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Ottiene il numero delle sottostringhe acquisite dal gruppo.</summary>
      <returns>Numero di elementi presenti in <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Fornisce un enumeratore che consente di scorrere l'insieme.</summary>
      <returns>Oggetto che contiene tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Capture" /> all'interno dell'insieme <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se l'insieme è di sola lettura.</summary>
      <returns>true in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è sincronizzato (thread-safe).</summary>
      <returns>false in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Ottiene un singolo membro dell'insieme.</summary>
      <returns>Sottostringa acquisita alla posizione <paramref name="i" /> dell'insieme.</returns>
      <param name="i">Indice nell'insieme di acquisizioni. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> è minore di 0 o maggiore di <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso all'insieme.</summary>
      <returns>Un oggetto che può essere utilizzato per sincronizzare l'accesso all'insieme.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Rappresenta i risultati di un singolo gruppo di acquisizione.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Ottiene un insieme di tutte le acquisizioni rilevate dal gruppo di acquisizione, nel primo ordine più interno e più a sinistra (o nel primo ordine più interno e più a destra se l'espressione regolare viene modificata con l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />).L'insieme può avere zero o più elementi.</summary>
      <returns>Insieme delle sottostringhe individuate dal gruppo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Ottiene un valore che indica se la ricerca di corrispondenze ha avuto esito positivo.</summary>
      <returns>true se la corrispondenza dà esito positivo; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Rappresenta un insieme di gruppi acquisiti in una sola corrispondenza.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi dell'insieme nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array">Matrice in cui copiare l'insieme. </param>
      <param name="arrayIndex">Posizione nella matrice di destinazione in cui iniziare la copiatura. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.-oppure-<paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Restituisce il numero di gruppi nell'insieme.</summary>
      <returns>Numero di gruppi dell'insieme.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che può scorrere l'insieme.</summary>
      <returns>Oggetto che contiene tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Group" /> all'interno dell'insieme <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se l'insieme è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Text.RegularExpressions.GroupCollection" /> è di sola lettura; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" /> è sincronizzato (thread-safe).</summary>
      <returns>false in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Consente l'accesso a un membro dell'insieme tramite un indice integer.</summary>
      <returns>Membro dell'insieme specificato da <paramref name="groupnum" />.</returns>
      <param name="groupnum">L'indice in base zero del membro dell'insieme da recuperare. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Consente l'accesso a un membro dell'insieme tramite un indice di stringhe.</summary>
      <returns>Membro dell'insieme specificato da <paramref name="groupname" />.</returns>
      <param name="groupname">Nome di un gruppo di acquisizione.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>Copia dell'oggetto <see cref="T:System.Text.RegularExpressions.Match" /> da sincronizzare.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Rappresenta i risultati di una singola corrispondenza di un'espressione regolare.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Ottiene il gruppo vuoto.Tutte le ricerche di corrispondenze non riuscite restituiscono questa corrispondenza vuota.</summary>
      <returns>Oggetto <see cref="T:System.Text.RegularExpressions.Match" /> vuoto.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Ottiene un insieme di gruppi che corrispondono all'espressione regolare.</summary>
      <returns>Gruppi di caratteri corrispondenti al criterio.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.Text.RegularExpressions.Match" /> con i risultati relativi alla corrispondenza successiva, partendo dalla posizione in cui terminava l'ultima corrispondenza (dal carattere oltre l'ultimo carattere rilevato dalla corrispondenza).</summary>
      <returns>Corrispondenza dell'espressione regolare successiva.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Restituisce l'espansione del criterio di sostituzione specificato. </summary>
      <returns>Versione espansa del parametro <paramref name="replacement" />.</returns>
      <param name="replacement">Criterio di sostituzione da utilizzare. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">L'espansione non è consentita per questo criterio.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Rappresenta il gruppo di corrispondenze corrette individuate applicando in modo iterativo un modello di espressione regolare alla stringa di input.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi dell'insieme nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array">Matrice in cui copiare l'insieme. </param>
      <param name="arrayIndex">Posizione nella matrice in cui iniziare la copiatura. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è una matrice multidimensionale.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.-oppure-<paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Ottiene il numero di corrispondenze.</summary>
      <returns>Numero di corrispondenze.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Fornisce un enumeratore nello stesso ordine di <see cref="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)" />.</summary>
      <returns>Un oggetto <see cref="T:System.Collections.IEnumerator" /> che contiene tutti oggetti Match all'interno di MatchCollection.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se l'insieme è di sola lettura.</summary>
      <returns>Il valore di questa proprietà è sempre true.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è sincronizzato (thread-safe).</summary>
      <returns>Il valore di questa proprietà è sempre false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Ottiene un singolo membro dell'insieme.</summary>
      <returns>Sottostringa acquisita alla posizione <paramref name="i" /> dell'insieme.</returns>
      <param name="i">Indice nell'insieme Match. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> è minore di 0 oppure maggiore o uguale a <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l’accesso all'insieme.</summary>
      <returns>Un oggetto che può essere utilizzato per sincronizzare l'accesso all'insieme.Questa proprietà restituisce sempre l'oggetto stesso.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Rappresenta il metodo chiamato ogni volta che si individua una corrispondenza di un'espressione regolare durante un'operazione del metodo <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <returns>Stringa restituita dal metodo rappresentato dal delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
      <param name="match">Oggetto <see cref="T:System.Text.RegularExpressions.Match" /> che rappresenta una corrispondenza di un'espressione regolare singola durante un'operazione del metodo <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />. </param>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Rappresenta un'espressione regolare non modificabile.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Inizializza e compila una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata.</summary>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Inizializza e compila una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata, con opzioni che modificano il criterio.</summary>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> contiene un flag non valido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare, con opzioni che modificano il modello e un valore che specifica per quanto tempo un metodo corrispondente al modello deve tentare la corrispondenza prima del timeout.</summary>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che modificano l'espressione regolare.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha time out.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è un valore <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valido.-oppure-<paramref name="matchTimeout" /> è negativo o maggiore di circa 24 giorni.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Ottiene o imposta il numero massimo di voci nella cache statica corrente di espressioni regolari compilate.</summary>
      <returns>Numero massimo di voci nella cache statica.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore in un'operazione di impostazione è minore di zero.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Utilizzato internamente dal motore delle espressioni regolari. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Utilizzato internamente dal motore delle espressioni regolari. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Ignora un set minimo di caratteri (\, *, +, ?, |, {, [, (,), ^, $,., # e spazio) sostituendoli con i rispettivi codici di escape.Istruisce il motore delle espressioni regolari a interpretare questi caratteri in modo letterale anziché come metacaratteri.</summary>
      <returns>Stringa di caratteri con eventuali metacaratteri convertiti nel relativo formato di escape.</returns>
      <param name="str">Stringa di input contenente il testo da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Restituisce una matrice di nomi di gruppi di acquisizione per l'espressione regolare.</summary>
      <returns>Matrice di stringhe di nomi di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Restituisce una matrice di numeri di gruppi di acquisizione che corrispondono ai nomi dei gruppi in una matrice.</summary>
      <returns>Matrice di valori integer di numeri di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Ottiene un nome di gruppo che corrisponde al numero di gruppo specificato.</summary>
      <returns>Stringa che contiene il nome di gruppo associato al numero di gruppo specificato.Se non è presente un nome di gruppo che corrisponde a <paramref name="i" />, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
      <param name="i">Numero di gruppo da convertire nel nome di gruppo corrispondente. </param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Restituisce il numero di gruppo che corrisponde al nome di gruppo specificato.</summary>
      <returns>Numero di gruppo che corrisponde al nome di gruppo specificato o -1 se <paramref name="name" /> non è un nome di gruppo valido.</returns>
      <param name="name">Nome di gruppo da convertire nel numero di gruppo corrispondente. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è null.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary>Specifica che un'operazione con criteri di ricerca complessi non ha time out.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Indica se l'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" /> individua una corrispondenza nella stringa di input.</summary>
      <returns>true se l'espressione regolare individua una corrispondenza; in caso contrario, false.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Indica se l'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" /> individua una corrispondenza nella stringa di input a partire dalla posizione iniziale specificata nella stringa.</summary>
      <returns>true se l'espressione regolare individua una corrispondenza; in caso contrario, false.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="startat">Posizione del carattere dalla quale avviare la ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> non può essere minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Indica se l'espressione regolare individua una corrispondenza nella stringa di input utilizzando l'espressione regolare specificata nel parametro <paramref name="pattern" />.</summary>
      <returns>true se l'espressione regolare individua una corrispondenza; in caso contrario, false.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Indica se l'espressione regolare individua una corrispondenza nella stringa di input utilizzando l'espressione regolare specificata nel parametro <paramref name="pattern" /> e le opzioni di corrispondenza fornite nel parametro <paramref name="options" />.</summary>
      <returns>true se l'espressione regolare individua una corrispondenza; in caso contrario, false.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è un valore <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata utilizzando le opzioni di corrispondenza specificate e l'intervallo di timeout.</summary>
      <returns>true se l'espressione regolare individua una corrispondenza; in caso contrario, false.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza.</param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è un valore <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valido.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Cerca nella stringa di input specificata la prima occorrenza dell'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Oggetto che contiene informazioni sulla corrispondenza. </returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Cerca nella stringa di input la prima ricorrenza di un'espressione regolare con una posizione iniziale della stringa di input specifica.</summary>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="startat">Posizione del carattere in base zero dalla quale avviare la ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Esegue la ricerca nella stringa di input della prima ricorrenza di un'espressione regolare con una posizione iniziale e una lunghezza della stringa di input specifiche.</summary>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="beginning">Posizione del carattere in base zero nella stringa di input che definisce la posizione più a sinistra in cui effettuare la ricerca. </param>
      <param name="length">Numero di caratteri nella sottostringa da includere nella ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.-oppure-<paramref name="length" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.-oppure-<paramref name="beginning" />+<paramref name="length" />– 1 identifica una posizione che è al di fuori dell'intervallo di <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Cerca nella stringa di input specificata la prima occorrenza dell'espressione regolare indicata nel parametro <paramref name="pattern" />.</summary>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Esegue la ricerca nella stringa di input della prima ricorrenza dell'espressione regolare fornita in un parametro <paramref name="pattern" /> con le opzioni di corrispondenza fornite in un parametro <paramref name="options" />.</summary>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Cerca nella stringa di input la prima occorrenza dell'espressione regolare specificata utilizzando le opzioni di corrispondenza specificate e l'intervallo di timeout.</summary>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza.</param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.Per ulteriori informazioni relative ai time-out, vedere la sezione Note.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Cerca nella stringa di input specificata tutte le ricorrenze di un'espressione regolare.</summary>
      <returns>Insieme degli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca.In assenza di corrispondenze, il metodo restituisce un oggetto insieme vuoto.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Cerca nella stringa di input specificata tutte le ricorrenze di un'espressione regolare, partendo dalla posizione iniziale specificata nella stringa.</summary>
      <returns>Insieme degli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca.In assenza di corrispondenze, il metodo restituisce un oggetto insieme vuoto.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="startat">Posizione del carattere nella stringa di input dalla quale avviare la ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Cerca nella stringa di input specificata tutte le ricorrenze dell'espressione regolare specificata nel parametro <paramref name="pattern" />.</summary>
      <returns>Insieme degli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca.In assenza di corrispondenze, il metodo restituisce un oggetto insieme vuoto.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Cerca nella stringa di input specificata tutte le ricorrenze dell'espressione regolare fornita in un parametro <paramref name="pattern" /> con le opzioni di corrispondenza fornite in un parametro <paramref name="options" />.</summary>
      <returns>Insieme degli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca.In assenza di corrispondenze, il metodo restituisce un oggetto insieme vuoto.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata utilizzando le opzioni di corrispondenza specificate e l'intervallo di timeout.</summary>
      <returns>Insieme degli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca.In assenza di corrispondenze, il metodo restituisce un oggetto insieme vuoto.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza.</param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha timeout.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary>Ottiene l'intervallo di timeout dell'istanza corrente.</summary>
      <returns>Intervallo di tempo massimo che può trascorrere in un'operazione con criteri di ricerca complessi prima che <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> venga generato o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout vengono disabilitati.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Restituisce le opzioni passate nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Il parametro <paramref name="options" /> passato nel costruttore Regex.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Utilizzato internamente dal motore delle espressioni regolari. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un modello di espressione regolare con una stringa di sostituzione specificata. </summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="replacement">Stringa di sostituzione. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="replacement" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>All'interno di una stringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un modello di espressione regolare con una stringa di sostituzione specificata. </summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="replacement">Stringa di sostituzione. </param>
      <param name="count">Numero massimo di volte in cui la sostituzione può aver luogo. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="replacement" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>All'interno di una sottostringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un modello di espressione regolare con una stringa di sostituzione specificata. </summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="replacement">Stringa di sostituzione. </param>
      <param name="count">Numero massimo di volte in cui la sostituzione può aver luogo. </param>
      <param name="startat">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="replacement" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata. </summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="replacement">Stringa di sostituzione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.-oppure-<paramref name="replacement" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata.Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="replacement">Stringa di sostituzione. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.-oppure-<paramref name="replacement" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata.Parametri aggiuntivi specificano opzioni che modificano l'operazione di corrispondenza e l'intervallo di timeout se nessuna corrispondenza viene individuata.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza.</param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, o <paramref name="replacement" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.Per ulteriori informazioni relative ai time-out, vedere la sezione Note.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.-oppure-<paramref name="evaluator" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.-oppure-<paramref name="evaluator" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.Parametri aggiuntivi specificano opzioni che modificano l'operazione di corrispondenza e l'intervallo di timeout se nessuna corrispondenza viene individuata.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza.</param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, o <paramref name="evaluator" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.Per ulteriori informazioni relative ai time-out, vedere la sezione Note.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>All'interno di una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="evaluator" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>All'interno di una stringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un modello di espressione regolare con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="count">Numero massimo di volte in cui la sostituzione avrà luogo. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="evaluator" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>All'interno di una sottostringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un modello di espressione regolare con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione.</returns>
      <param name="input">Stringa nella quale ricercare una corrispondenza. </param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="count">Numero massimo di volte in cui la sostituzione avrà luogo. </param>
      <param name="startat">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="evaluator" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Ottiene un valore che indica se l'espressione regolare effettua la ricerca da destra a sinistra.</summary>
      <returns>true se l'espressione regolare effettua la ricerca da destra a sinistra; in caso contrario, false.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Utilizzato internamente dal motore delle espressioni regolari. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Divide la stringa di input in corrispondenza delle posizioni definite da un modello di espressione regolare specificato nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Matrice di stringhe.</returns>
      <param name="input">Stringa da suddividere. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Divide la stringa di input specificata per un numero massimo di volte specificato in corrispondenza delle posizioni definite da un'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Matrice di stringhe.</returns>
      <param name="input">Stringa da suddividere. </param>
      <param name="count">Numero massimo di volte in cui la divisione può aver luogo. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Divide la stringa di input specificata per un numero massimo di volte specificato in corrispondenza delle posizioni definite da un'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.La ricerca del criterio di ricerca di espressioni regolari si avvia a una posizione di carattere specificata nella stringa di input.</summary>
      <returns>Matrice di stringhe.</returns>
      <param name="input">Stringa da suddividere. </param>
      <param name="count">Numero massimo di volte in cui la divisione può aver luogo. </param>
      <param name="startat">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lughezza di <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Suddivide la stringa di input in corrispondenza delle posizioni definite da un criterio di espressione regolare.</summary>
      <returns>Matrice di stringhe.</returns>
      <param name="input">Stringa da suddividere. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Suddivide la stringa di input in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato.Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <returns>Matrice di stringhe.</returns>
      <param name="input">Stringa da suddividere. </param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare. </param>
      <param name="options">Combinazione bit per bit dei valori dell'enumerazione. </param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.-oppure-<paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un modello di espressione regolare specificato.Parametri aggiuntivi specificano opzioni che modificano l'operazione di corrispondenza e l'intervallo di timeout se nessuna corrispondenza viene individuata.</summary>
      <returns>Matrice di stringhe.</returns>
      <param name="input">Stringa da suddividere.</param>
      <param name="pattern">Criteri da utilizzare per la ricerca di corrispondenze dell'espressione regolare.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Un intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che il metodo non ha timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore durante l'analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valori.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.Per ulteriori informazioni relative ai time-out, vedere la sezione Note.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Restituisce il modello dell'espressione regolare passato nel costruttore Regex.</summary>
      <returns>Il parametro <paramref name="pattern" /> passato nel costruttore Regex.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Non effettua l'escape di eventuali caratteri di escape presenti nella stringa di input.</summary>
      <returns>Stringa di caratteri con eventuali caratteri di escape convertiti nel relativo formato non di escape.</returns>
      <param name="str">Stringa di input contenente il testo da convertire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> è null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Utilizzato internamente dal motore delle espressioni regolari.</summary>
      <returns>true se la proprietà <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; altrimenti, false.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary>Eccezione generata quando il tempo di esecuzione di un metodo di corrispondenza di espressione regolare supera l'intervallo di timeout.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un messaggio fornito dal sistema.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con la stringa del messaggio specificato.</summary>
      <param name="message">Stringa nella quale è descritta l'eccezione.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Stringa nella quale è descritta l'eccezione.</param>
      <param name="inner">Eccezione che è la causa di questa eccezione.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con le informazioni relative al criterio di espressione regolare, il testo di input e l'intervallo di timeout.</summary>
      <param name="regexInput">Testo di input elaborato dal motore delle espressioni regolari quando si è verificato il timeout.</param>
      <param name="regexPattern">Modello utilizzato dal motore delle espressioni regolari quando si è verificato il timeout.</param>
      <param name="matchTimeout">Intervallo di timeout.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary>[CRITICO PER LA SICUREZZA] Ottiene il testo di input che il motore delle espressioni regolari ha elaborato quando si è verificato il timeout.</summary>
      <returns>Testo di input di espressione regolare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary>[CRITICO PER LA SICUREZZA] Ottiene l'intervallo di timeout per la corrispondenza di un'espressione regolare.</summary>
      <returns>Intervallo di timeout.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary>[CRITICO PER LA SICUREZZA] Ottiene il criterio di espressione regolare utilizzato nell'operazione corrispondente quando si è verificato il timeout.</summary>
      <returns>Criterio di espressione regolare.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Fornisce valori enumerati da utilizzare per impostare le opzioni delle espressioni regolari.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Specifica che l'espressione regolare è compilata in un assembly.Questa situazione determina un'esecuzione più rapida ma aumenta i tempi di avvio.Questo valore non deve essere assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> quando viene chiamato il metodo <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />.Presente solo in Windows Phone, ma non è supportato.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Specifica che le differenze culturali della lingua vengono ignorate.In genere, il motore delle espressioni regolari esegue confronti tra stringhe in base alle convenzioni delle impostazioni cultura correnti.Se viene specificata l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant" />, vengono utilizzate le convenzioni delle impostazioni cultura inglese.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Consente un comportamento conforme a ECMAScript per l'espressione.Questo valore può essere utilizzato soltanto in combinazione con i valori <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" /> e <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" />.L'utilizzo di questo valore con qualsiasi altro valore determina un'eccezione.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Specifica che le uniche acquisizioni valide sono i gruppi denominati o numerati in modo esplicito di formato (?&lt;nome&gt;…).In questo modo, le parentesi non denominate possono fungere da gruppi non di acquisizione facendo a meno delle poco eleganti espressioni (?:…).</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Specifica una corrispondenza che non fa distinzione tra maiuscole e minuscole.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Elimina gli spazi vuoti non di escape dal criterio e consente i commenti contrassegnati da #.Tuttavia, il valore <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace" /> non influisce o elimina lo spazio vuoto nelle classi di caratteri</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Modalità multiriga.Modifica il significato dei simboli ^ e $ in modo che corrispondano rispettivamente all'inizio e alla fine di qualsiasi riga e non solo dell'intera stringa.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Specifica che non sono state impostate opzioni.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Specifica che la ricerca avverrà da destra a sinistra anziché da sinistra a destra.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Specifica la modalità a riga singola.Modifica il significato del punto (.) in modo che corrisponda a ogni carattere (anziché a ogni carattere eccetto \n).</summary>
    </member>
    <member name="T:System.Threading.Barrier">
      <summary>Consente a più attività di funzionare cooperativamente in un algoritmo in parallelo tramite più fasi.</summary>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Barrier" />.</summary>
      <param name="participantCount">Numero di thread che partecipano.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> è minore di zero o maggiore di 32,767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Barrier" />.</summary>
      <param name="participantCount">Numero di thread che partecipano.</param>
      <param name="postPhaseAction">
        <see cref="T:System.Action`1" /> da eseguire dopo ogni fase. null (Nothing in Visual Basic) può essere passato per indicare che non viene intrapresa alcuna azione.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> è minore di zero o maggiore di 32,767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipant">
      <summary>Notifica all'oggetto <see cref="T:System.Threading.Barrier" /> che sarà presente un partecipante aggiuntivo.</summary>
      <returns>Numero di fase della barriera in corrispondenza di cui parteciperanno inizialmente i nuovi partecipanti.</returns>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">L'aggiunta di un partecipante provocherebbe il superamento del conteggio del partecipante della barriera di 32.767.-oppure-Il metodo è stato richiamato dall'interno di un'azione post-fase.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipants(System.Int32)">
      <summary>Notifica all'oggetto <see cref="T:System.Threading.Barrier" /> che saranno presenti partecipanti aggiuntivi.</summary>
      <returns>Numero di fase della barriera in corrispondenza di cui parteciperanno inizialmente i nuovi partecipanti.</returns>
      <param name="participantCount">Numero di partecipanti aggiuntivi da aggiungere alla barriera.</param>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> è minore di 0.-oppure-L'aggiunta di partecipanti <paramref name="participantCount" /> provocherebbe il superamento del conteggio del partecipante della barriera di 32.767.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo è stato richiamato dall'interno di un'azione post-fase.</exception>
    </member>
    <member name="P:System.Threading.Barrier.CurrentPhaseNumber">
      <summary>Ottiene il numero di fase corrente della barriera.</summary>
      <returns>Restituisce il numero di fase corrente della barriera.</returns>
    </member>
    <member name="M:System.Threading.Barrier.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:System.Threading.Barrier" />.</summary>
      <exception cref="T:System.InvalidOperationException">Il metodo è stato richiamato dall'interno di un'azione post-fase.</exception>
    </member>
    <member name="M:System.Threading.Barrier.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Threading.Barrier" /> ed eventualmente rilascia le risorse gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantCount">
      <summary>Ottiene il numero totale di partecipanti nella barriera.</summary>
      <returns>Restituisce il numero totale di partecipanti nella barriera.</returns>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantsRemaining">
      <summary>Ottiene il numero di partecipanti nella barriera che non hanno ancora eseguito la segnalazione nella fase corrente.</summary>
      <returns>Restituisce il numero di partecipanti nella barriera che non hanno ancora eseguito la segnalazione nella fase corrente.</returns>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipant">
      <summary>Notifica all'oggetto <see cref="T:System.Threading.Barrier" /> che sarà presente un partecipante in meno.</summary>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">La barriera dispone già di 0 partecipanti.-oppure-Il metodo è stato richiamato dall'interno di un'azione post-fase.</exception>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
      <summary>Notifica all'oggetto <see cref="T:System.Threading.Barrier" /> che saranno presenti meno partecipanti.</summary>
      <param name="participantCount">Numero di partecipanti aggiuntivi da rimuovere dalla barriera.</param>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> è minore di 0.</exception>
      <exception cref="T:System.InvalidOperationException">La barriera dispone già di 0 partecipanti.-oppure-Il metodo è stato richiamato dall'interno di un'azione post-fase. -oppure-il conteggio del partecipante corrente è minore del conteggio del partecipante specificato</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il conteggio totale dei partecipanti è minore del <paramref name=" participantCount" /> specificato</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait">
      <summary>Segnala che un partecipante ha raggiunto l'oggetto <see cref="T:System.Threading.Barrier" /> e attende che venga raggiunto anche da tutti gli altri partecipanti.</summary>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</exception>
      <exception cref="T:System.BarrierPostPhaseException">Se un'eccezione viene generata da un'azione post-fase di una Barriera dopo che tutti thread che partecipano hanno chiamato SignalAndWait, l'eccezione verrà sottoposta a wrapping in un BarrierPostPhaseException e sarà generata su tutti i thread che partecipano.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
      <summary>Segnala che un partecipante ha raggiunto l'oggetto <see cref="T:System.Threading.Barrier" /> e attende che venga raggiunto anche da tutti gli altri partecipanti, utilizzando un intero con segno a 32 bit per misurare il timeout.</summary>
      <returns>true se tutti i partecipanti raggiungono la barriera entro il tempo specificato; in caso contrario, false.</returns>
      <param name="millisecondsTimeout">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1 che rappresenta un timeout indeterminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</exception>
      <exception cref="T:System.BarrierPostPhaseException">Se un'eccezione viene generata da un'azione post-fase di una Barriera dopo che tutti thread che partecipano hanno chiamato SignalAndWait, l'eccezione verrà sottoposta a wrapping in un BarrierPostPhaseException e sarà generata su tutti i thread che partecipano.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
      <summary>Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti, utilizzando un intero con segno a 32 bit per misurare il timeout, al contempo osservando un oggetto <see cref="T:System.Threading.CancellationToken" />.</summary>
      <returns>true se tutti i partecipanti raggiungono la barriera entro il tempo specificato; in caso contrario, false.</returns>
      <param name="millisecondsTimeout">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> è stato annullato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1 che rappresenta un timeout indeterminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
      <summary>Segnala che un partecipante ha raggiunto l'oggetto <see cref="T:System.Threading.Barrier" /> e attende che venga raggiunto anche da tutti gli altri partecipanti, al contempo osservando un oggetto <see cref="T:System.Threading.CancellationToken" />.</summary>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> è stato annullato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
      <summary>Segnala che un partecipante ha raggiunto l'oggetto <see cref="T:System.Threading.Barrier" /> e attende che venga raggiunto anche da tutti gli altri partecipanti, utilizzando un oggetto <see cref="T:System.TimeSpan" /> per misurare l'intervallo di tempo.</summary>
      <returns>true se tutti gli altri partecipanti hanno raggiunto la barriera. In caso contrario, false.</returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</param>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito, oppure è più grande di 32.767.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Segnala che un partecipante ha raggiunto l'oggetto <see cref="T:System.Threading.Barrier" /> e attende che venga raggiunto anche da tutti gli altri partecipanti, utilizzando un oggetto <see cref="T:System.TimeSpan" /> per misurare l'intervallo di tempo, al contempo osservando un oggetto <see cref="T:System.Threading.CancellationToken" />.</summary>
      <returns>true se tutti gli altri partecipanti hanno raggiunto la barriera. In caso contrario, false.</returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> è stato annullato.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza corrente è già stata eliminata.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</exception>
    </member>
    <member name="T:System.Threading.BarrierPostPhaseException">
      <summary>Eccezione generata quando l'azione post-fase di un oggetto <see cref="T:System.Threading.Barrier" /> non viene eseguita correttamente.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.BarrierPostPhaseException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.BarrierPostPhaseException" /> con l'eccezione interna specificata.</summary>
      <param name="innerException">Eccezione che è la causa di questa eccezione.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.BarrierPostPhaseException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione. È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.BarrierPostPhaseException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio in cui viene descritta l'eccezione. È necessario che il chiamante del costruttore assicuri che la stringa sia stata localizzata per le impostazioni cultura correnti del sistema. </param>
      <param name="innerException">Eccezione che è la causa di questa eccezione. Se il parametro <paramref name="innerException" /> non è null, l'eccezione corrente viene generata in un blocco catch in cui viene gestita l'eccezione interna. </param>
    </member>
    <member name="T:System.Threading.Semaphore">
      <summary>Limita il numero di thread che possono accedere a una risorsa o a un pool di risorse contemporaneamente. </summary>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Semaphore" />, specificando il numero massimo di accessi contemporanei e, facoltativamente, riservando alcuni di essi.</summary>
      <param name="initialCount">Numero iniziale delle richieste per il semaforo che possono essere concesse contemporaneamente.</param>
      <param name="maximumCount">Numero massimo delle richieste per il semaforo che possono essere concesse contemporaneamente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> è maggiore di <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> è minore di 1.-oppure-<paramref name="initialCount" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)">
      <summary>[CRITICO PER LA SICUREZZA] Inizializza una nuova istanza della classe <see cref="T:System.Threading.Semaphore" />, specificando il numero massimo di accessi contemporanei, riservando facoltativamente alcuni accessi per il thread chiamante e indicando eventualmente il nome di un oggetto semaforo di sistema.</summary>
      <param name="initialCount">Numero iniziale delle richieste per il semaforo che possono essere concesse contemporaneamente. </param>
      <param name="maximumCount">Numero massimo delle richieste per il semaforo che possono essere concesse contemporaneamente.</param>
      <param name="name">Nome di un oggetto semaforo di sistema denominato.</param>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)">
      <summary>[CRITICO PER LA SICUREZZA] Inizializza una nuova istanza della classe <see cref="T:System.Threading.Semaphore" />, specificando il numero massimo di accessi contemporanei, riservando facoltativamente alcuni accessi per il thread chiamante, indicando eventualmente il nome di un oggetto semaforo di sistema e specificando una variabile che riceve un valore che indica se è stato creato un nuovo semaforo di sistema.</summary>
      <param name="initialCount">Numero iniziale di richieste per il semaforo che possono essere soddisfatte contemporaneamente. </param>
      <param name="maximumCount">Numero massimo di richieste per il semaforo che possono essere soddisfatte contemporaneamente.</param>
      <param name="name">Nome di un oggetto semaforo di sistema denominato.</param>
      <param name="createdNew">Quando questo metodo viene restituito, contiene true se è stato creato un semaforo locale (ovvero, se il valore di <paramref name="name" /> è null o una stringa vuota) oppure se è stato creato il semaforo di sistema denominato specificato; false se il semaforo di sistema denominato specificato è già esistente. Questo parametro viene passato in forma non inizializzata.</param>
    </member>
    <member name="M:System.Threading.Semaphore.OpenExisting(System.String)">
      <summary>[CRITICO PER LA SICUREZZA] Apre il semaforo denominato specificato, se già esiste.</summary>
      <returns>Oggetto che rappresenta il semaforo di sistema denominato.</returns>
      <param name="name">Nome del semaforo di sistema da aprire.</param>
    </member>
    <member name="M:System.Threading.Semaphore.Release">
      <summary>Esce dal semaforo e restituisce il conteggio precedente.</summary>
      <returns>Conteggio del semaforo prima della chiamata del metodo <see cref="Overload:System.Threading.Semaphore.Release" />. </returns>
      <exception cref="T:System.Threading.SemaphoreFullException">Il conteggio del semaforo ha già raggiunto il valore massimo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore Win32 relativo a un semaforo denominato.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Il semaforo corrente rappresenta un semaforo di sistema denominato, ma l'utente non dispone di <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.-oppure-Il semaforo corrente rappresenta un semaforo di sistema denominato, ma non è stato aperto con <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.Release(System.Int32)">
      <summary>Esce dal semaforo il numero di volte specificato e restituisce il conteggio precedente.</summary>
      <returns>Conteggio del semaforo prima della chiamata del metodo <see cref="Overload:System.Threading.Semaphore.Release" />. </returns>
      <param name="releaseCount">Numero di uscite dal semaforo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="releaseCount" /> è minore di 1.</exception>
      <exception cref="T:System.Threading.SemaphoreFullException">Il conteggio del semaforo ha già raggiunto il valore massimo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore Win32 relativo a un semaforo denominato.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Il semaforo corrente rappresenta un semaforo di sistema denominato, ma l'utente non dispone di diritti <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.-oppure-Il semaforo corrente rappresenta un semaforo di sistema denominato, ma non è stato aperto con i diritti <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)">
      <summary>[CRITICO PER LA SICUREZZA] Apre il semaforo denominato specificato, se già esiste e restituisce un valore che indica se l'operazione è riuscita.</summary>
      <returns>true se il semaforo denominato è stato aperto correttamente; in caso contrario, false.</returns>
      <param name="name">Nome del semaforo di sistema da aprire.</param>
      <param name="result">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Threading.Semaphore" /> che rappresenta il semaforo denominato se la chiamata è riuscita oppure null se la chiamata non è riuscita. Questo parametro viene considerato come non inizializzato.</param>
    </member>
    <member name="T:System.Windows.Input.ICommand">
      <summary>Definisce il contratto per l'esecuzione di comandi.</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
      <summary>Definisce il metodo che determina se il comando può essere eseguito nello stato corrente.</summary>
      <returns>true se questo comando può essere eseguito; in caso contrario, false.</returns>
      <param name="parameter">Dati utilizzati dal comando. Se il comando non richiede dati da passare, questo oggetto può essere impostato su null. </param>
    </member>
    <member name="E:System.Windows.Input.ICommand.CanExecuteChanged">
      <summary>Si verifica quando vi sono delle modifiche che influiscono sull'esecuzione del comando.</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.Execute(System.Object)">
      <summary>Definisce il metodo da chiamare quando viene richiamato il comando.</summary>
      <param name="parameter">Dati utilizzati dal comando. Se il comando non richiede dati da passare, questo oggetto può essere impostato su null. </param>
    </member>
  </members>
</doc>