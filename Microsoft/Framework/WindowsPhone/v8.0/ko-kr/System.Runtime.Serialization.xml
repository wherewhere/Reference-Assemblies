<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.CollectionDataContractAttribute">
      <summary>컬렉션 형식에 적용된 경우 컬렉션 항목 요소를 사용자 지정할 수 있게 합니다.이 특성은 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 직렬화할 수 있는 유효한 컬렉션으로 인식된 형식에만 적용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.CollectionDataContractAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.CollectionDataContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
      <summary>개체 참조 데이터를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>표준 XML을 사용하여 개체 참조 데이터를 유지하려면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName">
      <summary>컬렉션 요소의 사용자 지정 이름을 가져오거나 설정합니다.</summary>
      <returns>컬렉션 요소에 적용할 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName">
      <summary>사전 키 이름의 사용자 지정 이름을 가져오거나 설정합니다.</summary>
      <returns>기본 사전 키 이름 대신 사용할 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name">
      <summary>컬렉션 형식의 데이터 계약 이름을 가져오거나 설정합니다.</summary>
      <returns>컬렉션 형식의 데이터 계약 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace">
      <summary>데이터 계약의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>데이터 계약의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName">
      <summary>사전 값 이름의 사용자 지정 이름을 가져오거나 설정합니다.</summary>
      <returns>기본 사전 값 이름 대신 사용할 이름입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ContractNamespaceAttribute">
      <summary>데이터 계약의 CLR 네임스페이스와 XML 네임스페이스를 지정합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)">
      <summary>지정된 네임스페이스를 사용하여 <see cref="T:System.Runtime.Serialization.ContractNamespaceAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="contractNamespace">계약의 네임스페이스입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace">
      <summary>데이터 계약 형식의 CLR 네임스페이스를 가져오거나 설정합니다. </summary>
      <returns>CLR에 적합한 형식 네임스페이스입니다. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace">
      <summary>데이터 계약 멤버의 네임스페이스를 가져옵니다.</summary>
      <returns>데이터 계약 멤버의 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractAttribute">
      <summary>형식이 데이터 계약을 정의하거나 구현하고 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 등의 직렬 변환기에서 직렬화될 수 있도록 지정합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
      <summary>개체 참조 데이터를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>표준 XML을 사용하여 개체 참조 데이터를 유지하려면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Name">
      <summary>형식의 데이터 계약 이름을 가져오거나 설정합니다.</summary>
      <returns>데이터 계약의 로컬 이름입니다.기본값은 특성이 적용되는 클래스의 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
      <summary>형식에 대한 데이터 계약의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>데이터 계약의 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary>직렬화 및 역직렬화하는 동안 xsi: type 표현과 형식 간을 동적으로 매핑하기 위한 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>이 메서드를 재정의하여 역직렬화하는 동안 지정된 xsi: type 이름 및 네임스페이스를 데이터 계약 형식에 매핑합니다.</summary>
      <returns>xsi: type 이름 및 네임스페이스가 매핑되는 형식입니다. </returns>
      <param name="typeName">매핑할 xsi:type 이름입니다.</param>
      <param name="typeNamespace">매핑할 xsi:type 네임스페이스입니다.</param>
      <param name="declaredType">데이터 계약에서 선언된 형식입니다.</param>
      <param name="knownTypeResolver">알려진 형식 확인자입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>이 메서드를 재정의하여 직렬화하는 동안 데이터 계약 형식을 xsi: type 이름 및 네임스페이스에 매핑합니다.</summary>
      <returns>매핑이 성공하는 경우 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="type">매핑할 형식입니다.</param>
      <param name="declaredType">데이터 계약에서 선언된 형식입니다.</param>
      <param name="knownTypeResolver">알려진 형식 확인자입니다.</param>
      <param name="typeName">xsi:type 이름입니다.</param>
      <param name="typeNamespace">xsi:type 네임 스페이스입니다.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>제공된 데이터 계약을 사용하여 형식 인스턴스를 XML 스트림 또는 문서로 직렬화 및 역직렬화합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 직렬화 또는 역직렬화합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체와 개체 그래프에 있을 수 있는 알려진 형식 컬렉션을 직렬화 또는 역직렬화합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
      <param name="knownTypes">개체 그래프에 있을 수 있는 형식이 포함된 <see cref="T:System.Type" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 직렬화 또는 역직렬화합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
      <param name="settings">serializer 설정입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 제공된 XML 루트 요소와 네임스페이스를 사용하는 지정된 형식의 개체를 직렬화 또는 역직렬화합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
      <param name="rootName">직렬화 또는 역직렬화할 콘텐츠를 묶는 XML 요소의 이름입니다.</param>
      <param name="rootNamespace">직렬화 또는 역직렬화할 콘텐츠를 묶는 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 직렬화 또는 역직렬화합니다.또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식 목록뿐 아니라 루트 XML 요소와 네임스페이스를 두 개의 문자열 매개 변수로 지정합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
      <param name="rootName">콘텐츠의 루트 요소 이름입니다.</param>
      <param name="rootNamespace">루트 요소의 네임스페이스입니다.</param>
      <param name="knownTypes">개체 그래프에 있을 수 있는 형식이 포함된 <see cref="T:System.Type" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 <see cref="T:System.Xml.XmlDictionaryString" /> 형식의 매개 변수를 통해 지정된 XML 루트 요소와 네임스페이스를 사용하는 지정된 형식의 개체를 직렬화 또는 역직렬화합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
      <param name="rootName">콘텐츠의 루트 요소 이름이 포함된 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="rootNamespace">루트 요소의 네임스페이스가 포함된 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 직렬화 또는 역직렬화합니다.또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식 목록뿐 아니라 루트 XML 요소와 네임스페이스를 두 개의 <see cref="T:System.Xml.XmlDictionaryString" /> 매개 변수로 지정합니다.</summary>
      <param name="type">직렬화 또는 역직렬화되는 인스턴스의 형식입니다.</param>
      <param name="rootName">콘텐츠의 루트 요소 이름이 포함된 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="rootNamespace">루트 요소의 네임스페이스가 포함된 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="knownTypes">개체 그래프에 있을 수 있는 알려진 형식이 포함된 <see cref="T:System.Type" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>클래스를 직렬화 또는 역직렬화 중인 경우 클래스 확장에서 제공하는 데이터를 무시할지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>확장 데이터를 생략하려면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />가 역직렬화할 수 있는 개체에 배치되어 있는지 확인합니다.</summary>
      <returns>판독기가 읽을 스트림의 시작 요소에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="reader">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 역직렬화할 수 있는 개체에 배치되어 있는지 확인합니다.</summary>
      <returns>판독기가 읽을 스트림의 시작 요소에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="reader">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>이 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 인스턴스를 사용하여 직렬화된 개체 그래프에 있을 수 있는 형식 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 생성자에 알려진 형식으로 전달되는 예상 형식이 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>개체 그래프에서 직렬화 또는 역직렬화할 최대 항목 수를 가져옵니다.</summary>
      <returns>직렬화 또는 역직렬화할 최대 항목 수입니다.여기에서 기본값은 <see cref="F:System.Int32.MaxValue" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">항목 수가 최대값을 초과하는 경우</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>비표준 XML 구문을 사용하여 개체 참조 데이터를 유지할지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>참조를 유지하려면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림을 읽고 역직렬화된 개체를 반환하며, 값을 읽기 전에 개체 이름을 확인하기 위해 검사할지 여부도 지정합니다. </summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <param name="verifyObjectName">개체 이름이 생성자에 제공된 루트 이름 값에 해당하는지 여부를 확인하려면 true이고, 그렇지 않으면 false입니다. </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="verifyObjectName" /> 매개 변수가 true로 설정되고 요소 이름과 네임스페이스가 생성자에 설정된 값에 해당하지 않는 경우 </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 스트림을 읽고 역직렬화된 개체를 반환합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 스트림을 읽고 역직렬화된 개체를 반환하며, 값을 읽기 전에 개체 이름을 확인하기 위해 검사할지 여부도 지정합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="verifyObjectName">개체 이름이 생성자에 제공된 루트 이름 값에 해당하는지 여부를 확인하려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="verifyObjectName" /> 매개 변수가 true로 설정되고 요소 이름과 네임스페이스가 생성자에 설정된 값에 해당하지 않는 경우 </exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary>읽기 전용 형식이 직렬화되는지 여부를 지정하는 값을 가져옵니다..</summary>
      <returns>읽기 전용 형식이 serialize되면 true이고 모든 형식이 serialize되면 false입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 닫는 XML 요소를 씁니다.</summary>
      <param name="writer">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">작성 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 닫는 XML 요소를 작성합니다.</summary>
      <param name="writer">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">작성 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 모든 개체 데이터(시작 XML 요소, 콘텐츠 및 닫는 요소)를 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph">스트림에 쓸 데이터가 포함된 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">작성 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 XML 콘텐츠를 씁니다.</summary>
      <param name="writer">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph">스트림에 쓸 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">작성 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 콘텐츠를 씁니다.</summary>
      <param name="writer">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph">스트림에 쓸 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">작성 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 여는 XML 요소를 씁니다.</summary>
      <param name="writer">XML 시작 요소를 작성하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph">작성할 개체입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 여는 XML 요소를 작성합니다.</summary>
      <param name="writer">XML 시작 요소를 작성하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph">작성할 개체입니다.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary>데이터 계약 serializer 설정을 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary>xsi:type 선언을 알려진 계약 형식에 동적으로 매핑하는 데 사용되는 구성 요소를 가져오거나 설정합니다.</summary>
      <returns>xsi:type 선언을 알려진 계약 형식에 동적으로 매핑하는 데 사용되는 구성 요소입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary>이 DataContractSerializerSettings 인스턴스를 사용하여 직렬화된 개체 그래프에 있을 수 있는 형식 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>이 DataContractSerializerSettings 인스턴스를 사용하여 직렬화된 개체 그래프에 있을 수 있는 형식 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary>개체 그래프에서 직렬화 또는 역직렬화할 최대 항목 수를 가져오거나 설정합니다.</summary>
      <returns>개체 그래프에서 직렬화 또는 역직렬화할 최대 항목 수입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary>비표준 XML 구문을 사용하여 개체 참조 데이터를 유지할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 True이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary>선택한 개체의 루트 이름을 가져오거나 설정합니다.</summary>
      <returns>선택한 개체의 루트 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary>지정된 개체의 루트 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>지정된 개체의 루트 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary>읽기 전용 형식만 직렬화할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>읽기 전용 형식만 직렬화하려면 True이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataMemberAttribute">
      <summary>형식의 멤버에 적용된 경우 멤버가 데이터 계약에 포함되고 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 직렬화될 수 있도록 지정합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataMemberAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataMemberAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.EmitDefaultValue">
      <summary>직렬화 중인 필드 또는 속성의 기본값을 직렬화할지 여부를 지정하는 값을 가져오거나 설정합니다. </summary>
      <returns>serialization 스트림에서 멤버의 기본값을 생성해야 하면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.IsRequired">
      <summary>멤버를 역직렬화 중인 경우 직렬화된 데이터에 해당 멤버가 있어야 하는지 여부를 serialization 엔진에 지시하는 값을 가져오거나 설정합니다.</summary>
      <returns>멤버가 필요하면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">멤버가 없거나, 멤버가 있지만 기본값을 포함하고 <see cref="P:System.Runtime.Serialization.DataMemberAttribute.EmitDefaultValue" />가 true로 설정된 경우</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Name">
      <summary>데이터 멤버 이름을 가져오거나 설정합니다. </summary>
      <returns>데이터 멤버의 이름입니다.지정된 형식의 데이터 멤버에 대한 데이터 계약의 기본 이름은 해당 형식의 CLR 멤버입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Order">
      <summary>멤버의 직렬화 및 역직렬화 순서를 가져오거나 설정합니다.</summary>
      <returns>직렬화 또는 역직렬화의 숫자 순서입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EnumMemberAttribute">
      <summary>필드가 열거형 멤버이며 직렬화되도록 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.EnumMemberAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.EnumMemberAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.EnumMemberAttribute.Value">
      <summary>특성이 적용되는 열거형 멤버와 연결된 값을 가져오거나 설정합니다.</summary>
      <returns>열거형 멤버와 연결된 값입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.IgnoreDataMemberAttribute">
      <summary>형식의 멤버에 적용된 경우 멤버가 데이터 계약에 포함되지 않고 직렬화되지 않도록 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.Runtime.Serialization.InvalidDataContractException">
      <summary>직렬화 및 역직렬화 중에 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 잘못된 데이터 계약이 발생하는 경우 발생되는 예외입니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="message">오류에 대한 설명입니다. </param>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 내부 예외를 사용하여 <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="message">오류에 대한 설명입니다. </param>
      <param name="innerException">원래 <see cref="T:System.Exception" />입니다. </param>
    </member>
    <member name="T:System.Runtime.Serialization.KnownTypeAttribute">
      <summary>지정된 형식을 직렬화 또는 역직렬화할 때 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 인식되어야 하는 형식을 지정합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
      <summary>알려진 형식의 <see cref="T:System.Collections.IEnumerable" />을 반환하는 메서드 이름을 사용하여 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="methodName">데이터를 직렬화 또는 역직렬화할 때 사용되는 형식의 <see cref="T:System.Collections.IEnumerable" />을 반환하는 메서드 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
      <summary>지정된 형식을 사용하여 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="type">데이터를 직렬화 또는 역직렬화할 때 알려진 형식으로 포함되는 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
      <summary>직렬화 또는 역직렬화 중에 인식되어야 하는 형식 목록을 반환하는 메서드의 이름을 가져옵니다. </summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 클래스에서 정의된 형식의 메서드 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
      <summary>직렬화 또는 역직렬화 중에 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 인식되어야 하는 형식을 가져옵니다. </summary>
      <returns>직렬화 또는 역직렬화 중에 사용되는 <see cref="T:System.Type" />입니다. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>개체를 XML 스트림 또는 문서로 직렬화하는 데 사용되는 기본 클래스를 제공합니다.이것은 추상 클래스입니다.</summary>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우 </exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />가 읽을 수 있는 XML 요소에 배치되어 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>판독기가 데이터를 읽을 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="reader">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 읽을 수 있는 XML 요소에 배치되어 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>판독기가 시작 요소에 배치되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="reader">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>
        <see cref="T:System.IO.Stream" />을 사용하여 XML 스트림 또는 문서를 읽고 역직렬화된 개체를 반환합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="stream">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 문서 또는 스트림을 읽고 역직렬화된 개체를 반환합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>파생 클래스에 구현된 경우 <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림 또는 문서를 읽고 역직렬화된 개체를 반환합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <param name="verifyObjectName">바깥쪽 XML 요소 이름 및 네임스페이스가 루트 이름 및 루트 네임스페이스에 해당하는지 여부를 확인하려면 true이고 확인을 건너뛰려면 false입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 문서 또는 스트림을 읽고 역직렬화된 개체를 반환합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 문서 또는 스트림을 읽고 역직렬화된 개체를 반환합니다.또한 직렬화가 데이터를 읽기 전에 읽기 허용 여부를 지정할 수 있게 합니다.</summary>
      <returns>역직렬화된 개체입니다.</returns>
      <param name="reader">XML 문서 또는 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="verifyObjectName">바깥쪽 XML 요소 이름 및 네임스페이스가 루트 이름 및 루트 네임스페이스에 해당하는지 여부를 확인하려면 true이고, 확인을 건너뛰려면 false입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 개체 데이터의 끝을 닫는 XML 요소로 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 개체 데이터의 끝을 닫는 XML 요소로 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>지정된 <see cref="T:System.IO.Stream" />을 사용하여 개체의 전체 콘텐츠(시작, 콘텐츠 및 끝)를 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="stream">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="graph">스트림에 쓸 데이터가 포함된 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />을 사용하여 개체의 전체 콘텐츠(시작, 콘텐츠 및 끝)를 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림에 콘텐츠를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph">쓸 콘텐츠가 포함된 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlWriter" />을 사용하여 개체의 전체 콘텐츠(시작, 콘텐츠 및 끝)를 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph">쓸 콘텐츠가 포함된 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 개체의 콘텐츠만 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph">쓸 콘텐츠가 포함된 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 개체의 콘텐츠만 XML 문서 또는 스트림에 씁니다.</summary>
      <param name="writer">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph">쓸 콘텐츠가 포함된 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 개체 데이터의 시작 부분을 여는 XML 요소로 작성합니다.</summary>
      <param name="writer">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph">직렬화할 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 개체 데이터의 시작 부분을 여는 XML 요소로 작성합니다.</summary>
      <param name="writer">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph">직렬화할 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">직렬화 중인 형식이 데이터 계약 규칙을 준수하지 않는 경우.예를 들어 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우입니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">직렬화 중인 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">직렬화할 최대 개체 수를 초과한 경우.<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인하세요.</exception>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> 및 <see cref="T:System.Xml.XmlDictionaryWriter" /> 구현에서 사용되기 위해 XML 사전이 구현해야 하는 계약을 정의하는 인터페이스입니다.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>사전에서 항목을 조회하려는 시도입니다.</summary>
      <returns>
        <paramref name="key" />가 사전에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">확인할 키입니다.</param>
      <param name="result">
        <paramref name="key" />가 <see cref="T:System.Xml.IXmlDictionary" />에 있으면 키에 매핑되는 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>사전에서 지정된 문자열 값을 확인합니다.</summary>
      <returns>
        <paramref name="value" />가 사전에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">확인할 문자열입니다.</param>
      <param name="result">
        <paramref name="value" />가 <see cref="T:System.Xml.IXmlDictionary" />에 있으면 키에 매핑되는 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>사전에서 지정된 <see cref="T:System.Xml.XmlDictionaryString" />을 확인합니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" />이 사전에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">확인 중인 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="result">
        <paramref name="value" />가 <see cref="T:System.Xml.IXmlDictionary" />에 있으면 키에 매핑되는 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>GUID에 대해 최적화된 고유 식별자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>새로운 고유 GUID를 사용하여 <see cref="T:System.Xml.UniqueId" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>
        <see cref="T:System.Guid" />를 나타내는 바이트 배열을 사용하여 <see cref="T:System.Xml.UniqueId" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="guid">
        <see cref="T:System.Guid" />를 나타내는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" />이 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" />가 제공하는 유효한 바이트 수가 16보다 작은 경우</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>
        <see cref="T:System.Guid" />를 나타내는 바이트 배열 내의 오프셋에서 시작하는 <see cref="T:System.Xml.UniqueId" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="guid">
        <see cref="T:System.Guid" />를 나타내는 바이트 배열입니다.</param>
      <param name="offset">
        <see cref="T:System.Guid" />를 나타내는 바이트 배열 내의 오프셋 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 배열의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> 및 <paramref name="offset" />이 제공하는 유효한 바이트 수가 16보다 작은 경우</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>지정된 항목 수를 사용하여 char 내의 오프셋에서 시작하는 이 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="chars">
        <see cref="T:System.Guid" />를 나타내는 char 배열입니다.</param>
      <param name="offset">
        <see cref="T:System.Guid" />를 나타내는 char 배열 내의 오프셋 위치입니다.</param>
      <param name="count">
        <paramref name="offset" />에서 시작하여, 사용할 배열 항목 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 배열의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 배열의 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="count" />가 0인 경우</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>
        <see cref="T:System.Guid" />를 사용하여 <see cref="T:System.Xml.UniqueId" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="guid">
        <see cref="T:System.Guid" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" />가 null입니다.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>문자열을 사용하여 <see cref="T:System.Xml.UniqueId" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="value">
        <see cref="T:System.Xml.UniqueId" />를 생성하는 데 사용되는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null입니다.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" />의 길이가 0인 경우</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>
        <see cref="T:System.Xml.UniqueId" />의 문자열 표현 길이를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" />의 문자열 표현 길이입니다.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>개체가 이 <see cref="T:System.Xml.UniqueId" />와 같은지 여부를 테스트합니다.</summary>
      <returns>개체가 이 <see cref="T:System.Xml.UniqueId" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">비교할 개체입니다.</param>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>이 <see cref="T:System.Xml.UniqueId" />의 해시 코드 표현을 만듭니다.</summary>
      <returns>이 <see cref="T:System.Xml.UniqueId" />의 정수 해시 코드 표현입니다.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>
        <see cref="T:System.Xml.UniqueId" />가 <see cref="T:System.Guid" />인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" />가 <see cref="T:System.Guid" />이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>같음 연산자를 재정의하여 두 <see cref="T:System.Xml.UniqueId" /> 개체가 같은지 여부를 테스트합니다.</summary>
      <returns>두 <see cref="T:System.Xml.UniqueId" />가 같거나 모두 null이면 true이고, 서로 같지 않거나 하나가 null이면 false입니다.</returns>
      <param name="id1">첫 번째 <see cref="T:System.Xml.UniqueId" />입니다.</param>
      <param name="id2">두 번째 <see cref="T:System.Xml.UniqueId" />입니다.</param>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>같음 연산자를 재정의하여 두 <see cref="T:System.Xml.UniqueId" />가 다른지 여부를 테스트합니다.</summary>
      <returns>재정의된 같음 연산자가 false를 반환하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="id1">첫 번째 <see cref="T:System.Xml.UniqueId" />입니다.</param>
      <param name="id2">두 번째 <see cref="T:System.Xml.UniqueId" />입니다.</param>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> 값을 char 배열에 넣습니다.</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" /> 값으로 채워진 char 배열의 항목 수입니다.</returns>
      <param name="chars">char 배열입니다.</param>
      <param name="offset">
        <see cref="T:System.Xml.UniqueId" /> 값 삽입을 시작할 char 배열 내의 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 배열의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid " /> 및 <paramref name=" offset" />이 제공하는 유효한 바이트 수가 16보다 작은 경우</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> 값을 문자열 형식으로 표시합니다.</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> 값을 <see cref="T:System.Guid" />로 가져오고 지정된 오프셋에서 지정된 바이트 배열에 저장하려고 합니다.</summary>
      <returns>이 <see cref="T:System.Xml.UniqueId" /> 인스턴스에 저장된 값이 <see cref="T:System.Guid" />이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="buffer">
        <see cref="T:System.Guid" />가 포함될 바이트 배열입니다.</param>
      <param name="offset">
        <see cref="T:System.Guid" /> 값 삽입을 시작할 바이트 배열 내의 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 배열의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> 및 <paramref name="offset" />이 제공하는 유효한 바이트 수가 16보다 작은 경우</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> 값을 <see cref="T:System.Guid" />로 가져오려고 합니다.</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" />가 <see cref="T:System.Guid" />이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="guid">성공하면 <see cref="T:System.Guid" />이고, 그렇지 않으면 <see cref="F:System.Guid.Empty" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> 및 <paramref name="offset" />이 제공하는 유효한 바이트 수가 16보다 작은 경우</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>최적화된 문자열을 동적 방식으로 관리할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>입력 매개 변수에서 <see cref="T:System.Xml.XmlDictionaryString" />을 만들고 내부 컬렉션에 추가합니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" />이 발생합니다.</returns>
      <param name="id">키 값입니다.</param>
      <param name="value">값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">키 = <paramref name="id" />인 항목이 이미 있는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>모든 콘텐츠의 내부 컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>내부 컬렉션에 지정된 키를 가진 항목이 포함되어 있는지 확인합니다.</summary>
      <returns>
        <paramref name="key" />와 일치하는 항목이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">일치시킬 키입니다.</param>
      <param name="result">해당 항목을 찾으면 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>내부 컬렉션에 지정된 문자열 값을 가진 항목이 포함되어 있는지 확인합니다.</summary>
      <returns>
        <paramref name="value" />와 일치하는 항목이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">일치시킬 문자열 값입니다.</param>
      <param name="result">해당 항목을 찾으면 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>내부 컬렉션에 지정된 항목이 포함되어 있는지 확인합니다.</summary>
      <returns>
        <paramref name="value" />와 일치하는 항목이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">일치시킬 값입니다.</param>
      <param name="result">해당 항목을 찾으면 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>동적 사전을 사용하여 메시지에 표시되는 일반 문자열을 압축하고 상태를 유지 관리할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>
        <see cref="T:System.Xml.XmlBinaryWriterSession" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>내부 컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>내부 컬렉션에 <see cref="T:Sytem.Xml.XmlDictionaryString" />을 추가하려고 합니다.</summary>
      <returns>예외가 발생되지 않았으면 true입니다.</returns>
      <param name="value">추가할 <see cref="T:Sytem.Xml.XmlDictionaryString" />입니다.</param>
      <param name="key">추가된 <see cref="T:Sytem.Xml.XmlDictionaryString" />의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">키 = <paramref name="key" />인 항목이 이미 있는 경우</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Windows Phone의 XML 판독기/작성기 구현을 최적화하는 데 사용되는 사전을 구현합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>빈 <see cref="T:System.Xml.XmlDictionary" />를 만듭니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>초기 용량으로 <see cref="T:System.Xml.XmlDictionary" />를 만듭니다.</summary>
      <param name="capacity">사전의 초기 크기입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>
        <see cref="T:System.Xml.XmlDictionary" />에 문자열을 추가합니다.</summary>
      <returns>추가된 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</returns>
      <param name="value">사전에 추가할 문자열입니다.</param>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>빈 static<see cref="T:System.Xml.IXmlDictionary" />를 가져옵니다.</summary>
      <returns>빈 static<see cref="T:System.Xml.IXmlDictionary" />입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>사전에서 항목을 조회하려는 시도입니다.</summary>
      <returns>키가 XML 사전에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">조회할 키입니다.</param>
      <param name="result">
        <paramref name="key" />가 <see cref="T:System.Xml.XmlDictionary" />에 있으면 키에 매핑되는 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>사전에서 지정된 문자열 값을 확인합니다.</summary>
      <returns>값이 <see cref="T:System.Xml.XmlDictionary" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">확인 중인 문자열 값입니다.</param>
      <param name="result">
        <paramref name="value" />가 <see cref="T:System.Xml.XmlDictionary" />에 있으면 키에 매핑되는 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>사전에서 지정된 <see cref="T:System.Xml.XmlDictionaryString" />을 확인합니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" />이 사전에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">확인 중인 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="result">
        <paramref name="value" />가 <see cref="T:System.Xml.XmlDictionary" />에 있으면 키에 매핑되는 <see cref="T:System.Xml.XmlDictionaryString" />이고, 그렇지 않으면 null입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null입니다.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>
        <see cref="T:System.Xml.XmlReader" />에 일부 직렬화 및 역직렬화 기능을 추가로 제공하는 abstractWindows Phone 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>이 기본 클래스에서 파생된 비추상 클래스로 구현된 경우 해당 파생 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>이 속성은 항상 false를 반환합니다. 정규화를 지원하는 경우 파생 클래스에서 재정의하여 true를 반환할 수 있습니다.</summary>
      <returns>false를 반환합니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="offset">읽기를 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="count">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="dictionary">사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 버퍼 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 버퍼 길이에서 오프셋을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> 클래스의 인스턴스입니다.</returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="offset">읽기를 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="count">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="dictionary">사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <param name="session">판독기에서 사용되는 <see cref="T:System.Xml.XmlBinaryReaderSession" />의 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 버퍼 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 버퍼 길이에서 오프셋을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="offset">읽기를 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="count">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 버퍼 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 버퍼 길이에서 오프셋을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="stream">읽을 스트림입니다.</param>
      <param name="dictionary">사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 또는 <paramref name="quotas" />가 null입니다.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="stream">읽을 스트림입니다.</param>
      <param name="dictionary">사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <param name="session">판독기에서 사용되는 <see cref="T:System.Xml.XmlBinaryReaderSession" />의 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET 이진 XML 형식을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="stream">읽을 스트림입니다.</param>
      <param name="quotas">이 작업에 적용되는 할당량입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>기존 <see cref="T:System.Xml.XmlReader" />에서 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />의 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="offset">읽기를 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="count">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="quotas">판독기에 적용되는 할당량입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="quotas">판독기에 적용되는 할당량입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
      <param name="stream">읽을 스트림입니다.</param>
      <param name="quotas">판독기에 적용되는 할당량입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>이 메서드는 이 기본 클래스에서 지원되지 않으며 파생 클래스에서 구현될 수 있습니다.</summary>
      <exception cref="T:System.NotSupportedException">이 메서드가 이 기본 클래스에서 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>파생 클래스에서 재정의된 경우 특성의 값을 가져옵니다.</summary>
      <returns>특성 값입니다.</returns>
      <param name="localName">특성의 로컬 이름을 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="namespaceUri">특성의 네임스페이스를 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>이름 배열 내에서 현재 노드의 로컬 이름 인덱스를 가져옵니다.</summary>
      <returns>이름 배열 내에서 현재 노드의 로컬 이름 인덱스입니다.</returns>
      <param name="localNames">검색할 로컬 이름의 문자열 배열입니다.</param>
      <param name="namespaceUri">현재 노드의 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> 또는 배열에 포함된 이름 중 하나가 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>이름 배열 내에서 현재 노드의 로컬 이름 인덱스를 가져옵니다.</summary>
      <returns>이름 배열 내에서 현재 노드의 로컬 이름 인덱스입니다.</returns>
      <param name="localNames">검색할 로컬 이름의 <see cref="T:System.Xml.XmlDictionaryString" /> 배열입니다.</param>
      <param name="namespaceUri">현재 노드의 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> 또는 배열에 포함된 이름 중 하나가 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>
        <paramref name="localName" /> 매개 변수가 현재 노드의 로컬 이름인지 확인합니다.</summary>
      <returns>
        <paramref name="localName" />이 현재 노드의 로컬 이름과 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="localName">현재 노드의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>
        <paramref name="localName" /> 매개 변수가 현재 노드의 로컬 이름인지 확인합니다.</summary>
      <returns>
        <paramref name="localName" />이 현재 노드의 로컬 이름과 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="localName">현재 노드의 로컬 이름을 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>
        <paramref name="namespaceUri" /> 매개 변수가 현재 노드의 네임스페이스인지 확인합니다.</summary>
      <returns>
        <paramref name="namespaceUri" />가 현재 노드의 네임스페이스와 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="namespaceUri">현재 노드의 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>
        <paramref name="namespaceUri" /> 매개 변수가 현재 노드의 네임스페이스인지 확인합니다.</summary>
      <returns>
        <paramref name="namespaceUri" />가 현재 노드의 네임스페이스와 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="namespaceUri">현재 노드의 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>판독기가 배열의 시작 부분에 배치되어 있는지 확인합니다. 이 클래스는 false를 반환하지만 배열 개념을 사용하는 파생 클래스에서는 true가 반환될 수도 있습니다.</summary>
      <returns>판독기가 배열 노드의 시작 부분에 배치되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="type">유효한 노드인 경우 노드의 형식이고, 그렇지 않으면 null입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>첫 번째 요소가 시작 요소인지 또는 빈 요소인지를 테스트하고 로컬 이름 및 네임스페이스 URI가 현재 노드와 일치하는지 여부를 테스트합니다.</summary>
      <returns>배열의 첫 번째 요소가 시작 요소이거나 빈 요소이고 <paramref name="localName" /> 및 <paramref name="namespaceUri" />와 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="localName">특성의 로컬 이름을 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="namespaceUri">특성의 네임스페이스를 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>현재 노드가 텍스트 노드인지 여부를 테스트합니다.</summary>
      <returns>노드 형식이 <see cref="F:System.Xml.XmlNodetype.Text" />, <see cref="F:System.Xml.XmlNodetype.Whitespace" />, <see cref="F:System.Xml.XmlNodetype.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodetype.CDATA" /> 또는 <see cref="F:System.Xml.XmlNodetype.Attribute" />이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="nodeType">테스트 중인 노드의 형식입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>현재 콘텐츠 노드가 시작 요소인지 여부를 테스트합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>현재 콘텐츠 노드가 시작 요소인지 여부 및 요소의 <see cref="P:System.Xml.XmlReader.Name" /> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</summary>
      <param name="name">요소의 <see cref="P:System.Xml.XmlReader.Name" /> 속성입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>현재 콘텐츠 노드가 시작 요소인지 여부 및 요소의 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</summary>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>현재 콘텐츠 노드가 시작 요소인지 여부 및 요소의 <see cref="P:System.Xml.XmlReader.LocalName" /> 및 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</summary>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>이 판독기 클래스의 현재 인스턴스에 적용되는 할당량 값을 가져옵니다.</summary>
      <returns>반환 값: <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /></returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Boolean" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 로컬 이름입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Decimal" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Double" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>정수(short)의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 정수 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">정수를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 정수 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>정수의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 정수 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">정수를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 정수 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>정수(long)의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 정수 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">정수를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 정수 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>숫자(float)의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 숫자(Float) 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">숫자(Float)를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 숫자(Float) 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Boolean" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Decimal" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Double" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>정수(short)의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 정수 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">정수를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 정수 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>정수의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 정수 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">정수를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 정수 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>정수(long)의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 정수 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">정수를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 정수 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>숫자(float)의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 숫자(Float) 개수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">숫자(Float)를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 숫자(Float) 개수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>배열에 넣을 노드 수입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>
        <see cref="T:System.Boolean" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 노드의 <see cref="T:System.Boolean" /> 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>
        <see cref="T:System.Boolean" /> 노드의 반복 발생을 형식화된 배열로 읽어옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 노드의 <see cref="T:System.Boolean" /> 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>노드 콘텐츠를 지정된 형식으로 변환합니다.</summary>
      <returns>요청된 형식으로 변환된 특성 값 또는 연결된 텍스트 콘텐츠입니다.</returns>
      <param name="type">반환할 값의 <see cref="T:System.Type" />입니다.</param>
      <param name="namespaceResolver">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 개체입니다. 예를 들어 <see cref="T:System.Xml.XmlQualifiedName" /> 개체를 xs:string으로 변환할 때 이 개체를 사용할 수 있습니다. 이 값은 null 참조일 수 있습니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>내용을 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</summary>
      <returns>Base64 디코딩된 이진 바이트가 포함된 <see cref="T:System.Byte" /> 배열입니다.</returns>
      <exception cref="T:System.Xml.XmlException">배열 크기가 이 판독기에 대한 MaxArrayLength 할당량보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>콘텐츠를 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</summary>
      <returns>BinHex 디코딩된 이진 바이트가 포함된 바이트 배열입니다.</returns>
      <exception cref="T:System.Xml.XmlException">배열 크기가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>콘텐츠를 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</summary>
      <returns>BinHex 디코딩된 이진 바이트가 포함된 바이트 배열입니다.</returns>
      <param name="maxByteArrayContentLength">최대 배열 길이입니다.</param>
      <exception cref="T:System.Xml.XmlException">배열 크기가 <paramref name="maxByteArrayContentLength" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>콘텐츠를 char 배열로 읽어옵니다.</summary>
      <returns>읽은 문자 수입니다.</returns>
      <param name="chars">문자를 넣을 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에 넣을 문자 수입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>노드 콘텐츠를 decimal로 변환합니다.</summary>
      <returns>decimal로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>노드 콘텐츠를 float로 변환합니다.</summary>
      <returns>float로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>노드 콘텐츠를 guid로 변환합니다.</summary>
      <returns>guid로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>노드 콘텐츠를 정규화된 이름 표현으로 변환합니다.</summary>
      <param name="localName">정규화된 이름의 <see cref="P:System.Xml.XmlReader.LocalName" /> 부분(out 매개 변수)입니다.</param>
      <param name="namespaceUri">정규화된 이름의 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 부분(out 매개 변수)입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>노드 콘텐츠를 문자열로 변환합니다.</summary>
      <returns>문자열로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>노드 콘텐츠를 문자열로 변환합니다.</summary>
      <returns>문자열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="maxStringContentLength">최대 문자열 길이입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>노드 콘텐츠를 문자열로 변환합니다.</summary>
      <returns>문자열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="strings">콘텐츠를 일치시킬 문자열 배열입니다.</param>
      <param name="index">콘텐츠와 일치하는 <paramref name="strings" />의 항목 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" />의 항목이 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>노드 콘텐츠를 문자열로 변환합니다.</summary>
      <returns>문자열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="strings">콘텐츠를 일치시킬 <see cref="T:System.Xml.XmlDictionaryString" /> 개체 배열입니다.</param>
      <param name="index">콘텐츠와 일치하는 <paramref name="strings" />의 항목 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" />의 항목이 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>노드 콘텐츠를 <see cref="T:System.TimeSpan" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />으로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>노드 콘텐츠를 고유 식별자로 변환합니다.</summary>
      <returns>고유 식별자로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>노드 콘텐츠를 <see cref="T:System.DateTime" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 배열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>노드 콘텐츠를 <see cref="T:System.DateTime" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 배열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>노드 콘텐츠를 <see cref="T:System.DateTime" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Decimal" /> 배열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>노드 콘텐츠를 <see cref="T:System.DateTime" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Decimal" /> 배열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>노드 콘텐츠를 <see cref="T:System.DateTime" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Double" /> 배열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>노드 콘텐츠를 <see cref="T:System.DateTime" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Double" /> 배열로 표현된 노드 콘텐츠입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>노드 콘텐츠를 Base6 바이트 배열로 변환합니다.</summary>
      <returns>반환 값: <see cref="T:System.Byte" /></returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>노드 콘텐츠를 BinHex 바이트 배열로 변환합니다.</summary>
      <returns>반환 값: <see cref="T:System.Byte" /></returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>요소 콘텐츠를 <see cref="T:System.Boolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />으로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>요소 콘텐츠를 <see cref="T:System.DateTime" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.DateTime" />으로 표현된 노드 콘텐츠입니다.</returns>
      <exception cref="T:System.ArgumentException">요소가 유효한 형식이 아닌 경우</exception>
      <exception cref="T:System.FormatException">요소가 유효한 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>요소 콘텐츠를 <see cref="T:System.Decimal" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Decimal" />으로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>요소 콘텐츠를 <see cref="T:System.Double" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Double" />으로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>요소 콘텐츠를 부동 소수점 숫자(<see cref="T:System.Single" />)로 변환합니다.</summary>
      <returns>부동 소수점 숫자(<see cref="T:System.Single" />)로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>요소 콘텐츠를 <see cref="T:System.Guid" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Guid" />으로 표현된 노드 콘텐츠입니다.</returns>
      <exception cref="T:System.ArgumentException">요소가 유효한 형식이 아닌 경우</exception>
      <exception cref="T:System.FormatException">요소가 유효한 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>요소 콘텐츠를 정수(<see cref="T:System.Int32" />)로 변환합니다.</summary>
      <returns>정수(<see cref="T:System.Int32" />)로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>요소 콘텐츠를 정수(Long)(<see cref="T:System.Int64" />)로 변환합니다.</summary>
      <returns>정수(Long)(<see cref="T:System.Int64" />)로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>요소 콘텐츠를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.String" />으로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>요소 콘텐츠를 <see cref="T:System.TimeSpan" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />으로 표현된 노드 콘텐츠입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>요소 콘텐츠를 고유 식별자로 변환합니다.</summary>
      <returns>고유 식별자로 표현된 노드 콘텐츠입니다.</returns>
      <exception cref="T:System.ArgumentException">요소가 유효한 형식이 아닌 경우</exception>
      <exception cref="T:System.FormatException">요소가 유효한 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>현재 노드가 시작 요소인지 여부 및 비어 있지 않은 요소인지 여부를 확인한 다음 이러한 조건이 충족되면 노드를 읽고 판독기를 다음 노드로 이동합니다. 시작 요소가 아니거나 빈 요소인 경우 예외가 발생됩니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>명명된 노드가 시작 요소인지 여부 및 비어 있지 않은 요소인지 여부를 확인한 다음 이러한 조건이 충족되면 노드를 읽고 판독기를 다음 노드로 이동합니다. 시작 요소가 아니거나 빈 요소인 경우 예외가 발생됩니다.</summary>
      <param name="name">요소의 정규화된 이름입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 노드가 시작 요소인지 여부 및 비어 있지 않은 요소인지 여부를 확인한 다음 이러한 조건이 충족되면 노드를 읽고 판독기를 다음 노드로 이동합니다. 시작 요소가 아니거나 빈 요소인 경우 예외가 발생됩니다.</summary>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 노드가 시작 요소인지 여부 및 비어 있지 않은 요소인지 여부를 확인한 다음 이러한 조건이 충족되면 노드를 읽고 판독기를 다음 노드로 이동합니다. 시작 요소가 아니거나 빈 요소인 경우 예외가 발생됩니다.</summary>
      <param name="localName">요소의 로컬 <see cref="T:System.Xml.XmlDictionaryString" /> 이름입니다.</param>
      <param name="namespaceUri">요소의 <see cref="T:System.Xml.XmlDictionaryString" /> 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 일련의 노드 콘텐츠를 <see cref="T:System.Guid" /> 배열로 읽어옵니다.</summary>
      <returns>
        <see cref="T:System.Guid" />의 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 일련의 노드 콘텐츠를 <see cref="T:System.Guid" /> 배열로 읽어옵니다.</summary>
      <returns>
        <see cref="T:System.Guid" />의 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 정수(short)(<see cref="T:System.Int16" />) 배열로 읽어옵니다.</summary>
      <returns>정수(short)(<see cref="T:System.Int16" />) 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 정수(short)(<see cref="T:System.Int16" />) 배열로 읽어옵니다.</summary>
      <returns>정수(short)(<see cref="T:System.Int16" />) 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 일련의 노드 콘텐츠를 정수(<see cref="T:System.Int32" />) 배열로 읽어옵니다.</summary>
      <returns>정수(<see cref="T:System.Int32" />) 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 일련의 노드 콘텐츠를 정수(<see cref="T:System.Int32" />) 배열로 읽어옵니다.</summary>
      <returns>정수(<see cref="T:System.Int32" />) 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 정수(long)(<see cref="T:System.Int64" />) 배열로 읽어옵니다.</summary>
      <returns>정수(long)(<see cref="T:System.Int64" />) 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 정수(long)(<see cref="T:System.Int64" />) 배열로 읽어옵니다.</summary>
      <returns>정수(long)(<see cref="T:System.Int64" />) 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 숫자(float)(<see cref="T:System.Single" />) 배열로 읽어옵니다.</summary>
      <returns>숫자(float)(<see cref="T:System.Single" />)의 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 숫자(float)(<see cref="T:System.Single" />) 배열로 읽어옵니다.</summary>
      <returns>숫자(float)(<see cref="T:System.Single" />)의 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 노드가 시작 요소인지 여부를 확인하고 판독기를 다음 노드로 이동합니다. 노드가 시작 요소가 아니면 예외가 발생됩니다.</summary>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 일련의 노드 콘텐츠를 <see cref="T:System.TimeSpan" /> 배열로 읽어옵니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 <paramref name="localName" /> 및 <paramref name="namespaceUri" />를 가진 일련의 노드 콘텐츠를 <see cref="T:System.TimeSpan" /> 배열로 읽어옵니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> 배열입니다.</returns>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>이 메서드는 이 클래스에서 지원되지 않습니다.</summary>
      <returns>
        <see cref="T:System.Int32" />입니다. </returns>
      <param name="buffer">읽을 버퍼입니다.</param>
      <param name="offset">읽기를 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="count">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <exception cref="T:System.NotSupportedException">항상</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>이 메서드는 이 클래스에서 지원되지 않습니다. 파생 클래스에서 구현될 수 있습니다.</summary>
      <param name="stream">읽을 스트림입니다.</param>
      <param name="includeComments">주석을 포함할지 여부를 결정합니다.</param>
      <param name="inclusivePrefixes">포함할 접두사입니다.</param>
      <exception cref="T:System.NotSupportedException">항상</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>이 클래스에서는 구현되지 않습니다(항상 false가 반환됨). 파생 클래스에서 재정의될 수 있습니다.</summary>
      <returns>파생 클래스에서 재정의되지 않으면 false입니다.</returns>
      <param name="count">파생 클래스에서 재정의되지 않으면 0을 반환합니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>이 클래스에서는 구현되지 않습니다(항상 false가 반환됨). 파생 클래스에서 재정의될 수 있습니다.</summary>
      <returns>파생 클래스에서 재정의되지 않으면 false입니다.</returns>
      <param name="length">파생 클래스에서 재정의되지 않으면 0을 반환합니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>이 클래스에서는 구현되지 않습니다(항상 false가 반환됨). 파생 클래스에서 재정의될 수 있습니다.</summary>
      <returns>파생 클래스에서 재정의되지 않으면 false입니다.</returns>
      <param name="localName">파생 클래스에서 재정의되지 않으면 null을 반환합니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>이 클래스에서는 구현되지 않습니다(항상 false가 반환됨). 파생 클래스에서 재정의될 수 있습니다.</summary>
      <returns>파생 클래스에서 재정의되지 않으면 false입니다.</returns>
      <param name="namespaceUri">파생 클래스에서 재정의되지 않으면 null을 반환합니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>이 클래스에서는 구현되지 않습니다(항상 false가 반환됨). 파생 클래스에서 재정의될 수 있습니다.</summary>
      <returns>파생 클래스에서 재정의되지 않으면 false입니다.</returns>
      <param name="value">파생 클래스에서 재정의되지 않으면 null을 반환합니다.</param>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />에 대한 할당량 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>모든 속성이 최대값으로 설정된 이 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>속성이 <see cref="F:System.Int32.MaxValue" />로 설정된 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>허용되는 최대 배열 길이를 가져옵니다.</summary>
      <returns>허용되는 최대 배열 길이입니다.기본값은 <see cref="F:System.Int32.MaxValue" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">값을 설정하려고 하는데 이 인스턴스에 대한 할당량 값이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentException">0보다 작은 값으로 설정하려는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>각 읽기에 대해 반환할 수 있는 최대 바이트 수를 가져옵니다.</summary>
      <returns>각 읽기에 대해 반환할 수 있는 최대 바이트 수입니다.기본값은 4096입니다.</returns>
      <exception cref="T:System.InvalidOperationException">값을 설정하려고 하는데 이 인스턴스에 대한 할당량 값이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentException">0보다 작은 값으로 설정하려는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>중첩된 최대 노드 깊이를 가져옵니다.</summary>
      <returns>중첩된 최대 노드 깊이입니다.기본값은 32입니다.</returns>
      <exception cref="T:System.InvalidOperationException">값을 설정하려고 하는데 이 인스턴스에 대한 할당량 값이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentException">0보다 작은 값으로 설정하려는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>테이블 이름에 사용할 수 있는 최대 문자 수를 가져옵니다.</summary>
      <returns>테이블 이름에 사용할 수 있는 최대 문자 수입니다.기본값은 16384입니다.</returns>
      <exception cref="T:System.InvalidOperationException">값을 설정하려고 하는데 이 인스턴스에 대한 할당량 값이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentException">0보다 작은 값으로 설정하려는 경우</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>판독기에서 반환되는 최대 문자열 길이를 가져옵니다.</summary>
      <returns>판독기에서 반환되는 최대 문자열 길이입니다.기본값은 8192입니다.</returns>
      <exception cref="T:System.InvalidOperationException">값을 설정하려고 하는데 이 인스턴스에 대한 할당량 값이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentException">0보다 작은 값으로 설정하려는 경우</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>
        <see cref="T:System.Xml.XmlDictionary" />에 저장된 항목을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryString" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="dictionary">이 인스턴스가 포함된 <see cref="T:System.Xml.IXmlDictionary" />입니다.</param>
      <param name="value">사전 항목의 값인 문자열입니다.</param>
      <param name="key">사전 항목의 키인 정수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="key" />가 0보다 작거나 <see cref="F:System.Int32.MaxValue" /> / 4보다 큰 경우</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>이 <see cref="T:System.Xml.XmlDictionaryString" /> 인스턴스의 생성자에 전달되는 <see cref="T:System.Xml.IXmlDictionary" />를 나타냅니다.</summary>
      <returns>이 사전 항목의 <see cref="T:System.Xml.IXmlDictionary" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>빈 문자열을 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />을 가져옵니다.</summary>
      <returns>빈 문자열을 나타내는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>이 <see cref="T:System.Xml.XmlDictionaryString" /> 사전 항목의 정수 키를 가져옵니다.</summary>
      <returns>이 사전 항목의 정수 키입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>이 <see cref="T:System.Xml.XmlDictionaryString" /> 인스턴스의 텍스트 표현을 반환합니다.</summary>
      <returns>이 클래스 인스턴스의 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>이 <see cref="T:System.Xml.XmlDictionaryString" /> 사전 항목의 문자열 값을 가져옵니다.</summary>
      <returns>이 사전 항목의 문자열 값입니다.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>직렬화 및 역직렬화를 수행할 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>이 클래스의 인스턴스를 만듭니다. 이 클래스는 추상 클래스이기 때문에 해당 파생 클래스에서만 호출됩니다.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>이 속성은 항상 false를 반환합니다. 정규화를 지원하는 경우 파생 클래스에서 재정의하여 true를 반환할 수 있습니다.</summary>
      <returns>false입니다.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>Windows Phone 이진 XML 형식을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">쓸 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>Windows Phone 이진 XML 형식을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">쓸 스트림입니다.</param>
      <param name="dictionary">공유 사전으로 사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>Windows Phone 이진 XML 형식을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">쓸 스트림입니다.</param>
      <param name="dictionary">공유 사전으로 사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
      <param name="session">사용할 <see cref="T:System.Xml.XmlBinaryWriterSession" />입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Windows Phone 이진 XML 형식을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">읽을 스트림입니다.</param>
      <param name="dictionary">공유 사전으로 사용할 <see cref="T:System.Xml.XmlDictionary" />입니다.</param>
      <param name="session">사용할 <see cref="T:System.Xml.XmlBinaryWriterSession" />입니다.</param>
      <param name="ownsStream">true이면 작성기가 완료 시 스트림을 닫고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>기존 <see cref="T:System.Xml.XmlWriter" />에서 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />의 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>텍스트 XML을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다. </summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">쓸 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>텍스트 XML을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">쓸 스트림입니다.</param>
      <param name="encoding">출력의 문자 인코딩입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>텍스트 XML을 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스입니다.</returns>
      <param name="stream">쓸 스트림입니다.</param>
      <param name="encoding">스트림의 문자 인코딩입니다.</param>
      <param name="ownsStream">true이면 작성기가 완료 시 스트림을 닫고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>이 메서드가 아직 구현되지 않은 경우 </summary>
      <exception cref="T:System.NotSupportedException">이 메서드가 아직 구현되지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>이 메서드가 아직 구현되지 않은 경우 호출하면 <see cref="T:System.NotSupportedException" />이 발생됩니다.</summary>
      <param name="stream">쓸 스트림입니다.</param>
      <param name="includeComments">주석을 포함할지 여부를 결정합니다.</param>
      <param name="inclusivePrefixes">포함할 접두사입니다.</param>
      <exception cref="T:System.NotSupportedException">이 메서드가 아직 구현되지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Boolean" /> 배열에서 값을 씁니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">데이터가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 쓸 값 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Decimal" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Double" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int16" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int32" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int64" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Single" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Boolean" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Decimal" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Double" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int16" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int32" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int64" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Single" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 배열에서 노드를 작성합니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="array">노드가 포함된 배열입니다.</param>
      <param name="offset">배열의 시작 인덱스입니다.</param>
      <param name="count">배열에서 가져올 노드 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />이 0보다 작거나 <paramref name="array" /> 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값보다 큰 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>특성으로 정규화된 이름과 값을 씁니다.</summary>
      <param name="prefix">특성의 접두사입니다.</param>
      <param name="localName">특성의 로컬 이름입니다.</param>
      <param name="namespaceUri">특성의 네임스페이스 URI입니다.</param>
      <param name="value">특성입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>특성으로 정규화된 이름과 값을 씁니다.</summary>
      <param name="localName">특성의 로컬 이름입니다.</param>
      <param name="namespaceUri">특성의 네임스페이스 URI입니다.</param>
      <param name="value">특성입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>텍스트 콘텐츠가 포함된 요소를 작성합니다.</summary>
      <param name="prefix">요소의 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="value">요소 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>텍스트 콘텐츠가 포함된 요소를 작성합니다.</summary>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <param name="value">요소 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />에서 현재 XML 노드를 작성합니다.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <param name="defattr">true이면 XmlReader에서 기본 특성을 복사합니다. true이면 기본 특성을 사용하고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" />가 null인 경우 </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />에서 현재 XML 노드를 작성합니다.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="defattr">true이면 <see cref="T:System.Xml.XmlReader" />에서 기본 특성을 복사하고, 그렇지 않으면 false입니다. true이면 기본 특성을 사용하고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" />가 null인 경우 </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>네임스페이스로 정규화된 이름을 씁니다. 이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</summary>
      <param name="localName">정규화된 이름의 로컬 이름입니다.</param>
      <param name="namespaceUri">정규화된 이름의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" />가 null인 경우 </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 씁니다.</summary>
      <param name="prefix">네임스페이스 접두사입니다.</param>
      <param name="localName">특성의 로컬 이름입니다.</param>
      <param name="namespaceUri">특성의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 로컬 이름과 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</summary>
      <param name="localName">특성의 로컬 이름입니다.</param>
      <param name="namespaceUri">특성의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 시작 요소를 작성하고 지정된 네임스페이스 및 접두사에 연결합니다.</summary>
      <param name="prefix">요소의 접두사입니다.</param>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.InvalidOperationException">작성기가 닫힌 경우 </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>지정된 시작 요소를 작성하고 지정된 네임스페이스에 연결합니다.</summary>
      <param name="localName">요소의 로컬 이름입니다.</param>
      <param name="namespaceUri">요소의 네임스페이스 URI입니다.</param>
      <exception cref="T:System.InvalidOperationException">작성기가 닫힌 경우 </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>지정된 텍스트 콘텐츠를 씁니다.</summary>
      <param name="value">쓸 텍스트입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" />가 현재 배치되어 있는 텍스트 노드를 작성합니다.</summary>
      <param name="reader">텍스트 값을 가져올 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <param name="isAttribute">판독기가 특성 값에 배치되어 있는지 또는 요소 콘텐츠에 배치되어 있는지를 지정합니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>
        <see cref="T:System.Guid" /> 값을 씁니다.</summary>
      <param name="value">쓸 <see cref="T:System.Guid" /> 값입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" /> 값을 씁니다.</summary>
      <param name="value">쓸 <see cref="T:System.TimeSpan" /> 값입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>고유한 ID 값을 씁니다.</summary>
      <param name="value">쓸 고유한 ID 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우 </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryString" /> 값을 씁니다.</summary>
      <param name="value">
        <see cref="T:System.Xml.XmlDictionaryString" /> 값입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>현재 노드의 표준 XML 특성을 작성합니다.</summary>
      <param name="localName">특성의 로컬 이름입니다.</param>
      <param name="value">특성 값입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>현재 노드의 XML 특성을 작성합니다.</summary>
      <param name="localName">특성의 로컬 이름입니다.</param>
      <param name="value">특성 값입니다.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>네임스페이스 선언 특성을 작성합니다.</summary>
      <param name="prefix">지정된 네임스페이스에 바인딩되는 접두사입니다.</param>
      <param name="namespaceUri">접두사가 바인딩되는 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" />가 null인 경우</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>네임스페이스 선언 특성을 작성합니다.</summary>
      <param name="prefix">지정된 네임스페이스에 바인딩되는 접두사입니다.</param>
      <param name="namespaceUri">접두사가 바인딩되는 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" />가 null인 경우</exception>
    </member>
  </members>
</doc>