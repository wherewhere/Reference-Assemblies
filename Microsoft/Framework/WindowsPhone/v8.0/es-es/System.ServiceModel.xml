<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Ofrece una colección de tipos que pueden usarse como claves.</summary>
      <typeparam name="TItem">Tipos de elemento de la colección que también pueden usarse como claves de la colección.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Devuelve el primer elemento de la colección del tipo que se ha especificado.</summary>
      <returns>El objeto de tipo <paramref name="T" /> si se trata de un tipo de referencia, y el valor de tipo <paramref name="T" /> si es un tipo de valor. Se devolverá el valor predeterminado del tipo si en la colección no hay objetos de tipo <paramref name="T" />; null si es un tipo de referencia y 0 si es un tipo de valor.</returns>
      <typeparam name="T">Tipo de elemento de la colección que se debe buscar.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Devuelve una colección de objetos de tipo <paramref name="T" /> que se encuentran en el <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>Un <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tipo <paramref name="T" /> que contiene los objetos de tipo <paramref name="T" /> de la colección original.</returns>
      <typeparam name="T">Tipo de elemento de la colección que se debe buscar.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Obtiene el tipo de elementos que se encuentran en la colección.</summary>
      <returns>Tipo del <paramref name="item" /> especificado en la colección.</returns>
      <param name="item">Elemento de la colección cuyo tipo se debe recuperar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserta un elemento en una ubicación específica de la colección.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">Objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Quita un elemento del tipo especificado de la colección.</summary>
      <returns>Objeto que se ha quitado de la colección.</returns>
      <typeparam name="T">Tipo de elemento de la colección que se debe eliminar.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Quita todos los elementos del tipo especificado de la colección.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> que contiene los objetos de tipo <paramref name="T" /> de la colección original.</returns>
      <typeparam name="T">Tipo de elemento de la colección que se debe eliminar.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Reemplaza el elemento situado en el índice especificado con un nuevo elemento.</summary>
      <param name="index">Índice de base cero del <paramref name="item" /> que se va a reemplazar.</param>
      <param name="item">El objeto que se agrega a la colección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Proporciona una colección segura para subprocesos y de sólo lectura cuyos elementos son objetos del tipo especificado por el parámetro genérico.</summary>
      <typeparam name="T">Tipo de objeto que se encuentra en la colección segura para subprocesos y de sólo lectura.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Inicializa una nueva instancia de clase <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> de una lista de elementos enumerable que se ha especificado y que contiene el objeto usado para sincronizar el acceso a la colección segura para subprocesos y de sólo lectura.</summary>
      <param name="syncRoot">Objeto usado para sincronizar el acceso a la colección segura para subprocesos y de sólo lectura.</param>
      <param name="list">Colección de elementos <see cref="T:System.Collections.Generic.IEnumerable`1" /> usada para inicializar la colección segura para subprocesos y de sólo lectura.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Determina si la colección contiene un elemento con un valor específico.</summary>
      <returns>true si el elemento <paramref name="value" /> se encuentra en la colección; de lo contrario, false.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es un objeto del tipo contenido en la colección.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia los elementos de la colección en una matriz especificada, comenzando en un índice particular.</summary>
      <param name="array">
        <see cref="T:System.Array" /> que constituye el destino de los elementos copiados de la colección.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Obtiene el número de elementos que se encuentran en la colección segura para subprocesos y de sólo lectura.</summary>
      <returns>El número de elementos que se encuentran en la colección segura para subprocesos y de sólo lectura.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección de sólo lectura sincronizada.</summary>
      <returns>Un <see cref="T:System.Collections.Generic.IEnumerator`1" /> para objetos del tipo que se han guardado en la colección.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Devuelve el índice de la primera aparición de un valor de la colección.</summary>
      <returns>Índice de base cero de la primera aparición del <paramref name="value" /> de la colección.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Obtiene un elemento de la colección segura para subprocesos y de sólo lectura con un índice específico.</summary>
      <returns>El elemento de la colección de sólo lectura con el índice específico.</returns>
      <param name="index">Índice de base cero del elemento que se va a recuperar de la colección.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Obtiene la lista de elementos que se encuentran en la colección segura para subprocesos y de sólo lectura.</summary>
      <returns>El <see cref="T:System.Collections.Generic.IList`1" /> de elementos que se encuentran en la colección segura para subprocesos y de sólo lectura.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Produce una <see cref="T:System.NotSupportedException" /> si se invoca.</summary>
      <param name="value">Elemento que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden agregar elementos a una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Produce una <see cref="T:System.NotSupportedException" /> si se invoca.</summary>
      <exception cref="T:System.NotSupportedException">No se pueden borrar elementos de una colección de sólo lectura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Devuelve true.</summary>
      <returns>true</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>El método devuelve false para indicar que el elemento no se ha quitado de la colección de solo lectura.</returns>
      <param name="value">Valor que se va a quitar de la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden eliminar elementos de una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Produce una <see cref="T:System.NotSupportedException" /> si se invoca.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden insertar elementos en una colección de sólo lectura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Obtiene el elemento en el índice especificado.</summary>
      <returns>Elemento de tipo <paramref name="T" /> del índice especificado.</returns>
      <param name="index">Índice de base cero del elemento que se va a recuperar de la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden establecer elementos en una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Produce una <see cref="T:System.NotSupportedException" /> si se invoca.</summary>
      <param name="index">Índice de base cero del elemento que se va a recuperar de la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden eliminar elementos de una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de la colección en una matriz especificada, comenzando por un índice específico.</summary>
      <param name="array">
        <see cref="T:System.Array" /> que constituye el destino de los elementos copiados de la colección.</param>
      <param name="index">Índice basado en cero en la matriz donde comienza la copia.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
      <returns>Objeto que se puede utilizar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección de sólo lectura sincronizada.</summary>
      <returns>El <see cref="T:System.Collections.IEnumerator" /> que recorre en iteración la colección de sólo lectura sincronizada.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Produce una <see cref="T:System.NotSupportedException" />.</summary>
      <returns>El <see cref="T:System.NotSupportedException" />.</returns>
      <param name="value">Elemento que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden agregar elementos a una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Produce una <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">No se pueden borrar elementos de una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determina si la colección contiene un elemento con un valor específico.</summary>
      <returns>Devuelve true si el elemento <paramref name="value" /> se encuentra en la colección; de lo contrario, false.</returns>
      <param name="value">Objeto que se va a buscar en la colección.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es un objeto del tipo contenido en la colección.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina el índice de un elemento específico de la colección.</summary>
      <returns>Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
      <param name="value">Elemento cuyo índice se va a recuperar.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Produce una <see cref="T:System.NotSupportedException" /> si se invoca.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden insertar elementos en una colección de sólo lectura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Obtiene un valor que indica si la colección tiene un tamaño fijo.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Obtiene el elemento de un índice específico y produce una excepción si se establece un elemento.</summary>
      <returns>Objeto de la ubicación especificada de la colección.</returns>
      <param name="index">Índice de base cero del elemento de la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden establecer elementos en una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Índice de base cero del elemento que se va a recuperar de la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden eliminar elementos de una colección de sólo lectura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Produce una <see cref="T:System.NotSupportedException" /> si se invoca.</summary>
      <param name="index">Índice de base cero del elemento que se va a recuperar de la colección.</param>
      <exception cref="T:System.NotSupportedException">No se pueden eliminar elementos de una colección de sólo lectura.</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Esta excepción se produce en el cliente cuando la acción relativa a la operación invocada no coincide con la acción de cualquier operación que se encuentra disponible en el servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ActionNotSupportedException" /> con un mensaje de error especificado y una referencia a la excepción interna que representa la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que provocó que se produjera la excepción actual. </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Representa el enlace que puede usar el cliente de Windows Phone para configurar los extremos que se comunican con servicios web basados en ASMX y otros servicios que cumplen la especificación WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.BasicHttpBinding" /> con un tipo específico de seguridad que usa el enlace.</summary>
      <param name="securityMode">El valor de <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> que especifica el tipo de seguridad que se usa con el mensaje SOAP y que usa el cliente.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Devuelve una colección ordenada de elementos de enlace que se encuentran en el enlace actual.</summary>
      <returns>El <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contiene la pila ordenada de elementos de enlace que describe el <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> estará en <see cref="T:P:System.ServiceModel.BasicHttpBinding" />.</summary>
      <returns>Es true si el enlace contiene el <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />; false si no lo contiene.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Obtiene la versión de SOAP que se usa en los mensajes procesados por este enlace.</summary>
      <returns>Valor del <see cref="T:System.ServiceModel.EnvelopeVersion" /> que se usa con este enlace. El valor siempre es SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Obtiene o establece el tamaño máximo del búfer que recibe mensajes del canal.</summary>
      <returns>El tamaño máximo, en bytes, de los búferes que almacenan mensajes mientras un extremo configurado con este enlace los procesa. El valor predeterminado es 65.536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Obtiene o establece el tamaño máximo de los mensajes que pueden recibirse en un canal configurado con este enlace.</summary>
      <returns>El tamaño máximo, en bytes, de los mensajes que procesa el enlace. El valor predeterminado es 65.536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Obtiene el esquema de transporte URI de los canales y los agentes de escucha que están configurados con este enlace.</summary>
      <returns>"https" si el modo de seguridad del elemento de enlace de transporte está establecido en <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> o <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" />; de lo contrario, "http".</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Obtiene el tipo de seguridad que se usa con este enlace. </summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpSecurity" /> que se usa con este enlace. El valor predeterminado es <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Obtiene o establece la codificación de caracteres que se usa en el texto del mensaje.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> que indica la codificación de caracteres que se usa. El valor predeterminado es <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Enumera los tipos de credenciales con los que se puede autenticar el cliente cuando la seguridad del enlace BasicHttpBinding está habilitada.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Indica que el cliente se autenticará mediante las credenciales de nombre de usuario.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Solo está presente en Windows Phone, pero no es compatible.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Especifica la seguridad usada en el cliente de Windows Phone configurado con un <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Obtiene o establece el modo de seguridad de un cliente configurado con un <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
      <returns>Valor de la enumeración <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />. El valor predeterminado de esta propiedad es <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor no es un valor válido para <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Especifica los tipos de seguridad que se pueden usar con el enlace <see cref="T:System.ServiceModel.BasicHttpBinding" /> proporcionado por el sistema.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>El mensaje SOAP no es seguro durante la transferencia. Este es el comportamiento predeterminado.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>La seguridad se proporciona mediante HTTPS. El servicio debe configurarse con certificados SSL. El mensaje SOAP está protegido en su conjunto mediante HTTPS. El cliente autentica el servicio mediante el certificado SSL del servicio.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Este modo proporciona integridad, confidencialidad autenticación del servidor mediante HTTPS. El servicio debe configurarse con un certificado. La seguridad del mensaje SOAP proporciona la autenticación del cliente.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>Este modo sólo proporciona autenticación del cliente basada en HTTP. No proporciona la integridad o confidencialidad del mensaje.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Crea y administra los canales que usan los clientes para enviar mensajes a los extremos de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.ChannelFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Inicializa el generador de canales con los comportamientos que proporciona un archivo de configuración específico y con los del extremo de servicio del generador de canales.</summary>
      <param name="configurationName">Nombre del archivo de configuración.</param>
      <exception cref="T:System.InvalidOperationException">El extremo de servicio del generador de canales es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Cuando se implementa en una clase derivada, crea una descripción del extremo de servicio asociado al generador de canales.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> asociado al generador de canales.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Genera el generador de canales para el extremo actual del generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> para el extremo del generador actual.</returns>
      <exception cref="T:System.InvalidOperationException">El extremo de servicio al que se conectan los canales del generador es null, o el enlace del extremo es null o falta el elemento que tiene el nombre de configuración especificado.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Obtiene los credenciales que usan los clientes para comunicar un extremo de servicio con los canales que produce el generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> que usan los clientes si están configurados para el generador o si el extremo no es una referencia null y está en el estado de comunicación <see cref="F:System.ServiceModel.CommunicationState.Created" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />; de lo contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Obtiene el extremo de servicio al que se conectan los canales producidos por el generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> al que se conectan los canales producidos por el generador.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Abre el generador de canales actual si aún no está abierto.</summary>
      <exception cref="T:System.ObjectDisposedException">El generador actual se está cerrando o está cerrado, por lo que no se puede abrir.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Devuelve el objeto con tipo definido que se ha solicitado, de existir, de la capa correspondiente de la pila de canales, o null si no existe.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa el extremo de servicio del generador de canales con un enlace y dirección específicos.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> con el que se debe inicializar el extremo para el generador de canales.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> con el que se debe inicializar el extremo para el generador de canales.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa el extremo de servicio del generador de canales con una dirección y configuración específicas.</summary>
      <param name="configurationName">Nombre del archivo de configuración con el que se debe inicializar el generador de canales.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> con el que se deben inicializar los extremos para el generador de canales.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Finaliza el generador de canales interno del generador de canales actual.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de cierre asincrónica en el generador de canales interno del generador de canales actual que tiene un objeto de estado asociado a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de cierre asincrónica en el generador de canales interno del generador de canales actual que tiene un objeto de estados asociado a él. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Llama a Close en el generador de canales interno con un tiempo de espera específico para completar la operación.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación de cierre asincrónica en el generador de canales interno del generador de canales actual. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completa una operación de apertura asincrónica en el generador de canales interno del generador de canales actual. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Llama a Open en el generador de canales interno del generador de canales actual con un tiempo de espera específico para completar la operación.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.InvalidOperationException">El canal interno del canal actual es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Inicializa una copia de sólo lectura del objeto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> para el generador de canales.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Genera el generador de canales interno del canal actual.</summary>
      <exception cref="T:System.InvalidOperationException">El generador de canales interno del generador de canales actual es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Cierra el generador de canales actual.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Generador que crea canales de diversos tipos que utilizan los clientes para enviar mensajes a extremos de servicio configurados de formas distintas.</summary>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales. El tipo debe ser <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> o <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" /> con la dirección del extremo y la configuración del enlace especificados.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> usado para configurar los canales creados por el generador.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> de destino de los canales creados por el generador.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" /> y configura el extremo.</summary>
      <param name="endpointConfigurationName">Nombre del archive que contiene la configuración de extremo de servicio de los canales creados por el generador.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ChannelFactory`1" /> con la dirección del extremo y la configuración del extremo especificadas.</summary>
      <param name="endpointConfigurationName">Nombre del archive que contiene la configuración de extremo de servicio de los canales creados por el generador.</param>
      <param name="remoteAddress">
        <see cref="T:System.ServiceModel.EndpointAddress" /> de destino de los canales creados por el generador.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canal que se usa para enviar mensajes a un servicio con una dirección del extremo específica.</summary>
      <returns>
        <paramref name="TChannel" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creado por el generador.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="address" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canal que se usa para enviar mensajes a un servicio con una dirección del extremo específica mediante una dirección de transporte determinada.</summary>
      <returns>
        <paramref name="TChannel" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> creado por el generador.</returns>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que el canal envía los mensajes.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="address" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" /> tiene operaciones dúplex no compatibles.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Crea una descripción del extremo de servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> del servicio.</returns>
      <exception cref="T:System.InvalidOperationException">El contrato de devolución de llamada es null, pero el extremo de servicio requiere uno que no sea null (Nothing).</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Proporciona la implementación básica que se usa para crear objetos del cliente de Windows Phone (servidores proxy) que pueden llamar a servicios.</summary>
      <typeparam name="TChannel">Canal que se usa para conectar con el servicio que identifica el tipo de contrato de servicio encapsulado por este proxy.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> mediante el extremo de destino predeterminado desde el archivo de configuración de la aplicación. </summary>
      <exception cref="T:System.InvalidOperationException">Puede que no haya información sobre el extremo predeterminado en el archivo de configuración, que haya más de un extremo en el archivo, o que no haya archivo de configuración.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> mediante un enlace y dirección de destino especificados. </summary>
      <param name="binding">El enlace que se usa para configurar la forma en que se realizan las llamadas al servicio.</param>
      <param name="remoteAddress">Dirección del extremo de servicio.</param>
      <exception cref="T:System.ArgumentNullException">El enlace es null.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección remota es null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> mediante la información de configuración que <paramref name="endpointConfigurationName" /> especifica en el archivo de configuración de la aplicación. </summary>
      <param name="endpointConfigurationName">Nombre del extremo en el archivo de configuración de la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">La información del extremo especificado es null.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede encontrar el extreme o el contrato del extreme no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> mediante la dirección de destino y la información del extremo especificadas. </summary>
      <param name="endpointConfigurationName">Nombre del extremo en el archivo de configuración de la aplicación.</param>
      <param name="remoteAddress">Dirección del servicio.</param>
      <exception cref="T:System.ArgumentNullException">El extreme es null.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección remota es null.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede encontrar el extreme o el contrato del extreme no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Nombre del extremo en el archivo de configuración de la aplicación.</param>
      <param name="remoteAddress">Dirección del servicio.</param>
      <exception cref="T:System.ArgumentNullException">El extreme es null.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección remota es null.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede encontrar el extreme o el contrato del extreme no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase de forma inmediata de su estado actual a estado cerrado.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Obtiene el canal interno que se usa para comunicar con el servicio.</summary>
      <returns>Implementación de la interfaz del contrato de servicio de destino transferido como parámetro de tipo al constructor.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Obtiene el objeto <see cref="T:System.ServiceModel.ChannelFactory`1" /> subyacente.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Obtiene los credenciales del cliente que se usan para llamar a una operación.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Description.ClientCredentials" /> que representa la prueba de la identidad que presenta el cliente.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Devuelve un nuevo canal del cliente al servicio.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> que identifica el tipo de contrato de servicio encapsulado por este objeto de cliente (proxy).</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Obtiene el extremo de destino del servicio al que puede conectarse el cliente de Windows Phone.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> de destino.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replica el comportamiento de la palabra clave predeterminada en C#.</summary>
      <returns>Devuelve null si T es un tipo de referencia y cero si T es un tipo de valor numérico.</returns>
      <typeparam name="T">Tipo C#.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Obtiene la implementación <see cref="T:System.ServiceModel.IClientChannel" /> subyacente.</summary>
      <returns>Canal del cliente para el objeto de cliente Windows Phone.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Proporciona ayuda para implementar el modelo asincrónico basado en eventos. 
    For more information about 
   este modelo, vea Información general sobre el modelo asincrónico basado en eventos.</summary>
      <param name="beginOperationDelegate">Delegado que se usa para llamar a la operación asincrónica.</param>
      <param name="inValues">Valores introducidos para la llamada asincrónica.</param>
      <param name="endOperationDelegate">Delegado que se usa para terminar la llamada asincrónica tras haberse completado.</param>
      <param name="operationCompletedCallback">Devolución de llamada proporcionada por el cliente que se invoca una vez completado el método asincrónico. La devolución de llamada pasa al método <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Objeto <paramref name="userState" /> asociado a la llamada asincrónica.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Obtiene el estado actual del objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Valor del <see cref="T:System.ServiceModel.CommunicationState" /> del objeto.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar el <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="callback">Método que recibe la devolución de llamada al completarse la operación.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar el <see cref="T:System.ServiceModel.ClientBase`1" /> con un tiempo de espera especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación begin close asincrónica.</returns>
      <param name="timeout">Período en el que debe completarse la llamada.</param>
      <param name="callback">Objeto de devolución de llamada que se invoca cuando se completa la operación.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para abrir el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">Método que recibe la devolución de llamada al completarse la operación.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para abrir un objeto <see cref="T:System.ServiceModel.ClientBase`1" /> en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica.</returns>
      <param name="timeout">Tiempo en el que debe completarse la llamada.</param>
      <param name="callback">Método que recibe la devolución de llamada al completarse la operación.</param>
      <param name="state">Datos de estado.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase de su estado actual a estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase de su estado actual a estado cerrado.</summary>
      <param name="timeout">Tiempo en el que debe completarse la llamada.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> ha pasado de su estado actual al estado cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pasa de su estado actual al estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Inicia una operación asincrónica para cerrar el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se usa para completar la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que se usa para completar la operación end open asincrónica.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Controlador de eventos invocado cuando se produce un error al llevar a cabo una operación en el objeto <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase del estado creado a estado abierto.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Provoca que el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pase del estado creado a estado abierto en un intervalo de tiempo especificado.</summary>
      <param name="timeout">Período de tiempo en el que debe completarse la llamada.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> ha pasado del estado creado al estado abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1" /> pasa del estado creado al estado abierto.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Delegado que usa <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> para llamar a la operación asincrónica en el cliente. </summary>
      <returns>Resultado de la llamada asincrónica.</returns>
      <param name="inValues">Valores introducidos para la llamada asincrónica.</param>
      <param name="asyncCallback">Referencia al método al que debe llamarse cuando se completa la operación asincrónica correspondiente.</param>
      <param name="state">
        <see cref="T:System.Object" /> que permite al cliente distinguir entre las diversas llamadas asincrónicas. Está a disposición del cliente en el parámetro <paramref name="arguments" /> de la devolución de llamada de finalización de evento.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Los servidores proxy de cliente generados automáticamente usan esta clase para llamar a servicios y no deberían usarse con otro fin. 
</summary>
      <typeparam name="T">Clase genérica.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ClientBase`1" /> a partir de una instancia de la clase.</summary>
      <param name="client">Objeto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> que se usa para inicializar la nueva instancia de la clase.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Inicia una llamada asincrónica de un método específico según el nombre.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al método asincrónico invocado.</returns>
      <param name="methodName">Nombre del método al que se va a llamar de forma asincrónica.</param>
      <param name="args">Matriz de argumentos del método invocado.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Delegado <see cref="T:System.AsyncCallback" />. </param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Completa una invocación asincrónica de un método específico según el nombre. </summary>
      <returns>
        <see cref="T:System.Object" /> que produce el método invocado.
</returns>
      <param name="methodName">Nombre del método al que se ha llamado de forma asincrónica.</param>
      <param name="args">Matriz de argumentos del método invocado.</param>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos no administrados asociados al canal.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <typeparam name="TProperty">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje al destino del canal de salida.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión del mensaje asincrónica. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida. </param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje al destino del canal de salida en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de envío asincrónica.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de envío asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para transmitir un mensaje al destino del canal de salida. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Obtiene el destino del servicio al que se envían los mensajes en el canal de salida.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del servicio al que envía los mensajes el canal de salida.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Transmite un mensaje al destino del canal de salida. </summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía un mensaje en el canal de salida actual en un intervalo de tiempo especificado.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Obtiene el identificador URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje de solicitud al lado de la respuesta de un intercambio de mensajes de solicitud y respuesta.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión del mensaje asincrónica. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje de solicitud al lado de la respuesta de un intercambio de mensajes de solicitud y respuesta en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión del mensaje asincrónica. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual debe recibirse una respuesta. (Con respecto a los valores predeterminados, véanse los comentarios.)</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para devolver una respuesta basada en mensaje a una solicitud transmitida. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Obtiene la dirección remota a la que el canal de la solicitud envía los mensajes. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> a la que el canal de la solicitud envía los mensajes. </returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual debe recibirse una respuesta.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Obtiene la dirección de transporte a la que se envía la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envía el mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>El <see cref="T:System.ServiceModel.EndpointAddress" /> sirve como destino final y dirección física si no se especifica un <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />. Si se especifica el <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />, ésa es la dirección física real a la que se envía el mensaje y la dirección mediante la que el mensaje llegará a su destino.</summary>
      <returns>Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Llamada asincrónica para comenzar a utilizar una interfaz de usuario con el fin de obtener información sobre credenciales.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que se utilizará para devolver la llamada cuando finalice el procesamiento.</returns>
      <param name="callback">Método invocado cuando se complete este método.</param>
      <param name="state">Información sobre el estado del canal.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Obtiene un valor que indica si se ha realizado una llamada a una interfaz de usuario para obtener información sobre credenciales. </summary>
      <returns>true si se ha llamado el método <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (o los métodos <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> y <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Llamada a una interfaz de usuario para obtener información sobre credenciales.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Se invoca cuando ha finalizado la llamada a <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Objeto <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Este es un evento reservado.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Obtiene el identificador URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de cliente.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Provoca que un objeto de comunicación pase inmediatamente de su estado actual a estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para abrir un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para abrir un objeto de comunicación en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Provoca que un objeto de comunicación pase de su estado actual a estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase de su estado actual a estado cerrado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> ha pasado de su estado actual al estado cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> pasa de su estado actual al estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Controlador de eventos invocado cuando se produce un error al llevar a cabo una operación en el objeto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Provoca que un objeto de comunicación pase del estado creado a estado abierto.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase del estado creado a estado abierto en un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> ha pasado del estado creado al estado abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Controlador de eventos invocado cuando el objeto <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> pasa del estado creado al estado abierto.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Obtiene el estado actual del objeto orientado a la comunicación.</summary>
      <returns>Valor del <see cref="T:System.ServiceModel.CommunicationState" /> del objeto.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Obtiene o establece un valor que ordena a Windows Phone almacenar un conjunto de mensajes antes de proporcionar los mensajes al transporte.</summary>
      <returns>true si se permite el procesamiento por lotes de los mensajes salientes; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Obtiene la sesión de entrada del canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IInputSession" /> del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Obtiene la sesión de entrada del canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Obtiene o establece el período de tiempo dentro del cual debe completarse una operación antes de que se produzca una excepción.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que especifica el período de tiempo dentro del cual debe completarse una operación.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Obtiene la sesión de salida asociada al canal, en caso de que haya una.</summary>
      <returns>Implementación de <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si existe una sesión de entrada; de lo contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Obtiene la dirección remota asociada al canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> remota del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Devuelve un identificador para la sesión actual, en caso de que haya uno.</summary>
      <returns>Identificador de la sesión actual, en caso de que haya uno.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Obtiene una colección de objetos de extensión para este objeto extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> de objetos de extensión.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Delegado que invoca <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> cuando la llamada realizada por <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> se completa correctamente.</summary>
      <returns>Matriz de <see cref="T:System.Object" /> que contiene los resultados de la llamada al método asincrónico. La operación puede tener diversos valores devueltos, que son devueltos en esta matriz de objetos.</returns>
      <param name="result">Resultado que devuelve la llamada realizada por <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> a <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Almacena los resultado de una llamada asincrónica que realiza el cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Obtiene los resultado de una llamada asincrónica que realiza el cliente.</summary>
      <returns>Matriz de tipo <see cref="T:System.Object" /> que contiene los resultados de una llamada asincrónica que realiza el cliente.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Representa un error de comunicación en el servicio o en la aplicación cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.CommunicationException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationException" /> con el mensaje especificado.</summary>
      <param name="message">Descripción de la condición de error.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationException" /> con el mensaje y la excepción interna especificadas.</summary>
      <param name="message">Descripción de la condición de error.</param>
      <param name="innerException">Excepción interna que se va a utilizar.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Excepción que se produce cuando la llamada se realiza a un objeto <see cref="T:System.ServiceModel.ICommunicationObject" /> que se ha anulado.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> con el mensaje especificado. </summary>
      <param name="message">Mensaje que porta la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> con el mensaje y la excepción interna especificadas. </summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Excepción que se produce cuando se realiza una llamada a un objeto de comunicación con errores. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> con el mensaje especificado.</summary>
      <param name="message">Mensaje que describe la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> con el mensaje y la excepción interna especificadas.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Define los estados que puede tener un <see cref="T:System.ServiceModel.ICommunicationObject" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indica que el objeto de comunicación ha creado una instancia y es configurable, pero aún no está abierta o lista para usar.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indica que el objeto de comunicación está pasando del estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indica que el objeto de comunicación está abierto y listo para usar. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indica que el objeto de comunicación está pasando al estado <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indica que el objeto de comunicación se ha cerrado y ya no se puede utilizar. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indica que el objeto de comunicación ha encontrado un error del que no puede recuperarse y ya no se puede utilizar. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Indica a la infraestructura Windows Phone que use <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Obtiene o establece el estilo SOAP de los datos en serie.</summary>
      <returns>Uno de los valores de <see cref="T:System.ServiceModel.OperationFormatStyle" />. El valor predeterminado es <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Proporciona una dirección de la red única que usa el cliente para comunicarse con el extremo de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddress" /> con una cadena URI específica.</summary>
      <param name="uri">Identificador URI que identifica el extremo.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddress" /> con un URI y encabezados específicos.</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> que identifica la ubicación del extremo.</param>
      <param name="addressHeaders">
        <see cref="T:System.Array" /> del tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene la información de la dirección que se usa para interactuar con el extremo.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Obtiene una representación del URI anónimo independiente de la versión.</summary>
      <returns>
        <see cref="T:System.Uri" /> con el valor http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Asigna el URI y las propiedades de la dirección del extremo a los valores de los encabezados de un mensaje concreto.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> cuyos valores del encabezado se están asignando.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="message" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Devuelve un valor que indica si un objeto concreto es equivalente a la dirección del extremo actual.</summary>
      <returns>Es true si el objeto especificado es equivalente a la dirección actual; de lo contrario, false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> que se debe comparar con la dirección del extremo actual.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Proporciona un código hash único para la dirección del extremo actual. </summary>
      <returns>Un código hash único para la dirección del extremo actual.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Obtiene la colección de encabezados de dirección de los extremos que el generador puede crear.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> que contiene la información de la dirección del extremo.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Obtiene un valor que indica si el extremo es anónimo.</summary>
      <returns>Es true si el extremo es <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Obtiene un valor que indica si el URI del extremo es el <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>Es true si el URI del extremo es <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; de lo contrario, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Obtiene un URI independiente de la versión que se usa en la dirección de un extremo al que no se deben enviar mensajes.</summary>
      <returns>
        <see cref="T:System.Uri" /> con el valor http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Devuelve un valor que indica si las direcciones de extremo especificadas no son equivalentes.</summary>
      <returns>Es true si las direcciones del extremo son iguales; de lo contrario, false.</returns>
      <param name="address1">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se van a comparar.</param>
      <param name="address2">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se van a comparar.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Devuelve un valor que indica si las direcciones de extremo especificadas no son equivalentes.</summary>
      <returns>Es true si las direcciones del extremo no son iguales; de lo contrario, false.</returns>
      <param name="address1">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se van a comparar.</param>
      <param name="address2">Uno de los objetos <see cref="T:System.ServiceModel.EndpointAddress" /> que se van a comparar.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Lee la dirección del extremo para una versión de dirección concreta de un encabezado del lector del diccionario XML específico.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> de la versión especificada del lector XML.</returns>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de la dirección de extremo actual.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> desde el que se obtiene la dirección del extremo.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Devuelve una representación de cadena canónica del URI que se encuentra en la dirección del extremo.</summary>
      <returns>Identificador URI que identifica el extremo.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Obtiene el URI del extremo.</summary>
      <returns>
        <see cref="T:System.Uri" /> del extremo.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el sistema de escritura del diccionario XML especificado.</summary>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> de la dirección de extremo actual.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> en el que se guarda la dirección del extremo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> o <paramref name="addressingVersion" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Un generador para producir nuevas (e inmutables) direcciones de extremo con valores de propiedades específicos.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> a partir de los valores de una dirección de extremo existente.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> cuyos valores de propiedades se usan para inicializar los valores de propiedades de esta instancia.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="address" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Obtiene la colección de encabezados de dirección de los extremos que el generador puede crear.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene los encabezados de dirección de los extremos que crea el constructor.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Crea una nueva dirección de extremo inicializada con los valores de propiedades del constructor de dirección del extremo actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> cuyas propiedades se inicializan con los valores del constructor de dirección del extremo actual.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Obtiene o establece el URI de los extremos que crea el constructor.</summary>
      <returns>
        <see cref="T:System.Uri" /> que especifica la dirección del extremo.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Excepción que se produce cuando no se puede encontrar o alcanzar un extremo remoto.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.EndpointNotFoundException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.EndpointNotFoundException" /> con el mensaje de error especificado y excepción interna que causó la excepción actual.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que provocó que se produjera la excepción actual.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Obtiene una cadena que contiene el nombre del URI para el rol SOAP asociado a la versión del mensaje actual para el destino final.</summary>
      <returns>Una cadena vacía si se usa SOAP 1.1; una cadena que contiene http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver si se usa SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Obtiene una cadena que contiene el nombre del URI para el rol SOAP asociado a la versión del mensaje actual para el siguiente destino.</summary>
      <returns>Una cadena que contiene http://schemas.xmlsoap.org/soap/actor/next si se usa <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" />; una cadena que contiene http://www.w3.org/2003/05/soap-envelope/role/next si se usa <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />, y una cadena vacía si el <see cref="T:System.ServiceModel.EnvelopeVersion" /> es <see cref="P:System.ServiceModel.EnvelopeVersion.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Obtiene la versión de sobre que no usa una versión de SOAP.</summary>
      <returns>Versión de sobre que no usa el formato SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Obtiene la versión de sobre de SOAP 1,1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> de SOAP 1,1.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Obtiene la versión de sobre de SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> de SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Obtiene una cadena que representa la versión de sobre actual.</summary>
      <returns>Versión de sobre actual.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Representa información detallada del error.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ExceptionDetail" /> a partir de la excepción. </summary>
      <param name="exception">Excepción que se debe serializar como objeto <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="exception" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Obtiene o establece el objeto <see cref="T:System.ServiceModel.ExceptionDetail" /> que representa la excepción interna.</summary>
      <returns>Información de la excepción interna.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Obtiene o establece el mensaje de la excepción pasada al constructor.</summary>
      <returns>Mensaje de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Obtiene o establece la información del seguimiento de pila de la excepción pasada al constructor.</summary>
      <returns>El seguimiento de pila de la excepción.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Devuelve la información detallada de la excepción pasada al constructor.</summary>
      <returns>Mensaje y seguimiento de pila de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Obtiene o establece el tipo de cadena de la excepción pasada al constructor.</summary>
      <returns>Tipo de cadena de la excepción pasada al constructor.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Representa un código de error de SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Nombre del código de error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultCode" />.</summary>
      <param name="name">Nombre del código de error.</param>
      <param name="subCode">El subcódigo de error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultCode" /> con el nombre y el espacio de nombres especificados. </summary>
      <param name="name">Nombre local del código de error. </param>
      <param name="ns">Nombre del espacio de nombres del código de error. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> es una cadena vacía. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultCode" /> con el nombre, espacio de nombres y subcódigo de error especificados.</summary>
      <param name="name">Nombre local del código de error. </param>
      <param name="ns">Nombre del espacio de nombres del código de error. </param>
      <param name="subCode">Objeto <see cref="T:System.ServiceModel.FaultCode" /> que representa el subcódigo de error. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> es una cadena vacía. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Crea un código de error del emisor con el subcódigo especificado. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultCode" /> que tiene el subcódigo de error de SOAP creado en la propiedad <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Objeto <see cref="T:System.ServiceModel.FaultCode" /> que representa el subcódigo de error. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="subCode" /> es null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Obtiene un valor que indica si se trata de un error de SOAP 1.1 o de SOAP 1.2.</summary>
      <returns>Es true si el error es de SOAP 1.1 o SOAP 1.2; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Obtiene un valor que indica si se trata de un error del servidor de SOAP 1.1 o del servidor de SOAP 1.2.</summary>
      <returns>Es true si se trata de un error del servidor de SOAP 1.1 o del receptor SOAP 1.2; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Obtiene un valor que indica si el error es un error del cliente de SOAP 1.1 o un error del emisor de SOAP 1.2.</summary>
      <returns>Es true si se trata de un error del cliente de SOAP 1.1 o del emisor de SOAP 1.2; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Obtiene el nombre local del código de error. </summary>
      <returns>Nombre local del código de error. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Obtiene el espacio de nombres del código de error. </summary>
      <returns>Identificador uniforme de recursos (URI) del espacio de nombres. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Obtiene el subcódigo de error. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultCode" /> que representa el subcódigo de error. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Especifica un error o más de SOAP que es devuelto cuando una operación del servicio encuentra errores de procesamiento.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultContractAttribute" />. </summary>
      <param name="detailType">El tipo de serie que contiene la información del error del autor de llamada.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="detailType" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Obtiene o establece la acción del mensaje de error de SOAP que se especifica como parte del contrato de operación.</summary>
      <returns>El valor de la acción del mensaje de error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Obtiene el tipo del objeto de serie que contiene la información del error.</summary>
      <returns>El tipo que representa la clase de error de serie.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Obtiene o establece el nombre del mensaje de error del Web Services Description Language (WSDL).</summary>
      <returns>El nombre del mensaje de error. El valor predeterminado es el nombre del tipo que se usa como detalle del error.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del error de SOAP.</summary>
      <returns>Espacio de nombres del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Representa un error de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultException" /> con los valores de error del mensaje especificada y la cadena de acción proporcionada.</summary>
      <param name="fault">Error de mensaje que contiene los valores de error de SOAP predeterminados que se deben usar.</param>
      <param name="action">Acción del error de SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultException" /> que usa el motivo especificado, el código de error y el valor de la acción.</summary>
      <param name="reason">Motivo del error de SOAP.</param>
      <param name="code">Código del error de SOAP.</param>
      <param name="action">Valor de la acción del error de SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Obtiene el valor de la acción de SOAP del mensaje de error.</summary>
      <returns>El valor de la acción de SOAP del mensaje de error.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Obtiene el código del error de SOAP.</summary>
      <returns>Código del error de SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.FaultException" /> del mensaje de error, la acción y la matriz de tipo de detalles especificados.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultException" /> que usted puede producir para indicar que se recibido un mensaje de error de SOAP.</returns>
      <param name="messageFault">Mensaje que contiene información predeterminada del error de SOAP.</param>
      <param name="action">El valor de la acción del error.</param>
      <param name="faultDetailTypes">Matriz de tipos que contiene detalles del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.FaultException" /> del mensaje de error, la acción y la matriz de tipo de detalles especificados.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultException" /> que usted puede producir para indicar que se recibido un mensaje de error de SOAP.</returns>
      <param name="messageFault">Mensaje que contiene información predeterminada del error de SOAP.</param>
      <param name="faultDetailTypes">Matriz de tipos que contiene detalles del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.MessageFault" /> que se encuentra en la memoria.</summary>
      <returns>El objeto <see cref="T:System.ServiceModel.Channels.MessageFault" /> que ha pasado a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> para crear un mensaje que contiene un error.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Obtiene el mensaje para la excepción.</summary>
      <returns>Mensaje de la excepción.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Obtiene el <see cref="T:System.ServiceModel.FaultReason" /> del error de SOAP.</summary>
      <returns>Motivo del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Se usa en una aplicación cliente para detectar los errores SOAP especificados de forma contractual.</summary>
      <typeparam name="TDetail">El detalle del tipo de error de serie.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultException`1" /> que usa un objeto de detalle específico y un motivo del error de SOAP, un código y valores de acción. </summary>
      <param name="detail">El objeto que se usa como detalle del error de SOAP.</param>
      <param name="reason">Motivo del error de SOAP.</param>
      <param name="code">Código del error de SOAP.</param>
      <param name="action">Acción del error de SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Obtiene el objeto que contiene el detalle de la información de la condición del error.</summary>
      <returns>El objeto del detalle que es el tipo de parámetro del objeto <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Devuelve una cadena para el objeto <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Cadena del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Proporciona una descripción textual del error de SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.FaultReason" /> con la lista de traducciones del error especificada. </summary>
      <param name="translations">Lista de objetos <see cref="T:System.ServiceModel.FaultReasonText" />; cada objeto describe el error en un idioma concreto. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="translations" /> es null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> está vacío o uno o más elementos es null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReason" /> que usa el elemento de texto específico que describe el error en un idioma concreto. </summary>
      <param name="translation">Una matriz de objetos <see cref="T:System.ServiceModel.FaultReasonText" /> que corresponde a las descripciones del error en diversos idiomas.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="translation" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReason" /> que usa el texto especificado.</summary>
      <param name="text">Descripción del motivo del error ocurrido.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="text" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Obtiene la descripción del error en el idioma que utiliza el subproceso actual.</summary>
      <returns>El texto del error en el idioma especificado.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Obtiene la descripción del error en el idioma especificado.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.FaultReasonText" /> que contiene la descripción del error traducida.</returns>
      <param name="cultureInfo">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica el idioma de la descripción del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Devuelve el motivo del error como una cadena.</summary>
      <returns>Motivo del error.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Obtiene una colección de descripciones del error en diversos idiomas.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> de objetos <see cref="T:System.ServiceModel.FaultReasonText" />; cada objeto describe el error en un idioma concreto.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Representa el texto del motivo del error de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReasonText" /> que usa el texto del error especificado.</summary>
      <param name="text">Texto que es el motivo del error de SOAP.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="text" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.FaultReasonText" /> que usa el texto del error especificado.</summary>
      <param name="text">Texto que es el motivo del error de SOAP.</param>
      <param name="xmlLang">El idioma del error.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Devuelve un valor que indica si el idioma de la descripción coincide con el objeto <see cref="T:System.Globalization.CultureInfo" /> proporcionado.</summary>
      <returns>Es true si la propiedad <see cref="T:System.Globalization.CultureInfo" /> especificada coincide; de lo contrario, false.</returns>
      <param name="cultureInfo">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se debe comparar con el idioma de la descripción.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Obtiene el texto del motivo del error de SOAP.</summary>
      <returns>Texto del motivo del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Obtiene el idioma del motivo del error de SOAP.</summary>
      <returns>Idioma del motivo del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Define el comportamiento de la solicitud saliente y de los canales solicitud/respuesta que usan las aplicaciones cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Obtiene o establece un valor que indica si <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> intenta llamar a los objetos <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> en la propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> o lanza una excepción si la colección si no está vacía. </summary>
      <returns>Es true si  Windows Communication Foundation (WCF) tiene permiso para invocar a los inicializadores de canales interactivos; de lo contrario, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Llamada asincrónica para comenzar a utilizar una interfaz de usuario con el fin de obtener información sobre credenciales.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que se utilizará para devolver la llamada cuando finalice el procesamiento.</returns>
      <param name="callback">Método invocado cuando se complete este método.</param>
      <param name="state">Información sobre el estado del canal.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Obtiene un valor que indica si se ha realizado una llamada a una interfaz de usuario para obtener información sobre credenciales. </summary>
      <returns>true si se ha llamado el método <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (o los métodos <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> y <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Llamada a una interfaz de usuario para obtener información sobre credenciales.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Se invoca cuando ha finalizado la llamada a <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">Objeto <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Este es un evento reservado. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Obtiene el identificador URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de cliente.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Define el contrato de la máquina de estados básicos para todos los objetos del sistema dirigidos a la comunicación, inclusive los canales, los administradores de canales, los generadores, los agentes de escucha, los distribuidores y los host de servicios.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Provoca que un objeto de comunicación pase inmediatamente de su estado actual a estado cerrado.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera predeterminado antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera especificado antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para abrir un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">No se ha podido abrir el <see cref="T:System.ServiceModel.ICommunicationObject" />, que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera predeterminado para la apertura antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera pasar al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />, por lo que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para abrir un objeto de comunicación en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">No se ha podido abrir el <see cref="T:System.ServiceModel.ICommunicationObject" />, que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera especificado antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera pasar al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />, por lo que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Provoca que un objeto de comunicación pase de su estado actual a estado cerrado.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera de cierre predeterminado antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase de su estado actual a estado cerrado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Ocurre cuando el objeto de comunicación completa su transición del estado Cerrando al estado Cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Ocurre cuando el objeto de comunicación entra por primera vez en el estado Cerrando.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">No se ha podido abrir el <see cref="T:System.ServiceModel.ICommunicationObject" />, que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera pasar al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />, por lo que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Ocurre cuando el objeto de comunicación entra por primera vez en estado de error.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Provoca que un objeto de comunicación pase del estado creado a estado abierto.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">No se ha podido abrir el <see cref="T:System.ServiceModel.ICommunicationObject" />, que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera predeterminado para la apertura antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera pasar al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />, por lo que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase del estado creado a estado abierto en un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">No se ha podido abrir el <see cref="T:System.ServiceModel.ICommunicationObject" />, que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Ha transcurrido el tiempo de espera especificado antes de que el <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera pasar al estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />, por lo que ha pasado al estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Ocurre cuando el objeto de comunicación completa su transición del estado Abriendo al estado Abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Ocurre cuando el objeto de comunicación entra por primera vez en estado Abriendo.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Obtiene el estado actual del objeto orientado a la comunicación.</summary>
      <returns>Valor del <see cref="T:System.ServiceModel.CommunicationState" /> del objeto.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Define la interfaz del control de contexto de un canal.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Obtiene o establece un valor que ordena a Windows Phone almacenar un conjunto de mensajes antes de proporcionar los mensajes al transporte.</summary>
      <returns>true si se permite el procesamiento por lotes de los mensajes salientes; de lo contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Obtiene la sesión de entrada del canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IInputSession" /> del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Obtiene la sesión de entrada del canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Obtiene o establece el período de tiempo dentro del cual debe completarse una operación antes de que se produzca una excepción.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que especifica el período de tiempo dentro del cual debe completarse una operación.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Obtiene la sesión de salida asociada al canal, en caso de que haya una.</summary>
      <returns>Implementación de <see cref="T:System.ServiceModel.Channels.IOutputSession" /> si existe una sesión de entrada; de lo contrario, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Obtiene la dirección remota asociada al canal.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> remota del canal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Devuelve un identificador para la sesión actual, en caso de que haya uno.</summary>
      <returns>Identificador de la sesión actual, en caso de que haya uno.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Define la interfaz para especificar los tiempos de espera de la comunicación que usan los canales y los administradores de canales, como por ejemplo los generadores de canales.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de cierre, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de cierre.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de apertura, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de recepción, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de envío, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de envío.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Habilita a un objeto para participar en comportamientos personalizados, como por ejemplo en el registro de eventos o en la observación de transiciones de estados.</summary>
      <typeparam name="T">Tipo de la clase de extensión.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Obtiene una colección de objetos de extensión para este objeto extensible.</summary>
      <returns>
        <see cref="T:System.ServiceModel.IExtensionCollection`1" /> de objetos de extensión.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Habilita a un objeto para extender otro objeto mediante agregación.</summary>
      <typeparam name="T">El objeto que participa en el comportamiento personalizado.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Habilita un objeto de extensión para averiguar cuándo se agregó. Es llamado cuando la extensión se agrega a la propiedad <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Objeto extensible que agrega esta extensión.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Habilita a un objeto para averiguar cuándo deja de estar agregado. Se le llama cuando la extensión se quita de la propiedad <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Objeto extensible que agrega esta extensión.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Colección de objetos <see cref="T:System.ServiceModel.IExtension`1" /> que permite recuperar los objetos <see cref="T:System.ServiceModel.IExtension`1" /> según su tipo.</summary>
      <typeparam name="T">Tipo de los objetos de extensión.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Busca el objeto de extensión especificado en la colección.</summary>
      <returns>Se encontró el objeto de extensión.</returns>
      <typeparam name="E">Tipo del objeto de extensión.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Busca todos los objetos de extensión especificados en la colección por <paramref name="E" />.</summary>
      <returns>Colección de todos los objetos de extensión de la colección que implementa el tipo especificado.</returns>
      <typeparam name="E">Tipo del objeto de extensión.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Representa un contrato de mensaje inválido.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.InvalidMessageContractException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.InvalidMessageContractException" /> con el mensaje especificado.</summary>
      <param name="message">Mensaje para la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.InvalidMessageContractException" /> que usa el mensaje y la excepción interna especificadas.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Especifica que un miembro se ha serializado como elemento dentro del cuerpo de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Obtiene o establece un valor que indica la posición en la que se ha serializado el miembro en el cuerpo de SOAP.</summary>
      <returns>La ubicación del elemento del cuerpo de SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor que pasa al establecedor de propiedades es un entero negativo.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Define una clase fuertemente tipada que corresponde al mensaje de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Obtiene o establece un valor que especifica si el cuerpo del mensaje tiene un elemento contenedor.</summary>
      <returns>Es true si el cuerpo del mensaje tiene un elemento contenedor; de lo contrario, false. El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Obtiene o establece el nombre del elemento contenedor del cuerpo del mensaje.</summary>
      <returns>El nombre del elemento contenedor de cuerpo del mensaje.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Obtiene o establece el espacio de nombres del elemento del contenedor del cuerpo del mensaje.</summary>
      <returns>El espacio de nombres del elemento contenedor.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Declara los miembros básicos de <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Especifica el nombre del elemento que corresponde a su miembro. </summary>
      <returns>Nombre del elemento que corresponde a su miembro. Esta cadena debe un nombre de elemento XML válido. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Especifica el espacio de nombres del elemento que corresponde a su miembro. </summary>
      <returns>Espacio de nombres del URI del elemento que corresponde a su miembro. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Excepción que se produce cuando las expectativas relativas a los encabezados de un mensaje de SOAP no se satisfacen cuando se procesa el mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.MessageHeaderException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> con el mensaje especificado.</summary>
      <param name="message">Mensaje que porta la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> que usa el mensaje especificado y un valor que indica si el encabezado del mensaje es un duplicado o no existe.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="isDuplicate">true si el encabezado de mensaje múltiple es un duplicado; false si no hay ningún encabezado de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> que usa el mensaje y la excepción interna especificadas que causaron la excepción.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que contiene la excepción interna que provocó la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> que usa el mensaje, el nombre del encabezado y el espacio de nombres especificados.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">Nombre del encabezado del mensaje.</param>
      <param name="ns">Espacio de nombres del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> que usa el mensaje, el nombre del encabezado y el espacio de nombres especificados y un valor que indica si el encabezado del mensaje es un duplicado o no existe.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">Nombre del encabezado del mensaje.</param>
      <param name="ns">Espacio de nombres del encabezado del mensaje.</param>
      <param name="isDuplicate">true si el encabezado de mensaje múltiple es un duplicado; false si no hay ningún encabezado de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> que usa el mensaje, el nombre del encabezado y el espacio de nombres especificados, un valor que indica si el encabezado del mensaje es un duplicado o no existe, y la excepción interna que causó la excepción.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">Nombre del encabezado del mensaje.</param>
      <param name="ns">Espacio de nombres del encabezado del mensaje.</param>
      <param name="isDuplicate">true si el encabezado de mensaje múltiple es un duplicado; false si no hay ningún encabezado de mensaje.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que contiene la excepción interna que provocó la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageHeaderException" /> que usa el mensaje, el nombre del encabezado y la excepción interna especificadas que causaron la excepción.</summary>
      <param name="message">Mensaje de la excepción.</param>
      <param name="headerName">Nombre del encabezado del mensaje.</param>
      <param name="ns">Espacio de nombres del encabezado del mensaje.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que contiene la excepción interna que provocó la excepción.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Obtiene el nombre del encabezado de SOAP que provocó la excepción.</summary>
      <returns>Nombre del encabezado de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Obtiene el espacio de nombres del encabezado de SOAP que provocó la excepción.</summary>
      <returns>Espacio de nombres del encabezado de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Obtiene un valor que indica si existen varios encabezados o si no hay encabezados de mensajes.</summary>
      <returns>true si el encabezado de mensaje múltiple es un duplicado; false si no hay ningún encabezado de mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controla el nombre de la solicitud y responde a los nombres de parámetro. No se puede utilizar con <see cref="T:System.ServiceModel.Channels.Message" /> o con contratos de mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtiene o establece el nombre de atributo del parámetro del esquema XML (XSD).</summary>
      <returns>Nombre de atributo del parámetro del XSD.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Proporciona acceso al contexto de ejecución de un método de servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContext" /> que usa el <see cref="T:System.ServiceModel.IContextChannel" /> especificado de una aplicación cliente. </summary>
      <param name="channel">
        <see cref="T:System.ServiceModel.IContextChannel" /> que se usa para crear un nuevo cliente <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">El canal es null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Obtiene o establece el contexto de ejecución del subproceso actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationContext" /> que representa el contexto de mensajes y ejecución del método actual.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Obtiene los encabezados de mensaje entrantes para <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que contiene los encabezados del mensaje entrante.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Obtiene las propiedades del mensaje entrante del <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene las propiedades de mensaje del mensaje entrante.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Obtiene la versión del mensaje de SOAP entrante para <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Versión de SOAP del mensaje entrante.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>El uso de esta propiedad está dirigido al sistema y los usuarios no deben llamarla.</summary>
      <returns>true</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Ocurre cuando se completa la operación.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Obtiene los encabezados de mensajes salientes para el <see cref="T:System.ServiceModel.OperationContext" /> activo.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que contiene los encabezados de mensajes salientes para el <see cref="T:System.ServiceModel.OperationContext" /> activo.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Obtiene las propiedades del mensaje saliente del <see cref="T:System.ServiceModel.OperationContext" /> activo.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene las propiedades del mensaje saliente.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Obtiene o establece la implementación del contexto de la solicitud para este método.</summary>
      <returns>Implementación de <see cref="T:System.ServiceModel.Channels.RequestContext" />, o null si no existe contexto de solicitud.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Crea un bloque en cuyo ámbito está el objeto <see cref="T:System.ServiceModel.OperationContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Inicializa una nueva instancia de clase <see cref="T:System.ServiceModel.OperationContextScope" /> que usa el <see cref="T:System.ServiceModel.IContextChannel" /> especificado para crear un nuevo <see cref="T:System.ServiceModel.OperationContext" /> para el ámbito.</summary>
      <param name="channel">El canal que se usará al crear el ámbito de un nuevo <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContextScope" /> para crear el ámbito del objeto <see cref="T:System.ServiceModel.OperationContext" /> especificado.</summary>
      <param name="context">El <see cref="T:System.ServiceModel.OperationContext" /> activo del ámbito creado.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Restaura el <see cref="T:System.ServiceModel.OperationContext" /> original al contexto activo y recicla el objeto <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indica que un método define una operación que forma parte de un contrato de servicio de una aplicación de Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Obtiene o establece la acción de WS Addressing del mensaje de solicitud. </summary>
      <returns>La acción que se usará para generar el encabezado de la acción de WS Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indica que una operación se implementa de forma asincrónica mediante un par de métodos  Begin&lt;methodName&gt; y End&lt;methodName&gt; en un contrato de servicio. </summary>
      <returns>Es true si el método Begin&lt;methodName&gt; coincide con un método End&lt;methodName&gt; y si la infraestructura puede tratarlo como operación que se implementa como par de métodos asincrónicos en la interfaz de servicio; de lo contrario, false. El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Obtiene o establece un valor que indica si una operación devuelve un mensaje de respuesta.</summary>
      <returns>Es true si una operación no devuelve un mensaje de respuesta y es false si lo hace.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Obtiene o establece el nombre de la operación.</summary>
      <returns>Nombre de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Obtiene o establece el valor de la acción de SOAP para el mensaje de respuesta de la operación.</summary>
      <returns>El valor de la acción de SOAP del mensaje de respuesta.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Representa el estilo de SOAP que determina la forma de formatear los metadatos WSDL del servicio.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Provoca que la representación WSDL contenga un elemento único que representa el documento que se intercambia para la operación.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Provoca que la representación de mensajes WSDL se intercambie para la operación y contiene parámetros como si se tratara de una llamada de procedimiento remota.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Excepción observada en el cliente que se produjo cuando la comunicación con la parte remota era imposible de realizar debido a que los protocolos de transferencia de datos eran divergentes.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.ProtocolException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ProtocolException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ProtocolException" /> con un mensaje de error especificado y una referencia a la excepción interna que representa la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que provocó que se produjera la excepción actual. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Excepción que se produce cuando se supera la cuota de mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.QuotaExceededException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.QuotaExceededException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.QuotaExceededException" /> con un mensaje de error especificado y una referencia a la excepción interna que representa la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que provocó que se produjera la excepción actual.</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Excepción que se produce cuando un servidor está demasiado ocupado como para aceptar un mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.ServerTooBusyException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServerTooBusyException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServerTooBusyException" /> con un mensaje de error especificado y una referencia a la excepción interna que representa la causa de la excepción.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que provocó que se produjera la excepción actual.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Excepción que se produce cuando no se puede activar un servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.ServiceActivationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceActivationException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceActivationException" /> con el mensaje de error y la excepción interna especificadas.  </summary>
      <param name="message">Mensaje de error que explica la razón de la excepción.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que provocó que se produjera la excepción actual. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indica que una interfaz o clase define un contrato de servicio de una aplicación cliente de Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Obtiene o establece el tipo de contrato de devolución de llamada cuando el contrato es dúplex.</summary>
      <returns>
        <see cref="T:System.Type" /> que indica el contrato de devolución de llamada. El valor predeterminado es null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Obtiene o establece el nombre que se usa para ubicar el servicio en un archivo de configuración de la aplicación.</summary>
      <returns>Nombre que se usa para ubicar el elemento de servicio en un archivo de configuración de la aplicación. Lo predeterminado es el nombre de la clase de implementación del servicio.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Obtiene o establece el nombre del elemento &lt;portType&gt; del Web Services Description Language (WSDL). </summary>
      <returns>El valor predeterminado es el nombre de la clase o interfaz a la que se aplica el <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento &lt;portType&gt; del Web Services Description Language (WSDL).</summary>
      <returns>Espacio de nombres de WSDL del elemento &lt;portType&gt;. El valor predeterminado es "http://tempuri.org". </returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Especifica los tipos conocidos que usará un servicio cuando se serialice o se deserialice.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> y especifica el nombre de un método que devuelve los tipos conocidos.</summary>
      <param name="methodName">Nombre de un método que devuelve los tipos conocidos.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con el nombre de un método que devuelve los tipos conocidos y el tipo que contiene el método (o métodos) que devuelve los tipos conocidos.</summary>
      <param name="methodName">Nombre de un método que devuelve los tipos conocidos.</param>
      <param name="declaringType">Tipo que pueden usar los tipos conocidos en el gráfico de objetos.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con el tipo conocido especificado.</summary>
      <param name="type">Especifica un tipo conocido que se usará en un parámetro o un valor devuelto definido por el servicio.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Obtiene el tipo que contiene los métodos que devuelven los tipos conocidos.</summary>
      <returns>Métodos que devuelven los tipos conocidos.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Obtiene el nombre de un método que devuelve la colección de tipos conocidos.</summary>
      <returns>Nombre del método que devuelve los tipos conocidos.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Tipo conocido que puede incluirse en un gráfico de objetos.</summary>
      <returns>
        <see cref="T:System.Type" /> del tipo conocido.</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contiene el mensaje que recibe un canal y que no puede asociarse a ninguna solicitud pendiente.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Obtiene el mensaje desconocido que generó el evento.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que causó el evento.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Representa un encabezado que encapsula un elemento de información de la dirección que se usa para identificar o interactuar con un extremo.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.AddressHeader" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con el valor, el nombre y el espacio de nombres especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con el <paramref name="name" /> y el <paramref name="ns" /> especificados que contiene el elemento de información especificado por <paramref name="value" />.</returns>
      <param name="name">Nombre del encabezado de la dirección.</param>
      <param name="ns">Espacio de nombres del encabezado de la dirección.</param>
      <param name="value">Elemento de información del encabezado de la dirección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null o <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con un nombre y espacio de nombres específicos que usa un formateador concreto para serializar el elemento de la información de un objeto específico.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> con el <paramref name="name" /> y el <paramref name="ns" /> especificados que contiene el elemento de información especificado por <paramref name="value" />.</returns>
      <param name="name">Nombre del encabezado de la dirección.</param>
      <param name="ns">Espacio de nombres del encabezado de la dirección.</param>
      <param name="value">Elemento de información del encabezado de la dirección.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se usa para serializar el objeto específico en el parámetro <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="serializer" /> es null o <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determina si el elemento de información de un objeto específico es igual al objeto que está en el encabezado de la dirección actual.</summary>
      <returns>Es true si el elemento de información de un <paramref name="obj" /> específico es equivalente al elemento de información que está en el encabezado de la dirección actual; de lo contrario, false. En concreto, devuelve false si <paramref name="obj" /> es null.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> que se debe comparar con el objeto que está en el encabezado de la dirección actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Devuelve un encabezado XML que puede serializar el objeto del encabezado de la dirección actual.</summary>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede serializar el objeto del encabezado de la dirección actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Proporciona un código hash único para el encabezado de una dirección. </summary>
      <returns>Un código hash único para el encabezado de la dirección actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializa el elemento de información del encabezado de la dirección actual a un objeto de un tipo específico.</summary>
      <returns>Instancia de una clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores suministrados por el objeto de encabezado de dirección actual.</returns>
      <typeparam name="T">Clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores suministrados por el objeto de encabezado de dirección actual.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializa el elemento de información del encabezado de la dirección actual para convertirlo en un objeto de tipo específico que usa un formateador concreto para serializar esa información.</summary>
      <returns>Instancia de una clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores suministrados por el objeto de encabezado de dirección actual.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> que se usa para deserializar el elemento de información del objeto del encabezado de la dirección actual.</param>
      <typeparam name="T">Clase de tipo <paramref name="T" /> con sus campos y propiedades establecidos en los valores suministrados por el objeto de encabezado de dirección actual.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>Una vez implementado, obtiene el nombre del encabezado de la dirección.</summary>
      <returns>Nombre del encabezado de la dirección.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>Una vez implementado, obtiene el espacio de nombres del encabezado de la dirección.</summary>
      <returns>Espacio de nombres del encabezado de la dirección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Una vez invalidado en una clase derivada, se invoca cuando el contenido del encabezado de la dirección se escribe en una secuencia o archivo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el contenido del encabezado de dirección en una secuencia o un archivo.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Una vez invalidado en una clase derivada, se invoca cuando el contenido del encabezado de la dirección comienza a escribirse en una secuencia o archivo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el encabezado de dirección en una secuencia o un archivo.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Ajusta el encabezado de la dirección al encabezado de mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> que ajusta el encabezado de la dirección actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el encabezado de dirección en una secuencia o un archivo mediante un <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el encabezado de dirección en una secuencia o un archivo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Escribe el encabezado de dirección en una secuencia o un archivo mediante un <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> utilizado para escribir el encabezado de dirección en una secuencia o un archivo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el contenido del encabezado de la dirección en una secuencia o archivo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el contenido del encabezado de dirección en una secuencia o un archivo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Comienza a escribir el contenido del encabezado de la dirección en una secuencia o archivo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el encabezado de dirección en una secuencia o un archivo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Representa una colección de encabezados de dirección segura para subprocesos y de sólo lectura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Inicializa una nueva instancia de clase <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> a partir de un conjunto enumerable de encabezados de direcciones.</summary>
      <param name="addressHeaders">Conjunto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que se usa para inicializar la colección.</param>
      <exception cref="T:System.ArgumentException">Uno de los encabezados de la dirección del parámetro <paramref name="addressHeaders" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Agrega los encabezados de la colección en los encabezados de un mensaje específico.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> en el que se agregan los encabezados.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="message" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Busca los encabezados de las direcciones de la colección con el nombre y espacio de nombres especificados.</summary>
      <returns>
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.AddressHeader" /> que contiene todos los encabezados de la colección con el nombre y el espacio de nombres especificados.</returns>
      <param name="name">Nombre del encabezado de dirección que se va a buscar.</param>
      <param name="ns">Espacio de nombres del encabezado de dirección que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Busca el primer encabezado de las direcciones de la colección con el nombre y espacio de nombres especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> de la colección con el nombre y espacio de nombre específicos.</returns>
      <param name="name">Nombre del encabezado de dirección que se va a buscar.</param>
      <param name="ns">Espacio de nombres del encabezado de dirección que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="ns" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Hay más de un encabezado que tiene el <paramref name="name" /> y <paramref name="ns" /> especificado.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Versión de WS-Addressing asociada al mensaje de SOAP o comprendida por un extremo.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Obtiene la versión de la dirección que indica que no se está usando ninguna versión de WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> no usa una versión de WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Cadena que representa la versión de la dirección actual.</summary>
      <returns>Versión de dirección actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Obtiene un identificador de la versión de la dirección asociada a WS-Addressing 1.0.</summary>
      <returns>Instancia singleton que identifica el <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> que está asociado a WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Elemento de enlace que especifica el formato binario .NET para XML que se usa para codificar mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea la pila del generador de canales en el cliente que crea un tipo especificado de canal para un contexto especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> para el contexto especificado.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del canal.</param>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Crea un nuevo objeto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> inicializado desde el actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> con valores de propiedad iguales a los del elemento actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea un generador de codificadores de mensajes binarios que emplea las versiones de SOAP y WS-Addressing y la codificación de caracteres que especifica el elemento de enlace de codificación actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> que crea este elemento de enlace.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Obtiene o establece el mensaje SOAP y las versiones WS-Addressing que se usan o se esperan.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que se usa o se espera.</returns>
      <exception cref="T:System.ArgumentNullException">El valor establecido es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor establecido es una versión de sobre no compatible.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contiene los elementos de enlace que especifican los protocolos, transportes y codificadores de mensajes que se usan para la comunicación entre clientes y servicios.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.Binding" /> con el nombre predeterminado y el espacio de nombres. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.Binding" /> a partir de un enlace del servicio especificado.</summary>
      <param name="name">
        <see cref="P:System.ServiceModel.Channels.Binding.Name" /> del enlace.</param>
      <param name="ns">
        <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> del enlace.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> es null o una cadena vacía.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="ns" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Crea la pila del generador de canales en el cliente que crea un tipo de canal específico y que satisface las características que especifica la matriz de objeto.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> que satisface las características especificadas por la colección.</returns>
      <param name="parameters">Matriz de objetos que especifica requisitos para el generador de canales que se crea.</param>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales.</typeparam>
      <exception cref="T:System.InvalidOperationException">Falta el elemento de transporte o bien no funciona, el esquema no es válido, o no se ha especificado la versión del mensaje.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Crea la pila del generador de canales en el cliente que crea un tipo de canal específico y que satisface las características que especifica la colección de parámetros de enlace.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> que satisface las características especificadas por la colección.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que especifica los requisitos del generador de canales creado.</param>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales.</typeparam>
      <exception cref="T:System.InvalidOperationException">Falta el elemento de transporte o bien no funciona, el esquema no es válido, o no se ha especificado la versión del mensaje.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Devuelve un valor que indica si el enlace actual puede crear una pila del generador de canales en el cliente que satisface los requisitos que especifica una matriz de objeto.</summary>
      <returns>true si la pila de generador de canales especificada puede crearse en el cliente; de lo contrario, false.</returns>
      <param name="parameters">Matriz de objetos que especifica requisitos para el generador de canales que se crea.</param>
      <typeparam name="TChannel">Tipo de canal para el que se va a probar el generador.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Devuelve un valor que indica si el enlace actual puede crear una pila del generador de canales en el cliente que satisface la colección de parámetros de enlace especificados.</summary>
      <returns>true si la pila de generador de canales especificada puede crearse en el cliente; de lo contrario, false.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que especifica los requisitos del generador de canales creado.</param>
      <typeparam name="TChannel">Tipo de canal para el que se va a probar el generador.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Obtiene o establece el intervalo de tiempo que se ofrece para que una conexión se cierre antes de que el transporte produzca una excepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera. El valor predeterminado es 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>Una vez invalidado en una clase derivada, crea una colección que contiene los elementos de enlace que forman parte del enlace actual. </summary>
      <returns>Objeto <see cref="T:System.Collections.Generic.ICollection`1" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que contiene los elementos de enlace del objeto de enlace actual en el orden correcto.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de enlaces.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> que especifica los requisitos del canal creado.</param>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Obtiene la versión del mensaje que usan los clientes y servicios configurados con el enlace.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usan los clientes y servicios configurados con el enlace.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Obtiene o establece el nombre del enlace.</summary>
      <returns>Nombre del enlace. El nombre predeterminado es null.</returns>
      <exception cref="T:System.ArgumentException">El valor establecido no puede ser null ni una cadena vacía.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Obtiene o establece el espacio de nombres del enlace XML.</summary>
      <returns>Espacio de nombres del enlace XML. El valor predeterminado es "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">Este valor establecido no puede ser null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Obtiene o establece el intervalo de tiempo que se ofrece para que una conexión se abra antes de que el transporte produzca una excepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera. El valor predeterminado es 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Obtiene o establece el intervalo de tiempo durante el que una conexión puede permanecer inactiva y en el que no se recibirán mensajes de aplicación hasta que se active.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica durante cuánto tiempo tiene que recibir la aplicación un mensaje antes de que se agote el tiempo de espera. El valor predeterminado es 10 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>Una vez implementado en una clase derivada, establece el esquema URI que especifica el transporte que usan los generadores de canales creados por los enlaces.</summary>
      <returns>El esquema URI que usan los canales que crean los generadores del enlace actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Obtiene o establece el intervalo de tiempo que se ofrece para que una operación de escritura se complete antes de que el transporte produzca una excepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de escritura antes de que se agote el tiempo de espera. El valor predeterminado es 1 minuto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que cero o demasiado grande.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Proporciona información sobre las direcciones, enlaces, elementos de enlace y parámetros de enlace necesarios para construir los generadores de canales en el cliente de Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingContext" /> para un enlace y una colección de parámetros de enlace específicos.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> del canal.</param>
      <param name="parameters">
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> del canal.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="binding" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Obtiene el enlace del canal generado en el contexto actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> del canal generado en el contexto actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Obtiene la colección de parámetros de enlace del canal generado en el contexto actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> del canal generado en el contexto actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Crea el generador de canales interno para los canales de un tipo concreto según el generador de canales actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> que representa el generador de canales interno del generador de canales actual.</returns>
      <typeparam name="TChannel">Tipo de objeto <see cref="T:System.ServiceModel.Channels.IChannel" /> que crea el generador de canales internos.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Devuelve un valor que indica si el generador de canales interno puede producir un tipo concreto de canal.</summary>
      <returns>Es true si el generador de canales interno puede producir el <paramref name="TChannel" /> especificado; de lo contrario, es false.</returns>
      <typeparam name="TChannel">Tipo de objeto <see cref="T:System.ServiceModel.Channels.IChannel" /> que crea el generador de canales internos.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Devuelve una copia del contexto creado por el canal actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BindingContext" /> que es una copia del contexto creado por el canal actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de enlaces.</summary>
      <returns>Objeto de tipo <paramref name="T " /> solicitado si existe, o null si no.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Obtiene los elementos de enlace que usan otros elementos de enlace para construir la pila de canales.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contiene los elementos de enlace que usan otros elementos de enlace para construir la pila de canales.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Elementos de enlaces que crean los generadores de canales para varios tipos de canales que se usan para procesar los mensajes salientes de un cliente Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" /> a partir de un elemento de enlace especificado.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> que va a clonarse.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Inicializa un generador de canales para crear canales de un tipo especificado a partir del contexto del enlace.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> inicializado a partir del <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto del elemento de enlace. </param>
      <typeparam name="TChannel">Tipo de canal que crea el generador.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve un valor que indica si el elemento de enlace puede producir un generador de canales para un tipo concreto de canal.</summary>
      <returns>Es true si el elemento de enlace puede construir el <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" />; de lo contrario, false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto del elemento de enlace. </param>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>Cuando se invalida en una clase derivada, crea una copia del objeto del elemento de enlace.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> que es una copia en profundidad del original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Una vez invalidado en una clase derivada, devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de enlaces.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no existe.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</param>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Representa la colección de elementos de enlace que se usa en un enlace.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> a partir de un conjunto enumerable de elementos de enlace.</summary>
      <param name="elements">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de tipo genérico <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se usa para inicializar la colección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="elements" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> a partir de una matriz de elementos de enlace.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se usa para inicializar la colección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="elements" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Agrega elementos de enlace a partir de una matriz en la colección de elementos de enlace.</summary>
      <param name="elements">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="elements" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Crea una copia de la colección de elementos de enlace.</summary>
      <returns>Copia de <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Devuelve un valor que indica si el tipo específico de elemento de enlace pertenece a la colección de elementos de enlace.</summary>
      <returns>Es true si el tipo de elemento de enlace especificado está en la colección; de lo contrario, es false.</returns>
      <param name="bindingElementType">Tipo de elemento de enlace que se está probando para incluir en la colección.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bindingElementType" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Devuelve el primer elemento de un tipo concreto de la colección de elementos de enlace.</summary>
      <returns>El elemento de tipo <see cref="T:System.Type" />, si se encuentra; si no se encuentra, 0 si <paramref name="T" /> es un tipo de valor y null si <paramref name="T" /> es un tipo de referencia.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Devuelve todos los elementos de un tipo concreto de la colección de elementos de enlace.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de todos los elementos de tipo <see cref="T:System.Type" /> si se encuentran; si no se encuentra ninguno, 0 si <paramref name="T" /> es un tipo de valor y null si <paramref name="T" /> es un tipo de referencia.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserta un elemento de enlace en una ubicación específica dentro de una colección de elementos de enlace.</summary>
      <param name="index">Ubicación en la que se inserta el elemento de enlace en la colección.</param>
      <param name="item">Objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Quita un elemento de enlace del tipo especificado de la colección de elementos de enlace.</summary>
      <returns>El elemento de tipo <see cref="T:System.Type" /> que se ha quitado.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Quita todos los elementos de enlace del tipo especificado de la colección de elementos de enlace.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de todos los elementos de tipo <see cref="T:System.Type" /> que se han encontrado.</returns>
      <typeparam name="T">
        <see cref="T:System.Type" /> del elemento que se va a buscar.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Reemplaza un elemento de enlace de un índice específico de la colección de elementos de enlace.</summary>
      <param name="index">Índice de base cero del elemento que se va a reemplazar.</param>
      <param name="item">Nuevo valor del elemento <see cref="T:System.ServiceModel.Channels.BindingElement" /> en el <paramref name="index" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Representa una colección de parámetros de enlace que almacenan la información que usan los elementos de enlace para crear generadores.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Representa al autor del cuerpo del mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BodyWriter" /> que indica explícitamente si se debe almacenar en búfer.</summary>
      <param name="isBuffered">true si el escritor del cuerpo puede invocarse varias veces; de lo contrario, false.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Obtiene un valor que indica si se puede llamar al método de escritura varias veces.</summary>
      <returns>true si el escritor del cuerpo puede invocarse varias veces; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Una vez implementado, proporciona un punto de extensibilidad cuando se escribe el contenido del cuerpo.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el cuerpo del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el contenido del cuerpo del mensaje.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Una vez implementado en una clase derivada, puede utilizar la clase <see cref="T:System.ServiceModel.Channels.BufferManager" /> para gestionar un grupo de búferes. El grupo y sus búferes se crean cuando se crea una instancia de esta clase y se destruye cuando una colección de elementos no utilizados reclama el grupo de búferes. Cada vez que necesite usar un búfer, elija uno del grupo, úselo y devuélvalo al grupo cuando haya terminado. Este proceso es mucho más rápido y usar menos recursos que el proceso de crear y eliminar un búfer cada vez que necesite usar uno.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.BufferManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Libera los búferes que actualmente están almacenados en la memoria caché del administrador.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Crea un nuevo administrador de búfer con un grupo de búfer máximo específico y un tamaño máximo de cada búfer que compone el grupo.</summary>
      <returns>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.BufferManager" /> con los parámetros especificados.</returns>
      <param name="maxBufferPoolSize">El tamaño máximo del grupo.</param>
      <param name="maxBufferSize">El tamaño máximo de un búfer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> o <paramref name="maxBufferSize" /> era menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Devuelve un búfer al grupo.</summary>
      <param name="buffer">Referencia al búfer que se va a devolver.</param>
      <exception cref="T:System.ArgumentNullException">La referencia de <paramref name="buffer" /> no puede ser null.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="buffer" /> no coincide con la propiedad de la longitud del búfer del grupo.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Obtiene un búfer que tiene al menos el tamaño especificado en el grupo. </summary>
      <returns>Una matriz de bytes que tiene el tamaño solicitado de búfer.</returns>
      <param name="bufferSize">Tamaño, en bytes, del búfer solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> no puede ser menor que cero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Proporciona la implementación básica de los canales personalizados.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelBase" />. </summary>
      <param name="channelManager">
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> que proporciona tiempos de espera predeterminados para las operaciones de canales (enviar, recibir, abrir y cerrar).</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="channelManager" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de recepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de recepción antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de envío.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Devuelve el objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no existe.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Obtiene el administrador de canales que está asociado al canal actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> que se asocia al canal actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Invocado durante la transición de un objeto de comunicación al estado de cierre.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de cierre, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de cierre.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de apertura, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de recepción, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de envío, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de envío.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Proporciona una implementación básica para todos los generadores de canales personalizados.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> con los tiempos de espera de comunicación predeterminados que se han especificado.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> que especifica los tiempos de espera predeterminados para operaciones de apertura, envío, recepción y cierre al intercambiar mensajes. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de recepción.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de recepción antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Obtiene el intervalo de tiempo predeterminado proporcionado para que se complete una operación de envío.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Devuelve el objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserta el procesamiento en un objeto de comunicación después de haber pasado al estado de Cerrando debido a la invocación de una operación de anulación sincrónica.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación de cierre asincrónica para cerrar los canales creados por el generador.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación on-close asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-close antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación on-close asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserta el procesamiento de un objeto de comunicación tras pasar al estado de Abriendo, que debe completarse en un intervalo de tiempo concreto.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-close antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar los canales que abrió el generador.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Proporciona una implementación básica de los generadores de canales del cliente para crear canales de un tipo concreto que estén conectados a direcciones específicas.</summary>
      <typeparam name="TChannel">Tipo de canal que crea el generador.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> con los tiempos de espera de comunicación predeterminados.</summary>
      <param name="timeouts">
        <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> que especifica los tiempos de espera predeterminados para operaciones de apertura, envío, recepción y cierre al intercambiar mensajes.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un tipo concreto de canal con una dirección de extremo específica.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> con el <paramref name="address" /> especificado.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo remoto al que envía los mensajes el canal.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="address" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un tipo concreto de canal con una dirección de transporte y extremo específicas.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> con las direcciones remota y de transporte específicas.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo remoto al que envía los mensajes el canal.</param>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> o <paramref name="via" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Anula cada canal que administra el generador de canales.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar todos los canales asociados al generador de canales en un intervalo de tiempo concreto.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación on-close asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-close antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación on-close asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación on-close asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Cierra todos los canales asociados al generador de canales en un intervalo de tiempo concreto.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-close antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Una vez implementado en una clase derivada, proporciona un punto de extensibilidad al crear canales.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> con la dirección especificada.</returns>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo remoto al que envía los mensajes el canal.</param>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar todos los canales asociados al generador de canales en un intervalo de tiempo concreto.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirma que el generador de canales está abierto y listo para crear canales.</summary>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">El generador de canales actual no está en estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Proporciona una implementación básica para administrar los tiempos de espera predeterminados que están asociados a los generadores de canales y de agentes de escucha.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>Una vez invalidado en una clase derivada, obtiene el intervalo de tiempo predeterminado que debe completar un canal para recibir un mensaje.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica en cuánto tiempo debe completar el canal la recepción de un mensaje antes de que se invoque el método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>Una vez invalidado en una clase derivada, obtiene el intervalo de tiempo predeterminado que debe completar un canal para enviar un mensaje.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica en cuánto tiempo debe completar el canal el envío de un mensaje antes de que se invoque el método de envío.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de cierre, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de cierre.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de apertura, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de apertura.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de recepción, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de recepción.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Obtiene el intervalo de tiempo transcurrido el cual finaliza el tiempo de espera del método de envío, invocado por un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo de espera del método de envío.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Representa una colección de parámetros de canales.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
      <param name="channel">Canal cuyos parámetros se encuentran en esta colección.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Obtiene el canal cuyos parámetros se encuentran en esta colección. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannel" /> cuyos parámetros se encuentran en esta colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Borra la colección de parámetros.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserta el elemento especificado en la colección por medio del índice especificado.</summary>
      <param name="index">Índice del elemento de la colección.</param>
      <param name="item">Elemento que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Agrega los parámetros de la colección actual a un <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> de un canal específico.</summary>
      <param name="innerChannel">El canal que recibe los parámetros de la colección actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Quita todos los parámetros de la colección.</summary>
      <param name="index">Índice del parámetro que se va a quitar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Reemplaza un elemento de la colección en un índice especificado.</summary>
      <param name="index">Índice del elemento que se va a reemplazar.</param>
      <param name="item">Valor del elemento de reemplazo.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Proporciona una implementación básica para la máquina de estados básicos que es común a todos los objetos del sistema dirigidos a la comunicación, incluyendo los canales y los generadores de canales.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> con el bloqueo exclusivo mutuo para proteger las transiciones de estado específicas.</summary>
      <param name="mutex">Bloqueo mutuamente excluyente que protege la instancia de la clase durante una transición de estado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Provoca que un objeto de comunicación pase inmediatamente de su estado actual al estado Cerrado.</summary>
      <exception cref="T:System.InvalidOperationException">No se ha llamado al método <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" /> de clase base o al método <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" /> de clase base.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo predeterminado asignado a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de cierre asincrónica.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">El estado del objeto de comunicación no es <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo predeterminado asignado a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para cerrar un objeto de comunicación en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException">El estado del objeto de comunicación no es <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Provoca que un objeto de comunicación pase de su estado actual a estado cerrado.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo predeterminado asignado a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase del estado actual a estado cerrado en un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Se ha invocado <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Se produce cuando un objeto de comunicación pasa a estado cerrado.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Se produce cuando un objeto de comunicación pasa a estado de cierre.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene el intervalo predeterminado de tiempo que se proporciona para completar una operación de cierre.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de cierre antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>Cuando se invalida en una clase derivada, obtiene el intervalo predeterminado de tiempo que se proporciona para completar una operación de apertura.</summary>
      <returns>
        <see cref="T:System.Timespan" /> predeterminado que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Provoca que un objeto de comunicación pase de su estado actual a estado con error.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Se produce cuando un objeto de comunicación pasa a estado con error.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Obtiene el tipo de objeto de comunicación.</summary>
      <returns>Tipo del objeto de comunicación.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Obtiene un valor que indica si se ha eliminado el objeto de comunicación.</summary>
      <returns>Es true si el objeto de comunicación se encuentra en estado cerrado; en caso contrario, es false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Cuando se implementa en una clase derivada, inserta procesamiento en un objeto de comunicación después de que pase al estado de cierre debido a la invocación de una operación de anulación sincrónica.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Cuando se implementa en una clase derivada, inserta procesamiento después de que un objeto de comunicación pase al estado de cierre debido a la invocación de una operación de cierre asincrónica.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación on-close asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-close antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación on-close asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación on-close asincrónica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Cuando se implementa en una clase derivada, inserta procesamiento en un objeto de comunicación después de que pase al estado de apertura debido a la invocación de una operación de apertura asincrónica.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de apertura asincrónica. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-open antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación on-open asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación on-open asincrónica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Cuando se implementa en una clase derivada, inserta procesamiento en un objeto de comunicación después de que pase al estado de cierre debido a la invocación de una operación de cierre sincrónica.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-close antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Invocado durante la transición de un objeto de comunicación al estado de cierre.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Invocado durante la transición de un objeto de comunicación al estado de cierre.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Cuando se implementa en una clase derivada, finaliza una operación asíncrona después del cierre de un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Cuando se implementa en una clase derivada, finaliza una operación asíncrona después de la apertura de un objeto de comunicación.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserta procesamiento en un objeto de comunicación después de que pase al estado de error debido a la invocación de una operación con error sincrónica.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Cuando se implementa en una clase derivada, inserta procesamiento en un objeto de comunicación después de que pase al estado de apertura, que se debe completar en un intervalo de tiempo específico.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación on-open antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Invocado durante la transición de un objeto de comunicación al estado abierto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Invocado durante la transición de un objeto de comunicación al estado de apertura.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Provoca que un objeto de comunicación pase del estado creado a estado abierto.</summary>
      <exception cref="T:System.InvalidOperationException">El estado del objeto de comunicación no es <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo predeterminado asignado a la operación antes de que esta se completara.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Provoca que un objeto de comunicación pase del estado creado a estado abierto en un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de apertura antes de que se agote el tiempo de espera.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException">El estado del objeto de comunicación no es <see cref="F:System.ServiceModel.CommunicationState.Opened" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.TimeoutException">Se ha excedido el intervalo de tiempo especificado por <paramref name="timeout" /> que se asignó a la operación antes de que esta se completara.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Se produce cuando un objeto de comunicación pasa a estado abierto.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Se produce cuando un objeto de comunicación pasa a estado de apertura.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Obtiene un valor que indica el estado actual del objeto de comunicación.</summary>
      <returns>Un valor de la enumeración <see cref="T:System.ServiceModel.CommunicationState" /> que indica el estado actual del objeto.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Obtiene el bloqueo mutuamente excluyente que protege la instancia de la clase durante una transición de estado.</summary>
      <returns>Bloqueo mutuamente excluyente que protege la instancia de la clase durante una transición de estado.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Inicia una excepción si se elimina el objeto de comunicación.</summary>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Inicia una excepción si el objeto de comunicación de la propiedad <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> no se ha establecido al estado <see cref="F:System.ServiceModel.CommunicationState.Created" />.</summary>
      <exception cref="T:System.InvalidOperationException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Inicia una excepción si el objeto de comunicación no está en estado <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</summary>
      <exception cref="T:System.InvalidOperationException">El estado del objeto de comunicación no es <see cref="F:System.ServiceModel.CommunicationState.Created" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, por lo que no puede utilizarse.</exception>
      <exception cref="T:System.ObjectDisposedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />, por lo que no puede modificarse.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El estado del objeto de comunicación es <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, por lo que no puede modificarse.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Define un enlace de una lista de elementos de enlace. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> con los elementos de enlace de una pila de canales completa.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que contiene los elementos de enlace de la pila de canales ordenados de arriba a abajo.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bindingElementsInTopDownChannelStackOrder" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> a partir de los valores de un enlace concreto.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> utilizado para inicializar el enlace personalizado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="binding" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> a partir de una matriz de elementos de enlace.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizado para inicializar el enlace personalizado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bindingElementsInTopDownChannelStackOrder" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CustomBinding" /> a partir de una matriz de elementos de enlace con un nombre y un espacio de nombres concretos.</summary>
      <param name="name">Nombre del enlace.</param>
      <param name="ns">Espacio de nombres del enlace.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> utilizado para inicializar el enlace personalizado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bindingElementsInTopDownChannelStackOrder" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Devuelve una colección genérica de los elementos de enlace a partir del enlace personalizado.</summary>
      <returns>Objeto <see cref="T:System.Collections.Generic.ICollection`1" /> de tipo <see cref="T:System.ServiceModel.Channels.BindingElement" /> que contiene los elementos de enlace del enlace personalizado.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Obtiene los elementos de enlace del enlace personalizado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contiene los elementos de enlace del enlace personalizado.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Obtiene el esquema URI para transporte utilizado por el enlace personalizado.</summary>
      <returns>El esquema URI para transporte utilizado por el enlace personalizado; o una cadena vacía si no hay transporte (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> es null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Convierte las excepciones iniciadas por un canal en mensajes de error SOAP que cumplen con el protocolo del canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Obtiene el convertidor de errores predeterminado.</summary>
      <returns>Instancia de <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Cuando se implementa en una clase derivada, intenta crear la excepción.</summary>
      <returns>true si el error se convirtió correctamente; de lo contrario, es false. El valor predeterminado es false.</returns>
      <param name="message">Error <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="fault">Error.</param>
      <param name="exception">Si la conversión se realiza correctamente, la <see cref="T:System.Exception" /> SOAP se devuelve como parámetro out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Cuando se implementa en una clase derivada, intenta crear el mensaje de error después de convertir el error en una excepción SOAP.</summary>
      <returns>Es true si el mensaje de error se creó correctamente; de lo contrario, es false. El valor predeterminado es false.</returns>
      <param name="exception">Excepción SOAP.</param>
      <param name="message">El mensaje de error se devolvió como parámetro out.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> devuelve true, pero <paramref name="message" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Ajusta <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> con la comprobación del error.</summary>
      <returns>true si el error se convirtió correctamente; de lo contrario, es false. El valor predeterminado es false.</returns>
      <param name="message">Mensaje de error.</param>
      <param name="fault">Error.</param>
      <param name="exception">Si la conversión se realiza correctamente, la excepción SOAP se devuelve como parámetro out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> o <paramref name="fault" /> es null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> devuelve true, pero <paramref name="exception" /> es null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> devuelve false, pero <paramref name="exception" /> no es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>Habilita la administración del control de las cookies HTTP en solicitudes y respuestas HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> a partir de un elemento de enlace especificado.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> que va a clonarse.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Inicializa un generador de canales para crear canales de un tipo especificado a partir del contexto del enlace.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> inicializado a partir del <paramref name="context" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto del elemento de enlace.</param>
      <typeparam name="TChannel">Tipo de canal que crea el generador.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>Devuelve una copia del objeto del elemento de enlace actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BindingElement" />, clon profundo del original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de enlaces.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no existe.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</param>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Proporciona acceso a la solicitud HTTP para obtener acceso y responder a la información adicional disponible para las solicitudes de protocolo HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Obtiene los encabezados HTTP de la solicitud HTTP.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> que contiene los encabezados HTTP de la solicitud HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Obtiene o establece el verbo HTTP para la solicitud HTTP.</summary>
      <returns>Verbo HTTP para la solicitud HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">El <paramref name="value" /> establecido es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Obtiene el nombre de la propiedad de mensaje asociada a la clase <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
      <returns>Valor "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Obtiene o establece la cadena de consulta para la solicitud HTTP.</summary>
      <returns>Cadena de consulta de la solicitud HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">El <paramref name="value" /> establecido es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Obtiene o establece un valor que indica si se debe ignorar el cuerpo del mensaje y enviar sólo los encabezados.</summary>
      <returns>Es true si el cuerpo del mensaje se suprime; en caso contrario, es false. El valor predeterminado es false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Proporciona acceso a la respuesta HTTP para obtener acceso y responder a la información adicional disponible para las solicitudes de protocolo HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Obtiene los encabezados HTTP de la respuesta HTTP.</summary>
      <returns>Devuelve <see cref="T:System.Net.WebHeaderCollection" />, que contiene los encabezados HTTP de la respuesta HTTP.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Obtiene el nombre de la propiedad de mensaje asociada a la clase <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
      <returns>Devuelve “httpResponse”.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Obtiene o establece el código de estado de la respuesta HTTP actual que lleva adjunta esta propiedad.</summary>
      <returns>
        <see cref="T:System.Net.HttpStatusCode" /> para enviar en la respuesta HTTP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor se establece en menos que 100 o más que 599.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Obtiene o establece la descripción del código de estado de la respuesta HTTP actual que lleva adjunta esta propiedad.</summary>
      <returns>Descripción de estado que se debe enviar para la respuesta HTTP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Representa el elemento de enlace que se usa para especificar un transporte HTTPS para la transmisión de mensajes. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Instancia de la clase <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea un generador de canales de un tipo específico que se puede usar para crear un canal.</summary>
      <returns>Generador de canales del tipo especificado que se configura en función de los valores establecidos en el elemento de enlace de transporte.</returns>
      <param name="context">Miembros <see cref="T:System.ServiceModel.Channels.BindingContext" /> que describen enlaces, comportamientos, contratos y otra información requerida para crear el generador de canales.</param>
      <typeparam name="TChannel">Tipo de canal.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> no puede ser null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Crea una copia del elemento de enlace actual.</summary>
      <returns>Copia del elemento de enlace actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtiene un objeto concreto de la <see cref="T:System.ServiceModel.Channels.BindingContext" />. Este método obtiene el objeto especificado de la clase base o de los antecesores de esa clase.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Devuelve el esquema URI del transporte.</summary>
      <returns>Esquema URI del transporte ("HTTPS").</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Representa el elemento de enlace que se usa para especificar un transporte HTTP para la transmisión de mensajes. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
      <param name="elementToBeCloned">Instancia de la clase <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea un generador de canales que se puede usar para crear un canal.</summary>
      <returns>Generador de canales del tipo especificado.</returns>
      <param name="context">Miembros <see cref="T:System.ServiceModel.Channels.BindingContext" /> que describen enlaces, comportamientos, contratos y otra información requerida para crear el generador de canales.</param>
      <typeparam name="TChannel">Tipo de generador de canales.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> no puede ser null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determina si se puede crear un generador de canales del tipo especificado.</summary>
      <returns>Es true si se puede crear un generador de canales; en caso contrario, es false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> para crear el canal.</param>
      <typeparam name="TChannel">Tipo de canal que se debe comprobar.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Crea una copia del elemento de enlace actual.</summary>
      <returns>Copia del elemento de enlace actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtiene una propiedad del <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</summary>
      <returns>Propiedad del <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propiedad que se va a obtener.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Obtiene o establece el tamaño máximo del búfer que se va a usar. Para los mensajes almacenados en búfer, este valor es igual a <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />. Para los mensajes en secuencia, este valor es el tamaño máximo de los encabezados SOAP, que se deben leer en modo búfer.</summary>
      <returns>Tamaño máximo, en bytes, del búfer. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Obtiene el esquema URI del transporte.</summary>
      <returns>Devuelve <see cref="F:System.Uri.UriSchemeHttp" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Define la interfaz básica que deben implementar todos los objetos de canal. Estos objetos deben implementar la interfaz de equipo de estado que comparten todos los objetos de comunicación y un método para recuperar objetos de la pila de canales. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Define la interfaz que debe implementar un generador de canales para producir canales.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Define la interfaz que deben implementar los generadores de canales para crear canales de tipo específico.</summary>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Crea un canal de un tipo específico para una dirección de extremo concreta.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> para la dirección de extremo especificada.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Crea un canal de un tipo específico para una dirección de extremo concreta y una dirección de transporte a la que se envían los mensajes.</summary>
      <returns>Canal de tipo <paramref name="TChannel" /> para la dirección de extremo especificada y la dirección de transporte.</returns>
      <param name="to">
        <see cref="T:System.ServiceModel.EndpointAddress" /> que proporciona la ubicación del servicio.</param>
      <param name="via">
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envía el mensaje.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Define la interfaz que debe implementar un canal para enviar y recibir mensajes.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Define la interfaz para la sesión implementada en cada lado de una comunicación bidireccional entre extremos de mensajería.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para finalizar la sesión saliente.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la interrupción de la sesión saliente asincrónica.</returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto que contiene información de estado de esta solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para finalizar la sesión saliente con un tiempo de espera especificado para completar la operación.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la interrupción de la sesión saliente asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual debe completarse una operación.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto que contiene información de estado de esta solicitud. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este extremo en el canal asociado a la sesión. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este extremo en el canal asociado a la sesión dentro de un intervalo de tiempo específico.</summary>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual debe completarse una operación.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para finalizar la sesión saliente que indica que no se enviarán más mensajes desde este extremo en el canal asociado a la sesión. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Define la interfaz que asocia un canal dúplex con una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>Define la interfaz que se usa para proporcionar acceso a una instancia opcional de <see cref="T:System.Net.CookieContainer" /> que se puede usar para administrar una colección de cookies.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>Obtiene o establece el objeto <see cref="T:System.Net.CookieContainer" /> que se va a usar, en caso de que se vayan a emplear objetos.</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> que se va a utilizar, si se van a usar contenedores, o null en caso contrario.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Define la interfaz que debe implementar un canal para recibir un mensaje. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para recibir un mensaje que tiene un objeto de estado asociado. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la recepción del mensaje asincrónica. </returns>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para recibir un mensaje que tiene un tiempo de espera específico y un objeto de estado asociados. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de recepción asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que debe esperarse hasta que un mensaje esté disponible.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
      <exception cref="T:System.TimeoutException">Se ha sobrepasado el <paramref name="timeout" /> especificado antes de que se completara la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para recibir un mensaje que tiene un tiempo de espera específico y un objeto de estado asociados. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de recepción asincrónica.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que debe esperarse hasta que un mensaje esté disponible.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
      <exception cref="T:System.TimeoutException">Se ha sobrepasado el <paramref name="timeout" /> especificado antes de que se completara la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica de espera para recibir un mensaje que tiene un tiempo de espera específico y un objeto de estado asociados. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica de espera para recibir un mensaje.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que debe esperarse hasta que un mensaje esté disponible.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica.</param>
      <exception cref="T:System.TimeoutException">Se ha sobrepasado el <paramref name="timeout" /> especificado antes de que se completara la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Finaliza una operación asincrónica para recibir un mensaje. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Finaliza la operación asincrónica especificada para recibir un mensaje.</summary>
      <returns>Es true si se recibe un mensaje antes de que se agote el intervalo de tiempo especificado; en caso contrario, es false.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Finaliza la operación asincrónica de espera para recibir un mensaje especificada.</summary>
      <returns>true si ha llegado un mensaje antes de que se sobrepasara el <paramref name="timeout" />; de lo contrario, false.</returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> que identifica la operación <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> que debe finalizar, y desde dónde se debe recuperar un resultado final.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Obtiene la dirección en la que el canal de entrada recibe los mensajes. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> en la que el canal de entrada recibe los mensajes. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Devuelve el mensaje recibido, en caso de que esté disponible. Si el mensaje no está disponible, bloquea durante un intervalo de tiempo predeterminado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Devuelve el mensaje recibido, en caso de que esté disponible. Si el mensaje no está disponible, bloquea durante un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido. </returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de recepción antes de que se agote el tiempo de espera y se inicie una <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">Se ha sobrepasado el <paramref name="timeout" /> especificado antes de que se completara la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Intenta recibir un mensaje dentro de un intervalo de tiempo especificado. </summary>
      <returns>Es true si se ha recibido un mensaje antes de que se sobrepasara el <paramref name="timeout" />; de lo contrario, es false.</returns>
      <param name="timeout">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido. </param>
      <exception cref="T:System.TimeoutException">Se ha sobrepasado el <paramref name="timeout" /> especificado antes de que se completara la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Devuelve un valor que indica si ha llegado un mensaje dentro de un intervalo de tiempo especificado.</summary>
      <returns>true si ha llegado un mensaje antes de que se sobrepasara el <paramref name="timeout" />; de lo contrario, false.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> especifica el intervalo de tiempo máximo que se debe esperar para la llegada de un mensaje.</param>
      <exception cref="T:System.TimeoutException">Se ha sobrepasado el <paramref name="timeout" /> especificado antes de que se completara la operación.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor que cero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Define la interfaz para la sesión implementada en el lado de recepción de una comunicación unidireccional entre extremos de mensajería. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Define la interfaz que asocia un canal de entrada con una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Define una interfaz que puede implementar para describir el conjunto de propiedades de un mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Crea una copia de la instancia actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Define la interfaz que debe implementar un canal para enviar un mensaje. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje al destino del canal de salida. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión del mensaje asincrónica. </returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida. </param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje al destino del canal de salida en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de envío asincrónica.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de envío asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de envío asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para transmitir un mensaje al destino del canal de salida. </summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Obtiene el destino del servicio al que se envían los mensajes en el canal de salida. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del servicio al que envía los mensajes el canal de salida. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Transmite un mensaje al destino del canal de salida. </summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía un mensaje en el canal de salida actual en un intervalo de tiempo especificado.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se envía en el canal de salida.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica cuánto tiene que durar la operación de envío antes de que se agote el tiempo de espera.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Obtiene el identificador URI que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envían los mensajes en el canal de salida.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Define la interfaz para la sesión implementada en el lado de envío de una comunicación unidireccional entre extremos de mensajería. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Define la interfaz que asocia un canal de salida con una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Define el contrato que un canal debe implementar para estar en el lado de la solicitud de una comunicación de solicitud y respuesta entre extremos de mensajería. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje de solicitud al lado de la respuesta de un intercambio de mensajes de solicitud y respuesta. </summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión del mensaje asincrónica. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inicia una operación asincrónica para transmitir un mensaje de solicitud al lado de la respuesta de un intercambio de mensajes de solicitud y respuesta en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la transmisión del mensaje asincrónica. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual debe recibirse una respuesta. (Con respecto a los valores predeterminados, véanse los comentarios.)</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica que transmite un mensaje de solicitud.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica que transmite un mensaje de solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Completa una operación asincrónica para devolver una respuesta basada en mensaje a una solicitud transmitida. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Obtiene la dirección remota a la que el canal de la solicitud envía los mensajes. </summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> a la que el canal de la solicitud envía los mensajes. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Envía una solicitud basada en mensaje y devuelve la respuesta basada en mensaje correlacionada en un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> recibido en respuesta a la solicitud. </returns>
      <param name="message">Solicitud <see cref="T:System.ServiceModel.Channels.Message" /> que se va a transmitir.</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual debe recibirse una respuesta.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Obtiene la dirección de transporte a la que se envía la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene la dirección de transporte a la que se envía el mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Define la interfaz que asocia un canal de solicitud con una sesión.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Define la interfaz para establecer un contexto compartido entre partes que intercambian mensajes mediante la especificación de un identificador para la sesión de comunicación. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Obtiene el identificador exclusivo de la sesión. </summary>
      <returns>Identificador exclusivo de la sesión. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Define la interfaz que asocia un canal a un tipo específico de sesión.</summary>
      <typeparam name="TSession">Tipo de <see cref="T:System.ServiceModel.Channels.ISession" /> asociado al canal.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Obtiene el tipo de sesión asociado al canal.</summary>
      <returns>El parámetro genérico <paramref name="TSession" /> que define la sesión asociada al canal.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Especifica la configuración de seguridad del cliente local.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Crea una nueva instancia de esta clase, una copia de la instancia actual.</summary>
      <returns>Nueva instancia clonada de <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Obtiene o establece la diferencia de tiempo máxima permitida entre los relojes del sistema de las dos partes en comunicación. </summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que representa la diferencia de tiempo máxima permitida entre los relojes del sistema de las dos partes en comunicación. El valor predeterminado es cinco minutos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de la propiedad es menor que 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Obtiene o establece el tiempo máximo de validez del valor de seguridad (nonce) de un mensaje.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que representa el tiempo máximo de validez del valor de seguridad (nonce) de un mensaje. El valor predeterminado es cinco minutos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de la propiedad es menor que 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Obtiene o establece la duración máxima de la validez de los mensajes después de que el cliente los envíe. Si el servicio recibe un mensaje después de este período de tiempo, este mensaje quedará descartado.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que representa la duración máxima de la validez de los mensajes después de que el cliente los envíe. El valor predeterminado es cinco minutos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de la propiedad es menor que 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Representa la unidad de comunicación entre extremos en un entorno distribuido. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Cierra <see cref="T:System.ServiceModel.Channels.Message" /> y libera los recursos. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Crea un mensaje con una versión y una acción.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se va a utilizar para el mensaje.</param>
      <param name="action">Descripción de cómo debe procesarse el mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> o <paramref name="action" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Crea un mensaje con la versión, la acción y el cuerpo especificados. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se va a utilizar para el mensaje. </param>
      <param name="action">Descripción de cómo debe procesarse el mensaje. </param>
      <param name="body">Cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un mensaje con la versión, la acción, el cuerpo y el serializador especificados.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se va a utilizar para el mensaje. </param>
      <param name="action">Descripción de cómo debe procesarse el mensaje. </param>
      <param name="body">Cuerpo del mensaje. </param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> o <paramref name="action" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Crea un mensaje con un cuerpo compuesto de una matriz de bytes. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se va a utilizar para el mensaje. </param>
      <param name="action">Descripción de cómo debe procesarse el mensaje. </param>
      <param name="body">
        <see cref="T:System.ServiceModel.Channels.BodyWriter" /> de tipo byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Crea un mensaje con la versión, la acción y el cuerpo especificados. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se va a utilizar para el mensaje. </param>
      <param name="action">Descripción de cómo debe procesarse el mensaje. </param>
      <param name="body">Cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Crea un mensaje con el lector, la acción y la versión especificados. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> para el mensaje creado. </returns>
      <param name="version">Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que especifica la versión de SOAP que se va a utilizar para el mensaje. </param>
      <param name="action">Descripción de cómo debe procesarse el mensaje. </param>
      <param name="body">Objeto <see cref="T:System.Xml.XmlReader" /> que se va a utilizar para leer el mensaje SOAP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> o <paramref name="body" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Recupera el cuerpo de esta instancia de <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Objeto de tipo <paramref name="T" /> que contiene el cuerpo de este mensaje.</returns>
      <typeparam name="T">Cuerpo del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera el cuerpo de esta <see cref="T:System.ServiceModel.Channels.Message" /> utilizando el serializador especificado.</summary>
      <returns>Objeto de tipo <paramref name="T" /> que contiene el cuerpo de este mensaje.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Cuerpo del mensaje.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="serializer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Recuperar los atributos del cuerpo del mensaje.</summary>
      <returns>Atributos del cuerpo del mensaje.</returns>
      <param name="localName">El nombre local del nodo XML.Nombre del elemento que corresponde a su miembro. Esta cadena debe un nombre de elemento XML válido.</param>
      <param name="ns">El nombre de espacios al que pertenece este elemento XML.El URI de espacio de nombres del elemento que corresponde a este miembro. El sistema no valida ningún identificador URI que sea una dirección de transporte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> o <paramref name="ns" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje se cierra.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Obtiene el lector de diccionarios XML que tiene acceso al contenido del cuerpo de este mensaje.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se cierra.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje está vacío, o bien se ha copiado, leído o escrito.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>Cuando se reemplaza en una clase derivada, obtiene los encabezados del mensaje. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que representa los encabezados del mensaje. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Devuelve un valor que indica si <see cref="T:System.ServiceModel.Channels.Message" /> se ha eliminado. </summary>
      <returns>Es true si se eliminó el mensaje; en caso contrario, es false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Devuelve un valor que indica si el <see cref="T:System.ServiceModel.Channels.Message" /> está vacío. </summary>
      <returns>Es true si el mensaje está vacío; en caso contrario, es false. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Obtiene un valor que indica si este mensaje genera errores SOAP.</summary>
      <returns>Es true si el mensaje genera errores SOAP; en caso contrario, es false.</returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Se le llama cuando el cuerpo del mensaje se convierte en cadena.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para convertir el cuerpo del mensaje en cadena. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Se le llama cuando el mensaje se está cerrando.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Se le llama cuando se recuperan los atributos del cuerpo del mensaje.</summary>
      <returns>Atributos del cuerpo del mensaje.</returns>
      <param name="localName">El nombre local del nodo XML.Nombre del elemento que corresponde a su miembro. Esta cadena debe un nombre de elemento XML válido.</param>
      <param name="ns">El nombre de espacios al que pertenece este elemento XML.El URI de espacio de nombres del elemento que corresponde a este miembro. El sistema no valida ningún identificador URI que sea una dirección de transporte.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Se le llama cuando se puede recuperar un lector de diccionarios XML que puede tener acceso al contenido del cuerpo de este mensaje.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Se le llama cuando el cuerpo del mensaje se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el cuerpo de este mensaje en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Se le llama cuando se escribe todo el mensaje en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir este mensaje en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Se le llama cuando el cuerpo inicial se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el cuerpo inicial en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Se le llama cuando el sobre inicial se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el sobre inicial en un archivo XML.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Se le llama cuando el encabezado inicial se escribe en un archivo XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el encabezado inicial en un archivo XML.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>Cuando se invalida en una clase derivada, obtiene un conjunto de anotaciones de nivel de procesamiento para el mensaje. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene un conjunto de anotaciones de nivel de procesamiento para el mensaje.</returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Obtiene el estado actual de este <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageState" /> con el estado actual de este <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Cierra todos los recursos que usa el mensaje. Este método no se puede heredar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Devuelve una cadena que representa la clase <see cref="T:System.ServiceModel.Channels.Message" /> actual. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.Message" /> actual. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>Cuando se invalida en una clase derivada, obtiene las versiones WS-Addressing y SOAP del mensaje. </summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que representa las versiones WS-Addressing y SOAP que usa el mensaje. </returns>
      <exception cref="T:System.ObjectDisposedException">El mensaje se ha eliminado.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el elemento de cuerpo mediante el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a utilizar para escribir el elemento del cuerpo.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serializa todo el cuerpo del mensaje utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se va a utilizar para escribir el cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje se elimina. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el contenido del cuerpo mediante el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a utilizar para escribir el elemento del cuerpo.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer " /> es null.</exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje se cierra.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa todo el mensaje utilizando el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a utilizar para escribir el mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje se cierra.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serializa todo el mensaje utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que se va a utilizar para escribir el cuerpo del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null. </exception>
      <exception cref="T:System.ObjectDisposedException">El mensaje se cierra.</exception>
      <exception cref="T:System.InvalidOperationException">El mensaje se ha copiado, leído o escrito.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa todo el cuerpo inicial utilizando el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a utilizar para escribir el cuerpo inicial.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serializa todo el cuerpo inicial utilizando el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a utilizar para escribir el cuerpo inicial del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer" /> es null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el sobre inicial utilizando el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado. </summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que se va a utilizar para escribir el sobre inicial.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="writer " /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Representa un búfer de memoria que almacena un mensaje completo para usos futuros.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Obtiene el número aproximado de bytes a los que ha tenido acceso este <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>Número aproximado de bytes a los que ha tenido acceso este <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Finaliza su trabajo con el búfer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Devuelve una copia del mensaje original.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Obtiene el tipo de contenido de mensaje almacenado en este búfer.</summary>
      <returns>Tipo de contenido de mensaje almacenado en este búfer.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Libera los recursos no administrados que utiliza el objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> y, opcionalmente, los recursos administrados. Este método no se puede heredar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Escribe todo el contenido del búfer en la secuencia de E/S especificada.</summary>
      <param name="stream">Secuencia de E/S en la que se escribe todo el contenido del búfer.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>El codificador se usa para escribir mensajes en una secuencia y para leer mensajes de ella.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageEncoder" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>Cuando se invalida en una clase derivada, obtiene el tipo de contenido MIME que utiliza el codificador.</summary>
      <returns>El tipo de contenido admitido por el codificador del mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T " /> solicitado si existe, o null si no.</returns>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Devuelve un valor que indica si el codificador del mensaje admite un valor de tipo de contenido de nivel de mensaje especificado.</summary>
      <returns>Es true si se admite el tipo de contenido de nivel de mensaje especificado; en caso contrario, es false.</returns>
      <param name="contentType">Tipo de contenido de nivel de mensaje que se está probando.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>Cuando se invalida en una clase derivada, obtiene el tipo de medio que utiliza el codificador.</summary>
      <returns>El tipo de medio admitido por el codificador del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de versión de mensaje que utiliza el codificador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que utiliza el codificador.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje desde un búfer especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> leído desde el búfer especificado.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que proporciona el búfer a partir del cual se deserializa el mensaje.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> que gestiona el búfer a partir del cual se deserializa el mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje de una secuencia especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee de la secuencia especificada.</returns>
      <param name="buffer">
        <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que proporciona el búfer a partir del cual se deserializa el mensaje.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> que gestiona el búfer a partir del cual se deserializa el mensaje.</param>
      <param name="contentType">Tipo de contenido de nivel de mensaje de extensiones multipropósito de correo Internet (MIME).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje de una secuencia especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee de la secuencia especificada.</returns>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> del que se lee el mensaje.</param>
      <param name="maxSizeOfHeaders">Tamaño máximo de los encabezados que se pueden leer del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>Cuando se invalida en una clase derivada, lee un mensaje de una secuencia especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que se lee de la secuencia especificada.</returns>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> del que se lee el mensaje.</param>
      <param name="maxSizeOfHeaders">Tamaño máximo de los encabezados que se pueden leer del mensaje.</param>
      <param name="contentType">Tipo de contenido de nivel de mensaje de extensiones multipropósito de correo Internet (MIME).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Devuelve el tipo de contenido que utiliza el codificador del mensaje.</summary>
      <returns>Tipo de contenido que utiliza el codificador del mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Escribe un mensaje de tamaño inferior al especificado en un búfer de matriz de bytes.</summary>
      <returns>Un <see cref="T:System.ArraySegment`1" /> de tipo byte que proporciona el búfer en el que se serializa el mensaje.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se va a escribir en el búfer del mensaje.</param>
      <param name="maxMessageSize">Tamaño máximo de mensaje que puede escribirse.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> que gestiona el búfer en el que se escribe el mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, escribe un mensaje de tamaño inferior al especificado en un búfer de matriz de bytes y según el desplazamiento especificado.</summary>
      <returns>Un <see cref="T:System.ArraySegment`1" /> de tipo byte que proporciona el búfer en el que se serializa el mensaje.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se va a escribir en el búfer del mensaje.</param>
      <param name="maxMessageSize">Tamaño máximo de mensaje que puede escribirse.</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> que gestiona el búfer en el que se escribe el mensaje.</param>
      <param name="messageOffset">El desplazamiento del segmento que comienza desde el inicio de la matriz de bytes que proporciona el búfer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>Cuando se invalida en una clase derivada, escribe un mensaje en la secuencia especificada.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> que se va a escribir en la <paramref name="stream" />.</param>
      <param name="stream">Objeto <see cref="T:System.IO.Stream" /> en el que se va a escribir <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Clase base abstracta que representa el generador de creación de codificadores de mensaje que pueden leer mensajes de una secuencia y escribirlos en otra para distintos tipos de codificación de mensajes.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Devuelve un codificador de mensajes para relacionar mensajes en intercambios basados en sesión.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> que se usa en los intercambios de mensajes basados en sesión.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>Cuando se invalida en una clase derivada, obtiene el codificador de mensajes creado por el generador.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> utilizado por el generador.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>Cuando se invalida en una clase derivada, obtiene la versión de mensaje que usan los codificadores creados por el generador para codificar los mensajes.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizado por el generador.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Elemento de enlace que especifica la versión de mensaje que se usa para la codificación.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> inicializada a partir de un elemento ya existente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> que va a clonarse.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Cuando se invalida en una clase derivada, crea un generador para producir codificadores de mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> que se usa para producir codificadores de mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve el objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de canales.</summary>
      <returns>Objeto de tipo <paramref name="T" /> solicitado si existe, o null si no.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace actual.</param>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>Cuando se invalida en una clase derivada, obtiene o establece la versión de mensaje que pueden controlar los codificadores de mensaje producidos por el generador de codificadores.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilizada por los codificadores producidos por el generador de codificadores de mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Representa una representación en memoria de un error SOAP que se puede pasar a <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> para crear un mensaje con error. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>Cuando se le llama en una clase derivada, inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageFault" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Obtiene o establece el valor del actor.</summary>
      <returns>Valor del actor.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Obtiene el código de error SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultCode" /> con el código de error SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.MessageFault" /> nuevo que usa el <see cref="T:System.ServiceModel.Channels.Message" /> concreto y el tamaño máximo de búfer especificado para el búfer de mensaje.</summary>
      <returns>Un objeto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> especificado para crear el objeto <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Tamaño máximo de búfer especificado para el búfer de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Devuelve el objeto de detalle del error del mensaje.</summary>
      <returns>Objeto de detalle del error del mensaje.</returns>
      <typeparam name="T">Tipo de objeto de detalle.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Devuelve el objeto de detalle que usa el <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> especificado.</summary>
      <returns>Objeto de detalle contenido en el <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> para deserializar el objeto de detalle. </param>
      <typeparam name="T">Tipo del objeto de detalle.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle del <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle del <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Obtiene un valor que indica si el <see cref="T:System.ServiceModel.Channels.MessageFault" /> tiene un objeto de detalle.</summary>
      <returns>Es true si <see cref="T:System.ServiceModel.Channels.MessageFault" /> tiene un objeto de detalle; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Obtiene el nodo SOAP.</summary>
      <returns>Nodo SOAP con información sobre qué nodo SOAP de la ruta del mensaje puede ocasionar el error.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>Cuando se le llama en una clase derivada, devuelve un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle del <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que se coloca en el objeto de detalle del <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Se invoca antes de escribir el contenido del detalle.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el elemento de detalle.</param>
      <param name="version">Versión del sobre SOAP que se va a escribir.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>Cuando se invalida en una clase derivada no abstracta, escribe el contenido del elemento de detalle. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el elemento de detalle.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Escribe el elemento de inicio utilizando el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado y la versión de sobre SOAP.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizado para escribir el elemento de detalle.</param>
      <param name="version">Versión del sobre SOAP que se va a escribir.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Obtiene una descripción textual de un error SOAP. </summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultReason" /> con una descripción textual de un error SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Representa el contenido de un encabezado SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageHeader" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Obtiene o establece el destinatario del encabezado del mensaje.</summary>
      <returns>Destinatario del encabezado del mensaje. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="mustUnderstand">Valor que indica si debe entenderse el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="mustUnderstand">Valor que indica si debe entenderse el encabezado.</param>
      <param name="actor">Destinatario del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="mustUnderstand">Valor que indica si debe entenderse el encabezado.</param>
      <param name="actor">Destinatario del encabezado del mensaje.</param>
      <param name="relay">Valor que indica si debe retransmitirse el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Crea un encabezado a partir de un objeto para serializarlo con XmlFormatter. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">Interfaz <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">Interfaz <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valor que indica si debe entenderse el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">Interfaz <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valor que indica si debe entenderse el encabezado.</param>
      <param name="actor">Destinatario del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Crea un nuevo encabezado de mensaje con los datos especificados.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Nombre local del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="value">Contenido del encabezado que se va a crear.</param>
      <param name="serializer">Interfaz <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Valor que indica si debe entenderse el encabezado.</param>
      <param name="actor">Destinatario del encabezado del mensaje.</param>
      <param name="relay">Valor que indica si debe retransmitirse el encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Comprueba si se admite la versión de mensaje especificada.</summary>
      <returns>Es true si se admite la versión de mensaje especificada; de lo contrario, es false.</returns>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Obtiene un valor que especifica si el encabezado de mensaje contiene parámetros de referencia de una referencia de extremo.</summary>
      <returns>Es true si el encabezado del mensaje contiene parámetros de referencia de una referencia de extremo; en caso contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Obtiene o establece un valor que indica si se debe entender el encabezado de acuerdo con las especificaciones SOAP 1.1 ó 1.2. </summary>
      <returns>Es true si es necesario entender el encabezado; de lo contrario, es false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Se le llama cuando el contenido del encabezado se serializa mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Se le llama cuando el encabezado de inicio se serializa mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Obtiene un valor que indica si debe retransmitirse el encabezado.</summary>
      <returns>Es true si es necesario retransmitir el encabezado; de lo contrario, es false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Convierte el encabezado del mensaje en una cadena.</summary>
      <returns>Encabezado del mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el encabezado mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el encabezado mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el contenido del encabezado mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el contenido del encabezado mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializa el encabezado de inicio mediante el escritor XML especificado. </summary>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contiene información relacionada con la versión de SOAP asociada a un mensaje y a su intercambio.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Representa información de sistema en relación con un encabezado de mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Obtiene o establece el destinatario del encabezado del mensaje.</summary>
      <returns>URI que indica el destinatario del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Obtiene un valor que especifica si el encabezado de mensaje representa parámetros de referencia de una referencia de extremo.</summary>
      <returns>Es true si el encabezado del mensaje representa parámetros de referencia de una referencia de extremo; en caso contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Obtiene o establece un valor que indica si el procesamiento del encabezado del mensaje es obligatorio u opcional.</summary>
      <returns>Es true si el procesamiento del encabezado del mensaje es obligatorio; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Obtiene el nombre del encabezado del mensaje.</summary>
      <returns>Nombre del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Obtiene el espacio de nombres del encabezado del mensaje.</summary>
      <returns>Espacio de nombres del encabezado del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Obtiene o establece un valor que indica si se puede retransmitir el encabezado del mensaje.</summary>
      <returns>Es true si se puede retransmitir el encabezado; en caso contrario, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Representa una colección de encabezados de mensaje para un mensaje concreto. Esta clase no se puede heredar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la colección de encabezados especificada.</summary>
      <param name="collection">Colección de encabezados de mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versión de mensaje especificada.</summary>
      <param name="version">Versión SOAP del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> con la versión de mensaje y el tamaño especificados.</summary>
      <param name="version">Versión SOAP del mensaje.</param>
      <param name="initialSize">Tamaño del encabezado.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Obtiene o establece una descripción de cómo debe procesarse el mensaje.</summary>
      <returns>Descripción de cómo debe procesarse el mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Agrega el encabezado de mensaje especificado a la colección.</summary>
      <param name="header">Encabezado de mensaje que se debe agregar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Quita todos los encabezados de la colección.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copia el contenido de encabezado ubicado en el índice especificado, desde el mensaje especificado a esta instancia.</summary>
      <param name="message">Mensaje.</param>
      <param name="headerIndex">Ubicación del encabezado de mensaje original, del que se copia el contenido.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copia el contenido de encabezado ubicado en el índice especificado, desde la colección de encabezados de mensaje especificada a esta instancia.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Ubicación del encabezado de mensaje original, del que se copia el contenido.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copia el contenido de todos los encabezados del mensaje especificado a esta instancia.</summary>
      <param name="message">Mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copia el contenido de la colección de encabezados especificada a esta instancia.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copia los encabezados de esta colección a una matriz, comenzando en un índice concreto de la matriz. </summary>
      <param name="array">Matriz unidimensional que constituye el destino de los objetos de encabezado de mensaje copiados desde esta instancia. La matriz debe tener una indización de base cero. </param>
      <param name="index">Índice basado en cero en la matriz donde comienza la copia. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Obtiene el número de encabezados de mensaje de esta colección.</summary>
      <returns>Número de encabezados de mensaje de esta colección.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Obtiene o establece la dirección del nodo a la que se deben enviar los errores.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo a la que se deben enviar los errores.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Busca un encabezado de mensaje en esta colección por el LocalName especificado y el identificador URI de espacio de nombres del elemento de encabezado.</summary>
      <returns>Índice del encabezado de mensaje en esta colección.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Busca un encabezado de mensaje en esta colección por el LocalName especificado, el URI de espacio de nombres y los actores del elemento de encabezado.</summary>
      <returns>Índice del encabezado de mensaje en esta colección.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="actors">Destinatario del encabezado del mensaje.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Obtiene o establece la dirección del nodo que envió el mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo que envió el mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración una colección. Este método no se puede heredar.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Recupera une encabezado de mensaje en una posición específica de esta colección.</summary>
      <returns>Encabezado de un mensaje.</returns>
      <param name="index">Índice de base cero del encabezado que se va a obtener.</param>
      <typeparam name="T">Encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera une encabezado de mensaje en una posición específica de esta colección.</summary>
      <returns>Encabezado de un mensaje.</returns>
      <param name="index">Índice de base cero del encabezado que se va a obtener.</param>
      <param name="serializer">Interfaz <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Busca un encabezado de mensaje en esta colección por el LocalName especificado y el identificador URI de espacio de nombres del elemento de encabezado.</summary>
      <returns>Encabezado de un mensaje.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <typeparam name="T">Encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Recupera un encabezado de mensaje de esta colección por el LocalName, el URI de nombre de espacios y el serializador especificado.</summary>
      <returns>Encabezado de un mensaje.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="serializer">Objeto <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />,</param>
      <typeparam name="T">Encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Recupera un encabezado de mensaje en esta colección por el LocalName especificado, el URI de espacio de nombres y los actores del elemento de encabezado.</summary>
      <returns>Encabezado de un mensaje.</returns>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
      <param name="actors">Destinatario del encabezado del mensaje.</param>
      <typeparam name="T">Encabezado del mensaje.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Obtiene un lector de diccionarios XML que tiene acceso al encabezado de mensaje en la ubicación especificada de la colección.</summary>
      <returns>Interfaz <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">Índice de base cero del encabezado que se va a obtener.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Comprueba si se interpretan y procesan adecuadamente todos los encabezados de mensaje marcados con MustUnderstand. </summary>
      <returns>true si los destinatarios especificados por <paramref name="actors" /> han interpretado y procesado correctamente todos los encabezados de mensaje marcados con MustUnderstand; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Comprueba si los destinatarios especificados interpretan y procesan adecuadamente todos los encabezados de mensaje marcados con MustUnderstand. </summary>
      <returns>true si los destinatarios especificados por <paramref name="actors" /> han interpretado y procesado correctamente todos los encabezados de mensaje marcados con MustUnderstand; de lo contrario, false.</returns>
      <param name="actors">Destinatario del encabezado del mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Inserta un encabezado de mensaje en la colección, en el índice especificado.</summary>
      <param name="headerIndex">Índice basado en cero en el que debe insertarse <paramref name="header" />.</param>
      <param name="header">Encabezado de mensaje que se va a insertar.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Recupera un encabezado en el índice específico.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> de la colección. Si <paramref name="index" /> es superior o igual al número de encabezados de la lista, devuelve null.</returns>
      <param name="index">Índice de base cero de la lista de encabezados.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Obtiene o establece el identificador único del mensaje.</summary>
      <returns>Identificador único del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Obtiene la versión SOAP del mensaje.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Obtiene los identificadores de los mensajes relacionados con este mensaje.</summary>
      <returns>Identificadores de los mensajes relacionados con este mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Quita de la colección todos los encabezados con el nombre y el espacio de nombres especificados.</summary>
      <param name="name">LocalName del elemento XML del encabezado.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento XML del encabezado.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Quita de la colección un encabezado de mensaje situado en el índice especificado.</summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a quitar.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Obtiene o establece la dirección del nodo a la que se debe enviar la respuesta a una solicitud.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> del nodo a la que se debe enviar la respuesta a una solicitud.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Establece el elemento de acción del encabezado.</summary>
      <param name="action">Descripción de cómo debe procesarse el mensaje.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración una colección. Este método no se puede heredar.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Obtiene o establece el extremo de destino de un mensaje.</summary>
      <returns>Identificador URI con el extremo de destino de un mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el encabezado desde la ubicación especificada mediante el escritor XML especificado. </summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializa el encabezado desde la ubicación especificada mediante el escritor XML especificado. </summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el contenido del encabezado especificado mediante el escritor XML especificado. </summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializa el contenido del encabezado especificado mediante el escritor XML especificado. </summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializa el encabezado de inicio mediante el escritor XML especificado. </summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializa el encabezado de inicio mediante el escritor XML especificado. </summary>
      <param name="headerIndex">Índice de base cero del encabezado que se va a serializar.</param>
      <param name="writer">Interfaz <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Representa el conjunto de propiedades de un mensaje. Esta clase no se puede heredar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.MessageProperties" /> con propiedades predefinidas.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Agrega un elemento con el nombre y la propiedad especificada al <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Este método no se puede heredar.</summary>
      <param name="name">Nombre del elemento que se va a agregar.</param>
      <param name="property">Valor del elemento que se va a agregar. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Obtiene o establece un valor que especifica si se debe almacenar el mensaje antes de pasarlo al transporte. </summary>
      <returns>true si se permite el procesamiento por lotes de los mensajes salientes; de lo contrario, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Quita todos los elementos de <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Este método no se puede heredar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Determina si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nombre específico. Este método no se puede heredar.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con la <paramref name="name" /> especificada; en caso contrario, false.</returns>
      <param name="name">Nombre que se va a buscar en la <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copia el contenido del objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> especificado en esta instancia.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Obtiene el número total de propiedades de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Número total de propiedades de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Libera todos los recursos utilizados por <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Obtiene el codificador que se usa para escribir mensajes en una secuencia y para leer mensajes de ella.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> que se usa para escribir mensajes en una secuencia y para leer mensajes de ella.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Obtiene un valor que indica si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> tiene un tamaño fijo.</summary>
      <returns>Es true si la <see cref="T:System.ServiceModel.Channels.MessageProperties" /> tiene un tamaño fijo; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Obtiene un valor que indica si este conjunto de propiedades es de sólo lectura.</summary>
      <returns>Es true si este conjunto de propiedades es de sólo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Recupera una propiedad en el índice específico.</summary>
      <returns>Propiedad con el <paramref name="name" /> específico, o null si no existe la propiedad.</returns>
      <param name="name">Nombre de la propiedad que se va a obtener de la colección.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Quita el elemento con el nombre especificado de <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Este método no se puede heredar.</summary>
      <returns>Es true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con el <paramref name="name" /> especificado y se puede quitar; en caso contrario, false.</returns>
      <param name="name">Nombre del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Agrega un elemento con el nombre y la propiedad especificada al <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Este método no se puede heredar.</summary>
      <param name="pair">Un par clave/valor que contiene el nombre y el valor del elemento que se va a agregar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nombre específico. Este método no se puede heredar.</summary>
      <returns>Es true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con el nombre y el valor en el <paramref name="pair" /> especificado; de lo contrario, es false.</returns>
      <param name="pair">Un par clave/valor que contiene el nombre y el valor del elemento que se buscará en <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia el contenido de la interfaz <see cref="T:System.ServiceModel.Channels.MessageProperties" /> especificada en una matriz, comenzando en el índice especificado. Este método no se puede heredar.</summary>
      <param name="array">
        <see cref="T:System.Array" /> en la que se va a copiar la colección.</param>
      <param name="index">Índice por el que se va a comenzar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Quita el elemento con el nombre especificado de <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Este método no se puede heredar.</summary>
      <returns>Es true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con el nombre y el valor especificados en el parámetro <paramref name="pair" /> se puede quitar; en caso contrario, es false.</returns>
      <param name="pair">Un par clave/valor que contiene el nombre y el valor del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración una colección. Este método no se puede heredar.</summary>
      <returns>Una interfaz <see cref="T:System.Collections.IEnumerator" /> que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración una colección. Este método no se puede heredar.</summary>
      <returns>Una interfaz <see cref="T:System.Collections.IEnumerator" /> que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Determina si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un nombre específico y recupera su valor. Este método no se puede heredar.</summary>
      <returns>true si <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contiene un elemento con la <paramref name="name" /> especificada; en caso contrario, false.</returns>
      <param name="name">Nombre del elemento que se va a localizar.</param>
      <param name="value">Valor del elemento localizado.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Obtiene los valores en <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> que contiene los valores de <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Obtiene o establece la dirección de transporte que se usa para enviar mensajes.</summary>
      <returns>Identificador URI con la dirección de transporte que se usa para enviar los mensajes.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Especifica el estado de un mensaje. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Mensaje creado. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>El mensaje se está leyendo.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Mensaje escrito.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Mensaje copiado.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>El mensaje se cerró y ya no se puede tener acceso a él.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Especifica las versiones de SOAP y WS-Addressing asociadas a un mensaje y su intercambio.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Obtiene la versión de WS-Addressing asociada a la versión de mensaje actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> asociada a la versión de mensaje actual. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Crea un objeto de versión de mensaje usando WS-Addressing 1.0 y con una versión SOAP específica.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> con la versión de sobre especificada.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> que indica la versión de SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Crea un objeto de versión de mensaje con versiones de WS-Addressing y SOAP especificadas.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa las versiones de WS-Addressing y SOAP especificadas.</returns>
      <param name="envelopeVersion">
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> que indica la versión de SOAP.</param>
      <param name="addressingVersion">
        <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> que indica la versión de WS-Addressing.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Obtiene la versión de mensaje predeterminado que usa Windows Phone.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa SOAP 1.2 y la versión 1.0 de WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Obtiene la versión SOAP asociada a la versión de mensaje actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> asociada al objeto de versión de mensaje.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Devuelve un valor que indica si la versión de mensaje actual es igual que el objeto especificado.</summary>
      <returns>Es true si el objeto especificado es igual al objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actual; en caso contrario, es false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> que se va a comparar con la versión de mensaje actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Obtiene código hash para la versión de mensaje actual.</summary>
      <returns>Código hash único para la <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actual.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Obtiene la versión de mensaje que no usa SOAP o WS-Addressing.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que no usa SOAP o WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Obtiene la versión de mensaje que usa SOAP 1.1.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa SOAP 1.1 pero no usa ninguna versión de WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Obtiene la versión de mensaje que usa WS-Addressing 1.0 y SOAP 1.2.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que usa la versión 1.0 de WS-Addressing y SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Versión de mensaje actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.MessageVersion" /> actual. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Ofrece una respuesta relacionada con una solicitud entrante.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>Cuando se invalida en una clase derivada, anula el procesamiento de la solicitud asociada al contexto. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Cuando se invalida en una clase derivada, comienza una operación asincrónica para responder a la solicitud asociada al contexto actual.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de respuesta asincrónica.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de respuesta asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de respuesta asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Cuando se invalida en una clase derivada, comienza una operación asincrónica para responder a la solicitud asociada al contexto actual dentro de un intervalo de tiempo especificado.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de respuesta asincrónica.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que debe esperarse para la respuesta a una solicitud disponible.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de respuesta asincrónica.</param>
      <param name="state">Objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de respuesta asincrónica.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>Cuando se invalida en una clase derivada, cierra la operación para responder al contexto de solicitud asociado al contexto actual.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>Cuando se invalida en una clase derivada, cierra la operación para responder al contexto de solicitud asociado al contexto actual dentro de un intervalo de tiempo especificado.</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo durante el que se debe cerrar la operación de respuesta asociada al contexto actual.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Libera los recursos asociados al contexto.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Cuando se invalida en una clase derivada, completa una operación asincrónica para responder a un mensaje de solicitud.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>Cuando se invalida en una clase derivada, responde a un mensaje de solicitud.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Cuando se invalida en una clase derivada, responde a un mensaje de solicitud dentro de un intervalo de tiempo especificado.</summary>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> entrante que contiene la solicitud.</param>
      <param name="timeout">
        <see cref="T:System.Timespan" /> que especifica el intervalo de tiempo que debe esperarse para la respuesta a una solicitud.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>Cuando se invalida en una clase derivada, obtiene el mensaje que, a su vez, contiene la solicitud.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> que contiene la solicitud.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Libera recursos administrados y no administrados asociados al contexto.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>Clase abstracta cuya implementación representa un elemento de enlace que admite seguridad de mensajes SOAP de canal.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea un generador de canales basado en la configuración de <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> y en el contexto de enlace que se haya pasado. El generador de canales creado es un generador de canales con seguridad de mensajes SOAP que, internamente, tiene una referencia al generador de canales correspondiente al contexto de enlace (que, a su vez, incluye el generador de canales de transporte).</summary>
      <returns>Interfaz <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Objeto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Tipo de generador de canales.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
      <exception cref="T:System.ArgumentException">No se admite un canal de tipo <paramref name="TChannel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Cuando se implementa en una clase derivada, crea un generador de canales de tipo especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> que crea canales de tipo <paramref name="TChannel" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del generador de canales.</param>
      <typeparam name="TChannel">Tipo de generador de canales.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> es null.</exception>
      <exception cref="T:System.ArgumentException">No se admite un canal de tipo <paramref name="TChannel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtiene un valor que indica si se puede crear un generador de canales del tipo especificado.</summary>
      <returns>Es true si se puede crear un generador de canales de tipo <paramref name="TChannel" />; de lo contrario, es false.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del generador de canales.</param>
      <typeparam name="TChannel">Tipo de generador de canales.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Crea un elemento de enlace de seguridad configurado para la autenticación de clientes basada en nombre de usuario y contraseña y que se envía como parte del mensaje SOAP. Para este elemento de enlace el transporte debe proporcionar autenticación de servidor y protección de mensajes (por ejemplo, HTTPS).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtiene un objeto concreto por medio del <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</summary>
      <returns>Objeto especificado de <see cref="T:System.ServiceModel.Channels.BindingContext" />, o null si no se encuentra dicho objeto.</returns>
      <param name="context">Objeto <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propiedad que se va a obtener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Obtiene o establece un valor que indica si se incluyen marcas de tiempo en cada mensaje.</summary>
      <returns>Es true si se incluyen las marcas de tiempo en los mensajes; de lo contrario, es false. El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Obtiene las propiedades de enlace específicas de la configuración de seguridad local que utiliza el cliente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> con la configuración de seguridad local del cliente.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Elemento de enlace que especifica la codificación de caracteres y el control de versión de mensaje que se usa para los mensajes SOAP basados en texto.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con la versión de mensaje y la codificación especificadas.</summary>
      <param name="messageVersion">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que se usa para la versión de mensaje.</param>
      <param name="writeEncoding">
        <see cref="T:System.Text.Encoding" /> que se usa para dar formato a los caracteres del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> o <paramref name="writeEncoding" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="writeEncoding" /> no es válido.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Crea la pila del generador de canales en el cliente que crea un tipo especificado de canal para un contexto especificado.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> para el contexto especificado.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del canal.</param>
      <typeparam name="TChannel">Tipo de canal que crea el generador de canales.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Crea un nuevo objeto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> inicializado desde el actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> con valores de propiedad iguales a los del elemento actual.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Crea un generador de codificadores de mensajes de texto que emplea la versión de mensaje y la codificación de caracteres especificadas por el elemento de enlace de codificación actual.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> que crea el generador.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Devuelve un objeto de tipo solicitado, de existir, de la capa correspondiente de la pila de elementos de enlace.</summary>
      <returns>El objeto de tipo T solicitado, si existe, o una referencia null (Nothing en Visual Basic) si no.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</param>
      <typeparam name="T">Objeto de tipo para el que realiza la consulta el método.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Obtiene o establece las versiones de SOAP y WS-Addressing que se usan para dar formato al mensaje de texto.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que se usa para dar formato a los mensajes. El valor predeterminado es <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Obtiene o establece la codificación que se usa para dar formato a los caracteres del mensaje de texto.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> que se usa para dar formato a los caracteres del mensaje de texto. La codificación de texto predeterminada es el formato UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es null.</exception>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="writeEncoding" /> no es válido.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Clase base abstract que representa un elemento de enlace de transporte.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Crea una nueva instancia de esta clase.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Crea una nueva instancia de esta clase a partir de una instancia existente.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> que va a clonarse. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Obtiene una propiedad del <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</summary>
      <returns>Propiedad del <see cref="T:System.ServiceModel.Channels.BindingContext" /> especificado.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Propiedad que se va a obtener.</typeparam>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="context" /> no puede ser null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Obtiene o establece un valor que indica si se requiere la especificación manual de la dirección del mensaje.</summary>
      <returns>Es true si se requiere especificación manual de la dirección; en caso contrario, es false. El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Obtiene y establece el tamaño máximo de mensaje que se puede recibir.</summary>
      <returns>Tamaño máximo de mensaje que se puede recibir. El valor predeterminado es 65.536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El <paramref name="value" /> establecido no puede ser negativo.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Obtiene el esquema URI del transporte.</summary>
      <returns>Devuelve el esquema URI para el transporte, que varía en función de la clase derivada que implementa el método.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Representa un elemento de enlace personalizado que admite seguridad en modo mixto (como la seguridad optimizada de mensajes en transporte seguro).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Crea una instancia de la clase <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Crea un nuevo objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> inicializado desde la clase actual.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> con valores de propiedad iguales a los de la instancia actual.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Permite al usuario configurar las credenciales de cliente que se usan para autenticar al cliente en un servicio concreto.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Crea una copia de una <see cref="T:System.ServiceModel.Description.ClientCredentials" /> existente. </summary>
      <param name="other">La instancia <see cref="T:System.ServiceModel.Description.ClientCredentials" /> que se va a copiar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="other" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Crea una nueva copia de esta instancia <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instancia de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
      <exception cref="T:System.NotImplementedException">Las credenciales actuales son null o no son correctas.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Crea una nueva copia de esta instancia <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Instancia de <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Obtiene un objeto de credencial que puede utilizar para establecer el nombre de usuario y la contraseña que el cliente debe usar para su autenticación en un servicio. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> que representa el nombre de usuario y la contraseña actuales de la credencial del cliente.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Describe un contrato que especifica lo que comunica un extremo al mundo exterior.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ContractDescription" /> con el nombre especificado.</summary>
      <param name="name">Nombre del contrato.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="name" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="name" /> está vacío.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ContractDescription" /> con el nombre de espacio de nombres especificado.</summary>
      <param name="name">Nombre del contrato.</param>
      <param name="ns">Espacio de nombres con el nombre del contrato.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="name" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="name" /> está vacío.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Obtiene o establece el tipo de contrato de devolución de llamada que especifica la descripción de dicho contrato.</summary>
      <returns>
        <see cref="T:System.Type" /> del contrato de devolución de llamada que especifica la descripción del contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Obtiene o establece el nombre de configuración de la descripción del contrato.</summary>
      <returns>Nombre de configuración para el contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Obtiene o establece el tipo de contrato que especifica la descripción de dicho contrato.</summary>
      <returns>
        <see cref="T:System.Type" /> del contrato que especifica la descripción de dicho contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Obtiene o establece el nombre del contrato.</summary>
      <returns>Nombre de la descripción del contrato.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Obtiene o establece el espacio de nombres del contrato.</summary>
      <returns>El espacio de nombres del contrato.</returns>
      <exception cref="T:System.ArgumentNullException">El valor establecido es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Obtiene la colección de descripciones de operaciones asociadas al contrato.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> con las descripciones de operaciones asociadas a la descripción del contrato.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Representa un error de SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Description.FaultDescription" /> usando el valor de acción especificado.</summary>
      <param name="action">Acción del mensaje de error de SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Obtiene el valor de la acción en el mensaje de error de SOAP.</summary>
      <returns>Acción del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Obtiene o establece el tipo de detalle del error de SOAP.</summary>
      <returns>Tipo del objeto de detalle serializable.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Obtiene o establece el nombre del error de SOAP.</summary>
      <returns>Nombre del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Obtiene o establece el espacio de nombres del error de SOAP.</summary>
      <returns>Espacio de nombres del error de SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Colección de objetos <see cref="T:System.ServiceModel.Description.FaultDescription" /> que puede usar para obtener información acerca de los errores de SOAP de un contrato.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Representa el cuerpo de un mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Obtiene las partes del cuerpo del mensaje SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> con las partes del cuerpo del mensaje SOAP que se pueden examinar o modificar.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Obtiene o establece la parte del mensaje SOAP que contiene el valor devuelto.</summary>
      <returns>Valor devuelto, si existe.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Obtiene o establece el nombre del elemento contenedor que incluye el cuerpo de SOAP, en caso de que exista.</summary>
      <returns>Nombre del elemento contenedor si existe; de lo contrario, es null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Obtiene o establece el espacio de nombres del elemento contenedor del cuerpo de SOAP, en caso de que exista.</summary>
      <returns>Espacio de nombres del elemento contenedor si existe.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Representa la descripción de un mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.MessageDescription" /> con la acción y dirección especificadas.</summary>
      <param name="action">Parámetro de acción del mensaje SOAP que identifica la intención del mensaje.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> si el mensaje es entrante o <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> si es saliente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> no es <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> ni <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Obtiene el parámetro de acción del mensaje SOAP que identifica la intención del mensaje.</summary>
      <returns>Identificador URI de la acción.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Obtiene el cuerpo del mensaje SOAP.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> que contiene el cuerpo del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Obtiene la dirección que indica si el mensaje es entrante o saliente.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDirection" /> que indica si el mensaje entra o sale del servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Obtiene o establece un tipo que identifica el tipo de contrato de mensaje.</summary>
      <returns>Tipo de contrato de mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Proporciona una colección para almacenar descripciones de mensajes que conforman una operación dentro de un contrato.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Localiza y devuelve la primera descripción de mensaje de la colección de un mensaje concreto con una acción especificada.</summary>
      <returns>Primera <see cref="T:System.ServiceModel.Description.MessageDescription" /> de la colección cuyo mensaje contiene la <paramref name="action" /> especificada. Es null si no se encuentra una <paramref name="action" /> que coincida.</returns>
      <param name="action">Acción del mensaje localizado.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Localiza y devuelve todas las descripciones de mensaje de una colección cuyos mensajes tienen una acción especificada.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> que contiene las descripciones de mensaje de la colección actual cuyos mensajes tengan la <paramref name="action" /> especificada. Si no se encuentran objetos <see cref="T:System.ServiceModel.Description.MessageDescription" /> que coincidan, se devolverá una colección vacía.</returns>
      <param name="action">Acción de los mensajes localizados.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Especifica la dirección del mensaje.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Mensaje entrante.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Mensaje saliente.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Representa una descripción de una parte de mensaje SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Description.MessagePartDescription" />. </summary>
      <param name="name">Nombre XML de la parte del mensaje.</param>
      <param name="ns">Espacio de nombres XML de la parte del mensaje.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Obtiene o establece el índice de la parte del mensaje.</summary>
      <returns>Índice de la parte del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Obtiene o establece la información de miembros de la parte del mensaje.</summary>
      <returns>Información de miembros de esta parte de mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Obtiene el nombre de la parte del mensaje.</summary>
      <returns>Nombre de la parte del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Obtiene el espacio de nombres de la parte del mensaje.</summary>
      <returns>Espacio de nombres de la parte del mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Obtiene o establece el tipo de la parte del mensaje.</summary>
      <returns>Tipo de la parte del mensaje.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Representa una colección de objetos <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>Cuando se le llama en una clase derivada, obtiene el <see cref="T:System.Xml.XmlQualifiedName" /> de <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> de <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> que se va a buscar.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Contrato que caracteriza una operación en términos de los mensajes que intercambia.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.OperationDescription" /> con el nombre y el contrato especificados.</summary>
      <param name="name">Nombre de la descripción de la operación.</param>
      <param name="declaringContract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> que se usa para inicializar la descripción de la operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="declaringContract" /> es nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="name" /> está vacío.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Obtiene o establece el método de inicio de la operación.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> que proporciona acceso a los atributos y metadatos del método.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Obtiene o establece el contrato al que pertenece la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">El <paramref name="value" /> establecido es null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Obtiene o establece el método de fin de la operación.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> que proporciona acceso a los atributos y metadatos del método.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Obtiene una colección de descripciones de los errores asociados a la descripción de la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> que contiene detalles de los errores asociados a la descripción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Obtiene un valor que indica si una operación devolverá un mensaje de respuesta.</summary>
      <returns>Es true si este método recibe un mensaje de solicitud y no devuelve un mensaje de respuesta; de lo contrario, es false. El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Obtiene los tipos conocidos asociados a la descripción de la operación.</summary>
      <returns>Colección de tipos conocidos asociados a la descripción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Obtiene o establece las descripciones de los mensajes que conforman la operación.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> que contiene las descripciones de los mensajes que conforman la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Obtiene o establece el nombre de la descripción de la operación.</summary>
      <returns>Nombre de la descripción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Obtiene o establece el método de sincronización de servicio de la descripción de la operación.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> que proporciona acceso a los atributos y metadatos del método.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Representa una colección que contiene descripciones de operación.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Devuelve la primera aparición de una descripción de operación con un nombre específico dentro de la colección de descripciones de operación.</summary>
      <returns>Primera aparición de una <see cref="T:System.ServiceModel.Description.OperationDescription" /> con el nombre especificado, o null si no hay ninguna operación con dicho nombre.</returns>
      <param name="name">Nombre de la operación.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Devuelve una colección de todas las descripciones de operación de la colección con el nombre especificado.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" /> de tipo <see cref="T:System.ServiceModel.Description.OperationDescription" /> que contiene todas las descripciones de operación con el nombre especificado.</returns>
      <param name="name">Nombre de la operación.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Inserta un elemento en el índice especificado de la colección de descripciones de operación.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Reemplaza el elemento de descripción de operación de la colección en el índice especificado.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">
        <see cref="T:System.ServiceModel.Description.OperationDescription" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Representa el extremo de un servicio que permite a sus clientes buscar y comunicar con el servicio.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para un contrato especificado.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> del extremo del servicio.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> con el contrato, el enlace y la dirección especificados.</summary>
      <param name="contract">
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> del extremo del servicio.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> que especifica cómo se comunica el extremo del servicio con el mundo.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> del extremo del servicio.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Obtiene o establece la dirección del extremo del servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> que especifica la ubicación del extremo del servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Obtiene o establece el enlace para el extremo del servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> del extremo del servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Obtiene el contrato para el extremo del servicio.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ContractDescription" /> que especifica el contrato del extremo del servicio.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Obtiene o establece el nombre del extremo del servicio.</summary>
      <returns>Nombre del extremo del servicio. El valor predeterminado es la concatenación del nombre de enlace y el nombre de la descripción del contrato. Por ejemplo: <see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Controla el comportamiento del tiempo de ejecución del <see cref="T:System.Xml.Serialization.XmlSerializer" /> asociado con una operación.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Se usa para modificar o ampliar el comportamiento de la ejecución de una operación de contrato específica en un objeto de cliente o en un objeto de canal de cliente. Esta clase no se puede heredar. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> usando los valores de <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, nombre y acción especificados. </summary>
      <param name="parent">Objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</param>
      <param name="name">Nombre de la operación.</param>
      <param name="action">Acción de la operación.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> usando los valores de <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, nombre, acción y acción de respuesta especificados. </summary>
      <param name="parent">Objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</param>
      <param name="name">Nombre de la operación.</param>
      <param name="action">Acción de la operación.</param>
      <param name="replyAction">Acción del mensaje de respuesta.</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> o <paramref name="name" /> es nulo.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Obtiene la acción de la operación.</summary>
      <returns>Acción de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Obtiene o establece el método asociado a una operación asincrónica.</summary>
      <returns>Objeto <see cref="T:System.Reflection.MethodInfo" /> que representa el método que controla la porción de inicio de un par de método asincrónico, o null si la operación no forma parte de un par de método asincrónico.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Obtiene o establece un valor que indica si el valor de propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> se usa para deserializar el mensaje de respuesta.</summary>
      <returns>Es true si el tipo devuelto no es un <see cref="T:System.ServiceModel.Channels.Message" />; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Obtiene o establece el método que implementa el método de fin asincrónico de la operación.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> que representa el método de fin de la operación, o null si la operación no es asincrónica.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Obtiene o establece el formateador que serializa objetos en mensajes y deserializa mensajes en objetos.</summary>
      <returns>Implementación de <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Obtiene o establece un valor que indica si un mensaje para esta operación puede iniciar una sesión.</summary>
      <returns>Es true si un mensaje para esta operación puede iniciar una sesión; de lo contrario, es false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Obtiene o establece un valor que indica si la operación es unidireccional.</summary>
      <returns>Es true si el cliente WCF no debe esperar respuesta; de lo contrario, es false. El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Obtiene o establece un valor que indica si esta operación es la última de una sesión.</summary>
      <returns>Es true si la sesión asociada se cierra después de invocar la operación; en caso contrario, es false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Obtiene el nombre de la operación.</summary>
      <returns>Nombre de la operación.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Obtiene el objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> contenedor.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Obtiene la acción del mensaje de respuesta para esta operación.</summary>
      <returns>Acción de la respuesta.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Obtiene o establece un valor que especifica si el objeto <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializa un mensaje saliente.</summary>
      <returns>Es true si la propiedad <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> serializa los valores devueltos en un mensaje de respuesta; de lo contrario, es false. El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Obtiene o establece el método asociado a esta operación.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> que representa el método que implementa la operación. Si la operación es asincrónica, este valor es null y los métodos de implementación se almacenan en las propiedades <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> y <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Punto de inserción de las clases que amplían la funcionalidad de los objetos de cliente de Windows Phone para todos los mensajes controlados por una aplicación cliente.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Obtiene el tipo de contrato asociado al cliente.</summary>
      <returns>Objeto <see cref="T:System.Type" /> que representa el contrato asociado a este cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Obtiene el nombre del contrato asociado al cliente.</summary>
      <returns>Nombre del contrato que se usa para este cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Obtiene el espacio de nombres del contrato asociado al cliente.</summary>
      <returns>Espacio de nombres del contrato asociado al cliente.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Obtiene o establece un valor que indica si el cliente agregará encabezados de dirección a los mensajes de solicitud-respuesta.</summary>
      <returns>Es true si el cliente no agrega encabezados de dirección; de lo contrario, es false. El valor predeterminado es false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Obtiene o establece el tamaño máximo del mensaje de error. </summary>
      <returns>Tamaño máximo de error. El valor predeterminado es 64 KB.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Obtiene o establece una implementación de <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> que se puede usar para seleccionar un <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Objeto <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> que selecciona un <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Obtiene la operación de cliente para los métodos que no disponen de <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> correspondiente en la colección de <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> que representa el método al que se enruta el contenido del mensaje actual cuando el selector de operaciones no puede encontrar una operación que coincida con el mensaje.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Obtiene o establece la dirección de transporte que se usa para enviar mensajes a través del cliente.</summary>
      <returns>
        <see cref="T:System.Uri" /> que es la dirección de destino para el transporte. El valor predeterminado es el valor <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> del cliente.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Esta clase no se admite en la versión actual de Windows Phone. Se encuentra presente por motivos de compatibilidad.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Representa información acerca de un error de SOAP especificado en un atributo <see cref="T:System.ServiceModel.FaultContractAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> que utiliza la acción especificada y el tipo de detalle.</summary>
      <param name="action">Acción del error de SOAP.</param>
      <param name="detail">Tipo de detalle que se serializa como detalle del error de SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Obtiene el valor de la acción del error de SOAP.</summary>
      <returns>Valor de la acción del error de SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>Tipo de objeto que se serializa como detalle del error de SOAP.</summary>
      <returns>
        <see cref="T:System.Type" /> que representa el detalle del error de SOAP serializado.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Define los métodos que se usan para controlar la conversión de mensajes en objetos y objetos en mensajes en las aplicaciones cliente.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Convierte un mensaje en un valor devuelto y en los parámetros <paramref name="out" /> que se devuelven a la operación de llamada.</summary>
      <returns>Valor devuelto de la operación.</returns>
      <param name="message">Mensaje entrante.</param>
      <param name="parameters">Cualquier valor <paramref name="out" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Convierte una matriz de <see cref="T:System.Object" /> en un <see cref="T:System.ServiceModel.Channels.Message" /> saliente. </summary>
      <returns>Mensaje SOAP enviado a la operación del servicio.</returns>
      <param name="messageVersion">Versión del mensaje SOAP que se va a usar.</param>
      <param name="parameters">Parámetros que se pasan a la operación del cliente XAML.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Define el contrato para un selector de operaciones.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Obtiene un valor que indica si se requieren parámetros para determinar la selección.</summary>
      <returns>Es true si se requieren los parámetros; de lo contrario, es false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Devuelve la operación seleccionada.</summary>
      <returns>Operación seleccionada por el selector de operaciones personalizado.</returns>
      <param name="method">Método invocado.</param>
      <param name="parameters">Parámetros que se pasan al método.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Define los métodos que deserializan los mensajes de solicitud y serializan los mensajes de respuesta en una aplicación.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Deserializa un mensaje en una matriz de parámetros.</summary>
      <param name="message">Mensaje entrante.</param>
      <param name="parameters">Matriz de objetos que se pasan a la operación como parámetros.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Serializa un mensaje de respuesta desde una versión de mensaje especificada, una matriz de parámetros y un valor devuelto.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Message" /> de respuesta serializado.</returns>
      <param name="messageVersion">Versión de mensaje SOAP.</param>
      <param name="parameters">Matriz de parámetros out.</param>
      <param name="result">Valor devuelto.</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Representa una excepción que se produce a causa de un funcionamiento incorrecto de la seguridad aplicada al mensaje.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje de error.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> con un mensaje de error y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje de error.</param>
      <param name="innerException">Referencia a la excepción interna.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Representa la excepción de seguridad que se inicia cuando se produce un error en una solicitud de autorización de seguridad.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> utilizando el mensaje especificado.</summary>
      <param name="message">Descripción del estado del error.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> con el mensaje y la excepción interna especificadas.</summary>
      <param name="message">Descripción del estado del error.</param>
      <param name="innerException">Excepción interna que se va a utilizar.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Representa la credencial de cliente basada en nombre de usuario y contraseña.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Obtiene o establece la contraseña.</summary>
      <returns>Contraseña.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Obtiene o establece el nombre de usuario.</summary>
      <returns>Nombre del usuario.</returns>
    </member>
  </members>
</doc>