<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>建構 Windows Phone 基礎結構，以使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 而不是使用 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 來將方法或類別序列化。</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>取得或設定值，指出是否支援錯誤。</summary>
      <returns>如果支援錯誤，則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>指定成員 (傳回 <see cref="T:System.Xml.XmlAttribute" /> 物件陣列的欄位) 可以包含任何 XML 屬性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>建構 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
      <returns>加入之項目的索引。</returns>
      <param name="attribute">要加入至集合的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Clear">
      <summary>移除集合中的所有物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>判斷集合是否包含指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <returns>如果集合包含指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />，則為 true，否則為 false。</returns>
      <param name="attribute">要檢查的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 複製到集合 (從指定的目標索引開始)。</summary>
      <param name="array">要複製到集合的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件陣列。</param>
      <param name="index">陣列中開始複製以零為起始的索引。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Count">
      <summary>取得集合所包含的屬性數目。</summary>
      <returns>集合中所包含的屬性數目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.GetEnumerator">
      <summary>傳回可透過集合逐一查看的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>傳回集合內第一次發現所指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 之以零為起始的索引，如果在集合內找不到該屬性則傳回 -1。</summary>
      <returns>集合中 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的第一個索引，如果在集合中找不到屬性，則為 -1。</returns>
      <param name="attribute">要在集合中尋找的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 插入至集合的指定索引處。</summary>
      <param name="index">要插入屬性以零為起始的索引。</param>
      <param name="attribute">要插入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>取得或設定在指定索引的屬性元素。</summary>
      <returns>在指定之索引處的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</returns>
      <param name="index">要取得或設定之屬性元素以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>從集合移除指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> (如果存在)。</summary>
      <param name="attribute">要移除的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.RemoveAt(System.Int32)">
      <summary>移除集合中所指定索引處的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 項目。</summary>
      <param name="index">要移除之項目以零為起始的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從指定的陣列索引處開始，將元素從屬性集合複製到陣列。</summary>
      <param name="array">從 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 集合複製過來之屬性元素的一維目的 <see cref="T:System.Array" />。</param>
      <param name="index">陣列中以零為起始的索引，複製作業從此處開始。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 大於陣列長度、加入屬性元素時超出陣列長度，或者 <paramref name="array" /> 為多維度。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，指出對屬性集合的存取是否為同步的 (安全執行緒)。</summary>
      <returns>如果集合是同步的 (安全執行緒)，則為 true，否則為false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#SyncRoot">
      <summary>不支援此方法。</summary>
      <returns>擲回 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Add(System.Object)">
      <summary>將項目加入至屬性清單。</summary>
      <returns>新項目的插入位置。</returns>
      <param name="value">要加入清單的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>判斷屬性清單是否包含特定值。</summary>
      <returns>如果可在屬性清單中找到物件，則為 true，否則為 false。</returns>
      <param name="value">要在屬性清單中尋找的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>判斷屬性清單中特定項目的索引。</summary>
      <returns>如果可在屬性清單中找到，則為 <paramref name="value" /> 的索引，否則為 -1。</returns>
      <param name="value">要在屬性清單中尋找的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>在指定的索引處的清單中插入項目。</summary>
      <param name="index">應該插入值之以零為起始的索引。</param>
      <param name="value">要插入至清單的物件。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsFixedSize">
      <summary>取得值，指出清單大小是否固定。</summary>
      <returns>如果清單大小固定，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsReadOnly">
      <summary>取得值，該值指出清單是否是唯讀的。</summary>
      <returns>如果清單是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>取得或設定指定索引上的元素。</summary>
      <returns>位於指定索引的元素。</returns>
      <param name="index">要取得或設定之元素以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>從清單移除特定物件之第 1 個符合的元素。</summary>
      <param name="value">要從清單移除的物件。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 加入至集合。</summary>
      <returns>加入之項目的索引。</returns>
      <param name="attribute">要加入至集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Clear">
      <summary>移除集合中的所有物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>判斷集合是否包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</summary>
      <returns>如果集合包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />，則為 true，否則為 false。</returns>
      <param name="attribute">要檢查的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 複製到集合 (從指定的目標索引開始)。</summary>
      <param name="array">要複製到集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件陣列。</param>
      <param name="index">陣列中開始複製以零為起始的索引。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Count">
      <summary>取得集合所包含的屬性數目。</summary>
      <returns>集合中所包含的屬性數目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator">
      <summary>傳回可透過集合逐一查看的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>傳回集合內第一次發現所指定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 之以零為起始的索引，如果在集合內找不到該屬性則傳回 -1。</summary>
      <returns>集合中 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 的第一個索引，如果在集合中找不到屬性，則為 -1。</returns>
      <param name="attribute">要在集合中尋找的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 插入至集合的指定索引處。</summary>
      <param name="index">要插入屬性以零為起始的索引。</param>
      <param name="attribute">要插入的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>取得或設定在指定索引的屬性元素。</summary>
      <returns>在指定之索引處的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</returns>
      <param name="index">要取得或設定之屬性元素以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>從集合移除指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> (如果存在)。</summary>
      <param name="attribute">要移除的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)">
      <summary>移除集合中所指定索引處的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 項目。</summary>
      <param name="index">要移除之項目以零為起始的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從指定的陣列索引處開始，將元素從屬性集合複製到陣列。</summary>
      <param name="array">從 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 集合複製過來之屬性元素的一維目的 <see cref="T:System.Array" />。</param>
      <param name="index">陣列中以零為起始的索引，複製作業從此處開始。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 大於陣列長度、加入屬性元素時超出陣列長度，或者 <paramref name="array" /> 為多維度。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，指出對屬性集合的存取是否為同步的 (安全執行緒)。</summary>
      <returns>如果集合是同步的 (安全執行緒)，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot">
      <summary>不支援此方法。</summary>
      <returns>擲回 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)">
      <summary>將項目加入至屬性清單。</summary>
      <returns>新項目的插入位置。</returns>
      <param name="value">要加入清單的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>判斷屬性清單是否包含特定值。</summary>
      <returns>如果可在屬性清單中找到物件，則為 true，否則為 false。</returns>
      <param name="value">要在屬性清單中尋找的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>判斷屬性清單中特定項目的索引。</summary>
      <returns>如果可在屬性清單中找到，則為 <paramref name="value" /> 的索引，否則為 -1。</returns>
      <param name="value">要在屬性清單中尋找的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>在指定的索引處的清單中插入項目。</summary>
      <param name="index">應該插入值之以零為起始的索引。</param>
      <param name="value">要插入至清單的物件。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize">
      <summary>取得值，指出清單大小是否固定。</summary>
      <returns>如果清單大小固定，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly">
      <summary>取得值，該值指出清單是否是唯讀的。</summary>
      <returns>如果清單是唯讀的，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>取得或設定指定索引上的元素。</summary>
      <returns>位於指定索引的元素。</returns>
      <param name="index">要取得或設定之元素以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>從清單移除特定物件之第 1 個符合的元素。</summary>
      <param name="value">要從清單移除的物件。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>允許您在使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化或還原序列化物件時，覆寫屬性 (Property)、欄位和類別屬性 (Attribute)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件加入至 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件的集合。<paramref name="type" /> 參數指定要覆寫的物件。<paramref name="member" /> 參數指定覆寫的成員名稱。</summary>
      <param name="type">要覆寫的物件 <see cref="T:System.Type" />。</param>
      <param name="member">要覆寫的成員名稱。</param>
      <param name="attributes">表示覆寫屬性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</param>
      <exception cref="T:System.InvalidOperationException">針對某種型別成員，加入了多個 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件新增到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件的集合。<paramref name="type" /> 參數指定要由 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件覆寫的物件。</summary>
      <param name="type">被覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="attributes">表示覆寫屬性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</param>
      <exception cref="T:System.InvalidOperationException">針對某種型別成員，加入了多個 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>取得與指定之基底類別型別關聯的物件。</summary>
      <returns>表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
      <param name="type">基底類別 <see cref="T:System.Type" />，與您要擷取的屬性集合相關聯。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>取得與指定之基底類別型別關聯的物件。<paramref name="member" />參數指定覆寫的基底類別成員。</summary>
      <returns>表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
      <param name="type">基底類別 <see cref="T:System.Type" />，與您要的屬性集合相關聯。</param>
      <param name="member">被覆寫成員的名稱，指定要傳回的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>表示屬性物件集合，控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化和還原序列化物件的方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體，並自訂 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化和還原序列化物件的方式。</summary>
      <param name="provider">類別，可提供屬性的替代實作方式以控制 XML 序列化。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute"></member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>取得要覆寫之 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 物件，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化傳回陣列的 public 欄位或讀/寫屬性。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>取得或設定物件集合，以指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化項目，此項目會插入至由 public 欄位或讀/寫屬性傳回的陣列。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 物件，其中包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將 public 欄位或 public 讀/寫屬性 (Property) 序列化為 XML 屬性 (Attribute)。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />，控制將 public 欄位或讀/寫屬性 (Property) 序列化為 XML 屬性 (Attribute)。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>取得或設定物件，可允許您區分一組 choice。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />，可以套用至序列化為 xsi:choice 項目的類別成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>取得或設定 XML 元素或屬性的預設值。</summary>
      <returns>
        <see cref="T:System.Object" />，表示 XML 項目或屬性的預設值。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>取得物件集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將 public 欄位或讀/寫屬性序列化為 XML 元素。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" />，包含 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉成員的方式。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將列舉成員序列化。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>取得或設定值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否要序列化 public 欄位或 public 讀/寫屬性。</summary>
      <returns>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不應序列化欄位或屬性，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>取得或設定值，指定當包含傳回 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 物件之成員的物件被覆寫時，是否保留所有命名空間宣告。</summary>
      <returns>如果應該保留命名空間宣告，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將類別序列化為 XML 根元素的方式。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />，將類別屬性覆寫為 XML 根項目。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>取得或設定物件，指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將 public 欄位或 public 讀/寫屬性序列化為 XML 文字。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" />，覆寫 public 屬性或欄位的預設序列化。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將類別序列化為已套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />，會覆寫套用至類別宣告的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>表示 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的集合，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 使用這些物件來覆寫其序列化類別的預設方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 加入至集合。</summary>
      <returns>加入之項目的索引。</returns>
      <param name="attribute">要加入至集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Clear">
      <summary>移除集合中的所有物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>判斷集合是否包含指定的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</summary>
      <returns>如果集合包含指定的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />，則為 true，否則為 false。</returns>
      <param name="attribute">要檢查的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 複製到集合 (從指定的目標索引開始)。</summary>
      <param name="array">要複製到集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件陣列。</param>
      <param name="index">陣列中開始複製以零為起始的索引。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Count">
      <summary>取得集合所包含的屬性數目。</summary>
      <returns>集合中所包含的屬性數目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.GetEnumerator">
      <summary>傳回可透過集合逐一查看的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>傳回集合內第一次發現所指定 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 之以零為起始的索引，如果在集合內找不到該屬性則傳回 -1。</summary>
      <returns>集合中 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的第一個索引，如果在集合中找不到屬性，則為 -1。</returns>
      <param name="attribute">要在集合中尋找的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 插入至集合的指定索引處。</summary>
      <param name="index">要插入屬性以零為起始的索引。</param>
      <param name="attribute">要插入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>取得或設定在指定索引的屬性元素。</summary>
      <returns>在指定之索引處的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</returns>
      <param name="index">要取得或設定之屬性元素以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>從集合移除指定的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> (如果存在)。</summary>
      <param name="attribute">要移除的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)">
      <summary>移除集合中所指定索引處的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 項目。</summary>
      <param name="index">要移除之項目以零為起始的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從指定的陣列索引處開始，將元素從屬性集合複製到陣列。</summary>
      <param name="array">從 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 集合複製過來之屬性元素的一維目的 <see cref="T:System.Array" />。</param>
      <param name="index">陣列中以零為起始的索引，複製作業從此處開始。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 大於陣列長度、加入屬性元素時超出陣列長度，或者 <paramref name="array" /> 為多維度。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，指出對屬性集合的存取是否為同步的 (安全執行緒)。</summary>
      <returns>如果集合已同步處理 (安全執行緒)，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot">
      <summary>不支援此方法。</summary>
      <returns>擲回 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)">
      <summary>將項目加入至屬性清單。</summary>
      <returns>新項目的插入位置。</returns>
      <param name="value">要加入清單的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>判斷屬性清單是否包含特定值。</summary>
      <returns>如果可在屬性清單中找到物件，則為 true，否則為 false。</returns>
      <param name="value">要在屬性清單中尋找的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>判斷屬性清單中特定項目的索引。</summary>
      <returns>如果可在屬性清單中找到，則為 <paramref name="value" /> 的索引，否則為 -1。</returns>
      <param name="value">要在屬性清單中尋找的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>在指定的索引處的清單中插入項目。</summary>
      <param name="index">應該插入值之以零為起始的索引。</param>
      <param name="value">要插入至清單的物件。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize">
      <summary>取得值，指出清單大小是否固定。</summary>
      <returns>如果清單大小為固定，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly">
      <summary>取得值，該值指出清單是否是唯讀的。</summary>
      <returns>如果清單是唯讀，則為 <paramref name="true" />，否則為 <paramref name="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>取得或設定指定索引上的元素。</summary>
      <returns>位於指定索引的元素。</returns>
      <param name="index">要取得或設定之元素以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對該集合無效；它太大或是小於零。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>從清單移除特定物件之第 1 個符合的元素。</summary>
      <param name="value">要從清單移除的物件。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>支援 .NET Framework 型別與 XML 結構描述資料型別之間的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>取得被對應元素的名稱。</summary>
      <returns>對應元素的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>取得對應元素的命名空間。</summary>
      <returns>對應元素的命名空間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>設定用來查閱對應的索引。</summary>
      <param name="key">查詢索引鍵。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>取得對應 XSD 元素的名稱。</summary>
      <returns>XSD 元素名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>指定對應是讀取、寫入或兩者。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>同時產生讀取和寫入方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>產生讀取方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>產生寫入方法。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>產生 XML 結構描述元素宣告的對應，包括 .NET Framework 型別或 Web 服務方法資訊之 Web 服務描述語言 (WSDL) 文件中的常值 XML 結構描述定義 (XSD) 訊息部分。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>使用指定的預設 XML 命名空間來初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="defaultNamespace">用於匯入型別對應的預設 XML 命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>使用指定的 XML 序列化覆寫來初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="attributeOverrides">物件，覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化已對應型別的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>使用指定的 XML 序列化覆寫和預設 XML 命名空間來初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="attributeOverrides">物件，覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化已對應型別的方式。</param>
      <param name="defaultNamespace">用於匯入型別對應的預設 XML 命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>針對指定的 .NET Framework 型別產生 XML 結構描述元素的對應。</summary>
      <returns>型別與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
      <param name="type">要產生型別對應 .NET Framework 型別。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>使用指定的型別和命名空間，產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <returns>型別與 XML 結構描述元素的內部 .NET Framework 對應。</returns>
      <param name="type">要產生型別對應 .NET Framework 型別。</param>
      <param name="defaultNamespace">要使用的預設 XML 命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>使用指定的型別和屬性，產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，表示 .NET Framework 型別與 XML 結構描述項目的對應。</returns>
      <param name="type">要產生型別對應 .NET Framework 型別。</param>
      <param name="root">套用至型別的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>使用指定的型別、屬性和命名空間，產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，包含型別與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
      <param name="type">要產生型別對應 .NET Framework 型別。</param>
      <param name="root">套用至型別的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</param>
      <param name="defaultNamespace">要使用的預設 XML 命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>包括型別的對應，稍後用於叫用匯入方法時。</summary>
      <param name="type">要儲存型別對應資訊的 .NET Framework 型別。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>包括衍生型別的對應，稍後用於叫用匯入方法時。</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 類別的執行個體，包含衍生自 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 屬性的自訂屬性。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>將物件序列化為 XML 文件，及從 XML 文件還原序列化物件。<see cref="T:System.Xml.Serialization.XmlSerializer" /> 可讓您控制如何將物件編碼為 XML。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，可將指定型別的物件序列化為 XML 文件，以及將 XML 文件還原序列化為指定型別的物件。</summary>
      <param name="type">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件可以序列化的型別。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，可將指定型別的物件序列化為 XML 文件，以及將 XML 文件還原序列化為指定型別的物件。指定所有 XML 元素的預設命名空間。</summary>
      <param name="type">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件可以序列化的型別。</param>
      <param name="defaultNamespace">用於所有 XML 元素的預設命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，可將指定型別的物件序列化為 XML 文件，以及將 XML 文件還原序列化為指定型別的物件。如果屬性或欄位傳回陣列，<paramref name="extraTypes" /> 參數會指定可插入至陣列的物件。</summary>
      <param name="type">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件可以序列化的型別。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，可將指定型別的物件序列化為 XML 文件，以及將 XML 文件還原序列化為指定型別的物件。每個要序列化的物件，都能自行包含類別的執行個體，此多載可以透過其他類別進行覆寫。</summary>
      <param name="type">要序列化的物件型別。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，可將型別 <see cref="T:System.Object" /> 的物件序列化為 XML 文件執行個體，以及將 XML 文件執行個體還原序列化為型別 <see cref="T:System.Object" /> 的物件。每個要序列化的物件，都能自行包含類別的執行個體，此多載可以透過其他類別進行覆寫。此多載也會指定所有 XML 元素的預設命名空間，以及用做 XML 根元素的類別。</summary>
      <param name="type">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件可以序列化的型別。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，可擴充或覆寫 <paramref name="type" /> 參數指定之類別的行為。</param>
      <param name="extraTypes">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />，定義 XML 根元素屬性 (Property)。</param>
      <param name="defaultNamespace">XML 文件中，所有 XML 元素的預設命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，可將指定型別的物件序列化為 XML 文件，以及將 XML 文件還原序列化為指定型別的物件。它也指定用做 XML 根元素的類別。</summary>
      <param name="type">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件可以序列化的型別。</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />，表示 XML 根項目。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>使用可將一個型別對應至另一個型別的物件來初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</summary>
      <param name="xmlTypeMapping">將一個型別對應至另一個型別的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>取得值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否可以還原序列化指定的 XML 文件。</summary>
      <returns>如果這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以還原序列化 <see cref="T:System.Xml.XmlReader" /> 所指向的物件，則為 true，否則為 false。</returns>
      <param name="xmlReader">指向要還原序列化之文件的 <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>還原序列化指定之 <see cref="T:System.IO.Stream" /> 所包含的 XML 文件。</summary>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
      <param name="stream">包含要還原序列化之 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>還原序列化指定之 <see cref="T:System.IO.TextReader" /> 所包含的 XML 文件。</summary>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
      <param name="textReader">包含要還原序列化之 XML 文件的 <see cref="T:System.IO.TextReader" />。</param>
      <exception cref="T:System.InvalidOperationException">還原序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>還原序列化指定之 <see cref="T:System.xml.XmlReader" /> 所包含的 XML 文件。</summary>
      <returns>要進行還原序列化的 <see cref="T:System.Object" />。</returns>
      <param name="xmlReader">包含要還原序列化之 XML 文件的 <see cref="T:System.xml.XmlReader" />。</param>
      <exception cref="T:System.InvalidOperationException">還原序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件陣列，從 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件的陣列所建立。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</returns>
      <param name="mappings">將一個型別對應至另一個型別的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>從指定的對應傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</returns>
      <param name="mappings">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> 物件的陣列。</param>
      <param name="type">還原序列化物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件陣列，從型別的陣列所建立。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</returns>
      <param name="types">
        <see cref="T:System.Type" /> 物件的陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>序列化指定的 <see cref="T:System.Object" /> 並使用指定的 <see cref="T:System.IO.Stream" /> 將 XML 文件寫入至檔案。</summary>
      <param name="stream">用來寫入 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>序列化指定的 <see cref="T:System.Object" /> 並使用指定的 <see cref="T:System.IO.Stream" /> (參考指定的命名空間)，將 XML 文件寫入至檔案。</summary>
      <param name="stream">用來寫入 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>序列化指定的 <see cref="T:System.Object" /> 並使用指定的 <see cref="T:System.IO.TextWriter" /> 將 XML 文件寫入至檔案。</summary>
      <param name="textWriter">用來寫入 XML 文件的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>序列化指定的 <see cref="T:System.Object" />、使用指定的 <see cref="T:System.IO.TextWriter" /> 將 XML 文件寫入至檔案，並參考指定的命名空間。</summary>
      <param name="textWriter">用來寫入 XML 文件的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />，包含所產生 XML 文件的命名空間。</param>
      <exception cref="T:System.InvalidOperationException">序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>序列化指定的 <see cref="T:System.Object" /> 並使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入至檔案。</summary>
      <param name="xmlWriter">用來寫入 XML 文件的 <see cref="T:System.xml.XmlWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>序列化指定的 <see cref="T:System.Object" />、使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入至檔案，並參考指定的命名空間。</summary>
      <param name="xmlWriter">用來寫入 XML 文件的 <see cref="T:System.xml.XmlWriter" />。</param>
      <param name="o">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">序列化期間發生錯誤。可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>包含 XML 命名空間和前置詞，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 用來在 XML 文件執行個體中產生完整名稱。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>使用指定的 XmlSerializerNamespaces 執行個體 (包含前置詞和命名空間配對集合)，來初始化 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 類別的新執行個體。</summary>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 的執行個體，包含命名空間和前置詞配對。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 類別的新執行個體。</summary>
      <param name="namespaces">
        <see cref="T:System.Xml.XmlQualifiedName" /> 物件的陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>將前置詞和命名空間配對加入至 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 物件。</summary>
      <param name="prefix">與 XML 命名空間關聯的前置詞。</param>
      <param name="ns">XML 命名空間。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>取得集合中的前置詞和命名空間配對數目。</summary>
      <returns>集合中的前置詞和命名空間配對數目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>取得 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 物件中的前置詞和命名空間配對陣列。</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> 物件的陣列，做為 XML 文件中的限定名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>包含一個型別對另一個型別的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>包括命名空間和型別的完整限定型別名稱。</summary>
      <returns>完整限定的型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>取得對應物件的型別名稱。</summary>
      <returns>對應物件的型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>取得對應物件的 XML 元素名稱。</summary>
      <returns>對應物件的 XML 元素名稱。預設值為物件的類別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>取得對應物件的 XML 命名空間。</summary>
      <returns>對應物件的 XML 命名空間。預設值為空白字串 ("")。</returns>
    </member>
  </members>
</doc>