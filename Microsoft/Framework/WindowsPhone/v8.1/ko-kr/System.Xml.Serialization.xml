<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Windows Phone 인프라에 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 대신 <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 메서드 또는 클래스를 직렬화하도록 지시합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>장애가 지원되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>장애가 지원되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>멤버(<see cref="T:System.Xml.XmlAttribute" /> 개체의 배열을 반환하는 필드)가 XML 특성을 포함할 수 있도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
      <returns>추가된 항목의 인덱스입니다.</returns>
      <param name="attribute">컬렉션에 추가할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Clear">
      <summary>컬렉션에서 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 컬렉션에 들어 있는지 확인합니다.</summary>
      <returns>컬렉션에 지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attribute">확인할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>지정된 대상 인덱스부터 시작하여 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 배열을 컬렉션에 복사합니다.</summary>
      <param name="array">컬렉션에 복사할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 배열입니다.</param>
      <param name="index">배열에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Count">
      <summary>컬렉션에 포함된 특성 수를 가져옵니다.</summary>
      <returns>컬렉션에 포함된 특성 수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>컬렉션을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 첫 번째 발생 인덱스(0부터 시작)를 반환하거나, 컬렉션에서 특성을 찾을 수 없는 경우 -1을 반환합니다. </summary>
      <returns>컬렉션 내 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 첫 번째 인덱스이거나, 컬렉션에서 특성을 찾을 수 없으면 -1입니다.</returns>
      <param name="attribute">컬렉션에서 찾을 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>컬렉션 내의 지정된 인덱스에 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 삽입합니다.</summary>
      <param name="index">특성을 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="attribute">삽입할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 특성 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</returns>
      <param name="index">가져오거나 설정할 특성 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 있는 경우 컬렉션에서 제거합니다.</summary>
      <param name="attribute">제거할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.RemoveAt(System.Int32)">
      <summary>컬렉션에서 지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 항목을 제거합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>지정된 배열 인덱스부터 특성 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 컬렉션에서 복사한 특성 요소의 1차원 대상 <see cref="T:System.Array" />입니다. </param>
      <param name="index">배열에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />가 배열 길이보다 크거나, 특성 요소를 추가할 경우 배열 길이를 초과하거나, <paramref name="array" />가 다차원인 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>특성 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션이 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#SyncRoot">
      <summary>이 메서드는 지원되지 않습니다.</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />이 발생됩니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Add(System.Object)">
      <summary>특성 목록에 항목을 추가합니다.</summary>
      <returns>새 요소가 삽입된 위치입니다.</returns>
      <param name="value">목록에 추가할 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>특성 목록에 특정 값이 들어 있는지 확인합니다.</summary>
      <returns>특성 목록에 개체가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">특성 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>특성 목록에서 지정된 항목의 인덱스를 확인합니다.</summary>
      <returns>특성 목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">특성 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>목록의 지정된 인덱스에 항목을 삽입합니다.</summary>
      <param name="index">값을 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">목록에 삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsFixedSize">
      <summary>목록의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>목록의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsReadOnly">
      <summary>목록이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>목록이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 인덱스에서 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스입니다(0부터 시작).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>목록에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">목록에서 제거할 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>컬렉션에 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />를 추가합니다.</summary>
      <returns>추가된 항목의 인덱스입니다.</returns>
      <param name="attribute">컬렉션에 추가할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Clear">
      <summary>컬렉션에서 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 컬렉션에 들어 있는지 확인합니다.</summary>
      <returns>컬렉션에 지정된 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attribute">확인할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>지정된 대상 인덱스부터 시작하여 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 배열을 컬렉션에 복사합니다.</summary>
      <param name="array">컬렉션에 복사할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 배열입니다.</param>
      <param name="index">배열에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Count">
      <summary>컬렉션에 포함된 특성 수를 가져옵니다.</summary>
      <returns>컬렉션에 포함된 특성 수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>컬렉션을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />의 첫 번째 발생 인덱스(0부터 시작)를 반환하거나, 컬렉션에서 특성을 찾을 수 없는 경우 -1을 반환합니다. </summary>
      <returns>컬렉션 내 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />의 첫 번째 인덱스이거나, 컬렉션에서 특성을 찾을 수 없으면 -1입니다.</returns>
      <param name="attribute">컬렉션에서 찾을 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>컬렉션 내의 지정된 인덱스에 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />를 삽입합니다.</summary>
      <param name="index">특성을 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="attribute">삽입할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 특성 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</returns>
      <param name="index">가져오거나 설정할 특성 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 있는 경우 컬렉션에서 제거합니다.</summary>
      <param name="attribute">제거할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)">
      <summary>컬렉션에서 지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 항목을 제거합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>지정된 배열 인덱스부터 특성 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 컬렉션에서 복사한 특성 요소의 1차원 대상 <see cref="T:System.Array" />입니다. </param>
      <param name="index">배열에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />가 배열 길이보다 크거나, 특성 요소를 추가할 경우 배열 길이를 초과하거나, <paramref name="array" />가 다차원인 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>특성 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션이 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot">
      <summary>이 메서드는 지원되지 않습니다.</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />이 발생됩니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)">
      <summary>특성 목록에 항목을 추가합니다.</summary>
      <returns>새 요소가 삽입된 위치입니다.</returns>
      <param name="value">목록에 추가할 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>특성 목록에 특정 값이 들어 있는지 확인합니다.</summary>
      <returns>특성 목록에 개체가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">특성 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>특성 목록에서 지정된 항목의 인덱스를 확인합니다.</summary>
      <returns>특성 목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">특성 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>목록의 지정된 인덱스에 항목을 삽입합니다.</summary>
      <param name="index">값을 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">목록에 삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize">
      <summary>목록의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>목록의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly">
      <summary>목록이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>목록이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 인덱스에서 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스입니다(0부터 시작).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>목록에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">목록에서 제거할 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 직렬화 또는 역직렬화할 때 속성, 필드 및 클래스 특성을 재정의할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 추가합니다.<paramref name="type" /> 매개 변수는 재정의할 개체를 지정합니다.<paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
      <param name="type">재정의할 개체의 <see cref="T:System.Type" />입니다. </param>
      <param name="member">재정의할 멤버의 이름입니다. </param>
      <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다. </param>
      <exception cref="T:System.InvalidOperationException">일부 형식의 멤버에 대해 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 하나 이상 추가한 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 추가합니다.<see cref="T:System.Xml.Serialization.XmlAttributes" /> 매개 변수는 <paramref name="type" /> 개체로 재정의할 개체를 지정합니다.</summary>
      <param name="type">재정의되는 개체의 <see cref="T:System.Type" />입니다. </param>
      <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다. </param>
      <exception cref="T:System.InvalidOperationException">일부 형식의 멤버에 대해 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 하나 이상 추가한 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>지정된 기본 클래스 형식과 연결된 개체를 가져옵니다.</summary>
      <returns>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
      <param name="type">검색할 특성 컬렉션과 연결된 기본 클래스 <see cref="T:System.Type" />입니다. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>지정된 기본 클래스 형식과 연결된 개체를 가져옵니다.<paramref name="member" /> 매개 변수는 재정의된 기본 클래스 멤버를 지정합니다.</summary>
      <returns>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
      <param name="type">원하는 특성 컬렉션과 연결된 기본 클래스 <see cref="T:System.Type" />입니다. </param>
      <param name="member">반환할 <see cref="T:System.Xml.Serialization.XmlAttributes" />를 지정하는 재정의된 멤버의 이름입니다. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 개체를 직렬화 및 역직렬화하는 방식을 제어하는 특성 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 개체를 직렬화 및 역직렬화하는 방식을 사용자 지정합니다. </summary>
      <param name="provider">XML 직렬화를 제어하는 특성의 대체 구현을 제공할 수 있는 클래스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute"></member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>재정의할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 배열을 반환하는 공용 필드 또는 읽기/쓰기 속성을 직렬화하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 배열을 반환하는 공용 필드 또는 읽기/쓰기 속성을 직렬화하는 방식을 지정하는 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 공용 필드 또는 읽기/쓰기 속성에 의해 반환된 배열에 삽입된 항목을 직렬화하는 방식을 지정하는 개체의 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 컬렉션을 포함하는 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 공용 필드 또는 공용 읽기/쓰기 속성을 XML 특성으로 직렬화하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>공용 필드 또는 읽기/쓰기 속성을 XML 특성으로 직렬화하는 방식을 제어하는 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>선택 항목 집합을 구분하는 데 사용할 수 있는 개체를 가져오거나 설정합니다.</summary>
      <returns>xsi:choice 요소로 직렬화된 클래스 멤버에 적용할 수 있는 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>XML 요소 또는 특성의 기본값을 가져오거나 설정합니다.</summary>
      <returns>XML 요소 또는 특성의 기본값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 공용 필드 또는 읽기/쓰기 속성을 XML 요소로 직렬화하는 방식을 지정하는 개체의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 컬렉션을 포함하는 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 열거형 멤버를 직렬화하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 열거형 멤버를 직렬화하는 방식을 지정하는 <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 공용 필드 또는 공용 읽기/쓰기 속성을 직렬화하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 필드 또는 속성을 serialize하지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체를 반환하는 멤버가 포함된 개체를 재정의할 때 모든 네임스페이스 선언을 유지할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>네임스페이스 선언을 유지해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 클래스를 XML 루트 요소로 직렬화하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>XML 루트 요소로 특성화된 클래스를 재정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 공용 필드 또는 공용 읽기/쓰기 속성을 XML 텍스트로 직렬화하도록 지시하는 개체를 가져오거나 설정합니다.</summary>
      <returns>공용 속성 또는 필드의 기본 직렬화를 재정의하는 <see cref="T:System.Xml.Serialization.XmlTextAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />가 적용된 클래스를 직렬화하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>클래스 선언에 적용된 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />를 재정의하는 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 클래스를 직렬화하는 기본 방식을 재정의할 때 사용하는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>컬렉션에 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />를 추가합니다.</summary>
      <returns>추가된 항목의 인덱스입니다.</returns>
      <param name="attribute">컬렉션에 추가할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Clear">
      <summary>컬렉션에서 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 컬렉션에 들어 있는지 확인합니다.</summary>
      <returns>컬렉션에 지정 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attribute">확인할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>지정된 대상 인덱스부터 시작하여 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 배열을 컬렉션에 복사합니다.</summary>
      <param name="array">컬렉션에 복사할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 배열입니다.</param>
      <param name="index">배열에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Count">
      <summary>컬렉션에 포함된 특성 수를 가져옵니다.</summary>
      <returns>컬렉션에 포함된 특성 수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>컬렉션을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 첫 번째 발생 인덱스(0부터 시작)를 반환하거나, 컬렉션에서 특성을 찾을 수 없는 경우 -1을 반환합니다. </summary>
      <returns>컬렉션 내 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 첫 번째 인덱스이거나, 컬렉션에서 특성을 찾을 수 없으면 -1입니다.</returns>
      <param name="attribute">컬렉션에서 찾을 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>컬렉션 내의 지정된 인덱스에 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />를 삽입합니다.</summary>
      <param name="index">특성을 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="attribute">삽입할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 특성 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</returns>
      <param name="index">가져오거나 설정할 특성 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 있는 경우 컬렉션에서 제거합니다.</summary>
      <param name="attribute">제거할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)">
      <summary>컬렉션에서 지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 항목을 제거합니다.</summary>
      <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>지정된 배열 인덱스부터 특성 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 컬렉션에서 복사한 특성 요소의 1차원 대상 <see cref="T:System.Array" />입니다. </param>
      <param name="index">배열에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />가 배열 길이보다 크거나, 특성 요소를 추가할 경우 배열 길이를 초과하거나, <paramref name="array" />가 다차원인 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>특성 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션이 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot">
      <summary>이 메서드는 지원되지 않습니다.</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />이 발생됩니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)">
      <summary>특성 목록에 항목을 추가합니다.</summary>
      <returns>새 요소가 삽입된 위치입니다.</returns>
      <param name="value">목록에 추가할 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>특성 목록에 특정 값이 들어 있는지 확인합니다.</summary>
      <returns>특성 목록에 개체가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">특성 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>특성 목록에서 지정된 항목의 인덱스를 확인합니다.</summary>
      <returns>특성 목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">특성 목록에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>목록의 지정된 인덱스에 항목을 삽입합니다.</summary>
      <param name="index">값을 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">목록에 삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize">
      <summary>목록의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>목록의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly">
      <summary>목록이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>목록이 읽기 전용이면 <paramref name="true" />이고, 그렇지 않으면 <paramref name="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 인덱스에서 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스입니다(0부터 시작).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션에 유효하지 않은 경우(너무 크거나 0보다 작은 경우)</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>목록에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">목록에서 제거할 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>.NET Framework 형식과 XML 스키마 데이터 형식 간의 매핑을 지원합니다. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>매핑된 요소의 이름을 가져옵니다.</summary>
      <returns>매핑된 요소의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>매핑된 요소의 네임스페이스를 가져옵니다.</summary>
      <returns>매핑된 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>매핑을 조회하는 데 사용되는 키를 설정합니다.</summary>
      <param name="key">조회 키입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>매핑의 XSD 요소 이름을 가져옵니다.</summary>
      <returns>XSD 요소 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>매핑이 읽기, 쓰기 또는 둘 다인지를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>읽기 및 쓰기 메서드가 모두 생성됩니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>읽기 메서드가 생성됩니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>쓰기 메서드가 생성됩니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>.NET Framework 형식 또는 웹 서비스 메서드 정보에 대한 WSDL(웹 서비스 기술 언어) 문서의 리터럴 XSD(XML 스키마 정의) 메시지 부분을 포함하여 XML 스키마 요소 선언에 대한 매핑을 생성합니다. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>지정된 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="defaultNamespace">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>지정된 XML 직렬화 재정의를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑된 형식을 직렬화하는 방식을 재정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>지정된 XML 직렬화 재정의 및 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑된 형식을 직렬화하는 방식을 재정의하는 개체입니다.</param>
      <param name="defaultNamespace">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>지정된 .NET Framework 형식의 XML 스키마 요소에 대한 매핑을 생성합니다. </summary>
      <returns>XML 스키마 요소에 대한 형식의 내부 .NET Framework 매핑입니다.</returns>
      <param name="type">형식 매핑을 생성할 대상 .NET Framework 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>지정된 형식과 네임스페이스를 사용하여 .NET Framework 형식의 XML 스키마 요소에 대한 매핑을 생성합니다. </summary>
      <returns>XML 스키마 요소에 대한 형식의 내부 .NET Framework 매핑입니다.</returns>
      <param name="type">형식 매핑을 생성할 대상 .NET Framework 형식입니다.</param>
      <param name="defaultNamespace">사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>지정된 형식과 특성을 사용하여 .NET Framework 형식의 XML 스키마 요소에 대한 매핑을 생성합니다. </summary>
      <returns>XML 스키마 요소에 대한 .NET Framework 형식의 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
      <param name="type">형식 매핑을 생성할 대상 .NET Framework 형식입니다.</param>
      <param name="root">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>지정된 형식, 특성 및 네임스페이스를 사용하여 .NET Framework 형식의 XML 스키마 요소에 대한 매핑을 생성합니다. </summary>
      <returns>XML 스키마 요소에 대한 형식의 내부 .NET Framework 매핑이 포함된 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
      <param name="type">형식 매핑을 생성할 대상 .NET Framework 형식입니다.</param>
      <param name="root">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</param>
      <param name="defaultNamespace">사용할 기본 XML 네임스페이스입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>나중에 가져오기 메서드를 호출할 때 사용하기 위해 형식의 매핑을 포함합니다. </summary>
      <param name="type">형식 매핑 정보를 저장할 .NET Framework 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>나중에 가져오기 메서드를 호출할 때 사용하기 위해 파생 형식의 매핑을 포함합니다. </summary>
      <param name="provider">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 특성에서 파생된 사용자 지정 특성이 포함된 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>XML 문서 간에 개체를 serialize 및 de직렬화합니다.<see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하면 개체가 XML로 인코딩되는 방식을 제어할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>지정된 형식의 개체를 XML 문서로 직렬화하고 XML 문서를 지정된 형식의 개체로 역직렬화할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 직렬화할 수 있는 개체의 형식입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>지정된 형식의 개체를 XML 문서로 직렬화하고 XML 문서를 지정된 형식의 개체로 역직렬화할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.모든 XML 요소의 기본 네임스페이스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 직렬화할 수 있는 개체의 형식입니다. </param>
      <param name="defaultNamespace">모든 XML 요소에 대해 사용할 기본 네임스페이스입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>지정된 형식의 개체를 XML 문서로 직렬화하고 XML 문서를 지정된 형식의 개체로 역직렬화할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.필드 또는 속성이 배열을 반환하는 경우 <paramref name="extraTypes" /> 매개 변수는 배열에 삽입될 수 있는 개체를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 직렬화할 수 있는 개체의 형식입니다. </param>
      <param name="extraTypes">직렬화할 추가 개체 형식의 <see cref="T:System.Type" /> 배열입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>지정된 형식의 개체를 XML 문서로 직렬화하고 XML 문서를 지정된 형식의 개체로 역직렬화할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다.</summary>
      <param name="type">직렬화할 개체의 형식입니다. </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
        <see cref="T:System.Object" /> 형식의 개체를 XML 문서로 직렬화하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 역직렬화할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.직렬화할 각 개체 자체에 이 오버로드에서 다른 클래스로 재정의하는 클래스 인스턴스가 들어 있을 수 있습니다.또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 직렬화할 수 있는 개체의 형식입니다. </param>
      <param name="overrides">
        <paramref name="type" /> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다. </param>
      <param name="extraTypes">직렬화할 추가 개체 형식의 <see cref="T:System.Type" /> 배열입니다. </param>
      <param name="root">XML 루트 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다. </param>
      <param name="defaultNamespace">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>지정된 형식의 개체를 XML 문서로 직렬화하고 XML 문서를 지정된 형식의 개체로 역직렬화할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.또한 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 직렬화할 수 있는 개체의 형식입니다. </param>
      <param name="root">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>한 형식을 다른 형식에 매핑하는 개체를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="xmlTypeMapping">한 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 지정된 XML 문서를 역직렬화할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 <see cref="T:System.Xml.XmlReader" />가 가리키는 개체를 역직렬화할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="xmlReader">역직렬화할 문서를 가리키는 <see cref="T:System.Xml.XmlReader" />입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>지정된 <see cref="T:System.IO.Stream" />에 포함된 XML 문서를 역직렬화합니다.</summary>
      <returns>역직렬화하는 <see cref="T:System.Object" />입니다.</returns>
      <param name="stream">역직렬화할 XML 문서가 포함된 <see cref="T:System.IO.Stream" />입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>지정된 <see cref="T:System.IO.TextReader" />에 포함된 XML 문서를 역직렬화합니다.</summary>
      <returns>역직렬화하는 <see cref="T:System.Object" />입니다.</returns>
      <param name="textReader">역직렬화할 XML 문서가 포함된 <see cref="T:System.IO.TextReader" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">역직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>지정된 <see cref="T:System.xml.XmlReader" />에 포함된 XML 문서를 역직렬화합니다.</summary>
      <returns>역직렬화하는 <see cref="T:System.Object" />입니다.</returns>
      <param name="xmlReader">역직렬화할 XML 문서가 포함된 <see cref="T:System.xml.XmlReader" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">역직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체의 배열에서 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</returns>
      <param name="mappings">한 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />의 배열입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>지정된 매핑에서 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스입니다.</returns>
      <param name="mappings">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> 개체의 배열입니다.</param>
      <param name="type">역직렬화된 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>형식 배열에서 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</returns>
      <param name="types">
        <see cref="T:System.Type" /> 개체의 배열입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>지정된 <see cref="T:System.Object" />를 직렬화하고 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="stream">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다. </param>
      <param name="o">직렬화할 <see cref="T:System.Object" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>지정된 <see cref="T:System.Object" />를 직렬화하고 지정된 네임스페이스를 참조하는 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="stream">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다. </param>
      <param name="o">직렬화할 <see cref="T:System.Object" />입니다. </param>
      <param name="namespaces">개체가 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Object" />를 직렬화하고 지정된 <see cref="T:System.IO.TextWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="textWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다. </param>
      <param name="o">직렬화할 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>지정된 <see cref="T:System.Object" />를 직렬화하고 지정된 네임스페이스를 참조하는 지정된 <see cref="T:System.IO.TextWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="textWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다. </param>
      <param name="o">직렬화할 <see cref="T:System.Object" />입니다. </param>
      <param name="namespaces">생성된 XML 문서의 네임스페이스가 포함된 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Object" />를 직렬화하고 지정된 <see cref="T:System.Xml.XmlWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="xmlWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.xml.XmlWriter" />입니다. </param>
      <param name="o">직렬화할 <see cref="T:System.Object" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>지정된 <see cref="T:System.Object" />를 직렬화하고 지정된 네임스페이스를 참조하는 지정된 <see cref="T:System.Xml.XmlWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="xmlWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.xml.XmlWriter" />입니다. </param>
      <param name="o">직렬화할 <see cref="T:System.Object" />입니다. </param>
      <param name="namespaces">개체가 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다. </param>
      <exception cref="T:System.InvalidOperationException">직렬화 중에 오류가 발생한 경우.<see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원본 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 XML 문서 인스턴스에 정규화된 이름을 생성하는 데 사용하는 XML 네임스페이스 및 접두사를 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>접두사 및 네임스페이스 쌍의 컬렉션이 포함된 지정된 XmlSerializerNamespaces 인스턴스를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="namespaces">네임스페이스 및 접두사 쌍이 포함된 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />의 인스턴스입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="namespaces">
        <see cref="T:System.Xml.XmlQualifiedName" /> 개체의 배열입니다. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체에 접두사 및 네임스페이스 쌍을 추가합니다.</summary>
      <param name="prefix">XML 네임스페이스와 연결된 접두사입니다. </param>
      <param name="ns">XML 네임스페이스입니다. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>컬렉션에 있는 접두사 및 네임스페이스 쌍의 개수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 접두사 및 네임스페이스 쌍의 개수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체에 있는 접두사 및 네임스페이스 쌍의 배열을 가져옵니다.</summary>
      <returns>XML 문서에서 정규화된 이름으로 사용되는 <see cref="T:System.Xml.XmlQualifiedName" /> 개체의 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>한 형식과 다른 형식 간의 매핑을 포함합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>네임스페이스 및 형식이 포함된 정규화된 형식 이름입니다.</summary>
      <returns>정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>매핑된 개체의 형식 이름을 가져옵니다.</summary>
      <returns>매핑된 개체의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>매핑된 개체의 XML 요소 이름을 가져옵니다.</summary>
      <returns>매핑된 개체의 XML 요소 이름입니다.기본값은 개체의 클래스 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>매핑된 개체의 XML 네임스페이스를 가져옵니다.</summary>
      <returns>매핑된 개체의 XML 네임스페이스입니다.기본값은 빈 문자열("")입니다.</returns>
    </member>
  </members>
</doc>