<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>항목이 키 역할을 하는 형식인 컬렉션을 제공합니다.</summary>
      <typeparam name="TItem">컬렉션에 포함되고 컬렉션의 키 역할도 하는 항목 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>
        <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>지정된 형식의 컬렉션에서 첫 번째 항목을 반환합니다.</summary>
      <returns>참조 형식이면 <paramref name="T" /> 형식의 개체이고, 값 형식이면 <paramref name="T" /> 형식의 값입니다. <paramref name="T" /> 형식의 개체가 컬렉션에 들어 있지 않으면 형식의 기본값이 반환됩니다. 참조 형식이면 null이고, 값 형식이면 0입니다.</returns>
      <typeparam name="T">컬렉션에서 찾을 항목의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>
        <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />에 포함된 <paramref name="T" /> 형식의 개체 컬렉션을 반환합니다.</summary>
      <returns>원본 컬렉션에 있는 <paramref name="T" /> 형식의 개체를 포함하는 <paramref name="T" /> 형식의 <see cref="T:System.Collections.ObjectModel.Collection`1" />입니다.</returns>
      <typeparam name="T">컬렉션에서 찾을 항목의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>컬렉션에 포함된 항목의 형식을 가져옵니다.</summary>
      <returns>컬렉션에서 지정된 <paramref name="item" />의 형식입니다.</returns>
      <param name="item">컬렉션에서 형식을 검색할 항목입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null입니다.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>컬렉션의 특정 위치에 요소를 삽입합니다.</summary>
      <param name="index">
        <paramref name="item" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="item">컬렉션에 삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null입니다.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>컬렉션에서 지정된 형식의 개체를 제거합니다.</summary>
      <returns>컬렉션에서 제거되는 개체입니다.</returns>
      <typeparam name="T">컬렉션에서 제거할 항목의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>컬렉션에서 지정된 형식의 요소를 모두 제거합니다.</summary>
      <returns>원본 컬렉션에 있는 <paramref name="T" /> 형식의 개체를 포함하는 <see cref="T:System.Collections.ObjectModel.Collection`1" />입니다.</returns>
      <typeparam name="T">컬렉션에서 제거할 항목의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>지정된 인덱스에 있는 항목을 새 개체로 바꿉니다.</summary>
      <param name="index">바꿀 <paramref name="item" />의 인덱스(0부터 시작)입니다.</param>
      <param name="item">컬렉션에 추가할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null입니다.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>제네릭 매개 변수에서 지정된 형식의 개체를 요소로 포함하는, 스레드로부터 안전하게 보호되는 읽기 전용 컬렉션을 제공합니다.</summary>
      <typeparam name="T">스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 항목으로 포함된 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 대한 액세스 동기화에 사용되는 개체 및 지정된 열거 가능 요소 목록을 사용하여 <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="syncRoot">스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 대한 액세스 동기화에 사용되는 개체입니다.</param>
      <param name="list">스레드로부터 안전하게 보호되는 읽기 전용 컬렉션을 초기화하는 데 사용되는 요소의 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 컬렉션입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>컬렉션에 특정 값을 가진 요소가 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value" /> 요소가 컬렉션에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 컬렉션에 포함된 형식의 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>특정 인덱스부터 컬렉션의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소의 대상인 <see cref="T:System.Array" />입니다.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 포함된 요소 수를 가져옵니다.</summary>
      <returns>스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 포함된 요소 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>동기화된 읽기 전용 컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션에 저장된 형식의 개체에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>컬렉션에서 맨 처음 발견되는 값의 인덱스를 반환합니다.</summary>
      <returns>컬렉션에서 맨 처음 발견되는 <paramref name="value" />의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에서 지정된 인덱스를 가진 요소를 가져옵니다.</summary>
      <returns>읽기 전용 컬렉션에 있는 지정된 인덱스를 가진 요소입니다.</returns>
      <param name="index">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 포함된 요소 목록을 가져옵니다.</summary>
      <returns>스레드로부터 안전하게 보호되는 읽기 전용 컬렉션에 포함된 요소의 <see cref="T:System.Collections.Generic.IList`1" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>호출되면 <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <param name="value">컬렉션에 추가할 요소입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에 항목을 추가할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>호출되면 <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에서 항목을 지울 수 없는 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>true를 반환합니다.</summary>
      <returns>true입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <returns>읽기 전용 컬렉션에서 항목이 제거되지 않았음을 나타내기 위해 메서드에서 false를 반환합니다.</returns>
      <param name="value">컬렉션에서 제거할 값입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에서 항목을 제거할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>호출되면 <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">컬렉션에 삽입할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에 항목을 삽입할 수 없는 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져옵니다.</summary>
      <returns>지정된 인덱스에 있는 <paramref name="T" /> 형식의 요소입니다.</returns>
      <param name="index">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에 항목을 설정할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>호출되면 <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <param name="index">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에서 항목을 제거할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>지정된 인덱스부터 컬렉션의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소의 대상인 <see cref="T:System.Array" />입니다.</param>
      <param name="index">배열에서 복사가 시작되는 인덱스이며 0부터 시작합니다.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>컬렉션에 대한 액세스가 동기화되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true입니다.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>동기화된 읽기 전용 컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>동기화된 읽기 전용 컬렉션을 반복하는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />입니다.</returns>
      <param name="value">컬렉션에 추가할 요소입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에 항목을 추가할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>
        <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에서 항목을 지울 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>컬렉션에 특정 값을 가진 요소가 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value" /> 요소가 컬렉션에 있으면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</returns>
      <param name="value">컬렉션에서 찾을 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 컬렉션에 포함된 형식의 개체가 아닌 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>컬렉션에서 특정 항목의 인덱스를 확인합니다.</summary>
      <returns>목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">인덱스를 검색할 요소입니다.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>호출되면 <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">컬렉션에 삽입할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에 항목을 삽입할 수 없는 경우</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>컬렉션의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true입니다.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true입니다.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오고 요소가 설정된 경우 예외를 발생합니다.</summary>
      <returns>컬렉션에서 지정된 위치에 있는 개체입니다.</returns>
      <param name="index">컬렉션에 있는 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에 항목을 설정할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에서 항목을 제거할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>호출되면 <see cref="T:System.NotSupportedException" />을 발생합니다.</summary>
      <param name="index">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션에서 항목을 제거할 수 없는 경우</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>호출된 작업과 관련된 동작이 서비스에서 사용 가능한 작업의 동작과 일치하지 않는 경우 클라이언트에서 예외가 발생됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외가 발생되도록 한 <see cref="T:System.Exception" />입니다. </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Windows Phone 클라이언트가 ASMX 기반 웹 서비스 및 WS-I Basic Profile 1.1을 준수하는 기타 서비스와 통신할 수 있는 끝점을 구성하는 데 사용할 수 있는 바인딩을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.BasicHttpBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>바인딩에 사용되는 지정된 형식의 보안을 사용하여 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="securityMode">SOAP 메시지와 함께 클라이언트에 사용되는 보안의 형식을 지정하는 <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />의 값입니다.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>현재 바인딩에 포함된 바인딩 요소의 정렬된 컬렉션을 반환합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpBinding" />에서 설명하는 바인딩 요소의 정렬된 스택이 포함된 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>
        <see cref="T:P:System.ServiceModel.BasicHttpBinding" />에 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />가 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>바인딩에 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>이 바인딩에서 처리된 메시지에 사용되는 SOAP 버전을 가져옵니다.</summary>
      <returns>이 바인딩과 함께 사용되는 <see cref="T:System.ServiceModel.EnvelopeVersion" />의 값입니다. 이 값은 항상 SOAP 1.1입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>채널에서 메시지를 받는 버퍼의 최대 크기를 가져오거나 설정합니다.</summary>
      <returns>이 바인딩으로 구성된 끝점에 대해 처리되는 동안 메시지를 저장하는 버퍼의 최대 크기(바이트)입니다. 기본값은 65,536바이트입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>이 바인딩으로 구성된 채널에서 받을 수 있는 메시지의 최대 크기를 가져오거나 설정합니다.</summary>
      <returns>바인딩에서 처리되는 메시지의 최대 크기(바이트)입니다. 기본값은 65,536바이트입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작은 경우</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>이 바인딩으로 구성된 채널 및 수신기에 대한 URI 전송 체계를 가져옵니다.</summary>
      <returns>전송 바인딩 요소의 보안 모드가 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> 또는 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" />로 설정되어 있으면 "https"이고, 그렇지 않으면 "http"입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>이 바인딩과 함께 사용되는 보안 형식을 가져옵니다. </summary>
      <returns>이 바인딩과 함께 사용되는 <see cref="T:System.ServiceModel.BasicHttpSecurity" />입니다. 기본값은 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>메시지 텍스트에 사용되는 문자 인코딩을 가져오거나 설정합니다.</summary>
      <returns>사용되는 문자 인코딩을 나타내는 <see cref="T:System.Text.Encoding" />입니다. 기본값은 <see cref="T:System.Text.UTF8Encoding" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>BasicHttpBinding 바인딩에서 보안이 사용하도록 설정된 경우 클라이언트가 인증 시 사용할 수 있는 자격 증명 형식을 열거합니다.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>사용자 이름 자격 증명을 사용하여 클라이언트가 인증됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Windows Phone에 존재하지만 하며 지원되지는 않습니다.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>
        <see cref="T:System.ServiceModel.BasicHttpBinding" />으로 구성된 Windows Phone 클라이언트에 사용되는 보안을 지정합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>
        <see cref="T:System.ServiceModel.BasicHttpBinding" />으로 구성된 클라이언트에 대한 보안 모드를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> 열거형의 값입니다. 이 속성의 기본값은 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />에 적합한 값이 아닌 경우</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>시스템에서 제공된 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 바인딩과 함께 사용할 수 있는 보안 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>전송 중에 SOAP 메시지의 보안이 유지되지 않습니다. 이것은 기본적인 동작입니다.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>HTTPS를 사용하여 보안이 제공됩니다. SSL 인증서를 사용하여 서비스를 구성해야 합니다. HTTPS를 사용하여 SOAP 메시지 전체가 보호됩니다. 클라이언트가 서비스의 SSL 인증서를 사용하여 서비스를 인증합니다.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>이 모드에서는 HTTPS를 사용하여 무결성, 기밀성 및 서비스 인증을 제공합니다. 인증서를 사용하여 서비스를 구성해야 합니다. SOAP 메시지 보안에서 클라이언트 인증을 제공합니다.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>이 모드에서는 HTTP 기반 클라이언트 인증만 제공합니다. 메시지 무결성이나 기밀성은 제공되지 않습니다.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>클라이언트가 서비스 끝점으로 메시지를 보내는 데 사용하는 채널을 만들고 관리합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.ChannelFactory" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>지정된 구성 파일에서 제공하는 동작 및 채널 팩터리의 서비스 끝점에 있는 동작을 사용하여 채널 팩터리를 초기화합니다.</summary>
      <param name="configurationName">구성 파일의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException">채널 팩터리의 서비스 끝점이 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>파생 클래스에서 구현된 경우 채널 팩터리와 연결된 서비스 끝점에 대한 설명을 만듭니다.</summary>
      <returns>채널 팩터리와 연결된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>현재 팩터리의 끝점에 대한 채널 팩터리를 빌드합니다.</summary>
      <returns>현재 팩터리의 끝점에 대한 <see cref="T:System.ServiceModel.Channels.IChannelFactory" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">팩터리 채널이 연결되는 서비스의 끝점이 null인 경우 또는 끝점의 바인딩이 null이거나 지정된 구성 이름을 가진 요소가 없는 경우</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>클라이언트가 팩터리에서 생성된 채널을 통해 서비스 끝점을 전달하는 데 사용하는 자격 증명을 가져옵니다.</summary>
      <returns>팩터리에 대해 구성되어 있거나 끝점이 null 참조가 아니고 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 통신 상태이면 클라이언트가 사용하는 <see cref="T:System.ServiceModel.Description.ClientCredentials" />이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>닫기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>열기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>팩터리에서 생성된 채널이 연결되는 서비스 끝점을 가져옵니다.</summary>
      <returns>팩터리에서 생성된 채널이 연결되는 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>열려 있지 않은 경우 현재 채널 팩터리를 엽니다.</summary>
      <exception cref="T:System.ObjectDisposedException">현재 팩터리를 닫는 중이거나 닫았으므로 열 수 없는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우) 또는 null(없는 경우)을 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>지정된 바인딩 및 주소를 사용하여 채널 팩터리의 서비스 끝점을 초기화합니다.</summary>
      <param name="binding">채널 팩터리의 끝점을 초기화하는 데 사용할 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
      <param name="address">채널 팩터리의 끝점을 초기화하는 데 사용할 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>지정된 주소 및 구성을 사용하여 채널 팩터리의 서비스 끝점을 초기화합니다.</summary>
      <param name="configurationName">채널 팩터리를 초기화하는 데 사용할 구성 파일의 이름입니다.</param>
      <param name="address">채널 팩터리의 끝점을 초기화하는 데 사용할 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>현재 채널 팩터리의 내부 채널 팩터리를 종료합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>상태 개체가 연결되어 있는 현재 채널 팩터리의 내부 채널 팩터리에서 비동기 닫기 작업을 시작합니다. </summary>
      <returns>비동기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">시간 초과 전에 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>상태 개체가 연결되어 있는 현재 채널 팩터리의 내부 채널 팩터리에서 비동기 열기 작업을 시작합니다. </summary>
      <returns>비동기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">시간 초과 전에 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>작업 완료에 대해 지정된 제한 시간을 사용하여 내부 채널 팩터리에서 닫기를 호출합니다.</summary>
      <param name="timeout">시간 초과 전에 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>현재 채널 팩터리의 내부 채널 팩터리에서 비동기 닫기 작업을 완료합니다. </summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>현재 채널 팩터리의 내부 채널 팩터리에서 비동기 열기 작업을 완료합니다. </summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>작업 완료에 대해 지정된 제한 시간을 사용하여 현재 채널 팩터리의 내부 채널 팩터리에서 열기를 호출합니다.</summary>
      <param name="timeout">시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">현재 채널의 내부 채널이 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>채널 팩터리에 대한 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 개체의 읽기 전용 복사본을 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>현재 채널의 내부 채널 팩터리를 빌드합니다.</summary>
      <exception cref="T:System.InvalidOperationException">채널 팩터리의 내부 채널 팩터리가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>현재 채널 팩터리를 닫습니다.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>클라이언트가 다양하게 구성된 서비스 끝점으로 메시지를 보내는 데 사용하는 여러 형식의 채널을 만드는 팩터리입니다.</summary>
      <typeparam name="TChannel">채널 팩터리에서 생성되는 채널의 형식입니다. 이 형식은 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 또는 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />이어야 합니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>지정된 끝점 주소와 바인딩 구성을 사용하여 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="binding">팩터리에서 만든 채널을 구성하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
      <param name="remoteAddress">팩터리에서 만든 채널의 대상 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>
        <see cref="T:System.ServiceModel.ChannelFactory`1" /> 클래스의 새 인스턴스를 초기화하고 끝점을 구성합니다.</summary>
      <param name="endpointConfigurationName">팩터리에서 만든 채널의 서비스 끝점 구성이 포함된 파일의 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>지정된 끝점 주소와 끝점 구성을 사용하여 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="endpointConfigurationName">팩터리에서 만든 채널의 서비스 끝점 구성이 포함된 파일의 이름입니다.</param>
      <param name="remoteAddress">팩터리에서 만든 채널의 대상 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>특정 끝점 주소의 서비스로 메시지를 보내는 데 사용되는 채널을 만듭니다.</summary>
      <returns>팩터리에서 만든 <see cref="T:System.ServiceModel.Channels.IChannel" /> 형식의 <paramref name="TChannel" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>지정된 전송 주소를 통해 특정 끝점 주소의 서비스로 메시지를 보내는 데 사용되는 채널을 만듭니다.</summary>
      <returns>팩터리에서 만든 <see cref="T:System.ServiceModel.Channels.IChannel" /> 형식의 <paramref name="TChannel" />입니다.</returns>
      <param name="via">채널에서 메시지를 보내는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" />에 지원되지 않는 이중 작업이 있는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>서비스 끝점에 대한 설명을 만듭니다.</summary>
      <returns>서비스의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">콜백 계약이 null이지만 서비스 끝점에 null(Nothing)이 아닌 계약이 필요한 경우</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>서비스를 호출할 수 있는 Windows Phone 클라이언트 개체(프록시)를 만드는 데 사용되는 기본 구현을 제공합니다.</summary>
      <typeparam name="TChannel">이 프록시에서 캡슐화된 서비스 계약의 형식을 식별하는 서비스에 연결하는 데 사용되는 채널입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>응용프로그램 구성 파일의 기본 대상 끝점을 사용하여 <see cref="T:System.ServiceModel.ClientBase`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <exception cref="T:System.InvalidOperationException">구성 파일에 기본 끝점 정보가 없거나, 파일에 끝점이 두 개 이상 있거나, 구성 파일이 없는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>지정된 바인딩과 대상 주소를 사용하여 <see cref="T:System.ServiceModel.ClientBase`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="binding">서비스 호출 방식을 구성하는 데 사용되는 바인딩입니다.</param>
      <param name="remoteAddress">서비스 끝점의 주소입니다.</param>
      <exception cref="T:System.ArgumentNullException">바인딩이 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">원격 주소가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>응용프로그램 구성 파일에서 <paramref name="endpointConfigurationName" />으로 지정된 구성 정보를 사용하여 <see cref="T:System.ServiceModel.ClientBase`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="endpointConfigurationName">응용프로그램 구성 파일에 있는 끝점의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">지정된 끝점 정보가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">끝점이 없거나 끝점 계약이 잘못된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>지정된 대상 주소와 끝점 정보를 사용하여 <see cref="T:System.ServiceModel.ClientBase`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="endpointConfigurationName">응용프로그램 구성 파일에 있는 끝점의 이름입니다.</param>
      <param name="remoteAddress">서비스의 주소입니다.</param>
      <exception cref="T:System.ArgumentNullException">끝점이 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">원격 주소가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">끝점이 없거나 끝점 계약이 잘못된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="endpointConfigurationName">응용프로그램 구성 파일에 있는 끝점의 이름입니다.</param>
      <param name="remoteAddress">서비스의 주소입니다.</param>
      <exception cref="T:System.ArgumentNullException">끝점이 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">원격 주소가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException">끝점이 없거나 끝점 계약이 잘못된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 현재 상태에서 closed 상태로 즉시 전환되게 합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>서비스와 통신하는 데 사용되는 내부 채널을 가져옵니다.</summary>
      <returns>생성자에 형식 매개 변수로 전달되는 대상 서비스 계약 인터페이스의 구현입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>내부 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ChannelFactory`1" /> 개체</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>작업 호출에 사용되는 클라이언트 자격 증명을 가져옵니다.</summary>
      <returns>클라이언트가 제공하는 ID 증명을 나타내는 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>클라이언트에서 서비스로의 새 채널을 반환합니다.</summary>
      <returns>이 클라이언트 개체(프록시)에서 캡슐화된 서비스 계약의 형식을 식별하는 <paramref name="TChannel" /> 형식의 채널입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Windows Phone 클라이언트가 연결할 수 있는 서비스의 대상 끝점을 가져옵니다.</summary>
      <returns>대상 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>C#의 기본 키워드 동작을 복제합니다.</summary>
      <returns>T가 참조 형식이면null을 반환하고, T가 숫자 값 형식이면 0을 반환합니다.</returns>
      <typeparam name="T">C# 형식입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>내부 <see cref="T:System.ServiceModel.IClientChannel" /> 구현을 가져옵니다.</summary>
      <returns>Windows Phone 클라이언트 개체에 대한 클라이언트 채널입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>이벤트 기반 비동기 패턴 구현을 지원합니다. 이 패턴에 대해 
    추가 정보 
  을 수행하고 이벤트 기반 비동기 패턴 개요를 참조하세요.</summary>
      <param name="beginOperationDelegate">비동기 작업 호출에 사용되는 대리자입니다.</param>
      <param name="inValues">비동기 호출에 대한 입력 값입니다.</param>
      <param name="endOperationDelegate">완료된 후 비동기 호출을 끝내는 데 사용되는 대리자입니다.</param>
      <param name="operationCompletedCallback">비동기 메서드가 완료되면 호출되는 클라이언트 제공 콜백입니다. 콜백은 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> 메서드에 전달됩니다.</param>
      <param name="userState">비동기 호출과 연결할 <paramref name="userState" /> 개체입니다.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체의 현재 상태를 가져옵니다.</summary>
      <returns>개체의 <see cref="T:System.ServiceModel.CommunicationState" /> 값입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" />를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="callback">완료 시 콜백을 받는 메서드입니다.</param>
      <param name="state">상태 데이터입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간을 사용하여 <see cref="T:System.ServiceModel.ClientBase`1" />을 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 시작 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">호출을 완료해야 하는 기간입니다.</param>
      <param name="callback">작업이 완료될 때 호출되는 콜백 개체입니다.</param>
      <param name="state">상태 데이터입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체를 여는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">완료 시 콜백을 받는 메서드입니다.</param>
      <param name="state">상태 데이터입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 <see cref="T:System.ServiceModel.ClientBase`1" /> 개체를 여는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">호출을 완료해야 하는 시간입니다.</param>
      <param name="callback">완료 시 콜백을 받는 메서드입니다.</param>
      <param name="state">상태 데이터입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
      <param name="timeout">호출을 완료해야 하는 시간입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 현재 상태에서 closed 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 현재 상태에서 closed 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체를 닫는 비동기 작업을 완료합니다.</summary>
      <param name="result">비동기 닫기 작업을 완료하는 데 사용되는 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체를 여는 비동기 작업을 완료합니다.</summary>
      <param name="result">비동기 종료 열기 작업을 완료하는 데 사용되는 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체에 대해 작업을 수행하는 동안 오류가 발생할 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 created 상태에서 opened 상태로 전환되게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 지정된 시간 간격 내에 created 상태에서 opened 상태로 전환되게 합니다.</summary>
      <param name="timeout">호출을 완료해야 하는 기간입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 created 상태에서 opened 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1" /> 개체가 created 상태에서 opened 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />이 클라이언트에서 비동기 작업을 호출하는 데 사용하는 대리자입니다. </summary>
      <returns>비동기 호출의 결과입니다.</returns>
      <param name="inValues">비동기 호출에 대한 입력 값입니다.</param>
      <param name="asyncCallback">해당 비동기 작업이 완료될 때 호출할 메서드에 대한 참조입니다.</param>
      <param name="state">클라이언트가 비동기 호출을 구분할 수 있게 하는 <see cref="T:System.Object" />입니다. 이벤트 완료 콜백의 <paramref name="arguments" /> 매개 변수를 통해 클라이언트에 제공됩니다.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>이 클래스는 자동으로 생성된 클라이언트 프록시에서 서비스를 호출하는 데 사용되며 다른 용도로 사용하면 안 됩니다. 
</summary>
      <typeparam name="T">제네릭 클래스입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>클래스의 기존 인스턴스를 사용하여 <see cref="T:System.ServiceModel.ClientBase`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="client">클래스의 새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 개체입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>이름으로 지정된 메서드의 비동기 호출을 시작합니다.</summary>
      <returns>호출되는 비동기 메서드를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="methodName">비동기적으로 호출할 메서드의 이름입니다.</param>
      <param name="args">호출되는 메서드의 인수 배열입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다. </param>
      <param name="state">
        <see cref="T:System.AsyncCallback" /> 대리자입니다. </param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>지정된 메서드의 이름으로 비동기 호출을 완료합니다. </summary>
      <returns>
호출되는 메서드의 <see cref="T:System.Object" /> 출력입니다.
</returns>
      <param name="methodName">비동기적으로 호출되는 메서드의 이름입니다.</param>
      <param name="args">호출되는 메서드의 인수 배열입니다.</param>
      <param name="result">
        <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>채널에 연결된 관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 응용프로그램 정의 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="TProperty">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>출력 채널의 대상으로 메시지를 전송하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다. </param>
      <param name="state">비동기 보내기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 출력 채널의 대상으로 메시지를 전송하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 보내기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 보내기 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 보내기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>출력 채널의 대상으로 메시지를 전송하는 비동기 작업을 완료합니다. </summary>
      <param name="result">
        <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된<see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>출력 채널에서 메시지가 전송되는 서비스의 대상을 가져옵니다.</summary>
      <returns>출력 채널에서 메시지를 보내는 서비스의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>출력 채널의 대상으로 메시지를 전송합니다. </summary>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>지정된 시간 간격 내에 현재 출력 채널에서 메시지를 보냅니다.</summary>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>출력 채널에서 메시지가 전송되는 전송 주소가 포함된 URI를 가져옵니다.</summary>
      <returns>출력 채널에서 메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>요청-회신 메시지 교환의 회신 쪽으로 요청 메시지를 전송하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="callback">요청 메시지를 전송하는 비동기 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">요청 메시지를 전송하는 비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 요청-회신 메시지 교환의 회신 쪽으로 요청 메시지를 전송하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">응답을 받아야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 설명 부분을 참조하세요.</param>
      <param name="callback">요청 메시지를 전송하는 비동기 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">요청 메시지를 전송하는 비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>메시지 기반 응답을 전송된 요청으로 반환하는 비동기 작업을 완료합니다. </summary>
      <returns>요청에 대한 응답으로 받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="result">
        <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>요청 채널에서 메시지를 보내는 원격 주소를 가져옵니다. </summary>
      <returns>요청 채널에서 메시지를 보내는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>메시지 기반 요청을 보내고 연관된 메시지 기반 응답을 반환합니다. </summary>
      <returns>요청에 대한 응답으로 받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>지정된 시간 간격 내에 메시지 기반 요청을 보내고 연관된 메시지 기반 응답을 반환합니다.</summary>
      <returns>요청에 대한 응답으로 받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">응답을 받아야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>요청이 전송되는 전송 주소를 가져옵니다.</summary>
      <returns>메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>
        <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />가 지정되지 않은 경우 <see cref="T:System.ServiceModel.EndpointAddress" />가 최종 대상 및 실제 주소로 모두 사용됩니다. <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />가 지정된 경우 메시지가 전송되는 실제 주소이며 메시지가 대상에 도달하기 위해 통과해야 하는 주소입니다.</summary>
      <returns>반환 값: <see cref="T:System.Boolean" /></returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>자격 증명 정보를 가져오기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</summary>
      <returns>처리가 완료될 때 콜백에 사용할 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="callback">이 메서드가 완료될 때 호출되는 메서드입니다.</param>
      <param name="state">채널의 상태에 대한 정보입니다.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>자격 증명 정보를 가져오기 위해 사용자 인터페이스가 호출되었는지 여부를 나타내는 값을 가져옵니다. </summary>
      <returns>
        <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 메서드<see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 및 <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> 메서드)가 호출되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>자격 증명 정보를 가져오기 위한 사용자 인터페이스 호출입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>
        <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 호출이 완료되었을 때 호출되었습니다.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>이 이벤트는 예약되어 있습니다.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>클라이언트 채널에서 메시지가 전송되는 전송 주소가 포함된 URI를 가져옵니다.</summary>
      <returns>채널에서 메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>통신 개체가 현재 상태에서 closed 상태로 즉시 전환되게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 닫기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간을 사용하여 통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 닫기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>통신 개체를 여는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 열기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 열기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 통신 개체를 여는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 열기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 열기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>통신 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>통신 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 개체가 현재 상태에서 closed 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 개체가 현재 상태에서 closed 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>통신 개체를 닫는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>통신 개체를 여는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 개체에 대해 작업을 수행하는 동안 오류가 발생할 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>통신 개체가 created 상태에서 opened 상태로 전환되게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>통신 개체가 지정된 시간 간격 내에 created 상태에서 opened 상태로 전환되게 합니다.</summary>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 개체가 created 상태에서 opened 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>
        <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 개체가 created 상태에서 opened 상태로 전환될 때 호출되는 이벤트 처리기입니다.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>통신 지향 개체의 현재 상태를 가져옵니다.</summary>
      <returns>개체의 <see cref="T:System.ServiceModel.CommunicationState" /> 값입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>전송에 메시지를 제공하기 전에 메시지 집합을 저장하도록 Windows Phone에 지시하는 값을 가져오거나 설정합니다.</summary>
      <returns>보내는 메시지의 일괄 처리가 허용되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>채널의 입력 세션을 가져옵니다.</summary>
      <returns>채널의 <see cref="T:System.ServiceModel.Channels.IInputSession" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>채널의 로컬 끝점을 가져옵니다.</summary>
      <returns>채널의 로컬 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>이 기간 내에 작업을 완료해야 하며, 그렇지 않으면 예외가 발생되는 기간을 가져오거나 설정합니다.</summary>
      <returns>작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>채널과 연결된 출력 세션을 가져옵니다(있는 경우).</summary>
      <returns>입력 세션이 있으면 <see cref="T:System.ServiceModel.Channels.IOutputSession" /> 구현이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>채널과 연결된 원격 주소를 가져옵니다.</summary>
      <returns>채널의 원격 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>현재 세션의 식별자를 반환합니다(있는 경우).</summary>
      <returns>현재 세션 식별자입니다(있는 경우).</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>이 확장 가능 개체에 대한 확장 개체의 컬렉션을 가져옵니다.</summary>
      <returns>확장 개체의 <see cref="T:System.ServiceModel.IExtensionCollection`1" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />에 의한 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> 호출이 완료될 때 <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />에서 호출되는 대리자입니다.</summary>
      <returns>비동기 메서드 호출 결과가 포함된 <see cref="T:System.Object" />의 배열입니다. 작업에 반환 값이 여러 개 포함될 수 있으며, 모두 이 개체 배열에 반환됩니다.</returns>
      <param name="result">
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />의 호출에 의해 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />로 반환되는 결과입니다.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>클라이언트의 비동기 호출 결과를 저장합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>클라이언트의 비동기 호출 결과를 가져옵니다.</summary>
      <returns>클라이언트의 비동기 호출 결과가 포함된 <see cref="T:System.Object" /> 형식의 배열입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>서비스 또는 클라이언트 응용프로그램의 통신 오류를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.CommunicationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.CommunicationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 조건에 대한 설명입니다.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>지정된 메시지 및 내부 예외를 사용하여 <see cref="T:System.ServiceModel.CommunicationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 조건에 대한 설명입니다.</param>
      <param name="innerException">사용할 내부 예외입니다.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>중단된 <see cref="T:System.ServiceModel.ICommunicationObject" /> 개체를 호출할 때 발생되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="message">예외 시 전달되는 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>지정된 메시지와 내부 예외를 사용하여 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="innerException">내부 예외입니다.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>오류가 발생한 통신 개체를 호출할 때 발생되는 예외입니다. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>지정된 메시지와 내부 예외를 사용하여 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="innerException">내부 예외입니다.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>
        <see cref="T:System.ServiceModel.ICommunicationObject" />가 존재할 수 있는 상태를 정의합니다. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>통신 개체가 인스턴스화되었으며 구성 가능하지만 열려 있지 않거나 사용할 준비가 되지 않았음을 나타냅니다.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 상태에서 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태로 전환되고 있음을 나타냅니다. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>이제 통신 개체가 열려 있으며 사용할 준비가 되었음을 나타냅니다. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태로 전환되고 있음을 나타냅니다. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>통신 개체가 닫혔으며 더 이상 사용할 수 없음을 나타냅니다. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>통신 개체에서 복구할 수 없는 오류 또는 장애가 발생했으며 더 이상 사용할 수 없음을 나타냅니다. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Windows Phone에 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 인프라를 사용하도록 지시합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>직렬화된 데이터의 SOAP 스타일을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.OperationFormatStyle" /> 값 중 하나입니다. 기본값은 <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>클라이언트에서 서비스 끝점과 통신하는 데 사용하는 고유한 네트워크 주소를 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>지정된 URI 문자열을 사용하여 <see cref="T:System.ServiceModel.EndpointAddress" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uri">끝점을 식별하는 URI입니다.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>지정된 URI 및 헤더를 사용하여 <see cref="T:System.ServiceModel.EndpointAddress" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uri">끝점 위치를 식별하는 <see cref="T:System.Uri" />입니다.</param>
      <param name="addressHeaders">끝점과 상호 작용하는 데 사용되는 주소 정보가 포함된 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 형식의 <see cref="T:System.Array" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>익명 URI의 버전 중립적인 표현을 가져옵니다.</summary>
      <returns>값이 http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous인 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>지정된 메시지의 헤더 값에 끝점 주소의 URI와 속성을 할당합니다.</summary>
      <param name="message">헤더 값을 할당 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>지정된 개체가 현재 끝점 주소와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>지정된 개체가 현재 주소와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 끝점 주소와 비교할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>현재 끝점 주소에 대한 고유한 해시 코드를 제공합니다. </summary>
      <returns>현재 끝점 주소에 대한 고유한 해시 코드입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>빌더에서 만들 수 있는 끝점에 대한 주소 헤더의 컬렉션을 가져옵니다.</summary>
      <returns>끝점에 대한 주소 정보가 포함된 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>끝점이 익명인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>끝점이 <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>끝점의 URI가 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>끝점의 URI가 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />이면 true이고, 그렇지 않으면 false입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>메시지가 전송되지 않아야 하는 끝점의 주소에 사용되는 버전 중립적인 URI를 가져옵니다.</summary>
      <returns>값이 http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None인 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>지정된 끝점 주소가 서로 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>끝점 주소가 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="address1">비교되는 <see cref="T:System.ServiceModel.EndpointAddress" /> 개체 중 하나입니다.</param>
      <param name="address2">비교되는 <see cref="T:System.ServiceModel.EndpointAddress" /> 개체 중 하나입니다.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>지정된 끝점 주소가 서로 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>끝점 주소가 다르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="address1">비교되는 <see cref="T:System.ServiceModel.EndpointAddress" /> 개체 중 하나입니다.</param>
      <param name="address2">비교되는 <see cref="T:System.ServiceModel.EndpointAddress" /> 개체 중 하나입니다.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>지정된 XML 사전 판독기에서 지정된 주소 버전의 끝점 주소를 읽습니다.</summary>
      <returns>XML 판독기에서 읽은 지정된 버전의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
      <param name="addressingVersion">현재 끝점 주소의 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />입니다.</param>
      <param name="reader">끝점 주소를 가져오는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>끝점 주소에 포함된 URI의 정식 문자열 표현을 반환합니다.</summary>
      <returns>끝점을 식별하는 URI입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>끝점의 URI를 가져옵니다.</summary>
      <returns>끝점의 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>노드의 모든 자식 노드를 지정된 XML 사전 작성기에 저장합니다.</summary>
      <param name="addressingVersion">현재 끝점 주소의 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />입니다.</param>
      <param name="writer">끝점 주소가 저장되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 또는 <paramref name="addressingVersion" />가 null입니다.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>특정 속성 값을 사용하여 변경할 수 없는 새 끝점 주소를 생성하기 위한 팩터리입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>기존 끝점 주소의 값을 사용하여 <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address">해당 속성 값을 사용하여 이 인스턴스의 속성 값이 초기화되는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>빌더에서 만들 수 있는 끝점에 대한 주소 헤더의 컬렉션을 가져옵니다.</summary>
      <returns>빌더에서 만들 수 있는 끝점의 주소 헤더가 포함된 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 형식의 <see cref="T:System.Collections.ObjectModel.Collection`1" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>현재 끝점 주소 빌더의 속성 값을 사용하여 초기화되는 새 끝점 주소를 만듭니다.</summary>
      <returns>현재 끝점 주소 빌더의 값을 사용하여 해당 속성이 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>빌더에서 만들 수 있는 끝점의 URI를 가져오거나 설정합니다.</summary>
      <returns>끝점 주소를 지정하는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>원격 끝점이 없거나 연결할 수 없을 때 발생되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>현재 예외를 발생시킨 내부 예외 및 지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외가 발생되도록 한 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>최종 대상에 대한 현재 메시지 버전과 연결된 SOAP 역할의 URI 이름이 포함된 문자열을 가져옵니다.</summary>
      <returns>SOAP 1.1을 사용하면 빈 문자열이고, SOAP 1.2를 사용하면 http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver가 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>다음 대상에 대한 현재 메시지 버전과 연결된 SOAP 역할의 URI 이름이 포함된 문자열을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" />을 사용하면 http://schemas.xmlsoap.org/soap/actor/next가 포함된 문자열이고, <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />를 사용하면 http://www.w3.org/2003/05/soap-envelope/role/next가 포함된 문자열이고, <see cref="T:System.ServiceModel.EnvelopeVersion" />이 <see cref="P:System.ServiceModel.EnvelopeVersion.None" />이면 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>특정 버전의 SOAP를 사용하지 않는 봉투 버전을 가져옵니다.</summary>
      <returns>SOAP 형식을 사용하지 않는 봉투 버전입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>SOAP 1.1 봉투 버전을 가져옵니다.</summary>
      <returns>SOAP 1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>SOAP 1.2 봉투 버전을 가져옵니다.</summary>
      <returns>SOAP 1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>현재 봉투 버전을 나타내는 문자열을 가져옵니다.</summary>
      <returns>현재 봉투 버전입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>오류 세부 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>예외를 사용하여 <see cref="T:System.ServiceModel.ExceptionDetail" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="exception">
        <see cref="T:System.ServiceModel.ExceptionDetail" /> 개체로 직렬화할 예외입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 매개 변수가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>내부 예외를 나타내는 <see cref="T:System.ServiceModel.ExceptionDetail" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>내부 예외 정보입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>생성자에 전달된 예외에서 메시지를 가져오거나 설정합니다.</summary>
      <returns>예외 메시지입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>생성자에 전달된 예외에서 스택 추적 정보를 가져오거나 설정합니다.</summary>
      <returns>예외의 스택 추적입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>생성자에 전달된 예외에 대한 예외 세부 정보를 반환합니다.</summary>
      <returns>예외의 메시지 및 스택 추적입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>생성자에 전달된 예외에 대한 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>생성자에 전달된 예외에 대한 형식 문자열입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>SOAP 오류 코드를 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>
        <see cref="T:System.ServiceModel.FaultCode" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="name">오류 코드의 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>
        <see cref="T:System.ServiceModel.FaultCode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">오류 코드의 이름입니다.</param>
      <param name="subCode">오류 하위 코드입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>지정된 이름과 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.FaultCode" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="name">오류 코드의 로컬 이름입니다. </param>
      <param name="ns">오류 코드의 네임스페이스 이름입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 또는 <paramref name="ns" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" />가 빈 문자열인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>지정된 이름, 네임스페이스 및 오류 하위 코드를 사용하여 <see cref="T:System.ServiceModel.FaultCode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">오류 코드의 로컬 이름입니다. </param>
      <param name="ns">오류 코드의 네임스페이스 이름입니다. </param>
      <param name="subCode">오류 하위 코드를 나타내는 <see cref="T:System.ServiceModel.FaultCode" /> 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 또는 <paramref name="ns" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" />가 빈 문자열인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>지정된 하위 코드를 사용하여 발신자 오류 코드를 만듭니다. </summary>
      <returns>
        <see cref="P:System.ServiceModel.FaultCode.SubCode" /> 속성에 만든 SOAP 오류 하위 코드가 포함된 <see cref="T:System.ServiceModel.FaultCode" /> 개체입니다. </returns>
      <param name="subCode">오류 하위 코드를 나타내는 <see cref="T:System.ServiceModel.FaultCode" /> 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" />가 null인 경우 </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>오류가 SOAP 1.1 또는 SOAP 1.2 오류인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>오류가 SOAP 1.1 또는 SOAP 1.2 오류이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>오류가 SOAP 1.1 서버 오류 또는 SOAP 1.2 수신자 오류인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>오류가 SOAP 1.1 서버 오류 또는 SOAP 1.2 수신자 오류이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>오류가 SOAP 1.1 클라이언트 오류 또는 SOAP 1.2 발신자 오류인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>오류가 SOAP 1.1 클라이언트 오류 또는 SOAP 1.2 발신자 오류이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>오류 코드의 로컬 이름을 가져옵니다. </summary>
      <returns>오류 코드의 로컬 이름입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>오류 코드의 네임스페이스를 가져옵니다. </summary>
      <returns>네임스페이스 이름의 URI(Uniform Resource Identifier)입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>오류 하위 코드를 가져옵니다. </summary>
      <returns>오류 하위 코드를 나타내는 <see cref="T:System.ServiceModel.FaultCode" /> 개체입니다. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>서비스 작업에서 처리 오류가 발생할 때 반환되는 SOAP 오류를 하나 이상 지정합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.ServiceModel.FaultContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="detailType">호출자에 대한 오류 정보가 포함된 직렬화 가능 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detailType" /> 인수가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>작업 계약의 일부로 지정된 SOAP 오류 메시지의 동작을 가져오거나 설정합니다.</summary>
      <returns>SOAP 오류 메시지의 동작 값입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>오류 정보가 포함된 직렬화 가능 개체의 형식을 가져옵니다.</summary>
      <returns>직렬화 가능 오류 클래스를 나타내는 형식입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>WSDL(웹 서비스 기술 언어)에서 오류 메시지의 이름을 가져오거나 설정합니다.</summary>
      <returns>오류 메시지 이름입니다. 기본값은 오류 세부 정보로 사용되는 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>SOAP 오류의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>SOAP 오류의 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>SOAP 오류를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.FaultException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>지정된 메시지 오류 값과 제공된 동작 문자열을 사용하여 <see cref="T:System.ServiceModel.FaultException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fault">사용할 기본 SOAP 오류 값이 포함된 오류 메시지입니다.</param>
      <param name="action">SOAP 오류의 동작입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>지정된 이유, 오류 코드 및 동작 값을 사용하여 <see cref="T:System.ServiceModel.FaultException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="reason">SOAP 오류의 이유입니다.</param>
      <param name="code">SOAP 오류의 오류 코드입니다.</param>
      <param name="action">SOAP 오류의 동작 값입니다.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>오류 메시지에 대한 SOAP 동작의 값을 가져옵니다.</summary>
      <returns>오류 메시지에 대한 SOAP 동작의 값입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>SOAP 오류의 오류 코드를 가져옵니다.</summary>
      <returns>SOAP 오류의 오류 코드입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>지정된 오류 메시지, 동작 및 세부 정보 형식의 배열에서 <see cref="T:System.ServiceModel.FaultException" /> 개체를 반환합니다.</summary>
      <returns>SOAP 오류 메시지가 수신되었음을 나타내기 위해 발생할 수 있는 <see cref="T:System.ServiceModel.FaultException" /> 개체입니다.</returns>
      <param name="messageFault">기본 SOAP 오류 정보가 포함된 오류 메시지입니다.</param>
      <param name="action">오류 동작 값입니다.</param>
      <param name="faultDetailTypes">오류 세부 정보가 포함된 형식의 배열입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>지정된 오류 메시지 및 세부 정보 형식의 배열에서 <see cref="T:System.ServiceModel.FaultException" /> 개체를 반환합니다.</summary>
      <returns>SOAP 오류 메시지가 수신되었음을 나타내기 위해 발생할 수 있는 <see cref="T:System.ServiceModel.FaultException" /> 개체입니다.</returns>
      <param name="messageFault">기본 SOAP 오류 정보가 포함된 오류 메시지입니다.</param>
      <param name="faultDetailTypes">오류 세부 정보가 포함된 형식의 배열입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>메모리 내 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 개체를 반환합니다.</summary>
      <returns>오류가 포함된 메시지를 만들기 위해 <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" />에 전달되는 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>예외에 대한 메시지를 가져옵니다.</summary>
      <returns>예외 메시지입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>SOAP 오류의 <see cref="T:System.ServiceModel.FaultReason" />을 가져옵니다.</summary>
      <returns>SOAP 오류의 이유입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>계약에 의해 지정된 SOAP 오류를 catch하기 위해 클라이언트 응용프로그램에서 사용됩니다.</summary>
      <typeparam name="TDetail">직렬화 가능 오류 세부 정보 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>지정된 세부 정보 개체와 SOAP 오류 이유, 코드 및 동작 값을 사용하여 <see cref="T:System.ServiceModel.FaultException`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="detail">SOAP 오류 세부 정보로 사용되는 개체입니다.</param>
      <param name="reason">SOAP 오류의 이유입니다.</param>
      <param name="code">SOAP 오류의 오류 코드입니다.</param>
      <param name="action">SOAP 오류의 동작입니다.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>오류 조건의 세부 정보가 포함된 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultException`1" /> 개체의 형식 매개 변수인 세부 정보 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>
        <see cref="T:System.ServiceModel.FaultException`1" /> 개체에 대한 문자열을 반환합니다.</summary>
      <returns>SOAP 오류의 문자열입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>SOAP 오류에 대한 텍스트 설명을 제공합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>지정된 오류 변환 목록을 사용하여 <see cref="T:System.ServiceModel.FaultReason" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="translations">
        <see cref="T:System.ServiceModel.FaultReasonText" /> 개체의 목록입니다. 각 개체는 특정 언어로 오류를 설명합니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" />가 비어 있거나 하나 이상의 항목이 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>지정된 언어로 오류를 설명하는 지정된 텍스트 요소를 사용하여 <see cref="T:System.ServiceModel.FaultReason" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="translation">각 언어의 오류 설명에 해당하는 <see cref="T:System.ServiceModel.FaultReasonText" /> 개체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translation" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>지정된 텍스트를 사용하여 <see cref="T:System.ServiceModel.FaultReason" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="text">오류가 발생한 이유에 대한 설명입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>현재 스레드에서 사용하는 언어로 표현된 오류 설명을 가져옵니다.</summary>
      <returns>지정된 언어로 표현된 오류 텍스트입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>지정된 언어로 표현된 오류 설명을 가져옵니다.</summary>
      <returns>변환된 오류 설명이 포함된 <see cref="T:System.ServiceModel.FaultReasonText" /> 개체입니다.</returns>
      <param name="cultureInfo">오류 설명의 언어를 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>오류 이유를 문자열로 반환합니다.</summary>
      <returns>오류의 이유입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>각 언어로 표현된 오류 설명의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultReasonText" /> 개체의 <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />입니다. 각 개체는 특정 언어로 오류를 설명합니다.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>SOAP 오류의 이유 텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>지정된 오류 텍스트를 사용하여 <see cref="T:System.ServiceModel.FaultReasonText" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="text">SOAP 오류 이유인 텍스트입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>지정된 오류 텍스트를 사용하여 <see cref="T:System.ServiceModel.FaultReasonText" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="text">SOAP 오류 이유인 텍스트입니다.</param>
      <param name="xmlLang">오류의 언어입니다.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>설명의 언어가 제공된 <see cref="T:System.Globalization.CultureInfo" /> 개체와 일치하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Globalization.CultureInfo" />가 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="cultureInfo">설명의 언어와 비교할 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>SOAP 오류 이유의 텍스트를 가져옵니다.</summary>
      <returns>SOAP 오류 이유의 텍스트입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>SOAP 오류 이유의 언어를 가져옵니다.</summary>
      <returns>SOAP 오류 이유의 언어입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>아웃바운드 요청의 동작 및 클라이언트 응용프로그램에서 사용되는 요청/회신 채널을 정의합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>
        <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />가 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> 속성에서 <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> 개체를 호출하는지 여부를 나타내는 값을 가져오거나 설정하고, 해당 컬렉션이 비어 있지 않으면 예외를 발생합니다. </summary>
      <returns>WCF(Windows Communication Foundation)이 대화형 채널 이니셜라이저를 호출하도록 허용되면 true이고, 그렇지 않으면 false입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>자격 증명 정보를 가져오기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</summary>
      <returns>처리가 완료될 때 콜백에 사용할 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="callback">이 메서드가 완료될 때 호출되는 메서드입니다.</param>
      <param name="state">채널의 상태에 대한 정보입니다.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>자격 증명 정보를 가져오기 위해 사용자 인터페이스가 호출되었는지 여부를 나타내는 값을 가져옵니다. </summary>
      <returns>
        <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 메서드<see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 및 <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> 메서드)가 호출되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>자격 증명 정보를 가져오기 위한 사용자 인터페이스 호출입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>
        <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 호출이 완료되었을 때 호출되었습니다.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>이 이벤트는 예약되어 있습니다. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>클라이언트 채널에서 메시지가 전송되는 전송 주소가 포함된 URI를 가져옵니다.</summary>
      <returns>채널에서 메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>채널, 채널 관리자, 팩터리, 수신기 및 디스패처와 서비스 호스트를 비롯하여 시스템의 모든 통신 지향 개체에 대해 기본 상태 컴퓨터 계약을 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>통신 개체가 현재 상태에서 closed 상태로 즉시 전환되게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 닫기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 정상적으로 닫을 수 있기 전에 기본 시간 제한이 경과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간을 사용하여 통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 닫기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 정상적으로 닫을 수 있기 전에 지정된 시간 제한이 경과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>통신 개체를 여는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 열기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 열기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 열 수 없으며 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태로 전환될 수 있기 전에 기본 열기 시간 제한이 경과하여 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 통신 개체를 여는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 열기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 열기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 열 수 없으며 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태로 전환될 수 있기 전에 지정된 시간 제한이 경과하여 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>통신 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="M:System.ServiceModel.ICommunicationObject.Close" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 정상적으로 닫을 수 있기 전에 기본 닫기 시간 제한이 경과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>통신 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="M:System.ServiceModel.ICommunicationObject.Close" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 정상적으로 닫을 수 있기 전에 시간 제한이 경과한 경우</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>통신 개체가 closing 상태에서 closed 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>통신 개체가 closing 상태로 처음 전환될 때 발생합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>통신 개체를 닫는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 정상적으로 닫을 수 있기 전에 시간 제한이 경과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>통신 개체를 여는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 열 수 없으며 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태로 전환될 수 있기 전에 시간 제한이 경과하여 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>통신 개체가 faulted 상태로 처음 전환될 때 발생합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>통신 개체가 created 상태에서 opened 상태로 전환되게 합니다.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 열 수 없으며 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태로 전환될 수 있기 전에 기본 열기 시간 제한이 경과하여 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>통신 개체가 지정된 시간 간격 내에 created 상태에서 opened 상태로 전환되게 합니다.</summary>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />를 열 수 없으며 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
      <exception cref="T:System.TimeoutException">
        <see cref="T:System.ServiceModel.ICommunicationObject" />가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태로 전환될 수 있기 전에 지정된 시간 제한이 경과하여 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태로 전환된 경우</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>통신 개체가 opening 상태에서 opened 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>통신 개체가 opening 상태로 처음 전환될 때 발생합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>통신 지향 개체의 현재 상태를 가져옵니다.</summary>
      <returns>개체의 <see cref="T:System.ServiceModel.CommunicationState" /> 값입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>채널의 컨텍스트 제어를 위한 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>전송에 메시지를 제공하기 전에 메시지 집합을 저장하도록 Windows Phone에 지시하는 값을 가져오거나 설정합니다.</summary>
      <returns>보내는 메시지의 일괄 처리가 허용되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>채널의 입력 세션을 가져옵니다.</summary>
      <returns>채널의 <see cref="T:System.ServiceModel.Channels.IInputSession" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>채널의 로컬 끝점을 가져옵니다.</summary>
      <returns>채널의 로컬 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>이 기간 내에 작업을 완료해야 하며, 그렇지 않으면 예외가 발생되는 기간을 가져오거나 설정합니다.</summary>
      <returns>작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>채널과 연결된 출력 세션을 가져옵니다(있는 경우).</summary>
      <returns>입력 세션이 있으면 <see cref="T:System.ServiceModel.Channels.IOutputSession" /> 구현이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>채널과 연결된 원격 주소를 가져옵니다.</summary>
      <returns>채널의 원격 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>현재 세션의 식별자를 반환합니다(있는 경우).</summary>
      <returns>현재 세션 식별자입니다(있는 경우).</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>채널 및 채널 관리자(예: 채널 팩터리)에서 사용되는 통신 제한 시간을 지정하기 위한 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>통신 개체에서 호출된 close 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>close 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>통신 개체에서 호출된 open 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>open 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>통신 개체에서 호출된 receive 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>receive 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>통신 개체에서 호출된 send 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>send 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>이벤트 등록, 상태 전환 감시 등의 사용자 지정 동작에 개체가 참여할 수 있게 합니다.</summary>
      <typeparam name="T">확장 클래스의 형식입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>이 확장 가능 개체에 대한 확장 개체의 컬렉션을 가져옵니다.</summary>
      <returns>확장 개체의 <see cref="T:System.ServiceModel.IExtensionCollection`1" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>개체가 집계를 통해 다른 개체를 확장할 수 있게 합니다.</summary>
      <typeparam name="T">사용자 지정 동작에 참여하는 개체입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>확장 개체가 집계된 시기를 확인할 수 있게 합니다. <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 속성에 확장을 추가할 때 호출됩니다.</summary>
      <param name="owner">이 확장을 집계하는 확장 가능 개체입니다.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>개체가 더 이상 집계되지 않는 시기를 확인할 수 있게 합니다. <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 속성에서 확장을 제거할 때 호출됩니다.</summary>
      <param name="owner">이 확장을 집계하는 확장 가능 개체입니다.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>
        <see cref="T:System.ServiceModel.IExtension`1" /> 개체를 형식으로 검색할 수 있게 하는 <see cref="T:System.ServiceModel.IExtension`1" /> 개체의 컬렉션입니다.</summary>
      <typeparam name="T">확장 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>컬렉션에서 지정된 확장 개체를 찾습니다.</summary>
      <returns>찾은 확장 개체입니다.</returns>
      <typeparam name="E">확장 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>컬렉션에서 <paramref name="E" />로 지정된 확장 개체를 모두 찾습니다.</summary>
      <returns>컬렉션에서 지정된 형식을 구현하는 모든 확장 개체의 컬렉션입니다.</returns>
      <typeparam name="E">확장 개체의 형식입니다.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>잘못된 메시지 계약을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>지정된 메시지 및 내부 예외를 사용하여 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="innerException">내부 예외입니다.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>멤버가 SOAP 본문 내의 요소로 직렬화되도록 지정합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>멤버가 SOAP 본문에 직렬화되는 위치를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>SOAP 본문에서 요소의 위치입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성 setter에 전달된 값이 음의 정수인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>SOAP 메시지에 해당하는 강력한 형식의 클래스를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.MessageContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>메시지 본문에 래퍼 요소가 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지 본문에 래퍼 요소가 있으면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>메시지 본문의 래퍼 요소 이름을 가져오거나 설정합니다.</summary>
      <returns>메시지 본문에 있는 래퍼 요소의 이름입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 빈 문자열인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>메시지 본문 래퍼 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>래퍼 요소 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>
        <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />에 대한 기본 멤버를 선언합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>이 멤버에 해당하는 요소의 이름을 지정합니다. </summary>
      <returns>이 멤버에 해당하는 요소의 이름입니다. 이 문자열은 유효한 XML 요소 이름이어야 합니다. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>이 멤버에 해당하는 요소의 네임스페이스를 지정합니다. </summary>
      <returns>이 멤버에 해당하는 요소의 네임스페이스 URI입니다. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>SOAP 메시지의 헤더에 관한 요구 사항이 메시지를 처리할 때 충족되지 않을 경우 발생되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 시 전달되는 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>메시지 헤더가 중복되는지 또는 없는지를 나타내는 값과 지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="isDuplicate">여러 메시지 헤더가 중복되면 true이고, 메시지 헤더가 없으면 false입니다.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>예외를 발생시킨 내부 예외 및 지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="innerException">예외를 발생시킨 내부 예외가 포함된 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>지정된 메시지, 헤더 이름 및 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="headerName">메시지 헤더의 이름입니다.</param>
      <param name="ns">메시지 헤더의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>메시지 헤더가 중복되는지 또는 없는지를 나타내는 값과 지정된 메시지, 헤더 이름 및 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="headerName">메시지 헤더의 이름입니다.</param>
      <param name="ns">메시지 헤더의 네임스페이스입니다.</param>
      <param name="isDuplicate">여러 메시지 헤더가 중복되면 true이고, 메시지 헤더가 없으면 false입니다.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>예외를 발생시킨 내부 예외, 메시지 헤더가 중복되는지 또는 없는지를 나타내는 값 및 지정된 메시지, 헤더 이름 및 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="headerName">메시지 헤더의 이름입니다.</param>
      <param name="ns">메시지 헤더의 네임스페이스입니다.</param>
      <param name="isDuplicate">여러 메시지 헤더가 중복되면 true이고, 메시지 헤더가 없으면 false입니다.</param>
      <param name="innerException">예외를 발생시킨 내부 예외가 포함된 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>예외를 발생시킨 내부 예외 및 지정된 메시지, 헤더 이름 및 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.MessageHeaderException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외 메시지입니다.</param>
      <param name="headerName">메시지 헤더의 이름입니다.</param>
      <param name="ns">메시지 헤더의 네임스페이스입니다.</param>
      <param name="innerException">예외를 발생시킨 내부 예외가 포함된 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>예외를 발생시킨 SOAP 헤더의 이름을 가져옵니다.</summary>
      <returns>SOAP 헤더의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>예외를 발생시킨 SOAP 헤더의 네임스페이스를 가져옵니다.</summary>
      <returns>SOAP 헤더의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>여러 메시지 헤더가 있는지, 아니면 메시지 헤더가 없는지를 나타내는 값을 가져옵니다.</summary>
      <returns>여러 메시지 헤더가 중복되면 true이고, 메시지 헤더가 없으면 false입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>요청 및 응답 매개 변수 이름을 제어합니다. <see cref="T:System.ServiceModel.Channels.Message" /> 또는 메시지 계약과 함께 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.MessageParameterAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>XSD(XML 스키마)에서 매개 변수의 이름 특성을 가져오거나 설정합니다.</summary>
      <returns>XSD에서 매개 변수의 이름 특성입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 빈 문자열인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>서비스 메서드의 실행 컨텍스트에 액세스할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>클라이언트 응용프로그램에서 지정된 <see cref="T:System.ServiceModel.IContextChannel" />을 사용하는 <see cref="T:System.ServiceModel.OperationContext" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="channel">새 클라이언트 <see cref="T:System.ServiceModel.OperationContext" />를 만드는 데 사용되는 <see cref="T:System.ServiceModel.IContextChannel" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">채널이 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>현재 스레드에 대한 실행 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns>현재 메서드의 메시징 및 실행 컨텍스트를 나타내는 <see cref="T:System.ServiceModel.OperationContext" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>
        <see cref="T:System.ServiceModel.OperationContext" />에 대한 받는 메시지 헤더를 가져옵니다.</summary>
      <returns>받는 메시지 헤더가 포함된 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>
        <see cref="T:System.ServiceModel.OperationContext" />에서 받는 메시지의 메시지 속성을 가져옵니다.</summary>
      <returns>받는 메시지의 메시지 속성이 포함된 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>
        <see cref="T:System.ServiceModel.OperationContext" />에 대한 받는 SOAP 메시지 버전을 가져옵니다.</summary>
      <returns>받는 메시지의 SOAP 버전입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>이 속성은 시스템에서 사용되며 사용자가 호출하면 안 됩니다.</summary>
      <returns>true입니다.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>작업이 완료될 때 발생합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>활성 <see cref="T:System.ServiceModel.OperationContext" />에 대한 보내는 메시지 헤더를 가져옵니다.</summary>
      <returns>활성 <see cref="T:System.ServiceModel.OperationContext" />에 대한 아웃바운드 메시지 헤더가 포함된 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>활성 <see cref="T:System.ServiceModel.OperationContext" />에서 아웃바운드 메시지의 메시지 속성을 가져옵니다.</summary>
      <returns>아웃바운드 메시지의 메시지 속성이 포함된 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>이 메서드에 대한 요청 컨텍스트 구현을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.RequestContext" /> 구현이거나, 요청 컨텍스트가 없는 경우 null입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>
        <see cref="T:System.ServiceModel.OperationContext" /> 개체가 범위 내에 있는 블록을 만듭니다.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>범위에 대한 새 <see cref="T:System.ServiceModel.OperationContext" />를 만들기 위해 지정된 <see cref="T:System.ServiceModel.IContextChannel" />을 사용하는 <see cref="T:System.ServiceModel.OperationContextScope" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="channel">새 <see cref="T:System.ServiceModel.OperationContext" />의 범위를 만들 때 사용할 채널입니다.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>지정된 <see cref="T:System.ServiceModel.OperationContext" /> 개체의 범위를 만들기 위해 <see cref="T:System.ServiceModel.OperationContextScope" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">만든 범위의 활성 <see cref="T:System.ServiceModel.OperationContext" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>원본 <see cref="T:System.ServiceModel.OperationContext" />를 활성 컨텍스트로 복원하고 <see cref="T:System.ServiceModel.OperationContextScope" /> 개체를 재생합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Windows Phone 응용프로그램에서 서비스 계약에 속하는 작업이 메서드로 정의됨을 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.OperationContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>요청 메시지의 WS-Addressing 동작을 가져오거나 설정합니다. </summary>
      <returns>WS-Addressing 동작 헤더를 생성할 때 사용할 동작입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>서비스 계약에서 Begin&lt;methodName&gt; 및 End&lt;methodName&gt; 메서드 쌍을 사용하여 작업이 비동기적으로 구현됨을 나타냅니다. </summary>
      <returns>Begin&lt;methodName&gt; 메서드가 End&lt;methodName&gt; 메서드와 일치되고 서비스 인터페이스에 비동기 메서드 쌍으로 구현되는 작업으로 인프라에서 처리될 수 있으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>작업에서 회신 메시지를 반환하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>작업에서 회신 메시지를 반환하지 않으면 true이고, 반환하면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>작업의 이름을 가져오거나 설정합니다.</summary>
      <returns>작업의 이름입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 빈 문자열인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>작업의 회신 메시지에 대한 SOAP 동작의 값을 가져오거나 설정합니다.</summary>
      <returns>회신 메시지에 대한 SOAP 동작의 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>서비스의 WSDL 메타데이터 형식을 결정하는 SOAP 스타일을 나타냅니다.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>WSDL 표현에 작업 시 교환되는 문서를 나타내는 단일 요소가 포함되도록 합니다.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>작업 시 메시지의 WSDL 표현이 교환되게 하고 원격 프로시저 호출처럼 매개 변수를 포함합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>일치하지 않는 데이터 전송 프로토콜로 인해 원격 대상과 통신할 수 없을 때 발생되고 클라이언트에 표시되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.ProtocolException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.ProtocolException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ServiceModel.ProtocolException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외가 발생되도록 한 <see cref="T:System.Exception" />입니다. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>메시지 할당량을 초과할 때 발생되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.QuotaExceededException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.QuotaExceededException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ServiceModel.QuotaExceededException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외가 발생되도록 한 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>서버 사용량이 많아 메시지를 수락할 수 없을 때 발생되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.ServerTooBusyException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외가 발생되도록 한 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>서비스를 활성화하지 못할 때 발생되는 예외입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.ServiceActivationException" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.ServiceActivationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지 및 제공된 내부 예외를 사용하여 <see cref="T:System.ServiceModel.ServiceActivationException" /> 클래스의 새 인스턴스를 초기화합니다.  </summary>
      <param name="message">예외에 대한 원인을 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외가 발생되도록 한 <see cref="T:System.Exception" />입니다. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Windows Phone 클라이언트 응용프로그램에서 서비스 계약이 인터페이스 또는 클래스로 정의됨을 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>계약이 이중 계약일 때 콜백 계약의 형식을 가져오거나 설정합니다.</summary>
      <returns>콜백 계약을 나타내는 <see cref="T:System.Type" />입니다. 기본값은 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>응용프로그램 구성 파일에서 서비스를 찾는 데 사용되는 이름을 가져오거나 설정합니다.</summary>
      <returns>응용프로그램 구성 파일에서 서비스 요소를 찾는 데 사용되는 이름입니다. 기본값은 서비스 구현 클래스의 이름입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 빈 문자열인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>WSDL(웹 서비스 기술 언어)에서 &lt;portType&gt; 요소의 이름을 가져오거나 설정합니다. </summary>
      <returns>기본값은 <see cref="T:System.ServiceModel.ServiceContractAttribute" />가 적용되는 클래스 또는 인터페이스의 이름입니다. </returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 빈 문자열인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>WSDL(웹 서비스 기술 언어)에서 &lt;portType&gt; 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>&lt;portType&gt; 요소의 WSDL 네임스페이스입니다. 기본값은 "http://tempuri.org"입니다. </returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>직렬화 또는 역직렬화할 때 서비스에서 사용할 알려진 형식을 지정합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 알려진 형식을 반환하는 메서드의 이름을 지정합니다.</summary>
      <param name="methodName">알려진 형식을 반환하는 메서드의 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>알려진 형식을 반환하는 메서드의 이름 및 알려진 형식을 반환하는 메서드가 포함된 형식을 사용하여 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="methodName">알려진 형식을 반환하는 메서드의 이름입니다.</param>
      <param name="declaringType">해당 개체 그래프에 알려진 형식을 사용할 수 있는 형식입니다.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>지정된 알려진 형식을 사용하여 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">서비스에서 정의된 매개 변수 또는 반환 값에 사용할 수 있는 알려진 형식을 지정합니다.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>알려진 형식을 반환하는 메서드가 포함된 형식을 가져옵니다.</summary>
      <returns>알려진 형식을 반환하는 메서드입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>알려진 형식의 컬렉션을 반환하는 메서드의 이름을 가져옵니다.</summary>
      <returns>알려진 형식을 반환하는 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>개체 그래프에 포함할 수 있는 알려진 형식입니다.</summary>
      <returns>알려진 형식의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>채널에 수신된 메시지를 포함하며 보류 중인 요청에 연결될 수 없습니다.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>이벤트를 발생시킨 알 수 없는 메시지를 가져옵니다.</summary>
      <returns>이벤트를 발생시킨 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>끝점을 식별하거나 상호 작용하는 데 사용되는 주소 정보를 캡슐화하는 헤더를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>지정된 값, 이름 및 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <returns>
        <paramref name="value" />로 지정된 정보 항목이 들어 있는 지정된 <paramref name="name" /> 및 <paramref name="ns" />를 포함하는 <see cref="T:System.ServiceModel.Channels.AddressHeader" />입니다.</returns>
      <param name="name">주소 헤더의 이름입니다.</param>
      <param name="ns">주소 헤더의 네임스페이스입니다.</param>
      <param name="value">주소 헤더의 정보 항목입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />이 null이거나 <paramref name="name" />.Length == 0인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>지정된 이름 및 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 클래스의 새 인스턴스를 만듭니다. 이 인스턴스에서는 지정된 포맷터를 사용하여 지정된 개체의 정보 항목을 직렬화합니다.</summary>
      <returns>
        <paramref name="value" />로 지정된 정보 항목이 들어 있는 지정된 <paramref name="name" /> 및 <paramref name="ns" />를 포함하는 <see cref="T:System.ServiceModel.Channels.AddressHeader" />입니다.</returns>
      <param name="name">주소 헤더의 이름입니다.</param>
      <param name="ns">주소 헤더의 네임스페이스입니다.</param>
      <param name="value">주소 헤더의 정보 항목입니다.</param>
      <param name="serializer">
        <paramref name="value" /> 매개 변수에 지정된 개체를 직렬화하는 데 사용되는 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 또는 <paramref name="serializer" />가 null이거나 <paramref name="name" />.Length == 0인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>지정된 개체의 정보 항목이 현재 주소 헤더에 포함된 개체와 같은지 여부를 확인합니다.</summary>
      <returns>지정된 <paramref name="obj" />의 정보 항목이 현재 주소 헤더에 포함된 정보 항목과 같으면 true이고, 그렇지 않으면 false입니다. 특히, <paramref name="obj" />가 null이면 false가 반환됩니다.</returns>
      <param name="obj">현재 주소 헤더에 포함된 개체와 비교할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>현재 주소 헤더 개체를 직렬화할 수 있는 XML 판독기를 반환합니다.</summary>
      <returns>현재 주소 헤더 개체를 직렬화할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>주소 헤더에 대한 고유한 해시 코드를 제공합니다. </summary>
      <returns>현재 주소 헤더에 대한 고유한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>현재 주소 헤더의 정보 항목을 지정된 형식의 개체로 역직렬화합니다.</summary>
      <returns>필드 및 속성이 현재 주소 헤더 개체에서 제공된 값으로 설정된 <paramref name="T" /> 형식의 클래스 인스턴스입니다.</returns>
      <typeparam name="T">필드 및 속성이 현재 주소 헤더 개체에서 제공된 값으로 설정된 <paramref name="T" /> 형식의 클래스입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>현재 주소 헤더의 정보 항목을 지정된 형식의 개체로 역직렬화합니다. 이 개체는 지정된 포맷터를 사용하여 이 정보를 직렬화합니다.</summary>
      <returns>필드 및 속성이 현재 주소 헤더 개체에서 제공된 값으로 설정된 <paramref name="T" /> 형식의 클래스 인스턴스입니다.</returns>
      <param name="serializer">현재 주소 헤더 개체의 정보 항목을 역직렬화하는 데 사용되는 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />입니다.</param>
      <typeparam name="T">필드 및 속성이 현재 주소 헤더 개체에서 제공된 값으로 설정된 <paramref name="T" /> 형식의 클래스입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>구현된 경우 주소 헤더의 이름을 가져옵니다.</summary>
      <returns>주소 헤더의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>구현된 경우 주소 헤더의 네임스페이스를 가져옵니다.</summary>
      <returns>주소 헤더의 네임스페이스입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>파생 클래스에서 재정의된 경우 주소 헤더 콘텐츠를 스트림 또는 파일에 쓸 때 호출됩니다.</summary>
      <param name="writer">주소 헤더 내용을 스트림 또는 파일에 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>파생 클래스에서 재정의된 경우 주소 헤더 콘텐츠를 스트림 또는 파일에 쓰기 시작할 때 호출됩니다.</summary>
      <param name="writer">주소 헤더를 스트림 또는 파일에 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>주소 헤더를 메시지 헤더로 래핑합니다.</summary>
      <returns>현재 주소 헤더를 래핑하는 <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 주소 헤더를 스트림 또는 파일에 씁니다.</summary>
      <param name="writer">주소 헤더를 스트림 또는 파일에 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 주소 헤더를 스트림 또는 파일에 씁니다.</summary>
      <param name="writer">주소 헤더를 스트림 또는 파일에 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>주소 헤더 콘텐츠를 스트림 또는 파일에 씁니다.</summary>
      <param name="writer">주소 헤더 내용을 스트림 또는 파일에 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>주소 헤더 콘텐츠를 스트림 또는 파일에 쓰기 시작합니다.</summary>
      <param name="writer">주소 헤더를 스트림 또는 파일에 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>스레드로부터 안전하게 보호되는 주소 헤더의 읽기 전용 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>주소 헤더의 열거 가능 집합을 사용하여 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="addressHeaders">컬렉션을 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 개체의 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 집합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="addressHeaders" /> 매개 변수의 주소 헤더 중 하나가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>컬렉션의 헤더를 지정된 메시지의 헤더에 추가합니다.</summary>
      <param name="message">헤더가 추가되는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>컬렉션에서 지정된 이름 및 네임스페이스를 가진 주소 헤더를 모두 찾습니다.</summary>
      <returns>컬렉션에서 지정된 이름 및 네임스페이스를 가진 모든 헤더가 포함된 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 형식의 <see cref="T:System.Array" />입니다.</returns>
      <param name="name">찾을 주소 헤더의 이름입니다.</param>
      <param name="ns">찾을 주소 헤더의 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 또는 <paramref name="ns" />가 null입니다.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>컬렉션에서 지정된 이름 및 네임스페이스를 가진 첫 번째 주소 헤더를 찾습니다.</summary>
      <returns>컬렉션에서 지정된 이름 및 네임스페이스를 가진 <see cref="T:System.ServiceModel.Channels.AddressHeader" />입니다.</returns>
      <param name="name">찾을 주소 헤더의 이름입니다.</param>
      <param name="ns">찾을 주소 헤더의 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 또는 <paramref name="ns" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">지정된 <paramref name="name" /> 및 <paramref name="ns" />를 가진 헤더가 두 개 이상 있는 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>SOAP 메시지와 연결되거나 끝점에서 인식되는 WS-Addressing 버전입니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>사용 중인 WS-Addressing 버전이 없음을 나타내는 주소 지정 버전을 가져옵니다.</summary>
      <returns>WS-Addressing 버전을 사용하지 않는 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>현재 주소 지정 버전을 나타내는 문자열입니다.</summary>
      <returns>현재 주소 지정 버전입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>WS-Addressing 1.0과 연결된 주소 버전의 식별자를 가져옵니다.</summary>
      <returns>WS-Addressing 1.0과 연결된 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />을 식별하는 단일 인스턴스입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>메시지를 인코딩하는 데 사용되는 .NET Binary Format for XML을 지정하는 바인딩 요소입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>클라이언트에서 지정된 컨텍스트에 대해 지정된 형식의 채널을 만드는 채널 팩터리 스택을 빌드합니다.</summary>
      <returns>지정된 컨텍스트에 대한 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <param name="context">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="TChannel">채널 팩터리에서 생성되는 채널의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>현재 개체를 사용하여 초기화되는 새 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 개체를 만듭니다.</summary>
      <returns>속성 값이 현재 요소의 값과 같은 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>현재 인코딩 바인딩 요소에서 지정된 문자 인코딩과 SOAP 및 WS-Addressing 버전을 사용하는 이진 메시지 인코더에 대한 팩터리를 만듭니다.</summary>
      <returns>이 바인딩 요소에서 만드는 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>사용되거나 필요한 SOAP 메시지 및 WS-Addressing 버전을 가져오거나 설정합니다.</summary>
      <returns>사용되거나 필요한 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">설정된 값이 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">설정된 값이 지원되지 않는 봉투 버전인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>클라이언트와 서비스 간 통신에 사용되는 프로토콜, 전송 및 메시지 인코더를 지정하는 바인딩 요소가 포함됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>기본 이름과 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.Channels.Binding" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>지정된 서비스 바인딩을 사용하여 <see cref="T:System.ServiceModel.Channels.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">바인딩의 <see cref="P:System.ServiceModel.Channels.Binding.Name" />입니다.</param>
      <param name="ns">바인딩의 <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />이 null이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>클라이언트에서 지정된 형식의 채널을 만들고 개체 배열로 지정된 기능을 충족하는 채널 팩터리 스택을 빌드합니다.</summary>
      <returns>컬렉션에서 지정된 기능을 충족하는 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <param name="parameters">빌드되는 채널 팩터리에 대한 요구 사항을 지정하는 개체 배열입니다.</param>
      <typeparam name="TChannel">채널 팩터리에서 생성되는 채널의 형식입니다.</typeparam>
      <exception cref="T:System.InvalidOperationException">전송 요소가 없거나 잘못된 경우 또는 체계가 잘못되었거나 메시지 버전이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>클라이언트에서 지정된 형식의 채널을 만들고 바인딩 매개 변수 컬렉션에서 지정된 기능을 충족하는 채널 팩터리 스택을 빌드합니다.</summary>
      <returns>컬렉션에서 지정된 기능을 충족하는 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <param name="parameters">빌드되는 채널 팩터리에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</param>
      <typeparam name="TChannel">채널 팩터리에서 생성되는 채널의 형식입니다.</typeparam>
      <exception cref="T:System.InvalidOperationException">전송 요소가 없거나 잘못된 경우 또는 체계가 잘못되었거나 메시지 버전이 지정되지 않은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>현재 바인딩을 통해 클라이언트에서 개체 배열로 지정된 요구 사항을 충족하는 채널 팩터리 스택을 빌드할 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>클라이언트에서 지정된 채널 팩터리 스택을 빌드할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="parameters">빌드되는 채널 팩터리에 대한 요구 사항을 지정하는 개체 배열입니다.</param>
      <typeparam name="TChannel">팩터리를 테스트 중인 채널의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>현재 바인딩을 통해 클라이언트에서 지정된 바인딩 매개 변수 컬렉션을 충족하는 채널 팩터리 스택을 빌드할 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>클라이언트에서 지정된 채널 팩터리 스택을 빌드할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="parameters">빌드되는 채널 팩터리에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</param>
      <typeparam name="TChannel">팩터리를 테스트 중인 채널의 형식입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>전송 시 예외가 발생하기 전에 연결을 닫을 수 있는 시간 간격을 가져오거나 설정합니다.</summary>
      <returns>시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다. 기본값은 1분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작거나 너무 큰 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>파생 클래스에서 재정의된 경우 현재 바인딩에 속하는 바인딩 요소가 포함된 컬렉션을 만듭니다. </summary>
      <returns>현재 바인딩 개체의 바인딩 요소가 올바른 순서로 포함된 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Collections.Generic.ICollection`1" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>바인딩 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <param name="parameters">빌드되는 채널에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</param>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>바인딩으로 구성된 클라이언트와 서비스에서 사용되는 메시지 버전을 가져옵니다.</summary>
      <returns>바인딩으로 구성된 클라이언트와 서비스에서 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>바인딩의 이름을 가져오거나 설정합니다.</summary>
      <returns>바인딩의 이름입니다. 기본 이름은 null입니다.</returns>
      <exception cref="T:System.ArgumentException">설정된 값이 null이거나 빈 문자열일 수 없는 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>바인딩의 XML 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>바인딩의 XML 네임스페이스입니다. 기본값은 "http://tempuri.org/"입니다.</returns>
      <exception cref="T:System.ArgumentNullException">설정된 값이 null일 수 없는 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>전송 시 예외가 발생하기 전에 연결을 열 수 있는 시간 간격을 가져오거나 설정합니다.</summary>
      <returns>시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다. 기본값은 1분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작거나 너무 큰 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>연결이 삭제되기 전에 응용프로그램 메시지가 수신되지 않는 비활성 상태를 유지할 수 있는 시간 간격을 가져오거나 설정합니다.</summary>
      <returns>시간 초과 전에 응용프로그램이 메시지를 받아야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다. 기본값은 10분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작거나 너무 큰 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>파생 클래스에서 구현된 경우 바인딩으로 빌드되는 채널 팩터리에서 사용되는 전송을 지정하는 URI 체계를 설정합니다.</summary>
      <returns>현재 바인딩으로 빌드되는 팩터리가 만든 채널에서 사용되는 URI 체계입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>전송 시 예외가 발생하기 전에 쓰기 작업을 완료할 수 있는 시간 간격을 가져오거나 설정합니다.</summary>
      <returns>시간 초과 전에 쓰기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다. 기본값은 1분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작거나 너무 큰 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Windows Phone 클라이언트에서 채널 팩터리를 빌드하는 데 필요한 주소, 바인딩, 바인딩 요소 및 바인딩 매개 변수에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>지정된 바인딩 및 바인딩 매개 변수 컬렉션에 대해 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="binding">채널의 <see cref="T:System.ServiceModel.Channels.CustomBinding" />입니다.</param>
      <param name="parameters">채널의 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>현재 컨텍스트에서 빌드되는 채널의 바인딩을 가져옵니다.</summary>
      <returns>현재 컨텍스트에서 빌드되는 채널의 <see cref="T:System.ServiceModel.Channels.CustomBinding" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>현재 컨텍스트에서 빌드되는 채널의 바인딩 매개 변수 컬렉션을 가져옵니다.</summary>
      <returns>현재 컨텍스트에서 빌드되는 채널의 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>현재 채널 팩터리 아래에 지정된 형식의 채널에 대한 내부 채널 팩터리를 빌드합니다.</summary>
      <returns>현재 채널 팩터리의 내부 채널 팩터리를 나타내는 <see cref="T:System.ServiceModel.Channels.IChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <typeparam name="TChannel">내부 채널 팩터리에서 생성되는 <see cref="T:System.ServiceModel.Channels.IChannel" /> 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>내부 채널 팩터리에서 지정된 형식의 채널을 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>내부 채널 팩터리에서 지정된 <paramref name="TChannel" />을 생성할 수 있으면 true이고, 그렇지 않으면false입니다.</returns>
      <typeparam name="TChannel">내부 채널 팩터리에서 생성되는 <see cref="T:System.ServiceModel.Channels.IChannel" /> 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>현재 채널 빌드 컨텍스트의 복사본을 반환합니다.</summary>
      <returns>현재 채널 빌드 컨텍스트의 복사본인 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>바인딩 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T " />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>다른 바인딩 요소에서 채널 스택을 생성하는 데 사용하는 바인딩 요소를 가져옵니다.</summary>
      <returns>다른 바인딩 요소에서 채널 스택을 생성하는 데 사용하는 바인딩 요소가 포함된 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Windows Phone 클라이언트에서 보내는 메시지를 처리하는 데 사용되는 다양한 채널 형식에 대해 채널 팩터리를 빌드하는 바인딩의 요소입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>지정된 바인딩 요소를 사용하여 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="elementToBeCloned">복제할 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>바인딩 컨텍스트에서 지정된 형식의 채널을 생성하기 위한 채널 팩터리를 초기화합니다.</summary>
      <returns>
        <paramref name="context" />를 사용하여 초기화되는 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <param name="context">바인딩 요소에 대한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다. </param>
      <typeparam name="TChannel">팩터리에서 빌드되는 채널의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>바인딩 요소가 특정 형식의 채널에 대한 채널 팩터리를 빌드할 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>바인딩 요소가 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />를 빌드할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="context">바인딩 요소에 대한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다. </param>
      <typeparam name="TChannel">채널 팩터리에서 생성되는 채널의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>파생 클래스에서 재정의된 경우 바인딩 요소 개체의 복사본을 반환합니다.</summary>
      <returns>원본의 깊은 복제본인 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>파생 클래스에서 재정의된 경우 바인딩 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <param name="context">바인딩 요소에 대한 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>바인딩에 사용되는 바인딩 요소의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>바인딩 요소의 열거 가능 집합을 사용하여 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="elements">컬렉션을 초기화하는 데 사용되는 제네릭 형식<see cref="T:System.ServiceModel.Channels.BindingElement" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>바인딩 요소의 배열을 사용하여 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="elements">컬렉션을 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Array" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>바인딩 요소의 컬렉션에 배열의 바인딩 요소를 추가합니다.</summary>
      <param name="elements">컬렉션에 추가할 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Array" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>바인딩 요소 컬렉션의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>지정된 형식의 바인딩 요소가 바인딩 요소의 컬렉션에 속하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>지정된 바인딩 요소의 형식이 컬렉션에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="bindingElementType">컬렉션에 포함되어 있는지 테스트 중인 바인딩 요소의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>바인딩 요소의 컬렉션에서 지정된 형식의 첫 번째 항목을 반환합니다.</summary>
      <returns>있으면 <see cref="T:System.Type" /> 형식의 항목이고, 없으면 <paramref name="T" />가 값 형식인 경우 0이고 <paramref name="T" />가 참조 형식인 경우 null입니다.</returns>
      <typeparam name="T">찾을 항목의 <see cref="T:System.Type" />입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>바인딩 요소의 컬렉션에서 지정된 형식의 항목을 모두 반환합니다.</summary>
      <returns>있으면 <see cref="T:System.Type" /> 형식의 모든 항목으로 구성된 <see cref="T:System.Collections.ObjectModel.Collection`1" />이고, 없으면 <paramref name="T" />가 값 형식인 경우 0이고 <paramref name="T" />가 참조 형식인 경우 null입니다.</returns>
      <typeparam name="T">찾을 항목의 <see cref="T:System.Type" />입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>바인딩 요소의 컬렉션에서 지정된 위치에 바인딩 요소를 삽입합니다.</summary>
      <param name="index">컬렉션에 바인딩 요소를 삽입할 위치입니다.</param>
      <param name="item">삽입할 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>바인딩 요소의 컬렉션에서 지정된 형식의 바인딩 요소를 제거합니다.</summary>
      <returns>제거되는 <see cref="T:System.Type" /> 형식의 항목입니다.</returns>
      <typeparam name="T">찾을 항목의 <see cref="T:System.Type" />입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>바인딩 요소의 컬렉션에서 지정된 형식의 바인딩 요소를 모두 제거합니다.</summary>
      <returns>찾은 <see cref="T:System.Type" /> 형식의 모든 항목으로 구성된 <see cref="T:System.Collections.ObjectModel.Collection`1" />입니다.</returns>
      <typeparam name="T">찾을 항목의 <see cref="T:System.Type" />입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>바인딩 요소의 컬렉션에서 지정된 인덱스에 있는 바인딩 요소를 바꿉니다.</summary>
      <param name="index">바꿀 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item">지정된 <paramref name="index" />에 있는 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 항목의 새 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>바인딩 요소에서 팩터리를 빌드하는 데 사용하는 정보를 저장하는 바인딩 매개 변수의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>메시지 본문의 작성기를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>버퍼링할 것인지 여부를 명시적으로 나타내는 <see cref="T:System.ServiceModel.Channels.BodyWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="isBuffered">본문 작성기를 여러 번 호출할 수 있으면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>write 메서드를 여러 번 호출할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>본문 작성기를 여러 번 호출할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>구현된 경우 본문 내용을 작성할 때 확장 지점을 제공합니다.</summary>
      <param name="writer">메시지 본문을 작성하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" /> 입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>메시지 본문의 내용을 작성합니다.</summary>
      <param name="writer">메시지 본문을 작성하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" /> 입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>파생 클래스에서 구현된 경우 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 클래스를 사용하여 버퍼 풀을 관리할 수 있습니다. 풀과 해당 버퍼는 이 클래스를 인스턴스화할 때 만들어지고 가비지 수집에서 버퍼 풀을 회수할 때 삭제됩니다. 버퍼를 사용해야 할 때마다 풀에서 버퍼를 가져오고 사용한 다음 완료되면 풀에 반환합니다. 이 프로세스는 버퍼를 사용해야 할 때마다 만들고 삭제하는 것보다 훨씬 빠르고 리소스가 적게 사용됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>현재 관리자에서 캐시된 버퍼를 해제합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>지정된 최대 버퍼 풀 크기와 풀의 각 개별 버퍼에 대한 최대 크기를 사용하여 새 BufferManager를 만듭니다.</summary>
      <returns>지정된 매개 변수를 사용하여 <see cref="T:System.ServiceModel.Channels.BufferManager" />를 반환합니다.</returns>
      <param name="maxBufferPoolSize">풀의 최대 크기입니다.</param>
      <param name="maxBufferSize">개별 버퍼의 최대 크기입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> 또는 <paramref name="maxBufferSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>풀에 버퍼를 반환합니다.</summary>
      <param name="buffer">반환 중인 버퍼에 대한 참조입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 참조가 null일 수 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" />의 길이가 풀의 버퍼 길이 속성과 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>풀에서 적어도 지정된 크기의 버퍼를 가져옵니다. </summary>
      <returns>요청된 버퍼 크기인 바이트 배열입니다.</returns>
      <param name="bufferSize">요청된 버퍼의 크기(바이트)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" />가 0보다 작은 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>사용자 지정 채널에 대한 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.ChannelBase" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="channelManager">채널 작업(보내기, 받기, 열기 및 닫기)에 대한 기본 제한 시간을 제공하는 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>닫기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>열기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>받기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 받기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>보내기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>현재 채널과 연결된 채널 관리자를 가져옵니다.</summary>
      <returns>현재 채널과 연결된 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>통신 개체가 closing 상태로 전환되는 동안 호출됩니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>통신 개체에서 호출된 close 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>close 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>통신 개체에서 호출된 open 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>open 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>통신 개체에서 호출된 receive 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>receive 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>통신 개체에서 호출된 send 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>send 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>모든 사용자 지정 채널 팩터리에 대한 공용 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>지정된 기본 통신 제한 시간을 사용하여 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="timeouts">메시지를 교환할 때 열기, 보내기, 받기 및 닫기 작업의 기본 제한 시간을 지정하는 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />입니다. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>닫기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>열기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>받기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 받기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>보내기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>동기 중단 작업의 호출로 인해 closing 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>팩터리에서 만든 각 채널을 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 on close 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 on close 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 on close 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>opening 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다. 이 처리는 지정된 시간 간격 내에 완료되어야 합니다.</summary>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>팩터리에서 열린 채널을 닫는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>지정된 주소에 연결된 지정된 형식의 채널을 만들기 위해 클라이언트에 채널 팩터리에 대한 공용 기본 구현을 제공합니다.</summary>
      <typeparam name="TChannel">팩터리에서 생성되는 채널의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>지정된 기본 통신 제한 시간을 사용하여 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="timeouts">메시지를 교환할 때 열기, 보내기, 받기 및 닫기 작업의 기본 제한 시간을 지정하는 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>지정된 끝점 주소를 사용하여 특정 형식의 채널을 만듭니다.</summary>
      <returns>지정된 <paramref name="address" />를 가진 <paramref name="TChannel" /> 형식의 채널입니다.</returns>
      <param name="address">채널에서 메시지를 보내는 원격 끝점의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>지정된 전송 및 끝점 주소를 사용하여 특정 형식의 채널을 만듭니다.</summary>
      <returns>지정된 원격 및 전송 주소를 가진 <paramref name="TChannel" /> 형식의 채널입니다.</returns>
      <param name="address">채널에서 메시지를 보내는 원격 끝점의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
      <param name="via">출력 채널에서 메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 또는 <paramref name="via" />가 null입니다.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>채널 팩터리에서 관리되는 각 채널을 중단합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 채널 팩터리와 연결된 모든 채널을 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 on close 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">on-close 작업의 비동기 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 on close 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>지정된 시간 간격 내에 채널 팩터리와 연결된 모든 채널을 닫습니다.</summary>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>파생 클래스에서 구현된 경우 채널을 만들 때 확장 지점을 제공합니다.</summary>
      <returns>지정된 주소를 가진 <paramref name="TChannel" /> 형식의 채널입니다.</returns>
      <param name="address">채널에서 메시지를 보내는 원격 끝점의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
      <param name="via">출력 채널에서 메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>지정된 시간 간격 내에 채널 팩터리와 연결된 모든 채널을 닫는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>채널 팩터리가 열려 있고 채널을 만들 준비가 되었는지 확인합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태인 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태인 경우</exception>
      <exception cref="T:System.InvalidOperationException">현재 채널 팩터리가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태가 아닌 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>채널 및 수신기 팩터리와 연결된 기본 제한 시간을 관리하기 위한 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>파생 클래스에서 재정의된 경우 채널이 메시지 수신을 완료해야 하는 기본 시간 간격을 가져옵니다.</summary>
      <returns>receive 메서드가 호출된 후 시간 초과 전에 채널이 메시지 수신을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>파생 클래스에서 재정의된 경우 채널이 메시지 전송을 완료해야 하는 기본 시간 간격을 가져옵니다.</summary>
      <returns>send 메서드가 호출된 후 시간 초과 전에 채널이 메시지 전송을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>통신 개체에서 호출된 close 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>close 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>통신 개체에서 호출된 open 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>open 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>통신 개체에서 호출된 receive 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>receive 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>통신 개체에서 호출된 send 메서드가 시간 초과되는 시간 간격을 가져옵니다.</summary>
      <returns>send 메서드가 시간 초과될 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>채널 매개 변수의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="channel">매개 변수가 이 컬렉션에 있는 채널입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>매개 변수가 이 컬렉션에 있는 채널을 가져옵니다. </summary>
      <returns>매개 변수가 이 컬렉션에 있는 <see cref="T:System.ServiceModel.Channels.IChannel" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>매개 변수의 컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>지정된 인덱스를 사용하여 지정된 항목을 컬렉션에 삽입합니다.</summary>
      <param name="index">컬렉션에 있는 항목의 인덱스입니다.</param>
      <param name="item">컬렉션에 추가할 항목입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>현재 컬렉션의 매개 변수를 지정된 채널의 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />에 추가합니다.</summary>
      <param name="innerChannel">현재 컬렉션의 매개 변수를 받는 채널입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>컬렉션에서 매개 변수를 제거합니다.</summary>
      <param name="index">제거할 매개 변수의 인덱스입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>컬렉션에서 지정된 인덱스에 있는 항목을 바꿉니다.</summary>
      <param name="index">바꿀 항목의 인덱스입니다.</param>
      <param name="item">대체 항목의 값입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>채널 및 채널 팩터리를 비롯한 시스템의 모든 통신 지향 개체에 공통적으로 적용되는 기본 상태 컴퓨터에 대한 공용 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>지정된 상태 전환을 보호하기 위해 함께 사용할 수 없는 잠금을 사용하여 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mutex">상태 전환 중에 클래스 인스턴스를 보호하는, 함께 사용할 수 없는 잠금입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>통신 개체가 현재 상태에서 closing 상태로 즉시 전환되게 합니다.</summary>
      <exception cref="T:System.InvalidOperationException">기본 클래스 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" /> 메서드 또는 기본 클래스 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" /> 메서드가 호출되지 않은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 닫기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간을 사용하여 통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 닫기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />가 호출된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 열기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 열기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 통신 개체를 닫는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 열기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 열기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
      <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>통신 개체가 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" />가 호출된 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>통신 개체가 지정된 시간 간격 내에 현재 상태에서 closed 상태로 전환되게 합니다.</summary>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태의 개체에서 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" />가 호출된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>통신 개체가 closed 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>통신 개체가 closing 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>파생 클래스에서 재정의된 경우 닫기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>파생 클래스에서 재정의된 경우 열기 작업을 완료할 수 있는 기본 시간 간격을 가져옵니다.</summary>
      <returns>시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 기본 <see cref="T:System.Timespan" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>통신 개체를 닫는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>통신 개체를 여는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>통신 개체가 현재 상태에서 faulted 상태로 전환되게 합니다.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>통신 개체가 faulted 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>통신 개체의 형식을 가져옵니다.</summary>
      <returns>통신 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>통신 개체가 삭제되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>통신 개체가 closed 상태이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>파생 클래스에서 구현된 경우 동기 중단 작업의 호출로 인해 closing 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>파생 클래스에서 구현된 경우 비동기 닫기 작업의 호출로 인해 통신 개체가 closing 상태로 전환된 후 처리를 삽입합니다.</summary>
      <returns>비동기 on close 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 닫기 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 on close 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>파생 클래스에서 구현된 경우 비동기 열기 작업의 호출로 인해 opening 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다.</summary>
      <returns>비동기 on open 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="timeout">시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 on open 작업의 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 on open 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>파생 클래스에서 구현된 경우 동기 닫기 작업의 호출로 인해 closing 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다.</summary>
      <param name="timeout">시간 초과 전에 닫기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>통신 개체가 closing 상태로 전환되는 동안 호출됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>통신 개체가 closing 상태로 전환되는 동안 호출됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>파생 클래스에서 구현된 경우 통신 개체를 닫을 때 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>파생 클래스에서 구현된 경우 통신 개체를 열 때 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>동기 오류 작업의 호출로 인해 faulted 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>파생 클래스에서 구현된 경우 opening 상태로 전환된 후 통신 개체에 대한 처리를 삽입합니다. 이 처리는 지정된 시간 간격 내에 완료되어야 합니다.</summary>
      <param name="timeout">시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>통신 개체가 opened 상태로 전환되는 동안 호출됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>통신 개체가 opening 상태로 전환되는 동안 호출됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>통신 개체가 created 상태에서 opened 상태로 전환되게 합니다.</summary>
      <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>통신 개체가 지정된 시간 간격 내에 created 상태에서 opened 상태로 전환되게 합니다.</summary>
      <param name="timeout">시간 초과 전에 열기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />가 0보다 작은 경우</exception>
      <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 <paramref name="timeout" />으로 지정된, 작업에 대해 허용되는 기본 시간 간격을 초과한 경우</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>통신 개체가 opened 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>통신 개체가 opening 상태로 전환될 때 발생합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>통신 개체의 현재 상태를 나타내는 값을 가져옵니다.</summary>
      <returns>개체의 현재 상태를 나타내는 <see cref="T:System.ServiceModel.CommunicationState" /> 열거형의 값입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>상태 전환 중에 클래스 인스턴스를 보호하는, 함께 사용할 수 없는 잠금을 가져옵니다.</summary>
      <returns>상태 전환 중에 클래스 인스턴스를 보호하는, 함께 사용할 수 없는 잠금입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>통신 개체가 삭제된 경우 예외를 발생합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태인 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>통신 개체의 <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> 속성이 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 상태로 설정되지 않은 경우 예외를 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태인 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태가 아닌 경우 예외를 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니며 사용될 수 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정될 수 없는 경우</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정될 수 없는 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>바인딩 요소 목록을 사용하여 바인딩을 정의합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>전체 채널 스택의 바인딩 요소를 사용하여 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">채널 스택의 바인딩 요소가 하향식 순서로 포함된 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>지정된 바인딩의 값을 사용하여 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="binding">사용자 지정 바인딩을 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>바인딩 요소의 배열을 사용하여 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">사용자 지정 바인딩을 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Array" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>바인딩 요소의 배열을 사용하여 지정된 이름 및 네임스페이스로 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">바인딩의 이름입니다.</param>
      <param name="ns">바인딩의 네임스페이스입니다.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">사용자 지정 바인딩을 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Array" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>사용자 지정 바인딩의 바인딩 요소로 구성된 제네릭 컬렉션을 반환합니다.</summary>
      <returns>사용자 지정 바인딩의 바인딩 요소가 포함된 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 형식의 <see cref="T:System.Collections.Generic.ICollection`1" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>사용자 지정 바인딩에서 바인딩 요소를 가져옵니다.</summary>
      <returns>사용자 지정 바인딩의 바인딩 요소가 포함된 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>사용자 지정 바인딩에서 사용되는 전송의 URI 체계를 가져옵니다.</summary>
      <returns>사용자 지정 바인딩에서 사용되는 전송의 URI 체계이거나 전송이 없는 경우(<see cref="T:System.ServiceModel.Channels.TransportBindingElement" />가 null인 경우) 빈 문자열입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>채널에서 발생되는 예외를 채널의 프로토콜을 준수하는 SOAP 오류 메시지로 변환합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.FaultConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>기본 오류 변환기를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.FaultConverter" />의 인스턴스입니다.</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>파생 클래스에서 구현된 경우 예외를 만들려고 합니다.</summary>
      <returns>오류가 변환되었으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.Message" /> 오류입니다.</param>
      <param name="fault">오류입니다.</param>
      <param name="exception">변환에 성공한 경우 out 매개 변수로 반환되는 SOAP <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>파생 클래스에서 구현된 경우 오류가 SOAP 예외로 변환된 후 오류 메시지를 만들려고 합니다.</summary>
      <returns>메시지가 생성되었으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
      <param name="exception">SOAP 예외입니다.</param>
      <param name="message">out 매개 변수로 반환되는 오류 메시지입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />에서 true가 반환되었지만 <paramref name="message" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>오류 검사를 사용하여 <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />을 래핑합니다.</summary>
      <returns>오류가 변환되었으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
      <param name="message">오류 메시지입니다.</param>
      <param name="fault">오류입니다.</param>
      <param name="exception">변환에 성공한 경우 out 매개 변수로 반환되는 SOAP 예외입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 또는 <paramref name="fault" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />에서 true가 반환되었지만 <paramref name="exception" />이 null인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />에서 false가 반환되었지만 <paramref name="exception" />이 null이 아닌 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>HTTP 쿠키가 HTTP 요청 및 응답에서 처리되는 방식을 관리할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>지정된 바인딩 요소를 사용하여 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="elementToBeCloned">복제할 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>바인딩 컨텍스트에서 지정된 형식의 채널을 생성하기 위한 채널 팩터리를 초기화합니다.</summary>
      <returns>
        <paramref name="context" />를 사용하여 초기화되는 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <param name="context">바인딩 요소에 대한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="TChannel">팩터리에서 빌드되는 채널의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>현재 바인딩 요소 개체의 복사본을 반환합니다.</summary>
      <returns>원본의 깊은 복제본인 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>바인딩 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <param name="context">바인딩 요소에 대한 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>HTTP 프로토콜을 통해 제공되는 요청에 대한 추가 정보에 액세스하고 응답하기 위해 HTTP 요청에 액세스할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>HTTP 요청에서 HTTP 헤더를 가져옵니다.</summary>
      <returns>HTTP 요청의 HTTP 헤더가 포함된 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>HTTP 요청에 대한 HTTP 동사를 가져오거나 설정합니다.</summary>
      <returns>HTTP 요청에 대한 HTTP 동사입니다.</returns>
      <exception cref="T:System.ArgumentNullException">설정된 <paramref name="value" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> 클래스와 연결된 메시지 속성의 이름을 가져옵니다.</summary>
      <returns>값 "httpRequest"입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>HTTP 요청에 대한 쿼리 문자열을 가져오거나 설정합니다.</summary>
      <returns>HTTP 요청의 쿼리 문자열입니다.</returns>
      <exception cref="T:System.ArgumentNullException">설정된 <paramref name="value" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>메시지 본문을 무시하고 헤더만 보낼지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지 본문이 무시되면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>HTTP 프로토콜을 통해 제공되는 요청에 대한 추가 정보에 액세스하고 응답하기 위해 HTTP 응답에 액세스할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>HTTP 응답에서 HTTP 헤더를 가져옵니다.</summary>
      <returns>HTTP 응답의 HTTP 헤더가 포함된 <see cref="T:System.Net.WebHeaderCollection" />을 반환합니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> 클래스와 연결된 메시지 속성의 이름을 가져옵니다.</summary>
      <returns>"httpResponse"를 반환합니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>이 속성이 연결된 현재 HTTP 응답의 상태 코드를 가져오거나 설정합니다.</summary>
      <returns>HTTP 응답에서 보낼 <see cref="T:System.Net.HttpStatusCode" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 100보다 작거나 599보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>이 속성이 연결된 현재 HTTP 응답의 상태 코드에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>HTTP 응답에 대해 보낼 상태 설명입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>메시지 전송을 위해 HTTPS 전송을 지정하는 데 사용되는 바인딩 요소를 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>채널을 만드는 데 사용할 수 있는 지정된 형식의 채널 팩터리를 만듭니다.</summary>
      <returns>전송 바인딩 요소에 설정된 값에 따라 구성되는 지정된 형식의 채널 팩터리입니다.</returns>
      <param name="context">채널 팩터리를 만드는 데 필요한 바인딩, 동작, 계약 및 기타 정보를 설명하는 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 멤버입니다.</param>
      <typeparam name="TChannel">채널의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null일 수 없는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>현재 바인딩 요소의 복사본을 만듭니다.</summary>
      <returns>현재 바인딩 요소의 복사본입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.BindingContext" />에서 지정된 개체를 가져옵니다. 이 메서드는 기본 클래스 또는 해당 클래스의 상위 클래스 중 하나에서 지정된 개체를 가져옵니다.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>전송의 URI 체계를 반환합니다.</summary>
      <returns>"HTTPS"인 전송의 URI 체계입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>메시지 전송을 위해 HTTP 전송을 지정하는 데 사용되는 바인딩 요소를 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>채널을 만드는 데 사용할 수 있는 채널 팩터리를 만듭니다.</summary>
      <returns>지정된 형식의 채널 팩터리입니다.</returns>
      <param name="context">채널 팩터리를 만드는 데 필요한 바인딩, 동작, 계약 및 기타 정보를 설명하는 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 멤버입니다.</param>
      <typeparam name="TChannel">채널 팩터리의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null일 수 없는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>지정된 형식의 채널 팩터리를 빌드할 수 있는지 여부를 확인합니다.</summary>
      <returns>채널 팩터리를 빌드할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="context">빌드할 채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="TChannel">확인할 채널의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>현재 바인딩 요소의 복사본을 만듭니다.</summary>
      <returns>현재 바인딩 요소의 복사본입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />에서 속성을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />의 속성입니다.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">가져올 속성입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>사용할 버퍼의 최대 크기를 가져오거나 설정합니다. 버퍼링된 메시지의 경우 이 값은 <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />와 같습니다. 스트리밍된 메시지의 경우 이 값은 버퍼링된 모드로 읽어야 하는 SOAP 헤더의 최대 크기입니다.</summary>
      <returns>버퍼의 최대 크기(바이트)입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>전송의 URI 체계를 가져옵니다.</summary>
      <returns>반환 값: <see cref="F:System.Uri.UriSchemeHttp" /></returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>모든 채널 개체가 구현해야 하는 기본 인터페이스를 정의합니다. 모든 통신 개체가 공유하는 사태 컴퓨터 인터페이스를 구현하고 채널 스택에서 개체를 검색할 메서드를 구현해야 합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>채널 팩터리에서 채널을 생성하기 위해 구현해야 하는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>형식별 채널을 만드는 채널 팩터리에서 구현해야 하는 인터페이스를 정의합니다.</summary>
      <typeparam name="TChannel">채널 팩터리에서 만드는 채널의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>지정된 끝점 주소에 대한 지정된 형식의 채널을 만듭니다.</summary>
      <returns>지정된 끝점 주소에 대한 <paramref name="TChannel" /> 형식의 채널입니다.</returns>
      <param name="to">서비스 위치를 제공하는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>지정된 끝점 주소 및 메시지가 전송되는 전송 주소에 대한 지정된 형식의 채널을 만듭니다.</summary>
      <returns>지정된 끝점 주소 및 전송 주소에 대한 <paramref name="TChannel" /> 형식의 채널입니다.</returns>
      <param name="to">서비스 위치를 제공하는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
      <param name="via">메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>채널에서 메시지를 보내고 받기 위해 구현해야 하는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>메시징 끝점 간 양방향 통신의 양쪽에서 구현되는 세션용 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>아웃바운드 세션을 종료하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 아웃바운드 세션 종료를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다. </param>
      <param name="state">이 요청에 대한 상태 정보가 포함된 개체입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간을 사용하여 아웃바운드 세션을 종료하는 비동기 작업을 시작합니다. 이 제한 시간 내에 작업이 완료되어야 합니다.</summary>
      <returns>비동기 아웃바운드 세션 종료를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">작업이 완료되어야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다. </param>
      <param name="state">이 요청에 대한 상태 정보가 포함된 개체입니다. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>세션과 연결된 채널의 이 끝점에서 더 이상 메시지가 전송되지 않음을 표시하는 아웃바운드 세션을 종료합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>지정된 시간 간격 내에 세션과 연결된 채널의 이 끝점에서 더 이상 메시지가 전송되지 않음을 표시하는 아웃바운드 세션을 종료합니다.</summary>
      <param name="timeout">작업이 완료되어야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>세션과 연결된 채널의 이 끝점에서 더 이상 메시지가 전송되지 않음을 표시하는 아웃바운드 세션을 종료하는 비동기 작업을 완료합니다. </summary>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> 메서드 중 하나를 호출하여 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>이중 채널을 세션과 연결하는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>쿠키 컬렉션 관리에 사용할 수 있는 <see cref="T:System.Net.CookieContainer" />의 선택적 인스턴스에 대한 액세스를 제공하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>사용할 <see cref="T:System.Net.CookieContainer" /> 개체를 가져오거나 설정합니다(사용되는 경우).</summary>
      <returns>컨테이너가 사용되면 사용할 <see cref="T:System.Net.CookieContainer" />이고, 컨테이너가 사용되지 않으면 null입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>채널에서 메시지를 받기 위해 구현해야 하는 인터페이스를 정의합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>상태 개체가 연결되어 있는 메시지를 받는 비동기 작업을 시작합니다. </summary>
      <returns>비동기 메시지 수신을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="callback">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간 및 상태 개체가 연결되어 있는 메시지를 받는 비동기 작업을 시작합니다. </summary>
      <returns>비동기 받기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">메시지를 사용할 수 있을 때까지 기다릴 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 지정된 <paramref name="timeout" />이 초과된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 제한 시간이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간 및 상태 개체가 연결되어 있는 메시지를 받는 비동기 작업을 시작합니다. </summary>
      <returns>비동기 받기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">메시지를 사용할 수 있을 때까지 기다릴 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 지정된 <paramref name="timeout" />이 초과된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 제한 시간이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 제한 시간 및 상태 개체가 연결되어 있는 비동기 메시지 수신 대기 작업을 시작합니다. </summary>
      <returns>메시지가 도착할 때까지 기다릴 비동기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="timeout">메시지를 사용할 수 있을 때까지 기다릴 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 지정된 <paramref name="timeout" />이 초과된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 제한 시간이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>메시지를 받는 비동기 작업을 완료합니다. </summary>
      <returns>받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 메서드 중 하나를 호출하여 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>메시지를 받는 지정된 비동기 작업을 완료합니다.</summary>
      <returns>지정된 시간 간격이 경과하기 전에 메시지를 받았으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="result">
        <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <param name="message">받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>지정된 비동기 메시지 대기 작업을 완료합니다.</summary>
      <returns>
        <paramref name="timeout" />을 초과하기 전에 메시지가 도착했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="result">완료하고 최종 결과를 검색할 <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> 작업을 식별하는 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>입력 채널이 메시지를 받는 주소를 가져옵니다. </summary>
      <returns>입력 채널이 메시지를 받는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>받은 메시지를 반환합니다(사용 가능한 경우). 메시지를 사용할 수 없는 경우 기본 시간 간격 동안 차단됩니다.</summary>
      <returns>받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>받은 메시지를 반환합니다(사용 가능한 경우). 메시지를 사용할 수 없는 경우 지정된 시간 간격 동안 차단됩니다.</summary>
      <returns>받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="timeout">시간 초과되어 <see cref="T:System.TimeoutException" />을 발생하기 전에 받기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 지정된 <paramref name="timeout" />이 초과된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 제한 시간이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>지정된 시간 간격 내에 메시지를 받으려고 합니다. </summary>
      <returns>
        <paramref name="timeout" />을 초과하기 전에 메시지가 수신되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="timeout">
        <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 메서드 중 하나를 호출하여 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <param name="message">받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 지정된 <paramref name="timeout" />이 초과된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 제한 시간이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>메시지가 지정된 시간 간격 내에 도착했는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <paramref name="timeout" />을 초과하기 전에 메시지가 도착했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />은 시간 초과 전에 메시지가 도착할 때까지 기다릴 최대 시간 간격을 지정합니다.</param>
      <exception cref="T:System.TimeoutException">작업이 완료되기 전에 지정된 <paramref name="timeout" />이 초과된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 제한 시간이 0보다 작은 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>메시징 끝점 간 단방향 통신의 수신 쪽에서 구현되는 세션용 인터페이스를 정의합니다. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>입력 채널을 세션과 연결하는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>메시지의 속성 집합을 설명하기 위해 구현할 수 있는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>현재 인스턴스의 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IMessageProperty" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>채널에서 메시지를 보내기 위해 구현해야 하는 인터페이스를 정의합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>출력 채널의 대상으로 메시지를 전송하는 비동기 작업을 시작합니다. </summary>
      <returns>비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다. </param>
      <param name="state">비동기 보내기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 출력 채널의 대상으로 메시지를 전송하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 보내기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 보내기 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 보내기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>출력 채널의 대상으로 메시지를 전송하는 비동기 작업을 완료합니다. </summary>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>출력 채널에서 메시지가 전송되는 서비스의 대상을 가져옵니다. </summary>
      <returns>출력 채널에서 메시지를 보내는 서비스의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>출력 채널의 대상으로 메시지를 전송합니다. </summary>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>지정된 시간 간격 내에 현재 출력 채널에서 메시지를 보냅니다.</summary>
      <param name="message">출력 채널에서 전송 중인 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">시간 초과 전에 보내기 작업을 완료해야 하는 기간을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>출력 채널에서 메시지가 전송되는 전송 주소가 포함된 URI를 가져옵니다.</summary>
      <returns>출력 채널에서 메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>메시징 끝점 간 단방향 통신의 송신 쪽에서 구현되는 세션용 인터페이스를 정의합니다. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>출력 채널을 세션과 연결하는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>메시징 끝점 간 요청-회신 통신의 요청 쪽에서 채널이 구현되어야 하는 계약을 정의합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>요청-회신 메시지 교환의 회신 쪽으로 요청 메시지를 전송하는 비동기 작업을 시작합니다. </summary>
      <returns>비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="callback">요청 메시지를 전송하는 비동기 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">요청 메시지를 전송하는 비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>지정된 시간 간격 내에 요청-회신 메시지 교환의 회신 쪽으로 요청 메시지를 전송하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">응답을 받아야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 설명 부분을 참조하세요.</param>
      <param name="callback">요청 메시지를 전송하는 비동기 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">요청 메시지를 전송하는 비동기 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>메시지 기반 응답을 전송된 요청으로 반환하는 비동기 작업을 완료합니다. </summary>
      <returns>요청에 대한 응답으로 받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 메서드 호출에서 반환된 <see cref="T:System.IAsyncResult" />입니다. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>요청 채널에서 메시지를 보내는 원격 주소를 가져옵니다. </summary>
      <returns>요청 채널에서 메시지를 보내는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>메시지 기반 요청을 보내고 연관된 메시지 기반 응답을 반환합니다. </summary>
      <returns>요청에 대한 응답으로 받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>지정된 시간 간격 내에 메시지 기반 요청을 보내고 연관된 메시지 기반 응답을 반환합니다.</summary>
      <returns>요청에 대한 응답으로 받은 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <param name="message">전송할 요청 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">응답을 받아야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>요청이 전송되는 전송 주소를 가져옵니다.</summary>
      <returns>메시지가 전송되는 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>요청 채널을 세션과 연결하는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>통신 세션에 대해 ID를 제공하여 메시지를 교환하는 관계자 간에 공유 컨텍스트를 설정하는 인터페이스를 정의합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>세션을 고유하게 식별하는 ID를 가져옵니다. </summary>
      <returns>세션을 고유하게 식별하는 ID입니다. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>채널을 특정 형식의 세션과 연결하는 인터페이스를 정의합니다.</summary>
      <typeparam name="TSession">채널과 연결된 <see cref="T:System.ServiceModel.Channels.ISession" />의 형식입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>채널과 연결된 세션의 형식을 가져옵니다.</summary>
      <returns>채널과 연결된 세션을 정의하는 제네릭 매개 변수 <paramref name="TSession" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>로컬 클라이언트 보안 설정을 지정합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>현재 인스턴스의 복사본인 이 클래스의 새 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />의 복제된 새 인스턴스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>통신 중인 두 관계자의 시스템 시계 간에 허용되는 최대 시간 차이를 가져오거나 설정합니다. </summary>
      <returns>통신 중인 두 관계자의 시스템 시계 간에 허용되는 최대 시간 차이를 나타내는 <see cref="T:System.TimeSpan" />입니다. 기본값은 5분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>메시지 nonce가 유효한 최대 시간을 가져오거나 설정합니다.</summary>
      <returns>메시지 nonce가 유효한 최대 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다. 기본값은 5분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>클라이언트에서 메시지를 보낼 때 메시지가 유효한 최대 기간을 가져오거나 설정합니다. 이 기간 후에 서비스가 메시지를 받은 경우 메시지를 삭제해야 합니다.</summary>
      <returns>클라이언트에서 메시지를 보낼 때 메시지가 유효한 최대 기간을 나타내는 <see cref="T:System.TimeSpan" />입니다. 기본값은 5분입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>분산 환경에서 끝점 간의 통신 단위를 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.Message" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>
        <see cref="T:System.ServiceModel.Channels.Message" />를 닫고 리소스를 모두 해제합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>버전 및 동작이 포함된 메시지를 만듭니다.</summary>
      <returns>만든 메시지에 대한 <see cref="T:System.ServiceModel.Channels.Message" /> 개체입니다. </returns>
      <param name="version">메시지에 대해 사용할 SOAP 버전을 지정하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다.</param>
      <param name="action">메시지 처리 방법에 대한 설명입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> 또는 <paramref name="action" />가 null입니다. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>지정된 버전, 동작 및 본문을 사용하여 메시지를 만듭니다. </summary>
      <returns>만든 메시지에 대한 <see cref="T:System.ServiceModel.Channels.Message" /> 개체입니다. </returns>
      <param name="version">메시지에 대해 사용할 SOAP 버전을 지정하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다. </param>
      <param name="action">메시지 처리 방법에 대한 설명입니다. </param>
      <param name="body">메시지의 본문입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> 또는 <paramref name="body" />이 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>지정된 버전, 동작, 메시지 본문 및 직렬 변환기를 사용하여 메시지를 만듭니다.</summary>
      <returns>만든 메시지에 대한 <see cref="T:System.ServiceModel.Channels.Message" /> 개체입니다. </returns>
      <param name="version">메시지에 대해 사용할 SOAP 버전을 지정하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다. </param>
      <param name="action">메시지 처리 방법에 대한 설명입니다. </param>
      <param name="body">메시지의 본문입니다. </param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> 또는 <paramref name="action" />이 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>바이트 배열로 구성된 본문을 사용하여 메시지를 만듭니다. </summary>
      <returns>만든 메시지에 대한 <see cref="T:System.ServiceModel.Channels.Message" /> 개체입니다. </returns>
      <param name="version">메시지에 대해 사용할 SOAP 버전을 지정하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다. </param>
      <param name="action">메시지 처리 방법에 대한 설명입니다. </param>
      <param name="body">바이트 형식의 <see cref="T:System.ServiceModel.Channels.BodyWriter" />입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> 또는 <paramref name="body" />이 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>지정된 버전, 동작 및 본문을 사용하여 메시지를 만듭니다. </summary>
      <returns>만든 메시지에 대한 <see cref="T:System.ServiceModel.Channels.Message" /> 개체입니다. </returns>
      <param name="version">메시지에 대해 사용할 SOAP 버전을 지정하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다. </param>
      <param name="action">메시지 처리 방법에 대한 설명입니다. </param>
      <param name="body">메시지의 본문입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> 또는 <paramref name="body" />이 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>지정된 판독기, 동작 및 버전을 사용하여 메시지를 만듭니다. </summary>
      <returns>만든 메시지에 대한 <see cref="T:System.ServiceModel.Channels.Message" /> 개체입니다. </returns>
      <param name="version">메시지에 대해 사용할 SOAP 버전을 지정하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다. </param>
      <param name="action">메시지 처리 방법에 대한 설명입니다. </param>
      <param name="body">SOAP 메시지를 읽는 데 사용할 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> 또는 <paramref name="body" />이 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>이 <see cref="T:System.ServiceModel.Channels.Message" /> 인스턴스의 본문을 검색합니다.</summary>
      <returns>이 메시지의 본문이 포함된 <paramref name="T" /> 형식의 개체입니다.</returns>
      <typeparam name="T">메시지의 본문입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>지정된 직렬 변환기를 사용하여 이 <see cref="T:System.ServiceModel.Channels.Message" />의 본문을 검색합니다.</summary>
      <returns>이 메시지의 본문이 포함된 <paramref name="T" /> 형식의 개체입니다.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />입니다.</param>
      <typeparam name="T">메시지의 본문입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" />가 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>메시지 본문의 특성을 검색합니다.</summary>
      <returns>메시지 본문의 특성입니다.</returns>
      <param name="localName">XML 노드의 로컬 이름입니다.이 멤버에 해당하는 요소의 이름입니다. 이 문자열은 유효한 XML 요소 이름이어야 합니다.</param>
      <param name="ns">이 XML 요소가 속한 네임스페이스입니다.이 멤버에 해당하는 요소의 네임스페이스 URI입니다. 전송 주소 이외의 URI는 시스템에서 유효성이 검사되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> 또는 <paramref name="ns" />가 null입니다. </exception>
      <exception cref="T:System.ObjectDisposedException">메시지가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">메시지를 복사했거나 읽거나 쓴 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>이 메시지의 본문 내용에 액세스하는 XML 사전 판독기를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">메시지가 비어 있거나, 메시지를 복사했거나 읽거나 쓴 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>파생 클래스에서 재정의된 경우 메시지의 헤더를 가져옵니다. </summary>
      <returns>메시지의 헤더를 나타내는 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 개체입니다. </returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>
        <see cref="T:System.ServiceModel.Channels.Message" />가 삭제되었는지 여부를 나타내는 값을 반환합니다. </summary>
      <returns>메시지가 삭제되었으면 true이고, 그렇지 않으면 false입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>
        <see cref="T:System.ServiceModel.Channels.Message" />가 비어 있는지 여부를 나타내는 값을 가져옵니다. </summary>
      <returns>메시지가 비어 있으면 true이고, 그렇지 않으면 false입니다. </returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>이 메시지에서 SOAP 오류를 생성하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 메시지에서 SOAP 오류를 생성하면 true이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>메시지 본문을 문자열로 변환할 때 호출됩니다.</summary>
      <param name="writer">메시지 본문을 문자열로 변환하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>메시지를 닫을 때 호출됩니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>메시지 본문의 특성을 검색할 때 호출됩니다.</summary>
      <returns>메시지 본문의 특성입니다.</returns>
      <param name="localName">XML 노드의 로컬 이름입니다.이 멤버에 해당하는 요소의 이름입니다. 이 문자열은 유효한 XML 요소 이름이어야 합니다.</param>
      <param name="ns">이 XML 요소가 속한 네임스페이스입니다.이 멤버에 해당하는 요소의 네임스페이스 URI입니다. 전송 주소 이외의 URI는 시스템에서 유효성이 검사되지 않습니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>이 메시지의 본문 내용에 액세스할 수 있는 XML 사전 판독기를 검색할 수 있을 때 호출됩니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>XML 파일에 메시지 본문을 쓸 때 호출됩니다.</summary>
      <param name="writer">XML 파일에 이 메시지 본문을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>XML 파일에 전체 메시지를 쓸 때 호출됩니다.</summary>
      <param name="writer">XML 파일에 이 메시지를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>XML 파일에 시작 본문을 쓸 때 호출됩니다.</summary>
      <param name="writer">XML 파일에 시작 본문을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>XML 파일에 시작 봉투를 쓸 때 호출됩니다.</summary>
      <param name="writer">XML 파일에 시작 봉투를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>XML 파일에 시작 헤더를 쓸 때 호출됩니다.</summary>
      <param name="writer">XML 파일에 시작 헤더를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>파생 클래스에서 재정의된 경우 메시지에 대한 처리 수준 주석 집합을 가져옵니다. </summary>
      <returns>메시지에 대한 처리 수준 주석 집합이 포함된 <see cref="T:System.ServiceModel.Channels.MessageProperties" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>이 <see cref="T:System.ServiceModel.Channels.Message" />의 현재 상태를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.ServiceModel.Channels.Message" />의 현재 상태가 포함된 <see cref="T:System.ServiceModel.Channels.MessageState" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>이 메시지에서 사용되는 모든 리소스를 닫습니다. 이 메서드는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>현재 <see cref="T:System.ServiceModel.Channels.Message" />를 나타내는 문자열을 반환합니다. </summary>
      <returns>현재 <see cref="T:System.ServiceModel.Channels.Message" />입니다. </returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>파생 클래스에서 재정의된 경우 메시지의 SOAP 및 WS-Addressing 버전을 가져옵니다. </summary>
      <returns>메시지에서 사용되는 SOAP 및 WS-Addressing 버전을 나타내는 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체입니다. </returns>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 body 요소를 작성합니다. </summary>
      <param name="writer">body 요소를 쓰는 데 사용할 <see cref="T:System.Xml.XmlDictionaryWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 메시지 본문을 직렬화합니다. </summary>
      <param name="writer">메시지 본문을 쓰는 데 사용할 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우 </exception>
      <exception cref="T:System.ObjectDisposedException">메시지가 삭제된 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 본문 내용을 직렬화합니다. </summary>
      <param name="writer">body 요소를 쓰는 데 사용할 <see cref="T:System.Xml.XmlDictionaryWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />가 null인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">메시지가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">메시지를 복사했거나 읽거나 쓴 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 전체 메시지를 직렬화합니다. </summary>
      <param name="writer">메시지를 쓰는 데 사용할 <see cref="T:System.Xml.XmlDictionaryWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우 </exception>
      <exception cref="T:System.ObjectDisposedException">메시지가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">메시지를 복사했거나 읽거나 쓴 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 전체 메시지를 직렬화합니다. </summary>
      <param name="writer">메시지 본문을 쓰는 데 사용할 <see cref="T:System.Xml.XmlWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우 </exception>
      <exception cref="T:System.ObjectDisposedException">메시지가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">메시지를 복사했거나 읽거나 쓴 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 시작 본문을 직렬화합니다. </summary>
      <param name="writer">시작 본문을 쓰는 데 사용할 <see cref="T:System.Xml.XmlDictionaryWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 시작 본문을 직렬화합니다. </summary>
      <param name="writer">메시지의 시작 본문을 쓰는 데 사용할 <see cref="T:System.Xml.XmlDictionaryWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" />가 null인 경우 </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 시작 봉투를 직렬화합니다. </summary>
      <param name="writer">시작 봉투를 쓰는 데 사용할 <see cref="T:System.Xml.XmlDictionaryWriter" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>이후 사용을 위해 전체 메시지를 저장하는 메모리 버퍼를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>이 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />에서 액세스하는 대략적 바이트 수를 가져옵니다. </summary>
      <returns>이 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />에서 액세스하는 대략적 바이트 수입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>버퍼 작업을 완료합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>원본 메시지의 복사본을 반환합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>이 버퍼에 저장된 메시지 내용의 형식을 가져옵니다.</summary>
      <returns>이 버퍼에 저장된 메시지 내용의 형식입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageBuffer" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다. 이 메서드는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>지정된 I/O 스트림에 이 버퍼의 전체 내용을 씁니다.</summary>
      <param name="stream">이 버퍼의 전체 내용이 기록되는 I/O 스트림입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>인코더는 스트림에 메시지를 쓰고 스트림에서 메시지를 읽는 데 사용되는 구성 요소입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>파생 클래스에서 재정의된 경우 인코더에서 사용되는 MIME 콘텐츠 형식을 가져옵니다.</summary>
      <returns>메시지 인코더에서 지원되는 콘텐츠 형식입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T " />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>지정된 메시지 수준 콘텐츠 형식 값이 메시지 인코더에서 지원되는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>지정된 메시지 수준 콘텐츠 형식이 지원되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="contentType">테스트 중인 메시지 수준 콘텐츠 형식입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>파생 클래스에서 재정의된 경우 인코더에서 사용되는 미디어 형식 값을 가져옵니다.</summary>
      <returns>메시지 인코더에서 지원되는 미디어 형식입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>파생 클래스에서 재정의된 경우 인코더에서 사용되는 메시지 버전 값을 가져옵니다.</summary>
      <returns>인코더에서 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>파생 클래스에서 재정의된 경우 지정된 버퍼에서 메시지를 읽습니다.</summary>
      <returns>지정된 버퍼에서 읽은 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
      <param name="buffer">메시지가 역직렬화되는 버퍼를 제공하는 <see cref="T:System.Byte" /> 형식의 <see cref="T:System.ArraySegment`1" />입니다.</param>
      <param name="bufferManager">메시지가 역직렬화되는 버퍼를 관리하는 <see cref="T:System.ServiceModel.Channels.BufferManager" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>파생 클래스에서 재정의된 경우 지정된 스트림에서 메시지를 읽습니다.</summary>
      <returns>지정된 스트림에서 읽은 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
      <param name="buffer">메시지가 역직렬화되는 버퍼를 제공하는 <see cref="T:System.Byte" /> 형식의 <see cref="T:System.ArraySegment`1" />입니다.</param>
      <param name="bufferManager">메시지가 역직렬화되는 버퍼를 관리하는 <see cref="T:System.ServiceModel.Channels.BufferManager" />입니다.</param>
      <param name="contentType">MIME(Multipurpose Internet Mail Extensions) 메시지 수준 콘텐츠 형식입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>파생 클래스에서 재정의된 경우 지정된 스트림에서 메시지를 읽습니다.</summary>
      <returns>지정된 스트림에서 읽은 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
      <param name="stream">메시지를 읽어오는 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
      <param name="maxSizeOfHeaders">메시지에서 읽을 수 있는 최대 헤더 크기입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>파생 클래스에서 재정의된 경우 지정된 스트림에서 메시지를 읽습니다.</summary>
      <returns>지정된 스트림에서 읽은 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
      <param name="stream">메시지를 읽어오는 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
      <param name="maxSizeOfHeaders">메시지에서 읽을 수 있는 최대 헤더 크기입니다.</param>
      <param name="contentType">MIME(Multipurpose Internet Mail Extensions) 메시지 수준 콘텐츠 형식입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>메시지 인코더에서 사용되는 콘텐츠 형식을 반환합니다.</summary>
      <returns>메시지 인코더에서 사용되는 콘텐츠 형식입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>지정된 크기보다 작은 메시지를 바이트 배열 버퍼에 씁니다.</summary>
      <returns>메시지가 직렬화되는 버퍼를 제공하는 byte 형식의 <see cref="T:System.ArraySegment`1" />입니다.</returns>
      <param name="message">메시지 버퍼에 쓸 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="maxMessageSize">쓸 수 있는 최대 메시지 크기입니다.</param>
      <param name="bufferManager">메시지가 기록되는 버퍼를 관리하는 <see cref="T:System.ServiceModel.Channels.BufferManager" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>파생 클래스에서 재정의된 경우 지정된 크기보다 작은 메시지를 바이트 배열 버퍼의 지정된 오프셋에 씁니다.</summary>
      <returns>메시지가 직렬화되는 버퍼를 제공하는 byte 형식의 <see cref="T:System.ArraySegment`1" />입니다.</returns>
      <param name="message">메시지 버퍼에 쓸 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="maxMessageSize">쓸 수 있는 최대 메시지 크기입니다.</param>
      <param name="bufferManager">메시지가 기록되는 버퍼를 관리하는 <see cref="T:System.ServiceModel.Channels.BufferManager" />입니다.</param>
      <param name="messageOffset">버퍼를 제공하는 바이트 배열의 처음부터 시작되는 세그먼트의 오프셋입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>파생 클래스에서 재정의된 경우 지정된 스트림에 메시지를 씁니다.</summary>
      <param name="message">
        <paramref name="stream" />에 쓸 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="stream">
        <paramref name="message" />가 기록되는 <see cref="T:System.IO.Stream" /> 개체입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>다양한 형식의 메시지 인코딩에 대해 스트림에서 메시지를 읽고 스트림에 쓸 수 있는 메시지 인코더를 생성하기 위한 팩터리를 나타내는 추상 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>세션 기반 교환에서 메시지를 상호 연결하는 데 사용할 수 있는 메시지 인코더를 반환합니다.</summary>
      <returns>세션 기반 메시지 교환에 사용되는 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>파생 클래스에서 재정의된 경우 팩터리에서 생성되는 메시지 인코더를 가져옵니다.</summary>
      <returns>팩터리에서 사용되는 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>파생 클래스에서 재정의된 경우 팩터리가 메시지를 인코딩하기 위해 생성하는 인코더에서 사용되는 메시지 버전을 가져옵니다.</summary>
      <returns>팩터리에서 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>메시지를 인코딩하는 데 사용되는 메시지 버전을 지정하는 바인딩 요소입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>기존 요소를 사용하여 초기화되는 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="elementToBeCloned">복제할 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>파생 클래스에서 재정의된 경우 메시지 인코더를 생성하기 위한 팩터리를 만듭니다.</summary>
      <returns>메시지 인코더를 생성하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>채널 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 <paramref name="T" />(있는 경우)이거나 null(없는 경우)입니다.</returns>
      <param name="context">현재 바인딩 요소에 대한 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>파생 클래스에서 재정의된 경우 메시지 인코더 팩터리가 생성하는 메시지 인코더에서 처리할 수 있는 메시지 버전을 가져오거나 설정합니다.</summary>
      <returns>메시지 인코더 팩터리가 생성하는 인코더에서 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>오류가 포함된 메시지를 만들기 위해 <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" />에 전달될 수 있는 SOAP 오류의 메모리 내 표현을 나타냅니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>파생 클래스에서 호출될 때 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>actor의 값을 가져오거나 설정합니다.</summary>
      <returns>actor의 값입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>SOAP 오류 코드를 가져옵니다. </summary>
      <returns>SOAP 오류 코드가 포함된 <see cref="T:System.ServiceModel.FaultCode" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>지정된 <see cref="T:System.ServiceModel.Channels.Message" /> 및 메시지 버퍼에 대해 지정된 최대 버퍼 크기를 사용하는 새 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" /> 개체</returns>
      <param name="message">
        <see cref="T:System.ServiceModel.Channels.MessageFault" /> 개체를 만드는 데 사용할 지정된 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="maxBufferSize">메시지 버퍼에 대해 지정된 최대 버퍼 크기입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>메시지 오류의 세부 정보 개체를 반환합니다.</summary>
      <returns>메시지 오류의 세부 정보 개체입니다.</returns>
      <typeparam name="T">세부 정보 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>지정된 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />를 사용하는 세부 정보 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />에 포함된 세부 정보 개체입니다.</returns>
      <param name="serializer">세부 정보 개체를 역직렬화할 때 사용할 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />입니다. </param>
      <typeparam name="T">세부 정보 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />의 세부 정보 개체에 배치되는 <see cref="T:System.Xml.XmlDictionaryReader" /> 개체입니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />의 세부 정보 개체에 배치되는 <see cref="T:System.Xml.XmlDictionaryReader" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />에 세부 정보 개체가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />에 세부 정보 개체가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>SOAP 노드를 가져옵니다.</summary>
      <returns>오류를 발생시키는 메시지 경로의 SOAP 노드에 대한 정보가 포함된 SOAP 노드입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>파생 클래스에서 호출된 경우 <see cref="T:System.ServiceModel.Channels.MessageFault" />의 세부 정보 개체에 배치되는 <see cref="T:System.Xml.XmlDictionaryReader" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" />의 세부 정보 개체에 배치되는 <see cref="T:System.Xml.XmlDictionaryReader" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>세부 정보 내용을 쓰기 전에 호출됩니다.</summary>
      <param name="writer">detail 요소를 작성하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="version">작성할 SOAP 봉투의 버전입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>비추상 파생 클래스에서 재정의된 경우 detail 요소의 내용을 씁니다. </summary>
      <param name="writer">detail 요소를 작성하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>지정된 <see cref="T:System.Xml.XmlDictionaryWriter" /> 및 SOAP 봉투 버전을 사용하여 start 요소를 작성합니다.</summary>
      <param name="writer">detail 요소를 작성하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="version">작성할 SOAP 봉투의 버전입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>SOAP 오류에 대한 텍스트 설명을 가져옵니다. </summary>
      <returns>SOAP 오류에 대한 텍스트 설명이 포함된 <see cref="T:System.ServiceModel.FaultReason" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>SOAP 헤더의 내용을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>메시지 헤더의 대상 수신자를 가져오거나 설정합니다.</summary>
      <returns>메시지 헤더의 대상 수신자입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="mustUnderstand">헤더를 이해해야 하는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="mustUnderstand">헤더를 이해해야 하는지 여부를 나타내는 값입니다.</param>
      <param name="actor">메시지 헤더의 대상 수신자입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="mustUnderstand">헤더를 이해해야 하는지 여부를 나타내는 값입니다.</param>
      <param name="actor">메시지 헤더의 대상 수신자입니다.</param>
      <param name="relay">헤더를 릴레이해야 하는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>XmlFormatter를 사용하여 직렬화할 개체에서 헤더를 만듭니다. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />이 발생합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />이 발생합니다.</param>
      <param name="mustUnderstand">헤더를 이해해야 하는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />이 발생합니다.</param>
      <param name="mustUnderstand">헤더를 이해해야 하는지 여부를 나타내는 값입니다.</param>
      <param name="actor">메시지 헤더의 대상 수신자입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>지정된 데이터를 사용하여 새 메시지 헤더를 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />입니다.</returns>
      <param name="name">헤더 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="value">만들 헤더의 내용입니다.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />이 발생합니다.</param>
      <param name="mustUnderstand">헤더를 이해해야 하는지 여부를 나타내는 값입니다.</param>
      <param name="actor">메시지 헤더의 대상 수신자입니다.</param>
      <param name="relay">헤더를 릴레이해야 하는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 메시지 버전이 지원되는지 여부를 확인합니다.</summary>
      <returns>지정된 메시지 버전이 지원되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>이 메시지 헤더에 끝점 참조의 참조 매개 변수가 포함되어 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>이 메시지 헤더에 끝점 참조의 참조 매개 변수가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>SOAP 1.1 또는 1.2 사양에 따라 헤더를 이해해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다. </summary>
      <returns>헤더를 이해해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 헤더 내용을 직렬화할 때 호출됩니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 시작 헤더를 직렬화할 때 호출됩니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>헤더를 릴레이해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>헤더를 릴레이해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>이 메시지 헤더를 문자열로 변환합니다.</summary>
      <returns>메시지 헤더입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 헤더를 직렬화합니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 헤더를 직렬화합니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 헤더 내용을 직렬화합니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 헤더 내용을 직렬화합니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 XML 작성기를 사용하여 시작 헤더를 직렬화합니다. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
      <param name="messageVersion">메시지 및 해당 교환에 연결된 SOAP 버전과 관련된 정보를 포함합니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>SOAP 메시지 헤더와 관련된 시스템 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>메시지 헤더의 대상 수신자를 가져오거나 설정합니다.</summary>
      <returns>메시지 헤더의 대상 수신자를 나타내는 URI입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>메시지 헤더가 끝점 참조의 참조 매개 변수를 나타내는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>메시지 헤더가 끝점 참조의 참조 매개 변수를 나타내면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>메시지 헤더 처리가 필수인지 또는 선택인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지 헤더 처리가 필수이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>메시지 헤더의 이름을 가져옵니다.</summary>
      <returns>메시지 헤더의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>메시지 헤더의 네임스페이스를 가져옵니다.</summary>
      <returns>메시지 헤더의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>메시지 헤더를 릴레이할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지 헤더를 릴레이할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>메시지에 대한 메시지 헤더의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>지정된 메시지 헤더 컬렉션을 사용하여 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="collection">메시지 헤더의 컬렉션입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>지정된 메시지 버전을 사용하여 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="version">메시지의 SOAP 버전입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>지정된 메시지 버전 및 크기를 사용하여 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="version">메시지의 SOAP 버전입니다.</param>
      <param name="initialSize">헤더의 크기입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>메시지 처리 방법에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>메시지 처리 방법에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>지정된 메시지 헤더를 컬렉션에 추가합니다.</summary>
      <param name="header">추가할 메시지 헤더입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>컬렉션에서 모든 헤더를 제거합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>지정된 메시지에서 지정된 인덱스에 있는 헤더 내용을 이 인스턴스로 복사합니다.</summary>
      <param name="message">메시지입니다.</param>
      <param name="headerIndex">콘텐츠가 복사되는 원본 메시지 헤더의 위치입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>지정된 메시지 헤더 컬렉션에서 지정된 인덱스에 있는 헤더 내용을 이 인스턴스로 복사합니다.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />입니다.</param>
      <param name="headerIndex">콘텐츠가 복사되는 원본 메시지 헤더의 위치입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>지정된 메시지의 모든 헤더 내용을 이 인스턴스로 복사합니다.</summary>
      <param name="message">메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>지정된 헤더 컬렉션의 내용을 이 인스턴스로 복사합니다.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>특정 배열 인덱스부터 이 컬렉션의 헤더를 배열로 복사합니다. </summary>
      <param name="array">이 인스턴스에서 복사한 메시지 헤더 개체의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다. </param>
      <param name="index">배열에서 복사가 시작되는 인덱스이며 0부터 시작합니다. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>이 컬렉션의 메시지 헤더 수를 가져옵니다.</summary>
      <returns>이 컬렉션의 메시지 헤더 수입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>오류가 전송되어야 하는 노드의 주소를 가져오거나 설정합니다.</summary>
      <returns>오류가 전송되어야 하는 노드의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>이 컬렉션에서 header 요소의 지정된 LocalName 및 네임스페이스 URI로 메시지 헤더를 찾습니다.</summary>
      <returns>이 컬렉션에 있는 메시지 헤더의 인덱스입니다.</returns>
      <param name="name">헤더 XML 요소의 LocalName입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>이 컬렉션에서 header 요소의 지정된 LocalName, 네임스페이스 URI 및 actor로 메시지 헤더를 찾습니다.</summary>
      <returns>이 컬렉션에 있는 메시지 헤더의 인덱스입니다.</returns>
      <param name="name">헤더 XML 요소의 LocalName입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="actors">메시지 헤더의 대상 수신자입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>메시지를 보낸 노드의 주소를 가져오거나 설정합니다.</summary>
      <returns>메시지를 보낸 노드의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>컬렉션에서 반복할 수 있는 열거자를 반환합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />이 발생합니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>이 컬렉션에서 특정 위치에 있는 메시지 헤더를 검색합니다.</summary>
      <returns>메시지 헤더입니다.</returns>
      <param name="index">가져올 헤더의 인덱스(0부터 시작)입니다.</param>
      <typeparam name="T">메시지 헤더입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>이 컬렉션에서 특정 위치에 있는 메시지 헤더를 검색합니다.</summary>
      <returns>메시지 헤더입니다.</returns>
      <param name="index">가져올 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />이 발생합니다.</param>
      <typeparam name="T">메시지 헤더입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>이 컬렉션에서 header 요소의 지정된 LocalName 및 네임스페이스 URI로 메시지 헤더를 찾습니다.</summary>
      <returns>메시지 헤더입니다.</returns>
      <param name="name">헤더 XML 요소의 LocalName입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <typeparam name="T">메시지 헤더입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>이 컬렉션에서 지정된 LocalName, 네임스페이스 URI 및 직렬화로 메시지 헤더를 검색합니다.</summary>
      <returns>메시지 헤더입니다.</returns>
      <param name="name">헤더 XML 요소의 LocalName입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />입니다.</param>
      <typeparam name="T">메시지 헤더입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>이 컬렉션에서 header 요소의 지정된 LocalName, 네임스페이스 URI 및 actor로 메시지 헤더를 검색합니다.</summary>
      <returns>메시지 헤더입니다.</returns>
      <param name="name">헤더 XML 요소의 LocalName입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
      <param name="actors">메시지 헤더의 대상 수신자입니다.</param>
      <typeparam name="T">메시지 헤더입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>컬렉션의 지정된 위치에 있는 메시지 헤더에 액세스하는 XML 사전 판독기를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />이 발생합니다.</returns>
      <param name="headerIndex">가져올 헤더의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>MustUnderstand로 표시된 모든 메시지 헤더가 제대로 해석 및 처리되었는지 여부를 확인합니다. </summary>
      <returns>
        <paramref name="actors" />로 지정된 수신자가 MustUnderstand로 표시된 모든 메시지 헤더를 제대로 해석 및 처리했으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>지정된 수신자가 MustUnderstand로 표시된 모든 메시지 헤더를 제대로 해석 및 처리했는지 여부를 확인합니다. </summary>
      <returns>
        <paramref name="actors" />로 지정된 수신자가 MustUnderstand로 표시된 모든 메시지 헤더를 제대로 해석 및 처리했으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="actors">메시지 헤더의 대상 수신자입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>컬렉션의 지정된 인덱스에 메시지 헤더를 삽입합니다.</summary>
      <param name="headerIndex">
        <paramref name="header" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="header">삽입할 메시지 헤더입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 헤더를 검색합니다.</summary>
      <returns>컬렉션의 <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />입니다. <paramref name="index" />가 목록의 헤더 수보다 크거나 같으면 null이 반환됩니다.</returns>
      <param name="index">헤더 목록의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>메시지의 고유 ID를 가져오거나 설정합니다.</summary>
      <returns>메시지의 고유 ID입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>메시지의 SOAP 버전을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>이 메시지와 관련된 메시지의 ID를 가져옵니다.</summary>
      <returns>이 메시지와 관련된 메시지의 ID입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>컬렉션에서 지정된 이름 및 네임스페이스를 가진 헤더를 모두 제거합니다.</summary>
      <param name="name">헤더 XML 요소의 LocalName입니다.</param>
      <param name="ns">헤더 XML 요소의 네임스페이스 URI입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>컬렉션에서 지정된 인덱스의 메시지 헤더를 제거합니다.</summary>
      <param name="headerIndex">제거할 헤더의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>요청에 대한 회신이 전송되어야 하는 노드의 주소를 가져오거나 설정합니다.</summary>
      <returns>요청에 대한 회신이 전송되어야 하는 노드의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>헤더의 action 요소를 설정합니다.</summary>
      <param name="action">메시지 처리 방법에 대한 설명입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션에서 반복할 수 있는 열거자를 반환합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />이 발생합니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>메시지의 대상 끝점을 가져오거나 설정합니다.</summary>
      <returns>메시지의 대상 끝점이 포함된 URI입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>지정된 XML 작성기를 사용하여 지정된 위치의 헤더를 직렬화합니다. </summary>
      <param name="headerIndex">직렬화할 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>지정된 XML 작성기를 사용하여 지정된 위치의 헤더를 직렬화합니다. </summary>
      <param name="headerIndex">직렬화할 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />이 발생합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>지정된 XML 작성기를 사용하여 지정된 헤더 내용을 직렬화합니다. </summary>
      <param name="headerIndex">직렬화할 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>지정된 XML 작성기를 사용하여 지정된 헤더 내용을 직렬화합니다. </summary>
      <param name="headerIndex">직렬화할 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />이 발생합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>지정된 XML 작성기를 사용하여 시작 헤더를 직렬화합니다. </summary>
      <param name="headerIndex">직렬화할 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />이 발생합니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>지정된 XML 작성기를 사용하여 시작 헤더를 직렬화합니다. </summary>
      <param name="headerIndex">직렬화할 헤더의 인덱스(0부터 시작)입니다.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />이 발생합니다.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>메시지의 속성 집합을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>서전 설정된 속성을 사용하여 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>지정된 이름 및 속성을 가진 요소를 <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 추가합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <param name="name">추가할 요소의 이름입니다.</param>
      <param name="property">추가할 요소의 값입니다. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>전송에 제공하기 전에 이 메시지를 저장할지 여부를 지정하는 값을 가져오거나 설정합니다. </summary>
      <returns>보내는 메시지의 일괄 처리가 허용되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에서 요소를 모두 제거합니다. 이 메서드는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 특정 이름이 포함되어 있는지 여부를 확인합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 지정된 <paramref name="name" />를 가진 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="name">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에서 찾을 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>지정된 <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 내용을 이 인스턴스로 복사합니다.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 있는 속성의 총 개수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 총 속성 수입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에서 사용하는 모든 리소스를 해제합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>스트림에 메시지를 쓰고 스트림에서 메시지를 읽는 데 사용되는 인코더를 가져옵니다.</summary>
      <returns>스트림에 메시지를 쓰고 스트림에서 메시지를 읽는 데 사용되는 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>이 속성 집합이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성 집합이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>지정된 인덱스에 있는 속성을 검색합니다.</summary>
      <returns>지정된 <paramref name="name" />을 가진 속성이거나, 속성이 없는 경우 null입니다.</returns>
      <param name="name">컬렉션에서 가져올 속성의 이름입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 키를 포함하는 <see cref="T:System.Collections.ICollection" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 키가 포함된 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에서 지정된 이름을 가진 요소를 제거합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 지정된 <paramref name="name" />을 가진 요소가 포함되어 있고 제거할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="name">제거할 요소의 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>지정된 이름 및 속성을 가진 요소를 <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 추가합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <param name="pair">추가할 요소의 이름 및 값을 포함하는 키/값 쌍입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 특정 이름이 포함되어 있는지 여부를 확인합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 지정된 <paramref name="pair" />에 이름 및 값을 가진 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="pair">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 찾을 요소의 이름 및 값이 포함된 키/값 쌍입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 지정된 <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 내용을 배열에 복사합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <param name="array">컬렉션을 복사할 대상 <see cref="T:System.Array" />입니다.</param>
      <param name="index">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에서 지정된 이름을 가진 요소를 제거합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 <paramref name="pair" /> 매개 변수가 지정된 이름 및 값을 가진 요소를 포함하며 제거할 수 있는 경우 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="pair">제거할 요소의 이름 및 값을 포함하는 키/값 쌍입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>컬렉션에서 반복할 수 있는 열거자를 반환합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션에서 반복할 수 있는 열거자를 반환합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 특정 이름이 포함되어 있는지 여부를 확인하고 해당 값을 검색합니다. 이 메서드는 상속될 수 없습니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />에 지정된 <paramref name="name" />를 가진 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="name">찾을 요소의 이름입니다.</param>
      <param name="value">찾은 요소의 값입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />의 값이 포함된 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>메시지를 보내는 데 사용되는 전송 주소를 가져오거나 설정합니다.</summary>
      <returns>메시지를 보내는 데 사용되는 전송 주소가 포함된 URI입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>메시지의 상태를 지정합니다. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>메시지를 만들었습니다. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>메시지를 읽는 중입니다.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>메시지를 작성했습니다.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>메시지를 복사했습니다.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>메시지를 닫았으며 더 이상 액세스할 수 없습니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>메시지 및 해당 교환과 연결된 SOAP 및 WS-Addressing의 버전을 지정합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>현재 메시지 버전과 연결된 WS-Addressing의 버전을 가져옵니다.</summary>
      <returns>현재 메시지 버전과 연결된 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />입니다. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>WS-Addressing 1.0 및 지정된 SOAP 버전을 사용하여 메시지 버전 개체를 만듭니다.</summary>
      <returns>지정된 봉투 버전이 포함된 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
      <param name="envelopeVersion">SOAP 버전을 나타내는 <see cref="T:System.ServiceModel.EnvelopeVersion" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>지정된 WS-Addressing 및 SOAP 버전을 사용하여 메시지 버전 개체를 만듭니다.</summary>
      <returns>지정된 WS-Addressing 및 SOAP 버전을 사용하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
      <param name="envelopeVersion">SOAP 버전을 나타내는 <see cref="T:System.ServiceModel.EnvelopeVersion" />입니다.</param>
      <param name="addressingVersion">WS-Addressing 버전을 나타내는 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Windows Phone에서 사용되는 기본 메시지 버전을 가져옵니다.</summary>
      <returns>SOAP 1.2 및 WS-Addressing 버전 1.0을 사용하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>현재 메시지 버전과 연결된 SOAP 버전을 가져옵니다.</summary>
      <returns>메시지 버전 개체와 연결된 <see cref="T:System.ServiceModel.EnvelopeVersion" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>현재 메시지 버전이 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>지정한 개체가 현재 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 메시지 버전과 비교할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>현재 메시지 버전의 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.ServiceModel.Channels.MessageVersion" />의 고유한 해시 코드입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>SOAP 또는 WS-Addressing을 사용하지 않는 메시지 버전을 가져옵니다.</summary>
      <returns>SOAP 또는 WS-Addressing을 사용하지 않는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>SOAP 1.1을 사용하는 메시지 버전을 가져옵니다.</summary>
      <returns>SOAP 1.1을 사용하지만 WS-Addressing 버전은 사용하지 않는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>WS-Addressing 1.0 및 SOAP 1.2를 사용하는 메시지 버전을 가져옵니다.</summary>
      <returns>WS-Addressing 1.0 및 SOAP 1.2의 버전을 사용하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>현재 메시지 버전입니다.</summary>
      <returns>현재 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>받는 요청과 관련된 회신을 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.RequestContext" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>파생 클래스에서 재정의된 경우 컨텍스트와 연결된 요청 처리를 중지합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>파생 클래스에서 재정의된 경우 현재 컨텍스트와 연결된 요청에 회신하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 회신 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="message">요청이 포함된 받는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="callback">비동기 회신 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 회신 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>파생 클래스에서 재정의된 경우 지정된 시간 간격 내에 현재 컨텍스트와 연결된 요청에 회신하는 비동기 작업을 시작합니다.</summary>
      <returns>비동기 회신 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <param name="message">요청이 포함된 받는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">사용 가능한 요청에 대한 회신을 기다릴 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
      <param name="callback">비동기 회신 작업 완료 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">비동기 회신 작업과 연결된 상태 정보가 포함된 개체이며 응용프로그램에서 지정됩니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>파생 클래스에서 재정의된 경우 현재 컨텍스트와 연결된 요청 컨텍스트에 회신 중인 작업을 닫습니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>파생 클래스에서 재정의된 경우 지정된 시간 간격 내에 현재 컨텍스트와 연결된 요청 컨텍스트에 회신 중인 작업을 닫습니다.</summary>
      <param name="timeout">현재 컨텍스트와 연결된 회신 작업을 닫아야 하는 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>컨텍스트와 연결된 리소스를 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 true이고, 관리되지 않는 리소스만 해제하려면 false입니다. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>파생 클래스에서 재정의된 경우 요청 메시지에 회신하는 비동기 작업을 완료합니다.</summary>
      <param name="result">
        <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> 메서드 중 하나를 호출하여 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>파생 클래스에서 재정의된 경우 요청 메시지에 회신합니다.</summary>
      <param name="message">요청이 포함된 받는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>파생 클래스에서 재정의된 경우 지정된 시간 간격 내에 요청 메시지에 회신합니다.</summary>
      <param name="message">요청이 포함된 받는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</param>
      <param name="timeout">요청에 대한 회신을 기다릴 시간 간격을 지정하는 <see cref="T:System.Timespan" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>파생 클래스에서 재정의된 경우 요청이 포함된 메시지를 가져옵니다.</summary>
      <returns>요청이 포함된 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>컨텍스트와 연결된 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>구현될 경우 채널 SOAP 메시지 보안을 지원하는 바인딩 요소를 나타내는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>
        <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 설정과 전달된 바인딩 컨텍스트에 따라 채널 팩터리를 만듭니다. 만든 채널 팩터리는 전송 채널 팩터리를 포함하는 바인딩 컨텍스트에 해당하는 채널 팩터리를 내부적으로 참조하는 SOAP 메시지 보안 채널 팩터리입니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" />입니다.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="TChannel">채널 팩터리의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="TChannel" /> 형식의 채널이 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>파생 클래스에서 구현된 경우 지정된 형식의 채널 팩터리를 만듭니다.</summary>
      <returns>
        <paramref name="TChannel" /> 형식의 채널을 만드는 <see cref="T:System.ServiceModel.Channels.IChannelFactory" />입니다.</returns>
      <param name="context">채널 팩터리의 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 입니다.</param>
      <typeparam name="TChannel">채널 팩터리의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="TChannel" /> 형식의 채널이 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>지정된 형식의 채널 팩터리를 빌드할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <paramref name="TChannel" /> 형식의 채널 팩터리를 빌드할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="context">채널 팩터리의 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 입니다.</param>
      <typeparam name="TChannel">채널 팩터리의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>SOAP 메시지의 일부로 전송된 사용자 이름 및 비밀번호를 기준으로 클라이언트 인증에 대해 구성되는 보안 바인딩 요소를 만듭니다. 이 바인딩 요소를 사용하려면 전송 시 서버 인증 및 메시지 보호(예: HTTPS) 기능을 제공해야 합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />를 사용하여 지정된 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingContext" />의 지정된 개체이거나, 개체가 없는 경우 null입니다.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">가져올 속성입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>각 메시지에 타임스탬프를 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>각 메시지에 타임스탬프가 포함되면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>클라이언트에서 사용되는 로컬 보안 설정과 관련된 바인딩 속성을 가져옵니다.</summary>
      <returns>로컬 클라이언트 보안 설정이 포함된 <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>텍스트 기반 SOAP 메시지에 사용되는 문자 인코딩 및 메시지 버전 관리를 지정하는 바인딩 요소입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>지정된 메시지 버전 및 인코딩을 사용하여 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="messageVersion">메시지 버전에 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</param>
      <param name="writeEncoding">메시지 문자의 형식을 지정하는 데 사용되는 <see cref="T:System.Text.Encoding" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> 또는 <paramref name="writeEncoding" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> 값이 잘못된 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>클라이언트에서 지정된 컨텍스트에 대해 지정된 형식의 채널을 만드는 채널 팩터리 스택을 빌드합니다.</summary>
      <returns>지정된 컨텍스트에 대한 <paramref name="TChannel" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />입니다.</returns>
      <param name="context">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="TChannel">채널 팩터리에서 생성되는 채널의 형식입니다.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>현재 개체를 사용하여 초기화되는 새 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 개체를 만듭니다.</summary>
      <returns>속성 값이 현재 요소의 값과 같은 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>현재 인코딩 바인딩 요소에서 지정된 메시지 버전 및 문자 인코딩을 사용하는 텍스트 메시지 인코더에 대한 팩터리를 만듭니다.</summary>
      <returns>이 팩터리에서 만드는 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>바인딩 요소 스택의 해당 계층에서 요청된 형식화된 개체(있는 경우)를 반환합니다.</summary>
      <returns>요청된 형식화된 개체 T(있는 경우)이거나 null 참조(Visual Basic의 Nothing)(없는 경우)입니다.</returns>
      <param name="context">바인딩 요소에 대한 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">메서드에서 쿼리 중인 형식화된 개체입니다.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>텍스트 메시지의 형식을 지정하는 데 사용되는 SOAP 및 WS-Addressing 버전을 가져오거나 설정합니다.</summary>
      <returns>메시지의 형식을 지정하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다. 기본값은 <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>텍스트 메시지의 문자 형식을 지정하는 데 사용되는 인코딩을 가져오거나 설정합니다.</summary>
      <returns>텍스트 메시지의 문자 형식을 지정하는 데 사용되는 <see cref="T:System.Text.Encoding" />입니다. 기본 텍스트 인코딩은 UTF-8 형식입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값이 null인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> 값이 잘못된 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>전송 바인딩 요소를 나타내는 추상 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>이 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>기존 인스턴스를 사용하여 이 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="elementToBeCloned">복제할 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />입니다. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />에서 속성을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />의 속성입니다.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</param>
      <typeparam name="T">가져올 속성입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />가 null일 수 없는 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>메시지의 주소를 수동으로 지정해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지의 주소를 수동으로 지정해야 하면 true이고, 그렇지 않으면  false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>받을 수 있는 최대 메시지 크기를 가져오거나 설정합니다.</summary>
      <returns>받을 수 있는 최대 메시지 크기입니다. 기본값은 65,536바이트입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">설정된 <paramref name="value" />는 음수일 수 없습니다.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>전송의 URI 체계를 가져옵니다.</summary>
      <returns>이 메서드를 구현하는 파생 클래스에 따라 달라지는 전송의 URI 체계를 반환합니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>보안 전송을 통한 최적화된 메시지 보안 등의 혼합 모드 보안을 지원하는 사용자 지정 바인딩 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>현재 클래스에서 초기화되는 새 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 개체를 만듭니다.</summary>
      <returns>속성 값이 현재 인스턴스의 값과 같은 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>사용자가 서비스에 클라이언트를 인증하는 데 사용되는 클라이언트 자격 증명을 구성할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>기존 <see cref="T:System.ServiceModel.Description.ClientCredentials" />의 복사본을 만듭니다. </summary>
      <param name="other">복사할 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>이 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 인스턴스의 새 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 인스턴스입니다.</returns>
      <exception cref="T:System.NotImplementedException">현재 자격 증명이 null이거나 올바른 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>이 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 인스턴스의 새 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>클라이언트가 서비스 인증에 사용하는 사용자 이름 및 비밀번호를 설정하는 데 사용할 수 있는 자격 증명 개체를 가져옵니다. </summary>
      <returns>클라이언트 자격 증명의 현재 사용자 이름 및 비밀번호를 나타내는 <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>끝점이 외부에 전달하는 내용을 지정하는 계약을 설명합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>지정된 이름을 사용하여 <see cref="T:System.ServiceModel.Description.ContractDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">계약 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" />이 비어 있는 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>네임스페이스로 정규화된 지정된 이름을 사용하여 <see cref="T:System.ServiceModel.Description.ContractDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">계약 이름입니다.</param>
      <param name="ns">계약의 이름이 포함된 네임스페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" />이 비어 있는 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>계약 설명에서 지정하는 콜백 계약의 형식을 가져오거나 설정합니다.</summary>
      <returns>계약 설명에서 지정하는 콜백 계약의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>계약 설명의 구성 이름을 가져오거나 설정합니다.</summary>
      <returns>계약의 구성 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>계약 설명에서 지정하는 계약 형식을 가져오거나 설정합니다.</summary>
      <returns>계약 설명에서 지정하는 계약 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>계약의 이름을 가져오거나 설정합니다.</summary>
      <returns>계약 설명의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>계약의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>계약의 네임스페이스입니다.</returns>
      <exception cref="T:System.ArgumentNullException">설정된 값이 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>계약과 연결된 작업 설명의 컬렉션을 가져옵니다.</summary>
      <returns>계약 설명과 연결된 작업 설명이 포함된 <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>SOAP 오류를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>지정된 동작 값을 사용하여 <see cref="T:System.ServiceModel.Description.FaultDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">SOAP 오류 메시지의 동작입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>SOAP 오류 메시지의 동작 값을 가져옵니다.</summary>
      <returns>SOAP 오류의 동작입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>SOAP 오류 세부 정보의 형식을 가져오거나 설정합니다.</summary>
      <returns>직렬화 가능 세부 정보 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>SOAP 오류의 이름을 가져오거나 설정합니다.</summary>
      <returns>SOAP 오류의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>SOAP 오류의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>SOAP 오류의 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>계약의 SOAP 오류 정보를 가져오는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.FaultDescription" /> 개체의 컬렉션입니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>SOAP 메시지의 본문을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Description.MessageBodyDescription" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>SOAP 메시지의 본문 부분을 가져옵니다.</summary>
      <returns>검사하거나 수정할 수 없는 SOAP 메시지의 본문 부분이 포함된 <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>반환 값이 포함된 SOAP 메시지 부분을 가져오거나 설정합니다.</summary>
      <returns>반환 값입니다(있는 경우).</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>SOAP 본문 요소 내의 래퍼 요소 이름을 가져오거나 설정합니다(있는 경우).</summary>
      <returns>있으면 래퍼 요소의 이름이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>SOAP 본문 내의 래퍼 요소 네임스페이스를 가져오거나 설정합니다(있는 경우).</summary>
      <returns>래퍼 요소의 네임스페이스입니다(있는 경우).</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>메시지에 대한 설명을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>지정된 동작과 방향을 사용하여 <see cref="T:System.ServiceModel.Description.MessageDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">메시지의 의도를 식별하는 SOAP 메시지의 동작 매개 변수입니다.</param>
      <param name="direction">들어오는 메시지인 경우 <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />이고, 보내는 메시지의 경우 <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" />이 <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> 또는 <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />이 아닌 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>메시지의 의도를 식별하는 SOAP 메시지의 동작 매개 변수를 가져옵니다.</summary>
      <returns>동작 URI입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>SOAP 메시지의 본문을 가져옵니다.</summary>
      <returns>메시지의 본문이 포함된 <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>받는 메시지인지 또는 보내는 메시지인지를 나타내는 방향을 가져옵니다.</summary>
      <returns>서비스로 메시지를 보내는 중인지 또는 받는 중인지를 나타내는 <see cref="T:System.ServiceModel.Description.MessageDirection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>메시지 계약의 형식을 식별하는 형식을 가져오거나 설정합니다.</summary>
      <returns>메시지 계약의 형식입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>계약에 속하는 작업을 구성하는 메시지에 대한 설명을 저장하는 데 사용되는 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>컬렉션에서 지정된 동작이 포함된 메시지에 대한 메시지 설명을 찾고 처음 발견된 설명을 반환합니다.</summary>
      <returns>메시지에 지정된 <paramref name="action" />이 있는, 컬렉션에서 처음 발견된 <see cref="T:System.ServiceModel.Description.MessageDescription" />이거나 일치하는 <paramref name="action" />이 없는 경우 null입니다.</returns>
      <param name="action">찾고 있는 메시지의 동작입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>컬렉션에서 메시지에 지정된 동작이 있는 메시지 설명을 모두 찾아서 반환합니다.</summary>
      <returns>현재 컬렉션에서 메시지에 지정된 <paramref name="action" />이 있는 컬렉션 메시지 설명을 포함하는 <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />입니다. 일치하는 <see cref="T:System.ServiceModel.Description.MessageDescription" /> 개체가 없으면 빈 컬렉션이 반환됩니다.</returns>
      <param name="action">찾고 있는 메시지의 동작입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>메시지의 방향을 지정합니다.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>메시지를 받고 있습니다.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>메시지를 보내고 있습니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>SOAP 메시지 부분에 대한 설명을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="name">메시지 부분의 XML 이름입니다.</param>
      <param name="ns">메시지 부분의 XML 네임스페이스입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>메시지 부분의 인덱스를 가져오거나 설정합니다.</summary>
      <returns>메시지 부분의 인덱스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>메시지 부분에 대한 멤버 정보를 가져오거나 설정합니다.</summary>
      <returns>이 메시지 부분에 대한 멤버 정보입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>메시지 부분의 이름을 가져옵니다.</summary>
      <returns>메시지 부분의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>메시지 부분의 네임스페이스를 가져옵니다.</summary>
      <returns>메시지 부분의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>메시지 부분의 형식을 가져오거나 설정합니다.</summary>
      <returns>메시지 부분의 형식입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>파생 클래스에서 호출된 경우 <see cref="T:System.ServiceModel.Description.MessagePartDescription" />의 <see cref="T:System.Xml.XmlQualifiedName" />을 반환합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" />의 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
      <param name="item">찾을 <see cref="T:System.ServiceModel.Description.MessagePartDescription" />입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>교환하는 메시지와 관련해서 작업을 특성화하는 계약입니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>지정된 이름과 계약 설명을 사용하여 <see cref="T:System.ServiceModel.Description.OperationDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">작업 설명의 이름입니다.</param>
      <param name="declaringContract">작업 설명을 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 또는 <paramref name="declaringContract" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" />이 비어 있는 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>작업의 begin 메서드를 가져오거나 설정합니다.</summary>
      <returns>메서드의 특성과 메타데이터에 액세스할 수 있게 하는 <see cref="T:System.Reflection.MethodInfo" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>작업이 속하는 계약을 가져오거나 설정합니다.</summary>
      <returns>작업에 대한 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">설정된 <paramref name="value" />가 null인 경우</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>작업의 end 메서드를 가져오거나 설정합니다.</summary>
      <returns>메서드의 특성과 메타데이터에 액세스할 수 있게 하는 <see cref="T:System.Reflection.MethodInfo" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>작업 설명과 연결된 오류 설명의 컬렉션을 가져옵니다.</summary>
      <returns>작업 설명과 연결된 오류 세부 정보가 포함된 <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>작업에서 회신 메시지를 반환하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 메서드가 요청 메시지를 받고 회신 메시지를 반환하지 않으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>작업 설명과 연결된 알려진 형식을 가져옵니다.</summary>
      <returns>작업 설명과 연결된 알려진 형식의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>작업을 구성하는 메시지에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>작업을 구성하는 메시지에 대한 설명이 포함된 <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>작업 설명의 이름을 가져오거나 설정합니다.</summary>
      <returns>작업 설명의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>작업 설명의 service synchronization 메서드를 가져오거나 설정합니다.</summary>
      <returns>메서드의 특성과 메타데이터에 액세스할 수 있게 하는 <see cref="T:System.Reflection.MethodInfo" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>작업 설명이 포함된 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>작업 설명의 컬렉션에서 지정된 이름을 가진, 처음 발견된 작업 설명을 반환합니다.</summary>
      <returns>지정된 이름을 가진 처음 발견된 <see cref="T:System.ServiceModel.Description.OperationDescription" />이거나, 지정된 이름을 가진 작업이 없는 경우 null입니다.</returns>
      <param name="name">작업의 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>컬렉션에서 지정된 이름을 가진 모든 작업 설명의 컬렉션을 반환합니다.</summary>
      <returns>지정된 이름을 가진 모든 작업 설명이 포함된 <see cref="T:System.ServiceModel.Description.OperationDescription" /> 형식의 <see cref="T:System.Collections.ObjectModel.Collection`1" />입니다.</returns>
      <param name="name">작업의 이름입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>작업 설명 컬렉션의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index">
        <paramref name="item" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="item">삽입할 <see cref="T:System.ServiceModel.Description.OperationDescription" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null인 경우</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>컬렉션에서 지정된 인덱스에 있는 작업 설명 요소를 바꿉니다.</summary>
      <param name="index">
        <paramref name="item" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="item">삽입할 <see cref="T:System.ServiceModel.Description.OperationDescription" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />가 null인 경우</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>서비스 클라이언트가 서비스를 찾고 통신할 수 있게 하는 서비스의 끝점을 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contract">서비스 끝점의 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>지정된 계약, 바인딩 및 주소를 사용하여 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contract">서비스 끝점의 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</param>
      <param name="binding">서비스 끝점이 외부와 통신하는 방식을 지정하는 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
      <param name="address">서비스 끝점의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>서비스 끝점의 끝점 주소를 가져오거나 설정합니다.</summary>
      <returns>서비스 끝점의 위치를 지정하는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>서비스 끝점의 바인딩을 가져오거나 설정합니다.</summary>
      <returns>서비스 끝점의 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>서비스 끝점의 계약을 가져옵니다.</summary>
      <returns>서비스 끝점의 계약을 지정하는 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>서비스 끝점의 이름을 가져오거나 설정합니다.</summary>
      <returns>서비스 끝점의 이름입니다. 기본값은 바인딩 이름 및 계약 설명 이름의 연결입니다. 예를 들어 <see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>작업과 연결된 <see cref="T:System.Xml.Serialization.XmlSerializer" />의 런타임 동작을 제어합니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>클라이언트 개체 또는 클라이언트 채널 개체에서 특정 계약 작업의 실행 동작을 수정하거나 실행하는 데 사용됩니다. 이 클래스는 상속될 수 없습니다. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>지정된 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, 이름 및 동작 값을 사용하여 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="parent">포함하는 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 개체입니다.</param>
      <param name="name">작업의 이름입니다.</param>
      <param name="action">작업의 동작입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>지정된 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, 이름, 동작 및 회신 동작 값을 사용하여 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="parent">포함하는 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 개체입니다.</param>
      <param name="name">작업의 이름입니다.</param>
      <param name="action">작업의 동작입니다.</param>
      <param name="replyAction">회신 메시지의 동작입니다.</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> 또는 <paramref name="name" />가 null입니다.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>작업의 동작을 가져옵니다.</summary>
      <returns>작업의 동작입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>비동기 작업과 연결된 메서드를 가져오거나 설정합니다.</summary>
      <returns>비동기 메서드 쌍의 시작 부분을 처리하는 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" /> 개체이거나, 작업이 비동기 메서드 쌍에 속하지 않는 경우 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>
        <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 속성 값이 회신 메시지를 역직렬화하는 데 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>반환 형식이 <see cref="T:System.ServiceModel.Channels.Message" />가 아니면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>작업의 비동기 end 메서드를 구현하는 메서드를 가져오거나 설정합니다.</summary>
      <returns>작업의 end 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />이거나, 비동기 작업이 아닌 경우 null입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>개체를 메시지로 직렬화하고 메시지를 개체로 역직렬화하는 포맷터를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> 구현입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>이 작업에 대한 메시지를 통해 세션을 시작할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>이 작업에 대한 메시지를 통해 세션을 시작할 수 있으면 true이고, 그렇지 않으면 false입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>작업이 단방향 작업인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>WCF 클라이언트에 회신이 필요하지 않으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>이 작업이 세션의 마지막 작업인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>작업을 호출한 후 연결된 세션이 닫히면 true이고, 그렇지 않으면 false입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>작업의 이름을 가져옵니다.</summary>
      <returns>작업의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>포함하는 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 개체를 가져옵니다.</summary>
      <returns>포함하는 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>이 작업에 대한 회신 메시지의 동작을 가져옵니다.</summary>
      <returns>회신의 동작입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>
        <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 개체가 아웃바운드 메시지를 직렬화하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 속성이 반환 값을 회신 메시지로 직렬화하면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>이 작업과 연결된 메서드를 가져오거나 설정합니다.</summary>
      <returns>작업을 구현하는 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다. 비동기 작업인 경우 이 값은 null이고 구현하는 메서드가 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> 및 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" /> 속성에 저장됩니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>클라이언트 응용프로그램이 처리하는 모든 메시지에 대해 Windows Phone 클라이언트 개체의 기능을 확장하는 클래스의 삽입 지점입니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>클라이언트와 연결된 계약의 형식을 가져옵니다.</summary>
      <returns>이 클라이언트와 연결된 계약을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>클라이언트와 연결된 계약의 이름을 가져옵니다.</summary>
      <returns>이 클라이언트에 사용되는 계약 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>클라이언트와 연결된 계약의 네임스페이스를 가져옵니다.</summary>
      <returns>이 클라이언트와 연결된 계약의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>클라이언트가 요청-회신 메시지에 주소 지정 헤더를 추가하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>클라이언트가 주소 지정 헤더를 추가하지 않으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>최대 오류 메시지 크기를 가져오거나 설정합니다. </summary>
      <returns>최대 오류 크기입니다. 기본값은 64KB입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />을 선택하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 구현을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />을 선택하는 <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>
        <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> 컬렉션에 해당하는 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />이 없는 메서드에 대한 클라이언트 작업을 가져옵니다.</summary>
      <returns>작업 선택기로 메시지와 일치하는 작업을 찾을 수 없을 때 현재 메시지 내용이 라우팅되는 메서드를 나타내는 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>클라이언트를 통해 메시지를 보내는 데 사용되는 전송 주소를 가져오거나 설정합니다.</summary>
      <returns>전송 대상 주소인 <see cref="T:System.Uri" />입니다. 기본값은 클라이언트의 <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> 값입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>이 클래스는 현재 Windows Phone 릴리스에서 지원되지 않습니다. 호환성을 위해 제공됩니다.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>
        <see cref="T:System.ServiceModel.FaultContractAttribute" /> 특성에 지정된 SOAP 오류에 대한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>지정된 동작 및 세부 정보 형식을 사용하여 <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">SOAP 오류의 동작입니다.</param>
      <param name="detail">SOAP 오류 세부 정보로 직렬화되는 세부 정보 형식입니다.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>SOAP 오류 동작 값을 가져옵니다.</summary>
      <returns>SOAP 오류 동작 값입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>SOAP 오류 세부 정보로 직렬화되는 개체의 형식입니다.</summary>
      <returns>직렬화된 SOAP 오류 세부 정보를 나타내는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>클라이언트 응용프로그램에 대해 메시지를 개체로 변환하고 개체를 메시지로 변환하는 작업을 제어하는 데 사용되는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>메시지를 호출 작업으로 다시 전달되는 <paramref name="out" /> 매개 변수와 반환 값으로 변환합니다.</summary>
      <returns>작업의 반환 값입니다.</returns>
      <param name="message">인바운드 메시지입니다.</param>
      <param name="parameters">임의의 <paramref name="out" /> 값입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>
        <see cref="T:System.Object" /> 배열을 아웃바운드 <see cref="T:System.ServiceModel.Channels.Message" />로 변환합니다. </summary>
      <returns>서비스 작업에 전송되는 SOAP 메시지입니다.</returns>
      <param name="messageVersion">사용할 SOAP 메시지의 버전입니다.</param>
      <param name="parameters">XAML 클라이언트 응용프로그램에 전달되는 매개 변수입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>작업 선택기에 대한 계약을 정의합니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>선택 내용을 확인하는 데 매개 변수가 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>매개 변수가 필요하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>선택한 작업을 반환합니다.</summary>
      <returns>사용자 지정 작업 선택기에서 선택한 작업입니다.</returns>
      <param name="method">호출되는 메서드입니다.</param>
      <param name="parameters">메서드에 전달되는 매개 변수입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>응용프로그램에서 요청 메시지를 역직렬화하고 응답 메시지를 직렬화하는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>메시지를 매개 변수 배열로 역직렬화합니다.</summary>
      <param name="message">받는 메시지입니다.</param>
      <param name="parameters">작업에 매개 변수로 전달되는 개체의 배열입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>지정된 메시지 버전, 매개 변수 배열 및 반환 값에서 회신 메시지를 직렬화합니다.</summary>
      <returns>직렬화된 회신 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</returns>
      <param name="messageVersion">SOAP 메시지 버전입니다.</param>
      <param name="parameters">out 매개 변수의 배열입니다.</param>
      <param name="result">반환 값입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>메시지에 적용된 보안에 문제가 있을 때 발생하는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>
        <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>예외의 근본 원인인 내부 예외에 대한 참조 및 오류 메시지를 사용하여 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지입니다.</param>
      <param name="innerException">내부 예외 참조입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>보안 권한 부여 요청이 실패할 때 발생되는 보안 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 조건에 대한 설명입니다.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>지정된 메시지 및 내부 예외를 사용하여 <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 조건에 대한 설명입니다.</param>
      <param name="innerException">사용할 내부 예외입니다.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>사용자 이름 및 비밀번호를 기반으로 하는 클라이언트 자격 증명을 나타냅니다.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>비밀번호를 가져오거나 설정합니다.</summary>
      <returns>비밀번호입니다.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>사용자 이름을 가져오거나 설정합니다.</summary>
      <returns>사용자 이름입니다.</returns>
    </member>
  </members>
</doc>