<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Especifica el número de comprobaciones de entrada o de salida que realizan los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlWriter" /> creados.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>Los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlWriter" /> detectan automáticamente si se debe realizar la comprobación del documento o fragmento y lleva a cabo la comprobación correspondiente.En caso de que esté ajustando otro objeto <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlWriter" />, el objeto externo no lleva a cabo ninguna comprobación de conformidad adicional.La comprobación de conformidad se deja al objeto subyacente.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Los datos XML cumplen las reglas para crear un documento XML 1.0 con el formato correcto.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Los datos XML son un fragmento XML con el formato correcto.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Especifica las opciones para procesar DTD.La enumeración <see cref="T:System.Xml.DtdProcessing" /> se utiliza en <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Hace que se omita el elemento DOCTYPE.No se procesa ninguna DTD.Advertencia: el elemento DTD/DOCTYPE se perderá en la salida.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Se utiliza para analizar DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Especifica que cuando se encuentra una DTD, se produce una excepción <see cref="T:System.Xml.XmlException" /> con un mensaje en el que se indica que se prohíben las DTD.Este es el comportamiento predeterminado.</summary>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Proporciona una interfaz que permite a una clase devolver información de línea y de posición.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Obtiene un valor que indica si la clase puede devolver información de línea. </summary>
      <returns>Es true si se pueden proporcionar <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> y <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />; en caso contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Obtiene el número de línea actual.</summary>
      <returns>Número de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve false).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Obtiene la posición de línea actual.</summary>
      <returns>Posición de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve false).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Proporciona acceso de solo lectura a un conjunto de asignaciones de prefijos y espacios de nombres. </summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtiene una colección de asignaciones de prefijos y espacios de nombres que están actualmente en el ámbito.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.</returns>
      <param name="scope">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Obtiene el URI del espacio de nombres asignado al prefijo especificado.</summary>
      <returns>El espacio de nombres del URI que está asignado al prefijo; es null si el prefijo no está asignado a ningún espacio de nombres de URI.</returns>
      <param name="prefix">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Obtiene el prefijo asignado al URI del espacio de nombres especificado.</summary>
      <returns>Prefijo asignado al URI del espacio de nombres; es null si este URI no está asignado a ningún prefijo.</returns>
      <param name="namespaceName">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Especifica si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>El comportamiento predeterminado no quita las declaraciones de espacio de nombres duplicadas. </summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Quita las declaraciones de espacio de nombres duplicadas.Para poder quitar el espacio de nombres duplicado, el prefijo y el espacio de nombres deben coincidir.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implementa <see cref="T:System.Xml.XmlNameTable" /> de un único subproceso.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Inicializa una nueva instancia de la clase NameTable.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Subdivide la cadena especificada y la agrega a NameTable.</summary>
      <returns>Cadena subdividida o cadena existente si ya está en NameTable.Si <paramref name="len" /> es cero, se devuelve String.Empty.</returns>
      <param name="key">Matriz de caracteres que contiene la cadena que se va a agregar. </param>
      <param name="start">Índice de base cero de la matriz que especifica el primer carácter de la cadena. </param>
      <param name="len">Número de caracteres de la cadena. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />-O bien- <paramref name="start" /> &gt;= <paramref name="key" />.Length -O bien- <paramref name="len" /> &gt;= <paramref name="key" />.Length Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Subdivide la cadena especificada y la agrega a NameTable.</summary>
      <returns>Cadena subdividida o cadena existente si ya está en NameTable.</returns>
      <param name="key">Cadena que se va a agregar. </param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="key" /> es null. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</summary>
      <returns>Cadena subdividida o null si la cadena no se ha subdividido todavía.Si <paramref name="len" /> es cero, se devuelve String.Empty.</returns>
      <param name="key">Matriz de caracteres que contiene el nombre que se va a buscar. </param>
      <param name="start">Índice de base cero de la matriz que especifica el primer carácter del nombre. </param>
      <param name="len">Número de caracteres del nombre. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />-O bien- <paramref name="start" /> &gt;= <paramref name="key" />.Length -O bien- <paramref name="len" /> &gt;= <paramref name="key" />.Length Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Obtiene la cadena subdividida con el valor especificado.</summary>
      <returns>Objeto de cadena subdividida o null si la cadena no se ha subdividido todavía.</returns>
      <param name="value">Nombre que se va a buscar. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> es null.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Especifica cómo controlar los saltos de línea.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Los nuevos caracteres de la línea tienen entidades.Esta configuración conserva todos los caracteres cuando el resultado se lee mediante un <see cref="T:System.Xml.XmlReader" /> de normalización.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Los nuevos caracteres de línea no se modifican.El resultado es igual que la entrada.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Los nuevos caracteres de línea se reemplazan para coincidir con el carácter especificado en la propiedad <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Especifica el estado del lector.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>Se ha llamado al método <see cref="M:System.Xml.XmlReader.Close" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>Se ha llegado al final del archivo correctamente.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Se ha producido un error que impide que continúe la operación de lectura.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>No se ha llamado al método Read.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>Se ha llamado al método Read.Se puede llamar a otros métodos en el lector.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Especifica el estado de <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Se está escribiendo un valor de atributo. </summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Se ha llamado al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Se está escribiendo el contenido del elemento.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Se está escribiendo una etiqueta de apertura de elemento.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Se ha iniciado una excepción que ha dejado <see cref="T:System.Xml.XmlWriter" /> en un estado no válido.Puede llamar al método <see cref="M:System.Xml.XmlWriter.Close" /> para poner <see cref="T:System.Xml.XmlWriter" /> en el estado <see cref="F:System.Xml.WriteState.Closed" />.Cualquier otra llamada al método <see cref="T:System.Xml.XmlWriter" /> producirá una excepción <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Se está escribiendo el prólogo.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>No se ha llamado al método Write.</summary>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Codifica y descodifica nombres XML y proporciona métodos de conversión entre tipos de Common Language Runtime.Cuando se convierten tipos de datos, los valores devueltos no dependen de la configuración regional.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlConvert" />. </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Descodifica un nombre.Este método hace lo contrario que los métodos <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> y <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <returns>Nombre descodificado.</returns>
      <param name="name">Nombre que se va a transformar. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Convierte el nombre en un nombre XML local válido.</summary>
      <returns>Nombre codificado.</returns>
      <param name="name">Nombre que se va a codificar. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Convierte el nombre en un nombre XML válido.</summary>
      <returns>Devuelve el nombre con los caracteres no válidos sustituidos por una cadena de escape.</returns>
      <param name="name">Nombre que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Comprueba que el nombre es válido de acuerdo con la especificación XML.</summary>
      <returns>Nombre codificado.</returns>
      <param name="name">Nombre que se va a codificar. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un tipo Name Character válido.</summary>
      <returns>true si el carácter es un tipo Name Character válido; de lo contrario, false.</returns>
      <param name="ch">Carácter que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Compruebe si el carácter pasado es un carácter PUBLIC ID válido.</summary>
      <returns>true si el carácter pasado es un carácter PUBLIC ID válido; de lo contrario, false.</returns>
      <param name="ch">Carácter que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un tipo Start Name Character válido.</summary>
      <returns>true si el carácter es un tipo Start Name Character válido; de lo contrario, false.</returns>
      <param name="ch">Carácter que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un carácter de espacio en blanco XML válido.</summary>
      <returns>true si el carácter pasado es un carácter de espacio en blanco XML válido; de lo contrario, false.</returns>
      <param name="ch">Carácter que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un carácter XML válido.</summary>
      <returns>true si el carácter pasado es un carácter XML válido; de lo contrario, false.</returns>
      <param name="ch">Carácter que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Comprueba si el par de caracteres suplente que se ha pasado es carácter XML válido.</summary>
      <returns>true si el par de caracteres suplente que se ha pasado es un carácter XML válido; de lo contrario, false.</returns>
      <param name="lowChar">Carácter suplente que se va a validar.</param>
      <param name="highChar">Carácter suplente que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Boolean" /> equivalente.</summary>
      <returns>Valor Boolean; es decir, true o false.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no representa un valor Boolean. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Byte" /> equivalente.</summary>
      <returns>Valor Byte equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Byte.MinValue" /> o mayor que <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Char" /> equivalente.</summary>
      <returns>Char que representa el carácter único.</returns>
      <param name="s">Cadena que contiene un carácter único que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">El parámetro <paramref name="s" /> contiene más de un carácter. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.DateTime" /> equivalente.</summary>
      <returns>DateTime equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <param name="format">Estructura de formato que se va a aplicar al valor DateTime convertido.Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.La cadena se valida comparándola con este formato.</param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o <paramref name="format" /> es String.Empty -O bien- <paramref name="s" /> no contiene ninguna fecha ni hora que se correspondan con <paramref name="format" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.DateTime" /> equivalente.</summary>
      <returns>DateTime equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <param name="formats">Matriz que contiene las estructuras de formato que se van a aplicar al valor DateTime convertido.Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o un elemento de <paramref name="formats" /> es String.Empty -O bien- <paramref name="s" /> no contiene una fecha y hora que se correspondan con ninguno de los elementos de <paramref name="formats" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.DateTime" /> mediante el modo <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <returns>Valor <see cref="T:System.DateTime" /> equivalente de <see cref="T:System.String" />.</returns>
      <param name="s">Valor <see cref="T:System.String" /> que se va a convertir.</param>
      <param name="dateTimeOption">Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifican si la fecha se debe pasar a la hora local o mantenerse como hora universal coordinada (UTC), si se trata de una fecha de UTC.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="dateTimeOption" /> es null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> es una cadena vacía o su formato no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
      <param name="s">Cadena que va a convertirse.Nota   La cadena debe ajustarse a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.Para obtener más información, consulte XML Schema Part 2: Datatypes. Datatypes.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El argumento pasado a este método está fuera del intervalo de valores permitidos.Para obtener información sobre los valores permitidos, vea <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">El argumento pasado a este método no se ajusta a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.Para obtener más información, consulte XML Schema Part 2: Datatypes.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
      <param name="s">Cadena que va a convertirse.</param>
      <param name="format">Formato desde el que se convierte <paramref name="s" />.El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.Para obtener más información, consulte XML Schema Part 2: Datatypes. Datatypes.La cadena <paramref name="s" /> se valida comparándola con este formato.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o <paramref name="format" /> es una cadena vacía o no tiene el formato especificado.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
      <param name="s">Cadena que va a convertirse.</param>
      <param name="formats">Matriz de formatos a partir de los cuales puede convertirse <paramref name="s" />.Cada formato de <paramref name="formats" /> puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.Para obtener más información, consulte XML Schema Part 2: Datatypes. Datatypes.La cadena <paramref name="s" /> se valida comparándola con uno de estos formatos.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Decimal" /> equivalente.</summary>
      <returns>Valor Decimal equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Decimal.MinValue" /> o mayor que <see cref="F:System.Decimal.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Double" /> equivalente.</summary>
      <returns>Valor de tipo Double equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Double.MinValue" /> o mayor que <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Guid" /> equivalente.</summary>
      <returns>Identificador único global (GUID) equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Int16" /> equivalente.</summary>
      <returns>Valor Int16 equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int16.MinValue" /> o mayor que <see cref="F:System.Int16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Int32" /> equivalente.</summary>
      <returns>Valor Int32 equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int32.MinValue" /> o mayor que <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Int64" /> equivalente.</summary>
      <returns>Valor Int64 equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int64.MinValue" /> o mayor que <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.SByte" /> equivalente.</summary>
      <returns>Valor SByte equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.SByte.MinValue" /> o mayor que <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Single" /> equivalente.</summary>
      <returns>Valor Single equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Single.MinValue" /> o mayor que <see cref="F:System.Single.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Convierte <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación de cadena de Boolean, es decir, "true" o "false".</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Convierte <see cref="T:System.Char" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación de cadena de Char.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" /> mediante el modo <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <returns>Valor <see cref="T:System.String" /> equivalente de <see cref="T:System.DateTime" />.</returns>
      <param name="value">Valor <see cref="T:System.DateTime" /> que se va a convertir.</param>
      <param name="dateTimeOption">Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifica cómo tratar el valor <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="dateTimeOption" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> o <paramref name="dateTimeOption" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Convierte el objeto <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" />.</summary>
      <returns>Representación de tipo <see cref="T:System.String" /> del objeto <see cref="T:System.DateTimeOffset" /> proporcionado.</returns>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> que se va a convertir.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Convierte el objeto <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" /> con el formato especificado.</summary>
      <returns>Representación <see cref="T:System.String" /> con el formato especificado del objeto <see cref="T:System.DateTimeOffset" /> proporcionado.</returns>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> que se va a convertir.</param>
      <param name="format">Formato al que se convierte <paramref name="s" />.El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.Para obtener más información, consulte XML Schema Part 2: Datatypes. Datatypes.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Convierte <see cref="T:System.Decimal" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor Decimal.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Convierte <see cref="T:System.Double" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor tipo Double.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Convierte <see cref="T:System.Guid" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor Guid.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Convierte <see cref="T:System.Int16" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor Int16.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Convierte <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor Int32.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Convierte <see cref="T:System.Int64" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor Int64.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Convierte <see cref="T:System.SByte" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor SByte.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Convierte <see cref="T:System.Single" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor Single.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Convierte <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor TimeSpan.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Convierte <see cref="T:System.UInt32" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor UInt32.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Convierte <see cref="T:System.UInt64" /> en <see cref="T:System.String" />.</summary>
      <returns>Representación en forma de cadena del valor UInt32.</returns>
      <param name="value">Valor que se va a convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.TimeSpan" /> equivalente.</summary>
      <returns>Valor de tipo TimeSpan equivalente de la cadena.</returns>
      <param name="s">Cadena que va a convertirse.El formato de la cadena debe ser conforme con la recomendación W3C XML Schema Part 2: Datatypes recommendation for duration.</param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto para representar un valor TimeSpan. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.UInt16" /> equivalente.</summary>
      <returns>Valor UInt16 equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt16.MinValue" /> o mayor que <see cref="F:System.UInt16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.UInt32" /> equivalente.</summary>
      <returns>Valor UInt32 equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt32.MinValue" /> o mayor que <see cref="F:System.UInt32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.UInt64" /> equivalente.</summary>
      <returns>Valor UInt64 equivalente de la cadena.</returns>
      <param name="s">Cadena que se va a convertir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="s" /> es null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt64.MinValue" /> o mayor que <see cref="F:System.UInt64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Comprueba que el nombre es válido de acuerdo con la recomendación Extended Markup Language del Consorcio W3C.</summary>
      <returns>Nombre, si es un nombre XML válido.</returns>
      <param name="name">Nombre que se va a comprobar. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> no es un nombre XML válido. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null o String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Comprueba que el nombre es un nombre NCName válido de acuerdo con la recomendación Extended Markup Language del Consorcio W3C.</summary>
      <returns>Nombre, si es un nombre NCName válido.</returns>
      <param name="name">Nombre que se va a comprobar. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null o String.Empty. </exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> no es un NCName válido. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Comprueba que la cadena es un NMTOKEN válido según la recomendación "Part2: Datatypes" (en inglés) del esquema XML del Consorcio W3C </summary>
      <returns>Nombre del símbolo (token), si es un NMTOKEN.</returns>
      <param name="name">La cadena que desea comprobar.</param>
      <exception cref="T:System.Xml.XmlException">La cadena no es un símbolo (token) de nombre válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Comprueba si todos los caracteres de un argumento de la cadena son caracteres PUBLIC ID válidos.</summary>
      <returns>Instancia de la cadena pasada si todos los caracteres de un argumento de la cadena son caracteres PUBLIC ID válidos.</returns>
      <param name="publicId">Cadena que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Comprueba si todos los caracteres de un argumento de la cadena son caracteres de espacio en blanco válidos. </summary>
      <returns>Instancia de la cadena pasada si todos los caracteres de un argumento de la cadena son caracteres de espacio en blanco válidos.</returns>
      <param name="content">Cadena que se va a validar.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Comprueba si todos los caracteres y pares de caracteres suplentes de una cadena que se ha pasado son caracteres XML válidos.</summary>
      <returns>La instancia de la cadena pasada si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos.</returns>
      <param name="content">Cadena que se va a validar.</param>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Especifica cómo tratar el valor de tiempo al realizar una conversión entre una cadena y <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Se trata como hora local.Si el objeto <see cref="T:System.DateTime" /> representa la hora universal coordinada (UTC), se convierte a la hora local.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>La información de la zona horaria se debe conservar al realizar la conversión.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Se trata como hora local si <see cref="T:System.DateTime" /> se convierte en cadena.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Se trata como UTC.Si el objeto <see cref="T:System.DateTime" /> representa una hora local, se convierte en UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Devuelve información detallada sobre la última excepción. </summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Inicializa una nueva instancia de la clase XmlException.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase XmlException con un mensaje de error especificado.</summary>
      <param name="message">Descripción de error. </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase XmlException.</summary>
      <param name="message">Descripción de la condición de error. </param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que inició XmlException, en caso de que exista.Este valor puede ser null.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase XmlException con el mensaje, la excepción interna, el número de línea y la posición de línea especificados.</summary>
      <param name="message">Descripción de error. </param>
      <param name="innerException">Excepción que es la causa de la excepción actual.Este valor puede ser null.</param>
      <param name="lineNumber">Número de línea que indica dónde se produjo el error. </param>
      <param name="linePosition">Posición de línea que indica dónde se produjo el error. </param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Obtiene el número de línea que indica dónde se produjo el error.</summary>
      <returns>Número de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Obtiene la posición de línea que indica dónde se produjo el error.</summary>
      <returns>Posición de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Obtiene un mensaje que describe la excepción actual.</summary>
      <returns>Mensaje de error que explica la razón de la excepción.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Obtiene la ubicación del archivo XML.</summary>
      <returns>Identificador URI de origen de los datos XML.Si no hay ningún URI de origen, esta propiedad devuelve null.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Resuelve, agrega y quita espacios de nombres en una colección y proporciona la administración del ámbito de estos espacios de nombres. </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNamespaceManager" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar. </param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="nameTable" /> es null. </exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Agrega el espacio de nombres especificado a la colección.</summary>
      <param name="prefix">Prefijo que se va a asociar al espacio de nombres que se agrega.Utilice String.Empty para agregar un espacio de nombres predeterminado.</param>
      <param name="uri">Espacio de nombres que se va a agregar. </param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="prefix" /> es "xml" o "xmlns". </exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="prefix" /> o <paramref name="uri" /> es null. </exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Obtiene el identificador URI de espacio de nombres del espacio de nombres predeterminado.</summary>
      <returns>Devuelve el identificador URI de espacio de nombres del espacio de nombres predeterminado, o String.Empty si no hay espacio de nombres predeterminado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Devuelve un enumerador que se utilizará para recorrer en iteración los espacios de nombres de <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que contiene los prefijos almacenados por <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtiene una colección de nombres de espacios de nombres por clave de prefijo que se puede utilizar para enumerar los espacios de nombres que actualmente se encuentran en el ámbito.</summary>
      <returns>Colección de nombres de espacios de nombres por clave de prefijo que se puede utilizar para enumerar los espacios de nombres que actualmente se encuentran en el ámbito.</returns>
      <param name="scope">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Obtiene un valor que indica si el prefijo proporcionado tiene un espacio de nombres definido para el ámbito que se ha insertado.</summary>
      <returns>Es true si se ha definido un espacio de nombres; en caso contrario, es false.</returns>
      <param name="prefix">Prefijo del espacio de nombres que se desea buscar. </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Obtiene el identificador URI de espacio de nombres del prefijo especificado.</summary>
      <returns>Devuelve el identificador URI de espacio de nombres de <paramref name="prefix" /> o null si no se ha asignado un espacio de nombres.La cadena devuelta está subdividida.Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.</returns>
      <param name="prefix">Prefijo cuyo URI de espacio de nombres se desea resolver.Para hacer coincidir el espacio de nombres predeterminado, pase String.Empty.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Busca el prefijo declarado para el identificador URI de espacio de nombres especificado.</summary>
      <returns>Prefijo que coincide.Si no hay ningún prefijo asignado, el método devuelve String.Empty.Si se proporciona un valor nulo, se devuelve null.</returns>
      <param name="uri">Espacio de nombres que se va a resolver para el prefijo. </param>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Obtiene la <see cref="T:System.Xml.XmlNameTable" /> asociada a este objeto.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" /> que utiliza este objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Extrae un ámbito de espacio de nombres de la pila.</summary>
      <returns>Es true si quedan ámbitos de espacio de nombres en la pila; es false si no quedan espacios de nombres para extraer.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Inserta un ámbito de espacio de nombres en la pila.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Quita el espacio de nombres dado del prefijo especificado.</summary>
      <param name="prefix">Prefijo del espacio de nombres. </param>
      <param name="uri">Espacio de nombres que se va a quitar del prefijo especificado.El espacio de nombres quitado pertenece al ámbito de espacio de nombres actual.Los espacios de nombres que no pertenecen al ámbito actual no se tienen en cuenta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="prefix" /> o <paramref name="uri" /> es null. </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Define el ámbito del espacio de nombres. </summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Todos los espacios de nombres definidos en el ámbito del nodo actual.Entre estos se incluye el espacio de nombres xmlns:xml, que siempre se declara de manera implícita.No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Todos los espacios de nombres definidos en el ámbito del nodo actual, salvo el espacio de nombres xmlns:xml, que siempre se declara implícitamente.No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Todos los espacios de nombres definidos localmente en el nodo actual.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Tabla de objetos en forma de cadena subdividida.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNameTable" />. </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a XmlNameTable.</summary>
      <returns>Cadena subdividida nueva o cadena existente si ya hay una.Si la longitud es cero, se devuelve String.Empty.</returns>
      <param name="array">Matriz de caracteres que contiene el nombre que se va a agregar. </param>
      <param name="offset">Índice de base cero de la matriz que especifica el primer carácter del nombre. </param>
      <param name="length">Número de caracteres del nombre. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />-O bien- <paramref name="offset" /> &gt;= <paramref name="array" />.Length -O bien- <paramref name="length" /> &gt; <paramref name="array" /> .Length Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0. </exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a XmlNameTable.</summary>
      <returns>Cadena subdividida nueva o cadena existente si ya hay una.</returns>
      <param name="array">Nombre que se va a agregar. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, se obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</summary>
      <returns>Cadena subdividida o null si la cadena no se ha subdividido todavía.Si <paramref name="length" /> es cero, se devuelve String.Empty.</returns>
      <param name="array">Matriz de caracteres que contiene el nombre que se va a buscar. </param>
      <param name="offset">Índice de base cero de la matriz que especifica el primer carácter del nombre. </param>
      <param name="length">Número de caracteres del nombre. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />-O bien- <paramref name="offset" /> &gt;= <paramref name="array" />.Length -O bien- <paramref name="length" /> &gt; <paramref name="array" /> .Length Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0. </exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene la cadena subdividida que contiene el mismo valor que la cadena especificada.</summary>
      <returns>Cadena subdividida o null si la cadena no se ha subdividido todavía.</returns>
      <param name="array">Nombre que se va a buscar. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es null. </exception>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Especifica el tipo de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Atributo (por ejemplo, id='123').</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Sección CDATA (por ejemplo, &lt;![CDATA[my escaped text]]&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Comentario (por ejemplo, &lt;!-- my comment --&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Objeto de documento que, como raíz del árbol de documentos, proporciona acceso a todo el documento XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Fragmento de documento.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>declaración de tipos de documento, indicada por la siguiente etiqueta (por ejemplo, &lt;!DOCTYPE...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Elemento (por ejemplo, &lt;item&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Etiqueta de elemento final (por ejemplo, &lt;/item&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Se devuelve cuando XmlReader alcanza el final del reemplazo de entidad como resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Declaración de entidad (por ejemplo, &lt;!ENTITY...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Referencia a una entidad (por ejemplo, &amp;num;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> devuelve este valor si no se ha llamado al método Read.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Notación en la declaración de tipos de documento (por ejemplo, &lt;!NOTATION...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Instrucción de procesamiento (por ejemplo, &lt;?pi test?&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Espacio en blanco entre marcas en un modelo de contenido mixto o espacio en blanco dentro del ámbito de xml:space="preserve".</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Contenido de texto de un nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Espacio en blanco entre marcas.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Declaración XML (por ejemplo, &lt;?xml version='1.0'?&gt;).</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Proporciona toda la información de contexto que necesita el objeto <see cref="T:System.Xml.XmlReader" /> para analizar un fragmento de XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, xml:lang, xml:space y tipo de documento especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas.Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />.Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. </param>
      <param name="docTypeName">Nombre de la declaración de tipos de documento. </param>
      <param name="pubId">Identificador público. </param>
      <param name="sysId">Identificador de sistema. </param>
      <param name="internalSubset">Subconjunto DTD interno. </param>
      <param name="baseURI">Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento). </param>
      <param name="xmlLang">Ámbito de xml:lang. </param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, xml:lang, xml:space, codificación y tipo de documento especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas.Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />.Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. </param>
      <param name="docTypeName">Nombre de la declaración de tipos de documento. </param>
      <param name="pubId">Identificador público. </param>
      <param name="sysId">Identificador de sistema. </param>
      <param name="internalSubset">Subconjunto DTD interno. </param>
      <param name="baseURI">Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento). </param>
      <param name="xmlLang">Ámbito de xml:lang. </param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. </param>
      <param name="enc">Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, xml:lang, xml:space especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas.Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />.Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. </param>
      <param name="xmlLang">Ámbito de xml:lang. </param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, xml:lang, xml:space y codificación especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas.Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />.Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. </param>
      <param name="xmlLang">Ámbito de xml:lang. </param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. </param>
      <param name="enc">Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. </exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Obtiene o establece el identificador URI base.</summary>
      <returns>Identificador URI base para resolver el archivo DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Obtiene o establece el nombre de la declaración de tipos de documento.</summary>
      <returns>Nombre de la declaración de tipos de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Obtiene o establece el tipo de codificación.</summary>
      <returns>Objeto <see cref="T:System.Text.Encoding" /> que indica el tipo de codificación.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Obtiene o establece el subconjunto DTD interno.</summary>
      <returns>Subconjunto DTD interno.Por ejemplo, esta propiedad devuelve todo lo que se encuentra entre los corchetes &lt;!DOCTYPE doc [...]&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Obtiene o establece <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>XmlNamespaceManager.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas.Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>XmlNameTable.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Obtiene o establece el identificador público.</summary>
      <returns>Identificador público.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Obtiene o establece el identificador de sistema.</summary>
      <returns>Identificador de sistema.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Obtiene o establece el ámbito de xml:lang actual.</summary>
      <returns>Ámbito de xml:lang actual.Si en el ámbito no hay ningún xml:lang, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Obtiene o establece el ámbito de xml:space actual.</summary>
      <returns>Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space.</returns>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Representa un nombre XML completo.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre especificado.</summary>
      <param name="name">Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre y el espacio de nombres especificados.</summary>
      <param name="name">Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />. </param>
      <param name="ns">Espacio de nombres para el objeto <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Proporciona un <see cref="T:System.Xml.XmlQualifiedName" /> vacío.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Xml.XmlQualifiedName" /> especificado es igual al objeto <see cref="T:System.Xml.XmlQualifiedName" /> actual. </summary>
      <returns>Es true si los dos son un objeto de la misma instancia; en caso contrario, es false.</returns>
      <param name="other">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va comparar. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Devuelve el código hash de la estructura <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Código hash de este objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Xml.XmlQualifiedName" /> está vacío.</summary>
      <returns>true si el nombre y el espacio de nombres corresponden a cadenas vacías; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Obtiene una representación de cadena del nombre calificado de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Representación de cadena del nombre completo o de String.Empty si no hay un nombre que esté definido para el objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Obtiene una representación de cadena del espacio de nombres de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Representación de cadena del espacio de nombres o de String.Empty si no hay un espacio de nombres que esté definido para el objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Es true si los dos objetos tienen los mismos valores de nombre y de espacio de nombres; en caso contrario, es false.</returns>
      <param name="a">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. </param>
      <param name="b">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Es true si los valores de nombre y de espacio de nombres de los dos objetos se diferencian en algo; en caso contrario, es false.</returns>
      <param name="a">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. </param>
      <param name="b">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de namespace:localname.Si el objeto no tiene un espacio de nombres definido, el método solo devuelve el nombre local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de namespace:localname.Si el objeto no tiene un espacio de nombres definido, el método solo devuelve el nombre local.</returns>
      <param name="name">El nombre del objeto. </param>
      <param name="ns">Espacio de nombres del objeto. </param>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento solo hacia delante.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Inicializa una nueva instancia de la clase XmlReader.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>Cuando se invalida en una clase derivada, obtiene el número de atributos en el nodo actual.</summary>
      <returns>Número de atributos del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>Cuando se invalida en una clase derivada, obtiene el identificador URI base del nodo actual.</summary>
      <returns>Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns>Es true si se implementan los métodos de lectura de contenido binario; en caso contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />. </summary>
      <returns>true si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns>Es true si el lector puede analizar y resolver entidades; en caso contrario, es false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>Cuando se invalida en una clase derivada, cambia <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante la secuencia especificada.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> utilizado para leer los datos que contiene la secuencia. </returns>
      <param name="input">Secuencia que contiene los datos XML. <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación.Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="input" /> es null.</exception>
      <exception cref="T:System.Security.SecurityException">El <see cref="T:System.Xml.XmlReader" /> no tiene los permisos suficientes para tener acceso a la ubicación de los datos XML.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con la secuencia y el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">Secuencia que contiene los datos XML. <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación.Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> utilizando la secuencia, el URI base y el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">Secuencia que contiene los datos XML. <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación.Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <param name="baseUri">URI base de la entidad o documento que se lee.Este valor puede ser null.Nota sobre seguridad   El URI base se utiliza para resolver el URI relativo del documento XML.No utilice un URI base de un origen que no sea de confianza.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="input" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante la secuencia especificada y los objetos <see cref="T:System.Xml.XmlReaderSettings" /> y <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">Secuencia que contiene los datos XML. <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación.Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <param name="inputContext">Objeto <see cref="T:System.Xml.XmlParserContext" /> que proporciona la información de contexto necesaria para analizar el fragmento XML.La información de contexto puede incluir el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el xml:lang actual y el ámbito de xml:space, el URI base y la definición de tipo de documento.Este valor puede ser null.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="input" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML.Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="input" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con los objetos <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlReaderSettings" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML.Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar el flujo de datos</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar el nuevo <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante los objetos <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlReaderSettings" /> especificados y el URI base.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML.Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <param name="baseUri">URI base de la entidad o documento que se lee.Este valor puede ser null.Nota sobre seguridad   El URI base se utiliza para resolver el URI relativo del documento XML.No utilice un URI base de un origen que no sea de confianza.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="input" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante los objetos <see cref="T:System.IO.TextReader" />, <see cref="T:System.Xml.XmlReaderSettings" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML.Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <param name="inputContext">Objeto <see cref="T:System.Xml.XmlParserContext" /> que proporciona la información de contexto necesaria para analizar el fragmento XML.La información de contexto puede incluir el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el xml:lang actual y el ámbito de xml:space, el URI base y la definición de tipo de documento.Este valor puede ser null.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="input" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ambas propiedades <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> y <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores.Solo se puede establecer y utilizar una de estas propiedades NameTable.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el URI especificado.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML. </returns>
      <param name="inputUri">URI del archivo que contiene los datos XML.La clase <see cref="T:System.Xml.XmlXapResolver" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos.Para obtener más información, vea la sección Comentarios que figura a continuación.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="inputUri" /> es null.</exception>
      <exception cref="T:System.Security.SecurityException">El <see cref="T:System.Xml.XmlReader" /> no tiene los permisos suficientes para tener acceso a la ubicación de los datos XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo que identifica el URI no existe.</exception>
      <exception cref="T:System.UriFormatException">El formato del URI no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia con el URI y <see cref="T:System.Xml.XmlReaderSettings" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="inputUri">URI del archivo que contiene los datos XML.El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos.Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es null, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlXapResolver" />.Para obtener más información, vea la sección Comentarios que figura a continuación.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="inputUri" /> es null.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por el URI.</exception>
      <exception cref="T:System.UriFormatException">El formato del URI no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante el URI y los objetos <see cref="T:System.Xml.XmlReaderSettings" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.</returns>
      <param name="inputUri">URI del archivo que contiene los datos XML.El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos.Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es null, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlXapResolver" />.Para obtener más información, vea la sección Comentarios que figura a continuación.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.Este valor puede ser null.</param>
      <param name="inputContext">Objeto <see cref="T:System.Xml.XmlParserContext" /> que proporciona la información de contexto necesaria para analizar el fragmento XML.La información de contexto puede incluir el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el xml:lang actual y el ámbito de xml:space, el URI base y la definición de tipo de documento.Este valor puede ser null.</param>
      <exception cref="T:System.NullReferenceException">El valor de inputUri es null.</exception>
      <exception cref="T:System.Security.SecurityException">El <see cref="T:System.Xml.XmlReader" /> no tiene los permisos suficientes para tener acceso a la ubicación de los datos XML.</exception>
      <exception cref="T:System.ArgumentException">Ambas propiedades <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> y <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores.Solo se puede establecer y utilizar una de estas propiedades NameTable.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por el URI.</exception>
      <exception cref="T:System.UriFormatException">El formato del URI no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlReaderSettings" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que desea utilizar como lector subyacente.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.El nivel de conformidad del objeto <see cref="T:System.Xml.XmlReaderSettings" /> debe coincidir con el del lector subyacente o establecerse en <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="reader" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">Si el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especifica un nivel de conformidad que no es coherente con el nivel de conformidad del lector subyacente.-O bien-El <see cref="T:System.Xml.XmlReader" /> subyacente está en un estado de <see cref="F:System.Xml.ReadState.Error" /> o <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>Cuando se invalida en una clase derivada, obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns>Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por <see cref="T:System.Xml.XmlReader" /> y, de forma opcional, también los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el lector está situado al final de la secuencia.</summary>
      <returns>Es true si el lector está situado al final de la secuencia; en caso contrario, es false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con el índice especificado.</summary>
      <returns>Valor del atributo especificado.Este método no desplaza el lector.</returns>
      <param name="i">Índice del atributo.El índice es de base cero.El primer atributo tiene índice 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> está fuera del intervalo.Debe ser un número no negativo y menor que el tamaño de la colección de atributos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <returns>Valor del atributo especificado.Si no se encuentra el atributo o el valor es String.Empty, se devuelve null.</returns>
      <param name="name">Nombre completo del atributo. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <returns>Valor del atributo especificado.Si no se encuentra el atributo o el valor es String.Empty, se devuelve null.Este método no desplaza el lector.</returns>
      <param name="name">Nombre local del atributo. </param>
      <param name="namespaceURI">URI de espacio de nombres del atributo. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Obtiene de forma asincrónica el valor del nodo actual.</summary>
      <returns>Valor del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Obtiene un valor que indica si el nodo actual tiene atributos.</summary>
      <returns>Es true si el nodo actual tiene atributos; en caso contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>Es true si el nodo en el que está situado actualmente el lector puede tener un Value; en caso contrario, es false.Si es false, el nodo tiene un valor de String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la DTD.</summary>
      <returns>Es true si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD; es false si el valor de atributo se estableció explícitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, &lt;MyElement/&gt;).</summary>
      <returns>Es true si el nodo actual es un elemento (<see cref="P:System.Xml.XmlReader.NodeType" /> es igual a XmlNodeType.Element) que termina en /&gt;; en caso contrario, es false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Obtiene un valor que indica si el argumento de cadena es un nombre XML válido.</summary>
      <returns>Es true si el nombre es válido; en caso contrario, es false.</returns>
      <param name="str">Nombre que se va a validar. </param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="str" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Obtiene un valor que indica si el argumento de cadena es un token de nombre XML válido.</summary>
      <returns>Es true si es un token de nombre válido; en caso contrario, es false.</returns>
      <param name="str">Token de nombre que se va a validar. </param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="str" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío.</summary>
      <returns>Es true si <see cref="M:System.Xml.XmlReader.MoveToContent" /> encuentra una etiqueta de apertura o una etiqueta de elemento vacío; es false si se encuentra un tipo de nodo que no sea XmlNodeType.Element.</returns>
      <exception cref="T:System.Xml.XmlException">Se detecta XML incorrecto en el flujo de entrada. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con el argumento especificado.</summary>
      <returns>true si el nodo resultante es un elemento y la propiedad Name coincide con la cadena especificada.false si se encuentra un tipo de nodo que no es XmlNodeType.Element o la propiedad Name del elemento no coincide con la cadena especificada.</returns>
      <param name="name">Cadena que se compara con la propiedad Name del elemento encontrado. </param>
      <exception cref="T:System.Xml.XmlException">Se detecta XML incorrecto en el flujo de entrada. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas.</summary>
      <returns>true si el nodo resultante es un elemento.false si se encuentra un tipo de nodo que no es XmlNodeType.Element o si las propiedades LocalName yNamespaceURI del elemento no coinciden con las cadenas especificadas.</returns>
      <param name="localname">Cadena con la que se compara la propiedad LocalName del elemento encontrado. </param>
      <param name="ns">Cadena con la que se compara la propiedad NamespaceURI del elemento encontrado. </param>
      <exception cref="T:System.Xml.XmlException">Se detecta XML incorrecto en el flujo de entrada. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con el índice especificado.</summary>
      <returns>Valor del atributo especificado.</returns>
      <param name="i">Índice del atributo. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <returns>Valor del atributo especificado.Si no se encuentra el atributo, se devuelve null.</returns>
      <param name="name">Nombre completo del atributo. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <returns>Valor del atributo especificado.Si no se encuentra el atributo, se devuelve null.</returns>
      <param name="name">Nombre local del atributo. </param>
      <param name="namespaceURI">URI de espacio de nombres del atributo. </param>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre local del nodo actual.</summary>
      <returns>Nombre del nodo actual sin prefijo.Por ejemplo, LocalName es book para el elemento &lt;bk:book&gt;.Para los tipos de nodo sin nombre (por ejemplo, Text, Comment, etc.), esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>Cuando se invalida en una clase derivada, resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o null si no se encuentra ningún prefijo coincidente.</returns>
      <param name="prefix">Prefijo cuyo URI de espacio de nombres se desea resolver.Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía.</param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, se desplaza al atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo. </param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="i" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>Cuando se reemplaza en una clase derivada, se desplaza al atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <returns>true si se encuentra una cadena; de lo contrario, false.Si es false, no cambia la posición del lector.</returns>
      <param name="name">Nombre completo del atributo. </param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, se desplaza al atributo con la propiedad <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificada.</summary>
      <returns>true si se encuentra una cadena; de lo contrario, false.Si es false, no cambia la posición del lector.</returns>
      <param name="name">Nombre local del atributo. </param>
      <param name="ns">URI de espacio de nombres del atributo. </param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Comprueba si el nodo actual es un nodo de contenido (texto sin espacios en blanco, CDATA, Element, EndElement, EntityReference o EndEntity).Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo.Omite los siguientes tipos de nodo: ProcessingInstruction, DocumentType, Comment, Whitespace o SignificantWhitespace.</summary>
      <returns>
        <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o XmlNodeType.None si el lector ha alcanzado el final del flujo de entrada.</returns>
      <exception cref="T:System.Xml.XmlException">Se encuentra XML incorrecto en el flujo de entrada. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>Prueba de forma asincrónica que el nodo actual es un nodo de contenido.Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo.</summary>
      <returns>
        <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o XmlNodeType.None si el lector ha alcanzado el final del flujo de entrada.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>Cuando se invalida en una clase derivada, se desplaza al elemento que contiene el nodo de atributo actual.</summary>
      <returns>Es true si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es false si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>Cuando se invalida en una clase derivada, se desplaza hasta el primer atributo.</summary>
      <returns>Es true si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es false (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>Cuando se invalida en una clase derivada, se desplaza hasta el siguiente atributo.</summary>
      <returns>Es true si hay siguiente atributo; es false si no hay más atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo actual.</summary>
      <returns>Nombre completo del nodo actual.Por ejemplo, Name es bk:book para el elemento &lt;bk:book&gt;.El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo.Los siguientes tipos de nodo devuelven los valores que figuran en la lista.Todos los demás tipos de nodo devuelven una cadena vacía.Tipo de nodo Name AttributeNombre del atributo. DocumentTypeNombre del tipo de documento. ElementNombre de la etiqueta. EntityReferenceNombre de la entidad a la que se hace referencia. ProcessingInstructionDestino de la instrucción de procesamiento. XmlDeclarationCadena literal xml. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>Cuando se invalida en una clase derivada, obtiene el identificador URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <returns>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que está asociado a esta implementación.</summary>
      <returns>XmlNameTable que permite obtener la versión subdividida de una cadena en el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>Cuando se invalida en una clase derivada, obtiene el tipo del nodo actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>Cuando se invalida en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns>Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>Cuando se invalida en una clase derivada, lee el siguiente nodo de la secuencia.</summary>
      <returns>true si se lee correctamente el siguiente nodo; false si no hay más nodos para leer.</returns>
      <exception cref="T:System.Xml.XmlException">Se ha producido un error al analizar el fragmento de XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Lee de forma asincrónica el siguiente nodo de la secuencia.</summary>
      <returns>true si se lee correctamente el siguiente nodo; false si no hay más nodos para leer.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>Cuando se invalida en una clase derivada, analiza el valor de atributo en uno o varios nodos Text, EntityReference o EndEntity.</summary>
      <returns>Es true si hay nodos para devolver.Es false si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se han leído todos los valores de atributo.Un atributo vacío, como misc="", devuelve true con un solo nodo cuyo valor es String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee el contenido como objeto del tipo especificado.</summary>
      <returns>Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
      <param name="returnType">Tipo del valor que se va a devolver.Nota   Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> puede ser el tipo de <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.Por ejemplo, se puede utilizar al convertir un objeto <see cref="T:System.Xml.XmlQualifiedName" /> en xs:string.Este valor puede ser null.</param>
      <exception cref="T:System.FormatException">El formato del contenido no es correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="returnType" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un tipo de nodo compatible.Vea la siguiente tabla para obtener información detallada.</exception>
      <exception cref="T:System.OverflowException">Lea Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee de forma asincrónica el contenido como objeto del tipo especificado.</summary>
      <returns>Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
      <param name="returnType">Tipo del valor que se va a devolver.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />  no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee de forma asincrónica el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados en BinHex.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee de forma asincrónica el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Lee el contenido de texto en la posición actual como valor Boolean.</summary>
      <returns>Contenido del texto como objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Lee el contenido de texto en la posición actual como objeto <see cref="T:System.DateTime" />.</summary>
      <returns>Contenido del texto como objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Lee el contenido de texto en la posición actual como objeto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Contenido del texto como objeto <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Lee el contenido de texto en la posición actual como objeto <see cref="T:System.Decimal" />.</summary>
      <returns>El contenido de texto en la posición actual como objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Lee el contenido de texto en la posición actual como número de punto flotante de precisión doble.</summary>
      <returns>El contenido de texto como número de punto flotante de precisión doble.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Lee el contenido de texto en la posición actual como número de punto flotante de precisión sencilla.</summary>
      <returns>El contenido de texto en la posición actual como número de punto flotante de precisión sencilla.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Lee el contenido de texto en la posición actual como un entero de 32 bits con signo.</summary>
      <returns>El contenido de texto como entero de 32 bits con signo.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Lee el contenido de texto en la posición actual como un entero de 64 bits con signo.</summary>
      <returns>El contenido de texto como entero de 64 bits con signo.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Lee el contenido de texto en la posición actual como <see cref="T:System.Object" />.</summary>
      <returns>El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Lee de forma asincrónica el contenido de texto en la posición actual como <see cref="T:System.Object" />.</summary>
      <returns>El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Lee el contenido de texto en la posición actual como objeto <see cref="T:System.String" />.</summary>
      <returns>Contenido del texto como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Lee de forma asincrónica el contenido de texto en la posición actual como objeto <see cref="T:System.String" />.</summary>
      <returns>Contenido del texto como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee el contenido de los elementos como el tipo solicitado.</summary>
      <returns>Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
      <param name="returnType">Tipo del valor que se va a devolver.Nota   Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> puede ser el tipo de <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.OverflowException">Lea Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI de espacio de nombres coinciden con los del elemento actual y, a continuación, lee el contenido de los elementos como el tipo solicitado.</summary>
      <returns>Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
      <param name="returnType">Tipo del valor que se va a devolver.Nota   Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> puede ser el tipo de <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <exception cref="T:System.OverflowException">Lea Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee de forma asincrónica el contenido de los elementos como el tipo solicitado.</summary>
      <returns>Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
      <param name="returnType">Tipo del valor que se va a devolver.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido Base64.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee de forma asincrónica el elemento y descodifica el contenido Base64.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido BinHex.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee de forma asincrónica el elemento y descodifica el contenido BinHex.</summary>
      <returns>Número de bytes escritos en el búfer.</returns>
      <param name="buffer">El búfer en el que se copia el texto resultante.Este valor no puede ser null.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer.El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Boolean" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no puede convertirse en un objeto <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Boolean" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.Boolean" />.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.DateTime" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no puede convertirse en un objeto <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.DateTime" />.</summary>
      <returns>El contenido del elemento como objeto <see cref="T:System.DateTime" />.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Decimal" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no puede convertirse en un objeto <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Decimal" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.Decimal" />.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no puede convertirse en un objeto <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión doble.</summary>
      <returns>El contenido del elemento como número de punto flotante de precisión doble.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en número de punto flotante de precisión doble.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión doble.</summary>
      <returns>El contenido del elemento como número de punto flotante de precisión doble.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión sencilla.</summary>
      <returns>El contenido del elemento como número de punto flotante de precisión sencilla.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en número de punto flotante de precisión sencilla.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión sencilla.</summary>
      <returns>El contenido del elemento como número de punto flotante de precisión sencilla.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en número de punto flotante de precisión sencilla.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Lee el elemento actual y devuelve el contenido como un entero de 32 bits con signo.</summary>
      <returns>El elemento contiene un entero de 32 bits con signo.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en un entero de 32 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee el elemento actual y devuelve el contenido como entero de 32 bits con signo.</summary>
      <returns>El elemento contiene un entero de 32 bits con signo.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en un entero de 32 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Lee el elemento actual y devuelve el contenido como un entero de 64 bits con signo.</summary>
      <returns>El elemento contiene un entero de 64 bits con signo.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en un entero de 64 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.</summary>
      <returns>El elemento contiene un entero de 64 bits con signo.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en un entero de 64 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <returns>Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing.La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado.Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como <see cref="T:System.Object" />.</summary>
      <returns>Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing.La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado.Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Lee de forma asincrónica el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <returns>Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing.La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado.Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.String" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no puede convertirse en un objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.String" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.String" />.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.-O bien-El contenido del elemento no puede convertirse en un objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos null.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Lee de forma asincrónica el elemento actual y devuelve el contenido como objeto <see cref="T:System.String" />.</summary>
      <returns>Contenido del elemento como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Comprueba si el nodo de contenido actual es una etiqueta de cierre y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException">El nodo actual no es una etiqueta de cierre o si se encuentra XML incorrecto en el flujo de entrada. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>Cuando se invalida en una clase derivada, lee todo el contenido, incluido el marcado, como una cadena.</summary>
      <returns>Todo el contenido XML, incluido el marcado, del nodo actual.Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.Si el nodo actual no es un elemento ni un atributo, se devuelve una cadena vacía.</returns>
      <exception cref="T:System.Xml.XmlException">El fragmento de XML no está bien formado o se ha producido un error al analizarlo. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Lee de forma asincrónica todo el contenido, incluido el marcado, como una cadena.</summary>
      <returns>Todo el contenido XML, incluido el marcado, del nodo actual.Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>Cuando se invalida en una clase derivada, lee el contenido, incluido el marcado, que representa este nodo y todos sus nodos secundarios.</summary>
      <returns>Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.</returns>
      <exception cref="T:System.Xml.XmlException">El fragmento de XML no está bien formado o se ha producido un error al analizarlo. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Lee de forma asincrónica el contenido, incluido el marcado, que representa este nodo y todos sus nodos secundarios.</summary>
      <returns>Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Comprueba si el nodo actual es un elemento y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> devuelve false. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Comprueba si el nodo de contenido actual es un elemento con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="name">Nombre completo del elemento. </param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> devuelve false o si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento no coincide con el parámetro <paramref name="name" /> especificado. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Comprueba si el nodo de contenido actual es un elemento con la propiedad <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificada y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="localname">Nombre local del elemento. </param>
      <param name="ns">Identificador URI de espacio de nombres del elemento. </param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> devuelve false, o las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado no coinciden con los argumentos especificados. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>Cuando se invalida en una clase derivada, obtiene el estado del lector.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Devuelve una nueva instancia de XmlReader que se puede utilizar para leer el nodo actual y todos sus descendientes.</summary>
      <returns>Una nueva instancia de XmlReader establecida en ReadState.Initial.Una llamada al método <see cref="M:System.Xml.XmlReader.Read" /> coloca el nuevo objeto XmlReader en el nodo que era el actual antes de la llamada al método ReadSubtree.</returns>
      <exception cref="T:System.InvalidOperationException">El objeto XmlReader no se coloca en ningún elemento cuando se llama a este método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta al siguiente elemento descendiente con el nombre completo especificado.</summary>
      <returns>true si se encuentra un elemento descendiente coincidente; de lo contrario, es false.Si no se encuentra ningún elemento descendiente coincidente, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento principal.Si el <see cref="T:System.Xml.XmlReader" /> no se coloca en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, este método devuelve false y la posición del <see cref="T:System.Xml.XmlReader" /> no cambia.</returns>
      <param name="name">Nombre completo del elemento al que se desea desplazar.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta el siguiente elemento descendiente que tenga el URI de espacio de nombres y el nombre local especificados.</summary>
      <returns>true si se encuentra un elemento descendiente coincidente; de lo contrario, es false.Si no se encuentra ningún elemento descendiente coincidente, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento principal.Si el <see cref="T:System.Xml.XmlReader" /> no se coloca en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, este método devuelve false y la posición del <see cref="T:System.Xml.XmlReader" /> no cambia.</returns>
      <param name="localName">Nombre local del elemento al que se desea desplazar.</param>
      <param name="namespaceURI">URI del espacio de nombres del elemento al que se desea desplazar.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Lee hasta que encuentra un elemento con el nombre completo especificado.</summary>
      <returns>true si se encuentra un elemento coincidente; de lo contrario, es false y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.</returns>
      <param name="name">Nombre completo del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Lee hasta que encuentra un elemento con el nombre local y el URI de espacio de nombres especificados.</summary>
      <returns>true si se encuentra un elemento coincidente; de lo contrario, es false y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.</returns>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Hace avanzar el objeto XmlReader hasta al siguiente elemento relacionado con el nombre completo especificado.</summary>
      <returns>true si se encuentra un elemento relacionado; de lo contrario, es false.Si no se encuentra ningún elemento relacionado, el objeto XmlReader se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento principal.</returns>
      <param name="name">Nombre completo del elemento relacionado al que se desea desplazar.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Hace avanzar el objeto XmlReader hasta el siguiente elemento relacionado que tenga el URI del espacio de nombres y el nombre local especificados.</summary>
      <returns>true si se encuentra un elemento relacionado; de lo contrario, es false.Si no se encuentra ningún elemento relacionado, el objeto XmlReader se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento principal.</returns>
      <param name="localName">Nombre local del elemento relacionado al que se desea desplazar.</param>
      <param name="namespaceURI">URI del espacio de nombres del elemento relacionado al que se desea desplazar</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Lee grandes secuencias de texto incrustadas en un documento XML.</summary>
      <returns>Número de caracteres leídos en el búfer.Si no hay más contenido de texto, se devuelve el valor cero.</returns>
      <param name="buffer">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto.Este valor no puede ser null.</param>
      <param name="index">Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.</param>
      <param name="count">Número máximo de caracteres que se van a copiar en el búfer.El número real de caracteres copiados se devuelve desde este método.</param>
      <exception cref="T:System.InvalidOperationException">El nodo actual no tiene ningún valor (<see cref="P:System.Xml.XmlReader.HasValue" /> es false).</exception>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El formato de los datos XML no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lee de forma asincrónica grandes secuencias de texto incrustadas en un documento XML.</summary>
      <returns>Número de caracteres leídos en el búfer.Si no hay más contenido de texto, se devuelve el valor cero.</returns>
      <param name="buffer">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto.Este valor no puede ser null.</param>
      <param name="index">Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.</param>
      <param name="count">Número máximo de caracteres que se van a copiar en el búfer.El número real de caracteres copiados se devuelve desde este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>Cuando se invalida en una clase derivada, resuelve la referencia a entidad para los nodos EntityReference.</summary>
      <exception cref="T:System.InvalidOperationException">El lector no está situado en un nodo EntityReference; esta implementación del lector no puede resolver entidades (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> devuelve false). </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se usa para crear esta instancia de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia del lector.Si este lector no se creó mediante el método <see cref="Overload:System.Xml.XmlReader.Create" />, esta propiedad devuelve null.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Omite los nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Omite de forma asincrónica los nodos secundarios del nodo actual.</summary>
      <returns>El nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlReader" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlReaderSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlReaderSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de texto del nodo actual.</summary>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo.En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver.Todos los demás tipos de nodo devuelven String.Empty.Tipo de nodo Value AttributeValor del atributo. CDATAContenido de la sección CDATA. CommentContenido del comentario. DocumentTypeSubconjunto interno. ProcessingInstructionTodo el contenido, salvo el destino. SignificantWhitespaceEspacio en blanco entre marcas en un modelo de contenido mixto. TextContenido del nodo de texto. WhitespaceEspacio en blanco entre marcas. XmlDeclarationContenido de la declaración. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Obtiene el tipo de Common Language Runtime (CLR) del nodo actual.</summary>
      <returns>Tipo de CLR correspondiente al valor con tipo del nodo.El valor predeterminado es System.String.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>Cuando se invalida en una clase derivada, obtiene el ámbito de xml:lang actual.</summary>
      <returns>Ámbito de xml:lang actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>Cuando se invalida en una clase derivada, obtiene el ámbito de xml:space actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />.Si no existe ningún ámbito de xml:space, el valor predeterminado de esta propiedad será XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlReader" /> creado por el método <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" /> utilizando un <see cref="T:System.Xml.XmlResolver" />.</summary>
      <param name="resolver">Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver documentos externos.</param>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Obtiene o establece si se pueden utilizar métodos de <see cref="T:System.Xml.XmlReader" /> asíncronos en una instancia <see cref="T:System.Xml.XmlReader" /> determinada.</summary>
      <returns>Es true si se pueden usar métodos asincrónicos; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.</summary>
      <returns>Es true si se va a realizar la comprobación de caracteres; de lo contrario, es false.El valor predeterminado es true.Note:Si <see cref="T:System.Xml.XmlReader" /> procesa datos de texto, siempre comprueba que los nombres XML y el contenido de texto son válidos, independientemente de la configuración de la propiedad.Al establecer la propiedad <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> en false, se desactiva la comprobación de caracteres en las referencias a entidades de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Crea una copia de la instancia de <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReaderSettings" /> clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Obtiene o establece un valor que indica si se debe cerrar la secuencia o el objeto <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector.</summary>
      <returns>Es true para cerrar la secuencia o <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector; en caso contrario, es false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Obtiene o establece el nivel de conformidad que cumplirá <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ConformanceLevel" />.El valor predeterminado es ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Obtiene o establece la enumeración <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Enumeración <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Obtiene o establece un valor que indica si se van a omitir los comentarios.</summary>
      <returns>Es true para omitir los comentarios; en caso contrario, es false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Obtiene o establece un valor que indica si se van a omitir las instrucciones de procesamiento.</summary>
      <returns>Es true para omitir las instrucciones de procesamiento; en caso contrario, es false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Obtiene o establece un valor que indica si se va a omitir el espacio en blanco no significativo.</summary>
      <returns>Es true para omitir el espacio en blanco; en caso contrario, es false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Obtiene o establece el desplazamiento del número de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Desplazamiento del número de línea.El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Obtiene o establece el desplazamiento de la posición de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Desplazamiento del número de línea.El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento que resulta de expandir las entidades.</summary>
      <returns>El número máximo de caracteres permitido de las entidades expandidas.El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento XML.Un valor cero (0) significa que no existe ningún límite en el tamaño del documento XML.Un valor distinto de cero especifica el tamaño máximo, en caracteres.</summary>
      <returns>El número máximo de caracteres permitido en un documento XML.El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.XmlNameTable" /> utilizado para las comparaciones de cadenas subdivididas.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlNameTable" /> que almacena todas las cadenas subdivididas que utilizan todas las instancias del objeto <see cref="T:System.Xml.XmlReader" /> creadas mediante este objeto <see cref="T:System.Xml.XmlReaderSettings" />.El valor predeterminado es null.La instancia de <see cref="T:System.Xml.XmlReader" /> creada utilizará un nuevo objeto <see cref="T:System.Xml.NameTable" /> vacío si este valor es null.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para obtener acceso a documentos externos.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para tener acceso a documentos externos.Si se establece en null, se produce una excepción <see cref="T:System.Xml.XmlException" /> cuando el objeto <see cref="T:System.Xml.XmlReader" /> intenta obtener acceso a un recurso externo.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Resuelve los recursos XML externos designados por un identificador de recursos uniforme (URI). </summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Cuando se invalida en una clase derivada, asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <returns>Objeto <see cref="T:System.IO.Stream" /> o null si se especifica un tipo que no sea una secuencia.</returns>
      <param name="absoluteUri">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />. </param>
      <param name="role">La versión actual no utiliza este parámetro al resolver identificadores URI.Se incluye para futuros fines de extensibilidad.Por ejemplo, se puede asignar esto a xlink:role y utilizar como un argumento específico de la implementación en otros escenarios.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver.La versión actual solo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> no es un tipo de Stream. </exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="absoluteUri" /> es null. </exception>
      <exception cref="T:System.Exception">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor). </exception>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Cuando se invalida en una clase derivada, resuelve el identificador URI absoluto a partir de los identificadores URI base y relativo.</summary>
      <returns>
        <see cref="T:System.Uri" /> que representa el URI absoluto o null si el URI relativo no se puede resolver.</returns>
      <param name="baseUri">Identificador URI base que se utiliza para resolver el identificador URI relativo </param>
      <param name="relativeUri">Identificador URI que se va a resolver.El identificador URI puede ser absoluto o relativo.Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />.Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="relativeUri" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Este método agrega la capacidad de que el objeto Resolver devuelva otros tipos además de <see cref="T:System.IO.Stream" />.</summary>
      <returns>Es true si el parámetro del tipo es <see cref="T:System.IO.Stream" />; en caso contrario, es false.</returns>
      <param name="absoluteUri">Identificador URI.</param>
      <param name="type">Tipo que se va a devolver.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Especifica el ámbito de xml:space actual.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>El ámbito de xml:space equivale a default.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Sin ámbito de xml:space.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>El ámbito de xml:space equivale a preserve.</summary>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Representa el tipo XML de la cadena.Esto permite que la cadena se lea como un tipo XML concreto; por ejemplo, un tipo de sección CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Tipo CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Tipo ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Tipo ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Tipo ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Tipo ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Tipo IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Tipo IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Tipo NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Tipo NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Tipo NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Sin tipo.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Tipo NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Tipo QName.</summary>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Representa un sistema de escritura que constituye un medio rápido, no almacenado en caché y de solo avance para generar secuencias o archivos con datos XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>Cuando se invalida en una clase derivada, cierra esta secuencia y la secuencia subyacente.</summary>
      <exception cref="T:System.InvalidOperationException">Después de llamar a Close o si el resultado de dicha llamada no es un documento XML válido, se realiza una llamada para escribir más resultados. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia especificada.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Secuencia en la que se desea escribir.<see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="stream" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Secuencia en la que se desea escribir.<see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />.Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="stream" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> con el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> en el que se desea escribir.<see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="text" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> usando los objetos <see cref="T:System.IO.TextWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> en el que se desea escribir.<see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />.Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="text" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> con el objeto <see cref="T:System.Text.StringBuilder" /> especificado.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir.El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="builder" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> usando los objetos <see cref="T:System.Text.StringBuilder" /> y <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir.El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />.Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="builder" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> con los objetos <see cref="T:System.Xml.XmlWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" /> especificados.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />.Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados utilizados por <see cref="T:System.Xml.XmlWriter" /> y, de forma opcional, también los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>Cuando se invalida en una clase derivada, vuelca el contenido del búfer en las secuencias subyacentes y también vuelca la secuencia subyacente.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>De forma asincrónica, vuelca el contenido del búfer en las secuencias subyacentes y también vuelca la secuencia subyacente.</summary>
      <returns>Tarea que representa la operación asincrónica Flush.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>Cuando se invalida en una clase derivada, devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</summary>
      <returns>Prefijo coincidente o null si no se encuentra ningún identificador URI de espacio de nombres coincidente en el ámbito actual.</returns>
      <param name="ns">Identificador URI de espacio de nombres cuyo prefijo se desea buscar. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> es null o String.Empty. </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se usa para crear esta instancia de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriterSettings" /> utilizado para crear esta instancia del sistema de escritura.Si este sistema de escritura no se creó utilizando el método <see cref="Overload:System.Xml.XmlWriter.Create" />, esta propiedad devuelve null.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>Cuando se reemplaza en una clase derivada, escribe todos los atributos que se encuentran en la posición actual en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">XmlReader del que se van a copiar los atributos. </param>
      <param name="defattr">true para copiar los atributos predeterminados de XmlReader; de lo contrario, false. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="reader" /> es null. </exception>
      <exception cref="T:System.Xml.XmlException">El lector no está en ningún nodo element, attribute o XmlDeclaration. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Escribe de forma asincrónica todos los atributos que se encuentran en la posición actual en <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Tarea que representa la operación asincrónica WriteAttributes.</returns>
      <param name="reader">XmlReader del que se van a copiar los atributos.</param>
      <param name="defattr">true para copiar los atributos predeterminados de XmlReader; de lo contrario, false.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el atributo con el valor y nombre local especificados.</summary>
      <param name="localName">Nombre local del atributo. </param>
      <param name="value">Valor del atributo. </param>
      <exception cref="T:System.InvalidOperationException">El estado del método de escritura no es WriteState.Element o está cerrado. </exception>
      <exception cref="T:System.ArgumentException">El valor de atributo xml:space o xml:lang no es válido. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un atributo con el valor, nombre local e identificador URI del espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del atributo. </param>
      <param name="ns">Identificador URI de espacio de nombres que se va asociar al atributo. </param>
      <param name="value">Valor del atributo. </param>
      <exception cref="T:System.InvalidOperationException">El estado del método de escritura no es WriteState.Element o está cerrado. </exception>
      <exception cref="T:System.ArgumentException">El valor de atributo xml:space o xml:lang no es válido. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el atributo con el prefijo, el nombre local, el identificador URI de espacio de nombres y el valor especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del atributo. </param>
      <param name="localName">Nombre local del atributo. </param>
      <param name="ns">URI de espacio de nombres del atributo. </param>
      <param name="value">Valor del atributo. </param>
      <exception cref="T:System.InvalidOperationException">El estado del método de escritura no es WriteState.Element o está cerrado. </exception>
      <exception cref="T:System.ArgumentException">El valor de atributo xml:space o xml:lang no es válido. </exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="localName" /> o <paramref name="ns" /> es null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Escribe de forma asincrónica el atributo con el prefijo especificado, el nombre local, el URI de espacio de nombres y el valor.</summary>
      <returns>Tarea que representa la operación asincrónica WriteAttributeString.</returns>
      <param name="prefix">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">URI de espacio de nombres del atributo.</param>
      <param name="value">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar. </param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir. </param>
      <param name="count">Número de bytes que se van a escribir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="buffer" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero. -O bien-La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica de forma asincrónica los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <returns>Tarea que representa la operación asincrónica WriteBase64.</returns>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en BinHex y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar. </param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir. </param>
      <param name="count">Número de bytes que se van a escribir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="buffer" /> es null. </exception>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado o en estado de error.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero. -O bien-La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica de forma asincrónica los bytes binarios especificados en BinHex y escribe el texto resultante.</summary>
      <returns>Tarea que representa la operación asincrónica WriteBinHex.</returns>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el bloque CDATA. </param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Escribe de forma asincrónica un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteCData.</returns>
      <param name="text">Texto que se va a colocar en el bloque CDATA.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>Cuando se invalida en una clase derivada, impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch">Carácter Unicode para el que se va a generar una entidad de caracteres. </param>
      <exception cref="T:System.ArgumentException">El carácter está en el intervalo de caracteres de par suplente, 0xd800 - 0xdfff. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Impone de forma asincrónica la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteCharEntity.</returns>
      <param name="ch">Carácter Unicode para el que se va a generar una entidad de caracteres.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, escribe texto en un búfer cada vez.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir. </param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir. </param>
      <param name="count">Número de caracteres que se van a escribir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="buffer" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero. -O bien-La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</exception>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="buffer" /> no es válido.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> está fuera de los límites de <paramref name="buffer" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Escribe de forma asincrónica texto en un búfer cada vez.</summary>
      <returns>Tarea que representa la operación asincrónica WriteChars.</returns>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el comentario. </param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Escribe de forma asincrónica un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteComment.</returns>
      <param name="text">Texto que se va a colocar en el comentario.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe la declaración DOCTYPE con el nombre y atributos opcionales especificados.</summary>
      <param name="name">Nombre de DOCTYPE.No puede estar vacío.</param>
      <param name="pubid">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados. </param>
      <param name="sysid">Si el valor de <paramref name="pubid" /> es nulo y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento. </param>
      <param name="subset">En caso de un valor no nulo, se escribe [subset] donde subset se reemplaza por el valor de este argumento. </param>
      <exception cref="T:System.InvalidOperationException">Se llamó a este método fuera del prólogo (después del elemento raíz). </exception>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="name" /> daría como resultado un archivo XML no válido. </exception>
      <exception cref="T:System.Xml.XmlException">El valor de <paramref name="name" /> no es válido. </exception>
      <exception cref="T:System.NullReferenceException">El valor del parámetro <paramref name=" name" />, <paramref name=" pubid" />, <paramref name=" sysid" /> o l<paramref name="subset" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Escribe de forma asincrónica la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</summary>
      <returns>Tarea que representa la operación asincrónica WriteDocType.</returns>
      <param name="name">Nombre de DOCTYPE.No puede estar vacío.</param>
      <param name="pubid">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid">Si el valor de <paramref name="pubid" /> es nulo y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset">En caso de un valor no nulo, se escribe [subset] donde subset se reemplaza por el valor de este argumento.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un elemento con el valor y nombre local especificados.</summary>
      <param name="localName">Nombre local del elemento. </param>
      <param name="value">Valor del elemento. </param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="localName" /> es null o una cadena vacía.-O bien-Los valores de parámetro no son válidos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un elemento con el valor, nombre local e identificador URI del espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del elemento. </param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento. </param>
      <param name="value">Valor del elemento. </param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="localName" /> es null o una cadena vacía.-O bien-Los valores de parámetro no son válidos. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Escribe un elemento con el nombre local especificado, el URI de espacio de nombres y el valor.</summary>
      <param name="prefix">Prefijo del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="localName" /> es null o una cadena vacía.-O bien-Los valores de parámetro no son válidos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Escribe de forma asincrónica un elemento con el prefijo especificado, el nombre local, el URI de espacio de nombres y el valor.</summary>
      <returns>Tarea que representa la operación asincrónica WriteElementString.</returns>
      <param name="prefix">Prefijo del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value">Valor del elemento.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>Cuando se invalida en una clase derivada, cierra la llamada a <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Cierra de forma asincrónica la llamada a <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.</summary>
      <returns>Tarea que representa la operación asincrónica WriteEndAttribute.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>Cuando se invalida en una clase derivada, cierra todos los elementos o atributos abiertos y vuelve a colocar el sistema de escritura en el estado de inicio.</summary>
      <exception cref="T:System.ArgumentException">El documento XML no es válido. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Cierra de forma asincrónica todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</summary>
      <returns>Tarea que representa la operación asincrónica WriteEndDocument.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</summary>
      <exception cref="T:System.InvalidOperationException">Esto da como resultado un documento XML no válido. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Cierra de forma asincrónica un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
      <returns>Tarea que representa la operación asincrónica WriteEndElement.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe una referencia a entidad de la siguiente forma: &amp;name;.</summary>
      <param name="name">Nombre de la referencia a entidad. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> es null o String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Escribe de forma asincrónica una referencia a entidad de la siguiente manera: &amp;name;.</summary>
      <returns>Tarea que representa la operación asincrónica WriteEntityRef.</returns>
      <param name="name">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Cierra de forma asincrónica un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
      <returns>Tarea que representa la operación asincrónica WriteFullEndElement.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nombre que se va a escribir. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es null o String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Escribe de forma asincrónica el nombre especificado, asegurando que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <returns>Tarea que representa la operación asincrónica WriteName.</returns>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nombre que se va a escribir. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un NmToken válido, o <paramref name="name" /> es null o String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Escribe de forma asincrónica el nombre especificado, asegurando que se trata de un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <returns>Tarea que representa la operación asincrónica WriteNmToken.</returns>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Cuando se invalida en una clase derivada, copia todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer. </param>
      <param name="defattr">true para copiar los atributos predeterminados de XmlReader; de lo contrario, false. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> contiene caracteres no válidos. </exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="reader" /> es null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Copia de forma asincrónica todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteNode.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="defattr">true para copiar los atributos predeterminados de XmlReader; de lo contrario, false.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name">Nombre de la instrucción de procesamiento. </param>
      <param name="text">Texto que se va a incluir en la instrucción de procesamiento. </param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto.<paramref name="name" /> es null o String.Empty.Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Escribe de forma asincrónica una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <returns>Tarea que representa la operación asincrónica WriteProcessingInstruction.</returns>
      <param name="name">Nombre de la instrucción de procesamiento.</param>
      <param name="text">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el nombre completo de espacio de nombres.Este método busca el prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName">Nombre local que se va a escribir. </param>
      <param name="ns">Identificador URI de espacio de nombres del nombre. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> es String.Empty o no es un nombre válido. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="localName" /> o <paramref name="ns" /> es null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Escribe de forma asincrónica el nombre completo del espacio de nombres.Este método busca el prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteQualifiedName.</returns>
      <param name="localName">Nombre local que se va a escribir.</param>
      <param name="ns">Identificador URI de espacio de nombres del nombre.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde un búfer de caracteres.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir. </param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir. </param>
      <param name="count">Número de caracteres que se van a escribir. </param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="buffer" /> es null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero. -O bien-La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde una cadena.</summary>
      <param name="data">Cadena que contiene el texto que se va a escribir. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> es null o String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Escribe de forma asincrónica el marcado manual sin formato de un búfer de caracteres.</summary>
      <returns>Tarea que representa la operación asincrónica WriteRaw.</returns>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Escribe de forma asincrónica el marcado manual sin formato de una cadena.</summary>
      <returns>Tarea que representa la operación asincrónica WriteRaw.</returns>
      <param name="data">Cadena que contiene el texto que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Escribe el inicio de un atributo con el nombre local especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName">Nombre local del atributo. </param>
      <param name="ns">URI de espacio de nombres del atributo. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el inicio de un atributo con el prefijo, el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del atributo. </param>
      <param name="localName">Nombre local del atributo. </param>
      <param name="ns">Identificador URI de espacio de nombres del atributo. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Escribe de forma asincrónica el inicio de un atributo con el prefijo, nombre local y espacio de nombres especificados.</summary>
      <returns>Tarea que representa la operación asincrónica WriteStartAttribute.</returns>
      <param name="prefix">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">Identificador URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Este no es el primer método Write al que se llama después de llamar al constructor. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0" y el atributo independiente.</summary>
      <param name="standalone">Si es true, escribirá "standalone=yes"; si es false, escribirá "standalone=no". </param>
      <exception cref="T:System.InvalidOperationException">Este no es el primer método Write al que se llama después de llamar al constructor. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Escribe de forma asincrónica la declaración XML con la versión "1.0".</summary>
      <returns>Tarea que representa la operación asincrónica WriteStartDocument.</returns>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Escribe de forma asincrónica la declaración XML con la versión "1.0" así como el atributo independiente.</summary>
      <returns>Tarea que representa la operación asincrónica WriteStartDocument.</returns>
      <param name="standalone">Si es true, escribirá "standalone=yes"; si es false, escribirá "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe una etiqueta de apertura con el nombre local especificado.</summary>
      <param name="localName">Nombre local del elemento. </param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.</summary>
      <param name="localName">Nombre local del elemento. </param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento.Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura escribe automáticamente también dicho prefijo.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y prefijo especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del elemento. </param>
      <param name="localName">Nombre local del elemento. </param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento. </param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Escribe de forma asincrónica la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <returns>Tarea que representa la operación asincrónica WriteStartElement.</returns>
      <param name="prefix">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Cuando se invalida en una clase derivada, obtiene el estado del sistema de escritura.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el contenido de texto especificado.</summary>
      <param name="text">Texto que se va a escribir. </param>
      <exception cref="T:System.ArgumentException">La cadena de texto contiene un par suplente no válido. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Escribe de forma asincrónica el contenido de texto especificado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteString.</returns>
      <param name="text">Texto que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Cuando se invalida en una clase derivada, genera y escribe la entidad de carácter suplente para el par de caracteres suplentes.</summary>
      <param name="lowChar">Suplente bajo.Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</param>
      <param name="highChar">Suplente alto.Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Se ha pasado un par de caracteres suplentes no válido. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Genera y escribe de forma asincrónica la entidad de carácter suplente del par de caracteres suplentes.</summary>
      <returns>Tarea que representa la operación asincrónica WriteSurrogateCharEntity.</returns>
      <param name="lowChar">Suplente bajo.Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</param>
      <param name="highChar">Suplente alto.Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Escribe un valor <see cref="T:System.Boolean" />.</summary>
      <param name="value">Valor <see cref="T:System.Boolean" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Escribe un valor <see cref="T:System.DateTime" />.</summary>
      <param name="value">Valor <see cref="T:System.DateTime" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Escribe un valor <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">Valor <see cref="T:System.DateTimeOffset" /> que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Escribe un valor <see cref="T:System.Decimal" />.</summary>
      <param name="value">Valor <see cref="T:System.Decimal" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Escribe un valor <see cref="T:System.Double" />.</summary>
      <param name="value">Valor <see cref="T:System.Double" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Escribe un valor <see cref="T:System.Int32" />.</summary>
      <param name="value">Valor <see cref="T:System.Int32" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Escribe un valor <see cref="T:System.Int64" />.</summary>
      <param name="value">Valor <see cref="T:System.Int64" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Escribe el valor del objeto.</summary>
      <param name="value">Valor del objeto que se va a escribir. Nota   Con el lanzamiento de .NET Framework 3.5, este método acepta <see cref="T:System.DateTimeOffset" /> como parámetro.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException">El <paramref name="value" /> es null.</exception>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado o en estado de error.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Escribe un número de punto flotante de precisión sencilla.</summary>
      <param name="value">El número de punto flotante de precisión sencilla que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Escribe un valor <see cref="T:System.String" />.</summary>
      <param name="value">Valor <see cref="T:System.String" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el espacio en blanco especificado.</summary>
      <param name="ws">Cadena de caracteres de espacio en blanco. </param>
      <exception cref="T:System.ArgumentException">La cadena no contiene caracteres de espacio en blanco. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Escribe de forma asincrónica el espacio en blanco especificado.</summary>
      <returns>Tarea que representa la operación asincrónica WriteWhitespace.</returns>
      <param name="ws">Cadena de caracteres de espacio en blanco.</param>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> antes de que haya finalizado una operación asincrónica anterior.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que ya hay una operación asincrónica en curso.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama a un método <see cref="T:System.Xml.XmlWriter" /> asincrónico sin establecer el indicador <see cref="P:System.Xml.XmlWriterSettings.Async" /> en true.Dado el caso, se produce la <see cref="T:System.InvalidOperationException" />, que muestra un mensaje que indica que debe establecerse XmlWriterSettings.Async en true si se quiere usar métodos asincrónicos.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>Cuando se invalida en una clase derivada, obtiene el ámbito de xml:lang actual.</summary>
      <returns>Ámbito de xml:lang actual.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>Cuando se invalida en una clase derivada, se obtiene un <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de xml:lang actual.</summary>
      <returns>XmlSpace que representa el ámbito de xml:space actual.Valor Significado NingunoEste es el valor predeterminado si no existe ningún ámbito de xml:space. PredeterminadaEl ámbito actual es xml:space="default". PreserveEl ámbito actual es xml:space="preserve". </returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlWriter" /> creado por el método <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Obtiene o establece un valor que indica si se pueden utilizar métodos <see cref="T:System.Xml.XmlWriter" /> asíncronos en una instancia <see cref="T:System.Xml.XmlWriter" /> particular.</summary>
      <returns>Es true si se pueden usar métodos asincrónicos; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.</summary>
      <returns>Es true si se va a realizar la comprobación de caracteres; de lo contrario, es false.El valor predeterminado es true.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Crea una copia de la instancia de <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriterSettings" /> clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlWriter" /> también debe cerrar la secuencia subyacente o <see cref="T:System.IO.TextWriter" /> cuando se llama al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>Es true para cerrar también la secuencia subyacente o <see cref="T:System.IO.TextWriter" />; en caso contrario, es false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Obtiene o establece el nivel de conformidad que cumple <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ConformanceLevel" />.El valor predeterminado es ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Obtiene o establece la codificación de texto que se va a utilizar.</summary>
      <returns>Codificación de texto que se va a utilizar.El valor predeterminado es Encoding.UTF8.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Obtiene o establece un valor que indica si se va a aplicar sangría a los elementos.</summary>
      <returns>Es true para escribir elementos individuales en líneas nuevas y aplicar sangría; en caso contrario, es false.El valor predeterminado es false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Obtiene o establece la cadena de caracteres que se va a utilizar al aplicar sangría.Esta opción se utiliza cuando la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> se establece en true.</summary>
      <returns>Cadena de caracteres que se va a utilizar al aplicar sangría.Se puede establecer en cualquier valor de cadena.Sin embargo, para garantizar la validez del contenido XML, debe especificar solo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea.El valor predeterminado es dos espacios.</returns>
      <exception cref="T:System.ArgumentNullException">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> es null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Obtiene o establece la enumeración <see cref="T:System.Xml.NamespaceHandling" /> utilizada para especificar si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.Para poder quitar el espacio de nombres duplicado, el prefijo y el espacio de nombres deben coincidir.</summary>
      <returns>Enumeración <see cref="T:System.Xml.NamespaceHandling" /> que se usa para especificar si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Obtiene o establece la cadena de caracteres que se va a utilizar para los saltos de línea. </summary>
      <returns>Cadena de caracteres que se va a utilizar para los saltos de línea.Se puede establecer en cualquier valor de cadena.Sin embargo, para garantizar la validez del contenido XML, debe especificar solo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea.El valor predeterminado es \r\n (retorno de carro, nueva línea).</returns>
      <exception cref="T:System.ArgumentNullException">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> es null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Obtiene o establece un valor que indica si se deben normalizar los saltos de línea en el resultado.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.NewLineHandling" />.El valor predeterminado es <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Obtiene o establece un valor que indica si los atributos se deben escribir en una nueva línea.</summary>
      <returns>Es true para escribir los atributos en líneas individuales; en caso contrario, es false.El valor predeterminado es false.Note:Esta configuración no se aplica cuando el valor de la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> es false.Cuando <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> se establece en true, a cada atributo le precede una nueva línea y un nivel adicional de sangría.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Obtiene o establece un valor que indica si debe escribir una declaración XML.</summary>
      <returns>Es true para omitir la declaración XML; en caso contrario, es false.El valor predeterminado es false, se escribe una declaración XML.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> agregará etiquetas de cierre a todas las etiquetas de elementos sin cerrar cuando se llama al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>true si se cerrarán todas las etiquetas de elementos sin cerrar; de lo contrario, false.El valor predeterminado es true.</returns>
    </member>
    <member name="T:System.Xml.XmlXapResolver">
      <summary>El tipo <see cref="T:System.Xml.XmlXapResolver" /> se usa para resolver los recursos del paquete XAP de la aplicación de Windows Phone. </summary>
    </member>
    <member name="M:System.Xml.XmlXapResolver.#ctor">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XmlXapResolver" />. </summary>
    </member>
    <member name="M:System.Xml.XmlXapResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <returns>Objeto System.IO.Stream. Si no se encuentra la secuencia, se produce una excepción.</returns>
      <param name="absoluteUri">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">La versión actual de .NET Framework para Windows Phone no usa este parámetro al resolver los URI. Se incluye para futuros fines de extensibilidad. Por ejemplo, se puede asignar esto a xlink:role y utilizar como un argumento específico de la implementación en otros escenarios.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos System.IO.Stream. </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Esta clase se proporciona por cuestiones de compatibilidad de interfaz. No se ha concebido para que se utilice desde el código de su Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Indica si los atributos o los elementos deben calificarse con un espacio de nombres como prefijo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>El formato de elemento y de atributo no se especifica en el esquema.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Los atributos y los elementos deben estar calificados con el espacio de nombres como prefijo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Los elementos y los atributos no deben estar calificados con el espacio de nombres como prefijo.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Esta clase se proporciona por cuestiones de compatibilidad de interfaz. No se ha concebido para que se utilice desde el código de su Windows Phone.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Esta clase se proporciona por cuestiones de compatibilidad de interfaz. No se ha concebido para que se utilice desde el código de su Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Esta clase se proporciona por cuestiones de compatibilidad de interfaz. No se ha concebido para que se utilice desde el código de su Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Representa la gravedad del evento de validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Indica que se ha producido un error de validación al validar el documento de instancia.Esto es válido para las definiciones de tipo de documento (DTD) y los esquemas del Lenguaje de definición de esquemas XML (XSD, Schema Definition Language).Las restricciones de validación del Consorcio W3C se consideran errores.Si no se ha creado ningún controlador de eventos de validación, los errores producen una excepción.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Indica que se ha producido un evento de validación que no es un error.Normalmente se emite una advertencia cuando no existe una DTD o un esquema XML con los que se pueda validar un elemento o atributo determinado.A diferencia de los errores, las advertencias no producen una excepción si no hay un controlador de eventos de validación.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Representa los tipos de esquema del Lenguaje de definición de esquemas XML (XSD) del consorcio W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Cualquier valor atómico de una unión.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Tipo xs:anyURI del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Tipo xs:base64Binary del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Tipo xs:boolean del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Tipo xs:byte del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Tipo xs:date del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Tipo xs:dateTime del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Tipo xs:decimal del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Tipo xs:double del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Tipo xs:Duration del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Tipo xs:ENTITY del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Tipo xs:float del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Tipo xs:gDay del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Tipo xs:gMonth del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Tipo xs:gMonthDay del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Tipo xs:gYear del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Tipo xs:gYearMonth del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Tipo xs:hexBinary del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Tipo xs:ID del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Tipo xs:IDREF del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Tipo xs:int del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Tipo xs:integer del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Un elemento como un nodo o un valor atómico.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Tipo xs:language del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Tipo xs:long del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Tipo xs:Name del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Tipo xs:NCName del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Tipo xs:negativeInteger del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Tipo xs:NMTOKEN del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Ninguna información de tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Tipo xs:nonNegativeInteger del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Tipo xs:nonPositiveInteger del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Tipo xs:normalizedString del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Tipo xs:NOTATION del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Tipo xs:positiveInteger del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Tipo xs:QName del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Tipo xs:short del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Tipo xs:string del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Tipo xs:time del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Tipo xs:token del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Tipo xs:unsignedByte del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Tipo xs:unsignedInt del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Tipo xs:unsignedLong del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Tipo xs:unsignedShort del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Valor atómico sin tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Proporciona un formato personalizado de serialización y deserialización XML con el fin de controlar el modo en que <see cref="T:System.Xml.XmlSerializer" /> serializa o deserializa el objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Este método está reservado y no debería utilizarse.Al implementar la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" />, se recomienda devolver una referencia null (Nothing en Visual Basic) desde este método.</summary>
      <returns>Una clase <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml" /> y utilizado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Genera un objeto a partir de su representación XML.</summary>
      <param name="reader">Secuencia de <see cref="T:System.Xml.XmlReader" /> desde la que se deserializa el objeto.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Convierte un objeto en su representación XML.</summary>
      <param name="writer">Secuencia de <see cref="T:System.Xml.XmlWriter" /> para la que se serializa el objeto.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.Linq.XElement" /> o <see cref="T:System.Xml.Linq.XNode" />) contiene objetos que representan un elemento XML con el que no se corresponde ningún miembro del objeto que se está serializando o deserializando.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
      <param name="name">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML y su espacio de nombres XML.</summary>
      <param name="name">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="ns">Espacio de nombres XML del elemento XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Obtiene o establece el nombre del elemento XML.</summary>
      <returns>Nombre del elemento XML.</returns>
      <exception cref="T:System.InvalidOperationException">El nombre de elemento de un miembro de una matriz no coincide con el nombre de elemento especificado por la propiedad <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres XML generado en el documento XML.</summary>
      <returns>Espacio de nombres XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Obtiene o establecer el orden explícito en el que se serializan o deserializan los elementos.</summary>
      <returns>Orden de la generación de códigos.</returns>
      <exception cref="T:System.ArgumentException">El <paramref name="value" /> establecido es negativo.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro de clase determinado como matriz de elementos XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y especifica el nombre del elemento XML generado en la instancia del documento XML.</summary>
      <param name="elementName">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML especificado para la matriz serializada.</summary>
      <returns>Nombre del elemento XML de la matriz serializada.El valor predeterminado es el nombre del miembro al que se ha asignado <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Obtiene o establece un valor que indica si el nombre del elemento XML generado por el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> está calificado o no.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />.El valor predeterminado es XmlSchemaForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como un elemento XML vacío con el atributo xsi:nil establecido en true.</summary>
      <returns>true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento XML.</summary>
      <returns>Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Obtiene o establecer el orden explícito en el que se serializan o deserializan los elementos.</summary>
      <returns>Orden de la generación de códigos.</returns>
      <exception cref="T:System.ArgumentException">El <paramref name="value" /> establecido es negativo.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Especifica los tipos derivados que <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede colocar en una matriz serializada.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
      <param name="elementName">Nombre del elemento XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML, así como el <see cref="T:System.Type" /> que puede insertarse en el documento XML generado.</summary>
      <param name="elementName">Nombre del elemento XML. </param>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a serializar. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el <see cref="T:System.Type" /> que puede insertarse en la matriz serializada.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a serializar. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XML del elemento XML generado.</summary>
      <returns>Tipo de datos de la definición de esquemas XML (XSD), tal y como se define en el documento de World Wide Web Consortium (www.w3.org), XML Schema Part 2: Datatypes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns>Nombre del elemento XML generado.El valor predeterminado es el identificador del miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Obtiene o establece un valor que indica si el nombre del elemento XML generado es completo.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />.El valor predeterminado es XmlSchemaForm.None.</returns>
      <exception cref="T:System.Exception">La propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> se establece en XmlSchemaForm.Unqualified y se especifica un valor <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo xsi:nil establecido en true.</summary>
      <returns>Es true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; de lo contrario, es false y no se genera ninguna instancia.El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento XML generado.</summary>
      <returns>Espacio de nombres del elemento XML generado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Obtiene o establece el nivel en una jerarquía de elementos XML a los que afecta <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>Índice de base cero de un conjunto de índices en una matriz de matrices.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Obtiene o establece el tipo permitido en una matriz.</summary>
      <returns>
        <see cref="T:System.Type" /> permitido en la matriz.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de la clase como un atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> y especifica el nombre del atributo XML generado.</summary>
      <param name="attributeName">Nombre del atributo XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">Nombre del atributo XML que se genera. </param>
      <param name="type">
        <see cref="T:System.Type" /> utilizado para almacenar el atributo. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> utilizado para almacenar el atributo. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Obtiene o establece el nombre del atributo XML.</summary>
      <returns>Nombre del atributo XML.El valor predeterminado es el nombre del miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Tipo de datos XSD (documento de esquema XML), tal y como se define en el documento de World Wide Web Consortium (www.w3.org), XML Schema Part 2: Datatypes. Datatypes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Obtiene o establece un valor que indica si está calificado el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />.El valor predeterminado es XmlForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres XML del atributo XML.</summary>
      <returns>Espacio de nombres XML del atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Obtiene o establece el tipo complejo del atributo XML.</summary>
      <returns>Tipo del atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Especifica el miembro que podrá detectarse posteriormente mediante una enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que especifica el nombre del miembro que devuelve la enumeración utilizada para detectar una opción.</summary>
      <param name="name">Nombre del miembro que devuelve la enumeración utilizada para detectar una opción. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Obtiene o establece el nombre del campo que devuelve la enumeración que se va a utilizar cuando se detecten los tipos.</summary>
      <returns>El nombre de un campo que devuelve una enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indica que un campo público o una propiedad pública representa un elemento XML, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o deserializa el objeto que lo contiene.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML.</summary>
      <param name="elementName">Nombre del elemento XML del miembro serializado. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML así como un tipo derivado del miembro al que se ha aplicado <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.Este tipo de miembro se utiliza cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el objeto que lo contiene.</summary>
      <param name="elementName">Nombre del elemento XML del miembro serializado. </param>
      <param name="type">
        <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica un tipo de miembro al que <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> es aplicado.Este tipo lo utiliza <see cref="T:System.Xml.Serialization.XmlSerializer" /> al serializar o deserializar el objeto que lo contiene.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos de la definición de esquemas XML (XSD) del elemento XM1 generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Tipo de datos Esquemas XML, tal y como se define en el documento de World Wide Web Consortium (www.w3.org), XML Schema Part 2: Datatypes.</returns>
      <exception cref="T:System.Exception">El tipo de datos de esquema XML especificado no puede asignarse al tipo de datos .NET. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns>Nombre del elemento XML generado.El valor predeterminado es el identificador del miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Obtiene o establece un valor que indica si el elemento es completo.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />.El valor predeterminado es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en null como una etiqueta vacía con el atributo xsi:nil establecido en true.</summary>
      <returns>true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres asignado al elemento XML que se genera al serializar la clase.</summary>
      <returns>Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Obtiene o establecer el orden explícito en el que se serializan o deserializan los elementos.</summary>
      <returns>Orden de la generación de códigos.</returns>
      <exception cref="T:System.ArgumentException">El <paramref name="value" /> establecido es negativo.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Obtiene o establece el tipo de objeto utilizado para representar el elemento XML.</summary>
      <returns>
        <see cref="T:System.Type" /> del miembro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> y especifica el valor XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera o reconoce al serializar o deserializar la enumeración, respectivamente.</summary>
      <param name="name">Nombre de reemplazo del miembro de enumeración. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Obtiene o establece el valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido cuando deserializa el miembro de enumeración.</summary>
      <returns>Valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración, o el valor reconocido cuando deserializa el miembro de enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Instruye al método <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a incluir. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Obtiene o establece el tipo del objeto que se va a incluir.</summary>
      <returns>
        <see cref="T:System.Type" /> del objeto que se va a incluir.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Especifica que la propiedad de destino, el parámetro, el valor devuelto o el miembro de clase contienen prefijos asociados con los espacios de nombres utilizados en un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Controla la serialización XML del destino del atributo como un elemento raíz XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> y especifica el nombre del elemento raíz XML.</summary>
      <param name="elementName">Nombre del elemento raíz XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD del elemento raíz XML.</summary>
      <returns>Tipo de datos XSD (documento de esquema XML), tal y como se define en el documento de World Wide Web Consortium (www.w3.org), XML Schema Part 2: Datatypes. Datatypes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML que generan y reconocen los métodos <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> y <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />, respectivamente, de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>El nombre del elemento raíz XML generado y reconocido en una instancia de documento XML.El valor predeterminado es el nombre de la clase serializada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en null en el atributo xsi:nil establecido en true.</summary>
      <returns>true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento raíz XML.</summary>
      <returns>Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>Cuando se aplica a un tipo que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" />, almacena el nombre de un método estático del tipo que devuelve un esquema XML y un <see cref="T:System.Xml.XmlQualifiedName" /> (o <see cref="T:System.Xml.Schema.XmlSchemaType" /> para tipos anónimos) que controla la serialización del tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> para un método estático especificado en el tipo de destino.</summary>
      <param name="methodName">Nombre del método estático que debe implementarse.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Obtiene o establece un valor que determina si la clase de destino es un carácter comodín, o si el esquema de la clase contiene solo un elemento xs:any.</summary>
      <returns>Es true si la clase es un carácter comodín o si el esquema contiene solo el elemento xs:any; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Obtiene el nombre del método estático que proporciona el esquema XML del tipo y el nombre de su tipo de datos de esquema XML.</summary>
      <returns>Nombre del método estático invocado por la infraestructura XML para devolver un esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Indica a <see cref="T:System.Xml.Serialization.XmlSerializer" /> que el miembro debe tratarse como texto XML cuando se serializa o se deserializa la clase contenedora.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del miembro que se va a serializar. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos de lenguaje XSD (definición de esquemas XML) del texto generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Tipo de datos Esquemas XML (XSD), tal y como se define en el documento de World Wide Web Consortium (www.w3.org), XML Schema Part 2: Datatypes.</returns>
      <exception cref="T:System.Exception">El tipo de datos de esquema XML especificado no puede asignarse al tipo de datos .NET. </exception>
      <exception cref="T:System.InvalidOperationException">El tipo de datos de esquema XML especificado no es válido para la propiedad y no puede convertirse en un tipo de miembro. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Obtiene o establece el tipo del miembro.</summary>
      <returns>
        <see cref="T:System.Type" /> del miembro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Controla el esquema XML generado cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el destino del atributo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> y especifica el nombre del tipo XML.</summary>
      <param name="typeName">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase). </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Obtiene o establece un valor que determina si el tipo de esquema resultante es un tipo XSD anónimo.</summary>
      <returns>Es true si el tipo de esquema resultante es un tipo XSD anónimo; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Obtiene o establece un valor que indica si se incluye o no el tipo en los documentos del esquema XML.</summary>
      <returns>Es true para incluir el tipo en los documentos del esquema XML; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del tipo XML.</summary>
      <returns>Espacio de nombres del tipo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Obtiene o establece el nombre del tipo XML.</summary>
      <returns>Nombre del tipo XML.</returns>
    </member>
  </members>
</doc>