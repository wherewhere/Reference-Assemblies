<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Xna.Framework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Xna.Framework.AssemblyRefs">
            <summary>
            A static class that provides string constants for assembly strong names.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.AssemblyRefs.Versions.CurrentAssemblyVersion">
            <summary>
            The current XNA Framework assembly version (4.0.0.0).
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameClock">
            <summary>
            Provides mechanisms for tracking elapsed time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameClock.#ctor">
            <summary>
            Constructs a new GameClock and sets the CurrentTime
            to zero.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameClock.Reset">
            <summary>
            Resets the clock back to zero time.  CurrentTime will be zero.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameClock.UpdateElapsedTime">
            <summary>
            Updates ElapsedAdjustedTime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameClock.AdvanceFrameTime">
            <summary>
            Acvance frame time measure point. Call this once per "frame".
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameClock.Suspend">
            <summary>
            Temporarily disconnects the game clock from the real clock.  Time
            between a Suspend and Resume is not accumulated into game time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameClock.Resume">
            <summary>
            Resumes from a previous suspend.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameClock.CurrentTime">
            <summary>
            Gets the amount of time that has real clock time (real cycles) elapsed 
            since the last call to Reset().  Updated during Step()
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameClock.ElapsedTime">
            <summary>
            Gets the amount of time that elapsed between the last
            two successive calls to Step() (i.e. elapsed time
            since the last frame).  
            
            This value is NOT adjusted for time lost to processing
            windows messages.
            
            Updated during Step()
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameClock.ElapsedAdjustedTime">
            <summary>
            Gets the amount of time that elapsed between the last
            two successive calls to Step() (i.e. elapsed time
            since the last frame).  
            
            This value is adjusted for time lost to processing
            windows messages.
            
            Updated during Step()
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameDispatcher">
            <summary>
            This class is used to manage a set of GameTimers for running a game
            using the new GameTimer mechanics.  The implementation maintains the
            correct sort orders and executes updates at the correct intervals as
            specified by the user.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.#ctor">
            <summary>
            Constructs a GameDispatcher instance.  This class is currently
            a singleton class so the constructor is private.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.RegisterTimer(Microsoft.Xna.Framework.GameTimer)">
            <summary>
            Registers a timer with the dispatcher.  The method will
            register the frame action, draw action, and update action
            all at once.
            </summary>
            <param name="timer">The GameTimer to register.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.ReregisterFrameAction(Microsoft.Xna.Framework.GameTimer)">
            <summary>
            Re-registers just the frame action for a specific timer.  It will
            remove the current registered frame action callback if it exists.
            </summary>
            <param name="timer">The GameTimer to register.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.ReregisterDraw(Microsoft.Xna.Framework.GameTimer)">
            <summary>
            Re-registers just the draw action for a specific timer.  It will
            remove the current registered draw action callback if it exists.
            </summary>
            <param name="timer">The GameTimer to register.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.UnregisterTimer(Microsoft.Xna.Framework.GameTimer)">
            <summary>
            Unregisters all registered actions for the specified timer.
            </summary>
            <param name="timer">The GameTimer to remove from the dispatcher.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.ResetElapsedTime">
            <summary>
            Resets the game clock back to zero and re-initializes the registered GameTimer
            instances back to there starting values.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.SuppressFrame">
            <summary>
            Causes the current frame to stop and moves to the next iteration.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.RunFrame">
            <summary>
            Runs a single iteration of the frame and draw callbacks plus all necessary updates
            to bring them up to the current total game time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.AdvanceUpdates(System.TimeSpan)">
            <summary>
            Advances all updates to the current total game time.  This means updates
            may run many times to catch up to the current time if necessary.
            </summary>
            <param name="elapsedTime">The elapsed time since last update.</param>
            <returns>Returns true if any update fired else false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.InsertOrderedTimer(System.Collections.Generic.List{Microsoft.Xna.Framework.GameTimer},Microsoft.Xna.Framework.GameTimer,System.Collections.Generic.IComparer{Microsoft.Xna.Framework.GameTimer})">
            <summary>
            Inserts a specified timer into the specified list based on sorting as determined by
            the specified comparer.
            </summary>
            <param name="list">The list to insert into.</param>
            <param name="timer">The GameTimer instance to insert.</param>
            <param name="comparer">The comparer used for sort order.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.HookSilverlightTick">
            <summary>
            This method is used to register for the SL game update tick event.
            Silverlight is used to pump our game loop for the SL + XNA direct rendering applications.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameDispatcher.UnhookSilverlightTick">
            <summary>
            This method is used to unregister the SL game update tick event.
            Silverlight is used to pump our game loop for the SL + XNA direct rendering applications.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameDispatcher.SkipTickRegisterForDirectRendering">
            <summary>
            Gets or sets a flag specifying that the constructor for the dispatcher should
            not register with the SL Direct Rendering Game Update tick event.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameDispatcher.SuppressDraw">
            <summary>
            Gets or sets a flag to suppress all draw callbacks.  This is an internal
            property used by the SL host to handle cases where we are obscured and/or
            should be saving processing power.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameDispatcher.CurrentTime">
            <summary>
            Gets or sets a flag specifying whether the dispatcher is currently suspended.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameDispatcher.GameClock">
            <summary>
            Gets a reference to the internal GameClock being used by the dispatcher.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameDispatcher.FrameOrderComparer">
            <summary>
            This class is used to properly insert a frame action into the
            sorted frame action list.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameDispatcher.UpdateOrderComparer">
            <summary>
            This class is used to properly insert an update action into the
            sorted update action list based on order and update time.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameDispatcher.DrawOrderComparer">
            <summary>
            This class is used to properly insert an draw action into the
            sorted draw action list.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameTimer">
            <summary>
            Manages a timer used to fire actions at specific times for updating a game.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.#ctor">
            <summary>
            Constructs a new GameTimer instance for managing game actions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.SuppressFrame">
            <summary>
            Suppresses the current frame being run if one is currently running.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.ResetElapsedTime">
            <summary>
            Resets the game timing state.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.Start">
            <summary>
            Starts the GameTimer instance so it will begin firing actions as necessary.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.Stop">
            <summary>
            Stops the GameTimer instance from firing any more actions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.RaiseFrameAction">
            <summary>
            Used internally by the GameDispatcher class to invoke any registered
            frame actions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.IsUpdateReady(System.TimeSpan)">
            <summary>
            Used internally by the GameDispatcher class to determine whether the
            update actions on this instance should fire (i.e. it is time for them
            to fire).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.RaiseUpdate(System.TimeSpan,System.TimeSpan)">
            <summary>
            Used internally by the GameDispatcher class to invoke any registered
            update actions.
            </summary>
            <param name="totalTime">Current total game time.</param>
            <param name="elapsedTime">The elapsed time since last update.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimer.RaiseDraw(Microsoft.Xna.Framework.GameTimerEventArgs)">
            <summary>
            Used internally by the GameDispatcher class to invoke any registered
            draw actions.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.GameTimer.Draw">
            <summary>
            An action that is fired once per frame to allow games to run any drawing
            code necessary.
            </summary>
            <remarks>
            This action is always fired after all frame and update actions.
            
            Draw actions are not fired for frames that have no updates.
            </remarks>
        </member>
        <member name="E:Microsoft.Xna.Framework.GameTimer.FrameAction">
            <summary>
            An action that is fired once per frame to perform any frame based game
            updates.
            </summary>
            <remarks>
            This action is always fired before any update or draw actions.
            </remarks>
        </member>
        <member name="E:Microsoft.Xna.Framework.GameTimer.Update">
            <summary>
            An action fired at an update interval as specified by the UpdateInterval property.
            </summary>
            <remarks>
            This action is always fired after the frame actions but before the draw actions.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimer.NextUpdate">
            <summary>
            Gets the time that the next update action will be fired for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimer.DrawOrder">
            <summary>
            Gets or sets the sort order for the Draw action on this instance.  If
            multiple GameTimer instances are currently running, this specifies the
            order at which the actions are fired.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimer.FrameActionOrder">
            <summary>
            Gets or sets the sort order for the frame action on this instance.  If
            multiple GameTimer instances are currently running, this specifies the
            order at which the actions are fired.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimer.UpdateOrder">
            <summary>
            Gets or sets the sort order for the update action on this instance.  If
            multiple GameTimer instances are currently running, this specifies the
            order at which the actions are fired.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimer.UpdateInterval">
            <summary>
            Gets or sets the update interval for the update action.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.GameTimerEventArgs">
            <summary>
            A snapshot of the game timing state.  The values provided are solely
            based on game time and not real time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimerEventArgs.#ctor">
            <summary>
            Constructs an empty GameTimerEventArgs with all values set to TimeSpan.Zero;
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameTimerEventArgs.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Constructs a GameTimerEventArgs with the given values.
            </summary>
            <param name="totalTime">The amount of game time since the start of the game.</param>
            <param name="elapsedTime">The amount of elapsed game time.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimerEventArgs.ElapsedTime">
            <summary>
            The amount of elapsed game time.  The reference point from which the
            elapsed time is measured depends on context in which this object is used.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameTimerEventArgs.TotalTime">
            <summary>
            The amount of game time since the start of the game.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioEmitter">
            <summary>Class to hold emitter data for 3D audio calculations.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEmitter.#ctor">
            <summary>Create an AudioEmitter.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Position">
            <summary>
            Position of the emitter, in world units.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Velocity">
            <summary>
            Velocity of the emitter, in world units.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Forward">
            <summary>
            Forward direction of the emitter.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Up">
            <summary>
            Up direction of the emitter.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.DopplerScale">
            <summary>
            Doppler shift scalar used to exaggerate the doppler-shift effect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioListener">
            <summary>Class to hold listener data for 3D audio calculations.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioListener.#ctor">
            <summary>Create an AudioListener.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Position">
            <summary>
            Position of the listener, in world units.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Velocity">
            <summary>
            Velocity of the listener, in world units.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Forward">
            <summary>
            Forward direction of the listener.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Up">
            <summary>
            Up direction of the listener.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundEffectUnsafeNativeMethods">
            <summary>
            Holds all interop calls pertaining to the SoundEffect/SoundEffectInstance api
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.MicrophoneUnsafeNativeMethods">
            <summary>
            Holds all interop calls to the Microphone api
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.NoMicrophoneConnectedException">
            <summary>
            Exception thrown when calls are made on a disconnected microphone.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerAttribute">
            <summary>
            Marks a field or property to control how it is serialized, or to
            indicate that protected or private data should be included.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.#ctor">
            <summary>
            Constructs an empty serialization descriptor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.Clone">
            <summary>
            Makes a copy of the current object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.ElementName">
            <summary>
            Specifies the XML element name (default=name of the managed type member).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.FlattenContent">
            <summary>
            Write member contents directly into the current XML context,
            rather than wrapping the member in a new XML element (default=false).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.Optional">
            <summary>
            Don't bother writing this element if the member is null, and gracefully
            skip past it if not found when deserializing XML (default=false).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.AllowNull">
            <summary>
            Allow this member to have a null value (default=true).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.SharedResource">
            <summary>
            Indicates that this member may be referenced from multiple parents,
            so it should be serialized as a unique ID reference, then the actual
            object data only written once at the end of the file (default=false).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.CollectionItemName">
            <summary>
            For collection members, specifies the XML element
            name for each item in the collection (default="Item").
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.HasCollectionItemName">
            <summary>
            Do we have an explicit CollectionItemName string, or are we just using the default value?
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute">
            <summary>
            Marks a collection class to specify the XML element name for each item in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute.CollectionItemName">
            <summary>
            Gets the XML element name for each item in the collection.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerIgnoreAttribute">
            <summary>
            Marks public fields or properties to prevent them being serialized.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute">
            <summary>
            Marks a content data class to specify a format version number.
            Increasing this value will prevent mismatched data files being
            read from the .xnb binary format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute.TypeVersion">
            <summary>
            Gets a format version number for this type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute">
            <summary>
            Marks the design time version of a content data class to
            specify what type it will be loaded into at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute.RuntimeType">
            <summary>
            Gets the assembly qualified name of the runtime target type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentLoadException">
            <summary>
            Exception used to report errors from the ContentManager.Load method.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentLoadException.#ctor">
            <summary>
            Constructs an empty exception.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentLoadException.#ctor(System.String)">
            <summary>
            Constructs an exception with the specified error message.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentLoadException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs an exception with the specified error message and inner exception.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ResourceContentManager">
            <summary>
            ContentManager subclass which is specialized to read from .resx resource
            files, rather than directly from individual files on disk.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentManager">
            <summary>
            The content manager is the runtime component which rehydrates managed
            objects from the binary files produced by the design time content pipeline.
            It also manages the lifespan of the loaded objects: disposing the content
            manager will also dispose any assets which are themselves IDisposable.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.#ctor(System.IServiceProvider)">
            <summary>
            Constructs a content manager rooted off the same directory as the title executable.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.#ctor(System.IServiceProvider,System.String)">
            <summary>
            Constructs a content manager  rooted off the specified directory.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.RecordDisposableObject(System.IDisposable)">
            <summary>
            Adds a new object to be disposed when we are unloaded.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.Dispose">
            <summary>
            Destroys the content manager , and disposes all assets that were loaded by it.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)">
            <summary>
            Destroys the content manager , and disposes all assets that were loaded by it.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.Unload">
            <summary>
            Disposes all data that was loaded by this manager.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)">
            <summary>
            Loads an asset from disk.
            </summary>
            <typeparam name="T">Type of the asset to be loaded.</typeparam>
            <param name="assetName">Asset name, relative to the loader root directory, and not including the .xnb file extension.</param>
            <returns>The loaded asset. Repeated calls to load the same asset will return the same object instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})">
            <summary>
            Low level worker method for reading asset data. This routine loads a single
            XNB file from disk, but unlike the public Load method it does not track what
            assets have already been loaded, and will return a fresh copy of the asset
            each time it is called rather than trying to share a single instance.
            
            If you want to customize how shared assets are managed, you can do that by
            overriding the Load method, using your own code to keep track of what has
            already been loaded, and then calling ReadAsset when you determine that you
            do actually need to read some data from disk.
            
            If you provide a recordDisposableObject delegate, this will be called each
            time the loader encounters a type that implements IDisposable. This replaces
            the default lifespan management behavior, so the regular ContentManager.Unload
            call will no longer have any effect. It is your responsibility to keep track
            of all the disposable objects and ensure they are disposed at a suitable time.
            
            If you pass null for recordDisposableObject, the default lifespan tracking
            will be used, so unloading or disposing the content manager will free
            everything that has been loaded through it.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)">
            <summary>
            Opens a stream for reading the specified asset. Derived classes
            can replace this to implement packfiles or asset compression.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentManager.GetByteBuffer(System.Int32)">
            <summary>
            Gets a reusable IO buffer, to reduce loading garbage.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider">
            <summary>
            Gets the component service provider.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentManager.RootDirectory">
            <summary>
            Gets the root directory of this content manager.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor(System.IServiceProvider,System.Resources.ResourceManager)">
            <summary>
            Constructs a content manager that will read from the specified ResourceManager.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream(System.String)">
            <summary>
            Opens a stream for reading the specified resource.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ArrayReader`1">
            <summary>
            Read array types.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentTypeReader`1">
            <summary>
            Generic wrapper around ContentTypeReader adds strong typing.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentTypeReader">
            <summary>
            Worker for reading a specific managed type from binary format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor(System.Type)">
            <summary>
            Constructs a custom reader for the specified type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)">
            <summary>
            Creation hook for looking up and caching any nested type readers.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)">
            <summary>
            Reads an object from binary format.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType">
            <summary>
            Gets the type handled by this reader component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion">
            <summary>
            Gets a format version number for this type.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject">
            <summary>
            Is this component able to load data into an existing object, or must it always construct a new instance?
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader`1.#ctor">
            <summary>
            Constructs a custom reader.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader`1.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)">
            <summary>
            Cast the base read call to a strong type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader`1.Read(Microsoft.Xna.Framework.Content.ContentReader,`0)">
            <summary>
            Strongly typed version of the read method.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.DictionaryReader`2">
            <summary>
            Read System.Collections.Generic.Dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.EnumReader`1">
            <summary>
            Read enum types.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ExternalReferenceReader">
            <summary>
            Read external file references.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ListReader`1">
            <summary>
            Read System.Collections.Generic.List.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Vector2Reader">
            <summary>
            Read Vector2 data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Vector3Reader">
            <summary>
            Read Vector3 data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Vector4Reader">
            <summary>
            Read Vector4 data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.MatrixReader">
            <summary>
            Read Matrix data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.QuaternionReader">
            <summary>
            Read Quaternion data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.PlaneReader">
            <summary>
            Read Plane data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.PointReader">
            <summary>
            Read Point data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.RectangleReader">
            <summary>
            Read Rectangle data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.BoundingBoxReader">
            <summary>
            Read BoundingBox data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.BoundingSphereReader">
            <summary>
            Read BoundingSphere data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.BoundingFrustumReader">
            <summary>
            Read BoundingFrustum data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.RayReader">
            <summary>
            Read Ray data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.CurveReader">
            <summary>
            Read Curve data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ColorReader">
            <summary>
            Read Color data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.NullableReader`1">
            <summary>
            Read nullable types.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ObjectReader">
            <summary>
            Dummy reader to allow using System.Object as a polymorphic base type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.StringReader">
            <summary>
            Read strings.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ByteReader">
            <summary>
            Read bytes.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.SByteReader">
            <summary>
            Read signed bytes.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Int16Reader">
            <summary>
            Read shorts.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.UInt16Reader">
            <summary>
            Read unsigned shorts.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Int32Reader">
            <summary>
            Read integers.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.UInt32Reader">
            <summary>
            Read unsigned integers.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.Int64Reader">
            <summary>
            Read longs.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.UInt64Reader">
            <summary>
            Read unsigned longs.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.SingleReader">
            <summary>
            Read floats.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.DoubleReader">
            <summary>
            Read doubles.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.BooleanReader">
            <summary>
            Read booleans.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.CharReader">
            <summary>
            Read characters.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.DateTimeReader">
            <summary>
            Read DateTime objects.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.TimeSpanReader">
            <summary>
            Read TimeSpan objects.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.DecimalReader">
            <summary>
            Read Decimal objects.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.FrameworkResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.AllPlayersFolder">
            <summary>
              Looks up a localized string similar to AllPlayers.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.AloneInTheParty">
            <summary>
              Looks up a localized string similar to You must have at least two party members in the Party..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.Apply3DBeforePlaying">
            <summary>
              Looks up a localized string similar to You must call Apply3D on a Cue before calling Play to be able to call Apply3D after calling Play..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ArrayMultipleFour">
            <summary>
              Looks up a localized string similar to The array {0} must have a length that is a multiple of four..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BackBufferBadSize">
            <summary>
              Looks up a localized string similar to The back buffer size requested is too large or too small..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnb">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbGraphicsProfile">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. This file was compiled for the {1} profile, and cannot be loaded into a {2} GraphicsDevice..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbMagic">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. This is not a compiled content file..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbPlatform">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. This file was compiled for the wrong target platform..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbSize">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. File has been truncated..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbTypeVersion">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. File contains the wrong version of type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbVersion">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. This file was compiled using the wrong version of the XNA Framework..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BadXnbWrongType">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. File contains {1} but trying to load as {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BeginMustBeCalledBeforeDraw">
            <summary>
              Looks up a localized string similar to Begin must be called successfully before a Draw can be called..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BeginMustBeCalledBeforeEnd">
            <summary>
              Looks up a localized string similar to Begin must be called successfully before End can be called..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BindPoseNotAvailable">
            <summary>
              Looks up a localized string similar to BindPose is not accessible until AvatarRenderer.State value is AvatarRendererState.Ready..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BlobStreamIsNotExpandable">
            <summary>
              Looks up a localized string similar to Blob stream is not expandable..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BoundingBoxZeroPoints">
            <summary>
              Looks up a localized string similar to You should have at least one point in points.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BoundingSphereZeroPoints">
            <summary>
              Looks up a localized string similar to You should have at least one point in points..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BoundStateObject">
            <summary>
              Looks up a localized string similar to Cannot change read-only {0}. State objects become read-only the first time they are bound to a GraphicsDevice. To change property values, create a new {0} instance..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.BuiltInEffectWrongTextureType">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. File references a {1} but {2} requires a {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CallFrameworkDispatcherUpdate">
            <summary>
              Looks up a localized string similar to FrameworkDispatcher.Update has not been called. Regular FrameworkDispatcher.Update calls are necessary for fire and forget sound effects and framework events to function correctly. See http://go.microsoft.com/fwlink/?LinkId=193853 for details..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotCallSpriteBeginTwice">
            <summary>
              Looks up a localized string similar to Begin cannot be called again before a successful call to End..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotClearNullDepth">
            <summary>
              Looks up a localized string similar to Cannot clear depth or stencil because the device does not have an active depth or stencil buffer..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotDrawNoData">
            <summary>
              Looks up a localized string similar to A valid vertex buffer (and a valid index buffer if you are using indexed primitives) must be set on the device before any draw operations may be performed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotDrawNoShader">
            <summary>
              Looks up a localized string similar to Both a vertex shader and pixel shader must be set on the device before any draw operations may be performed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotEndTwice">
            <summary>
              Looks up a localized string similar to An &quot;End&quot; function can only be called once for each call to &quot;Begin.&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotGetBackBufferActiveRenderTargets">
            <summary>
              Looks up a localized string similar to Cannot use GetBackBufferData when a render target is active..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotMixShader2and3">
            <summary>
              Looks up a localized string similar to Cannot mix shader model 3.0 with earlier shader models. If either the vertex shader or pixel shader is compiled as 3.0, they must both be..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotNextSpriteBeginImmediate">
            <summary>
              Looks up a localized string similar to Nesting more than one SpriteBatch.Begin when using a SpriteBatch with SpriteSortMode.Immediate is not allowed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotPresentActiveRenderTargets">
            <summary>
              Looks up a localized string similar to Cannot call Present when a render target is active..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotSetAlreadyUsedRenderTarget">
            <summary>
              Looks up a localized string similar to The render target has already been set on another index. Each render target may only be set on a single index at a time..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CannotUseFormatTypeAsManualWhenLocking">
            <summary>
              Looks up a localized string similar to GetData and SetData may not be called for textures of this format..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CantDisableLighting">
            <summary>
              Looks up a localized string similar to {0} does not support setting LightingEnabled to false..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CantRemoveLocalMachine">
            <summary>
              Looks up a localized string similar to The local NetworkMachine cannot be removed from the session..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CantSerializeMember">
            <summary>
              Looks up a localized string similar to Unable to serialize member {0} of {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CantSerializeReadOnlyNull">
            <summary>
              Looks up a localized string similar to Cannot deserialize {1}.{0} because it is both null and read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CharacterNotInFont">
            <summary>
              Looks up a localized string similar to The character &apos;{0}&apos; (0x{1:x4}) is not available in this SpriteFont. If applicable, adjust the font&apos;s start and end CharacterRegions to include this character..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ContentManagerCannotChangeRootDirectory">
            <summary>
              Looks up a localized string similar to This property cannot be changed after content has been loaded into the ContentManager..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CouldNotCreateResource">
            <summary>
              Looks up a localized string similar to This resource could not be created..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CouldNotDeleteContainerAlreadyInUse">
            <summary>
              Looks up a localized string similar to The Container could not be deleted because it is still in use..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CouldNotReadKeyboard">
            <summary>
              Looks up a localized string similar to An invalid operation occurred when trying to query the keyboard state. The result code was {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.CueNotFound">
            <summary>
              Looks up a localized string similar to An error occurred trying to play the cue named &quot;{0}&quot;. Is the cue name correct?.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DataNotAvailable">
            <summary>
              Looks up a localized string similar to The query data is not yet available. Use the IsComplete property to determine if the data is available before attempting to retrieve it..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DecompressionError">
            <summary>
              Looks up a localized string similar to Error decompressing content data..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DeviceCannotBeNullOnResourceCreate">
            <summary>
              Looks up a localized string similar to The GraphicsDevice must not be null when creating new resources..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DirectRenderingWrongAppType">
            <summary>
              Looks up a localized string similar to This XNA Framework graphics operation is only valid for the Silverlight application type..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DirectRenderingNotSupported">
            <summary>
              Looks up a localized string similar to This XNA Framework graphics operation is not supported in applications for Windows Phone 8 or newer..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DirectRenderingWrongMode">
            <summary>
              Looks up a localized string similar to This XNA Framework graphics operation is not valid when Silverlight rendering is active.  To use XNA Framework graphics, call GraphicsDevice.SetDirectRenderingMode(true)..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DriverError">
            <summary>
              Looks up a localized string similar to The driver has encountered an unexpected error..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DuplicateVertexElement">
            <summary>
              Looks up a localized string similar to Invalid VertexDeclaration. Duplicate element {0}{1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.DxtNotMultipleOfFour">
            <summary>
              Looks up a localized string similar to DXT compressed texture sizes must be multiples of four..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.EmptySongCollectionsCannotBePlayed">
            <summary>
              Looks up a localized string similar to Play cannot be called on empty SongCollection objects..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.EndMustBeCalledBeforeBegin">
            <summary>
              Looks up a localized string similar to Begin cannot be called again until End has been successfully called..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.Expired">
            <summary>
              Looks up a localized string similar to The XACT engine is a pre-release version and has expired..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerAlreadyInSession">
            <summary>
              Looks up a localized string similar to The specified gamer is already in the session..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerInvalid">
            <summary>
              Looks up a localized string similar to This Gamer is no longer valid. The profile may have been signed out..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerNull">
            <summary>
              Looks up a localized string similar to The {0} argument contained a null reference. All of the {0} must be valid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerServicesAlreadyInitialized">
            <summary>
              Looks up a localized string similar to The Gamer Services functionality is already initialized..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerServicesGuideAlreadyVisible">
            <summary>
              Looks up a localized string similar to The function cannot be completed at this time: the Guide UI is already active. Wait until Guide.IsVisible is false before issuing this call..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerServicesInitializeFromNonUIThread">
            <summary>
              Looks up a localized string similar to GamerServicesDispatcher.Initialize can not be called from a non-UI thread. Please call this from the UI thread..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GamerServicesNotInitialized">
            <summary>
              Looks up a localized string similar to The Gamer Services functionality must be initialized before you call this method. The easiest way to do that is to add a GamerServicesComponent to the Game.Components collection in the constructor of your Game class..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GesturesNotAvailable">
            <summary>
              Looks up a localized string similar to No gestures are available at this time.  TouchPanel.ReadGesture should only be called when TouchPanel.IsGestureAvailable is true..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GesturesNotEnabled">
            <summary>
              Looks up a localized string similar to This operation cannot be completed until TouchPanel.EnabledGestures is assigned..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.GuideIsShowing">
            <summary>
              Looks up a localized string similar to The storage selection user interface could not be shown. This can usually occur when the user interface is already being shown..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.IAsyncNotFromBegin">
            <summary>
              Looks up a localized string similar to The IAsyncResult parameter to this &quot;End&quot; function must be obtained by calling the matching &quot;Begin.&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InCallback">
            <summary>
              Looks up a localized string similar to An invalid method was called during an XACT callback..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.IndexBuffersMustBeSizedCorrectly">
            <summary>
              Looks up a localized string similar to IndexBuffers may be created only with types that are 16 bit or 32 bit in size..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InstallingTitleUpdate">
            <summary>
              Looks up a localized string similar to Gamer Services functionality is not available because a title update is being installed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InstancePlayFailedDueToLimit">
            <summary>
              Looks up a localized string similar to Failed to start sound effect instance due to instance limit..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidAccelerometer">
            <summary>
              Looks up a localized string similar to An invalid operation was performed. Accelerometer is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidApply3DCall">
            <summary>
              Looks up a localized string similar to The sound is not a 3D sound. Call Apply3D before the first Play call to configure it to be a 3D sound..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidAudioBuffer">
            <summary>
              Looks up a localized string similar to Ensure that the buffer length is non-zero and meets the block alignment requirements for the audio format..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidAudioBufferOffset">
            <summary>
              Looks up a localized string similar to Offset must be within the buffer boundaries and meet the block alignment requirements for the audio format..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidBufferSize">
            <summary>
              Looks up a localized string similar to Buffer size cannot be negative..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidBytesPerCluster">
            <summary>
              Looks up a localized string similar to The bytesPerCluster must be one of the following: 4K, 8K, 16K, 32K, or 64K. Passing zero will default to 4K..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidCacheContainerOpenAsyncResult">
            <summary>
              Looks up a localized string similar to The IAsyncResult is no longer valid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidCall">
            <summary>
              Looks up a localized string similar to The method call is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidCategory">
            <summary>
              Looks up a localized string similar to The specified category is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidContentVersion">
            <summary>
              Looks up a localized string similar to XACT could not load the data provided. Make sure you are using the correct version of the XACT tool..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidController">
            <summary>
              Looks up a localized string similar to An invalid operation was performed. Is your PlayerIndex correct?.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidCue">
            <summary>
              Looks up a localized string similar to The specified cue index is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidDataSize">
            <summary>
              Looks up a localized string similar to The type you are using for T in this method is an invalid size for this resource..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidDevice">
            <summary>
              Looks up a localized string similar to Resources can only be used on the GraphicsDevice that they were created on. This resource was not created on this GraphicsDevice..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidDisplayOrientation">
            <summary>
              Looks up a localized string similar to The specified DisplayOrientation is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidDynamicIsLoopedCall">
            <summary>
              Looks up a localized string similar to IsLooped property is not supported for DynamicSoundEffectInstance..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidEmitterDopplerScale">
            <summary>
              Looks up a localized string similar to The doppler scale of an audio emitter must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidEntryCount">
            <summary>
              Looks up a localized string similar to Invalid entry count..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidFileCacheSize">
            <summary>
              Looks up a localized string similar to The fileCacheSize must be between 20K and 1020K. Passing zero will default to 20K..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidInstanceStreams">
            <summary>
              Looks up a localized string similar to DrawInstancedPrimitives requires at least one vertex buffer to be bound with a non-zero instance frequency, and also at least one with a zero instance frequency..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidIsLoopedCall">
            <summary>
              Looks up a localized string similar to Loop must be set before the first Play call..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidLoopRegion">
            <summary>
              Looks up a localized string similar to Ensure that the loop region is defined in samples and within the buffer boundaries..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidMicrophoneBufferDuration">
            <summary>
              Looks up a localized string similar to Microphone buffer duration must be between 100ms and 1sec and  10ms aligned..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidNativeHandle">
            <summary>
              Looks up a localized string similar to A serious error has occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidOffsetCountLength">
            <summary>
              Looks up a localized string similar to Ensure that count is valid and meets the block alignment requirements for the audio format. Offset and count must define a valid region within the buffer boundaries..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidPanCall">
            <summary>
              Looks up a localized string similar to Pan cannot be set on a 3D sound. To ensure a 2D sound avoid calling Apply3D and ensure Pan is set before the first Play call..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidRectangle">
            <summary>
              Looks up a localized string similar to The rectangle is too large or too small for this resource..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidServiceProvider">
            <summary>
              Looks up a localized string similar to Invalid service provider passed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidSessionState">
            <summary>
              Looks up a localized string similar to This operation is only valid when the session state is NetworkSessionState.{0}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidSoundOffsetOrIndex">
            <summary>
              Looks up a localized string similar to The specified sound offset or index is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidStoragePath">
            <summary>
              Looks up a localized string similar to The specified storage path is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidStringFormat">
            <summary>
              Looks up a localized string similar to Invalid string format. Expected a string in the format &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidTitleContainerName">
            <summary>
              Looks up a localized string similar to Invalid filename. TitleContainer.OpenStream requires a relative URI..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidTotalSize">
            <summary>
              Looks up a localized string similar to The size of the data passed in is too large or too small for this resource..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidTouchPanel">
            <summary>
              Looks up a localized string similar to An invalid operation was performed. TouchPanel is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidTrackIndex">
            <summary>
              Looks up a localized string similar to The specified track index is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidUsage">
            <summary>
              Looks up a localized string similar to The method or function that was called cannot be used in the manner requested..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidVariableIndex">
            <summary>
              Looks up a localized string similar to The specified variable index is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidWaveIndex">
            <summary>
              Looks up a localized string similar to The specified wave index is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidWaveStream">
            <summary>
              Looks up a localized string similar to Ensure that the specified stream contains valid PCM mono or stereo wave data..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InvalidXactVolume">
            <summary>
              Looks up a localized string similar to Volume must be a positive float value..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.InviteeNotSignedIn">
            <summary>
              Looks up a localized string similar to The gamer profile that accepted this invite is no longer signed in..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.IsCompleteMustBeCalled">
            <summary>
              Looks up a localized string similar to Begin may not be called on this query object again before IsComplete has been checked..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LeaderboardColumnNotFound">
            <summary>
              Looks up a localized string similar to Column &apos;{0}&apos; is not present in this leaderboard..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LeaderboardColumnOverflow">
            <summary>
              Looks up a localized string similar to Too many leaderboard column writes. You can only write to {0} leaderboard columns per game session..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LeaderboardIsArbitrated">
            <summary>
              Looks up a localized string similar to Leaderboard &apos;{0}&apos; is arbitrated, so can only be written from ranked network sessions..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LeaderboardNotLocal">
            <summary>
              Looks up a localized string similar to Leaderboard &apos;{0}&apos; is not arbitrated, so can only be written by local gamers..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LeaderboardReaderCannotPage">
            <summary>
              Looks up a localized string similar to This LeaderboardReader cannot page in the specified direction..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LeaderboardWriteOverflow">
            <summary>
              Looks up a localized string similar to Too many leaderboard writes. You can only write to {0} leaderboards per game session..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEn400BadRequest">
            <summary>
              Looks up a localized string similar to LIVEn400BadRequest..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEn401Unauthorized">
            <summary>
              Looks up a localized string similar to No permission to access this service. Error code 401..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEn500InternalServerError">
            <summary>
              Looks up a localized string similar to Unexpected service error. Please contact your Account Manager. Error code 500..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEn503ServiceUnavailable">
            <summary>
              Looks up a localized string similar to Service is currently unavailable. Error code 503..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnAccountBanned">
            <summary>
              Looks up a localized string similar to This account has been banned from Xbox LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnAccountSuspended">
            <summary>
              Looks up a localized string similar to This account has been suspended due to Terms of Service violation..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnCountryNotSupported">
            <summary>
              Looks up a localized string similar to The country specified is currently unsupported. Unable to connect to Xbox LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnFlashUpdateRequired">
            <summary>
              Looks up a localized string similar to Phone software update required. Please update the phone software and try again..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnGamertagChangeRequired">
            <summary>
              Looks up a localized string similar to Please change the Gamertag to connect to Xbox LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnGamertagUpdateRequired">
            <summary>
              Looks up a localized string similar to Please update your Xbox LIVE account to connect to Xbox LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnInvalidUser">
            <summary>
              Looks up a localized string similar to This user&apos;s Xbox LIVE account does not have a valid Windows Live ID associated with it..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnNotSupportedTitle">
            <summary>
              Looks up a localized string similar to This game is not supported by Xbox LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnNoXBLAccount">
            <summary>
              Looks up a localized string similar to Your profile doesn&apos;t have Xbox LIVE account information..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnServiceNotProvisioned">
            <summary>
              Looks up a localized string similar to This user does not have an Xbox LIVE account..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnTermsOfServiceNotAccepted">
            <summary>
              Looks up a localized string similar to The Terms of Service has been updated. Please accept the new Terms of Service before connecting to Xbox LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnTitleUpdateRequired">
            <summary>
              Looks up a localized string similar to This version of the game is no longer supported by Xbox LIVE. Please download the latest version from Marketplace..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnUnexpectedNetworkError">
            <summary>
              Looks up a localized string similar to An unexpected network error has occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnXBLConnectionUnavailable">
            <summary>
              Looks up a localized string similar to Unable to connect to Xbox LIVE. Please log onto www.xbox.com to troubleshoot this issue..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LIVEnXBLNotEnabled">
            <summary>
              Looks up a localized string similar to Xbox LIVE is not enabled on this device..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.LocalDeviceLibrary">
            <summary>
              Looks up a localized string similar to Local device library.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MissingNativeDependency">
            <summary>
              Looks up a localized string similar to Failed to load {0}. Please verify that you have the XNA Framework installed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MissingVertexShaderInput">
            <summary>
              Looks up a localized string similar to The current vertex declaration does not include all the elements required by the current vertex shader..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MissingVertexShaderInputDetails">
            <summary>
              Looks up a localized string similar to {0} {1}{2} is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MobileNoInstancing">
            <summary>
              Looks up a localized string similar to The Windows Phone platform does not support DrawInstancedPrimitives..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ModelHasNoEffect">
            <summary>
              Looks up a localized string similar to ModelMeshPart has a null Effect..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ModelHasNoIEffectMatrices">
            <summary>
              Looks up a localized string similar to This model contains a custom effect which does not implement the IEffectMatrices interface, so it cannot be drawn using Model.Draw. Instead, call ModelMesh.Draw after setting the appropriate effect parameters..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MoreData">
            <summary>
              Looks up a localized string similar to There is more data available than the specified buffer size can hold..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MustBeValidIndex">
            <summary>
              Looks up a localized string similar to This parameter must be a valid index within the array..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MustCallBeginSprite">
            <summary>
              Looks up a localized string similar to Begin must be called on SpriteBatch before you can call this method..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MustDrawSomething">
            <summary>
              Looks up a localized string similar to When drawing, at least one primitive must be drawn..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MustResolveRenderTarget">
            <summary>
              Looks up a localized string similar to The render target must not be set on the device when it is used as a texture..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MustRetrieveAtLeastOne">
            <summary>
              Looks up a localized string similar to When attempting to call GetValue which returns an array, you must request that at least one member be returned..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.MustUserShaderCode">
            <summary>
              Looks up a localized string similar to You can only construct Effect with data that was already compiled. This data is not a compiled effect..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NegativePlaneDistance">
            <summary>
              Looks up a localized string similar to You should specify positive value for {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NegativeRadius">
            <summary>
              Looks up a localized string similar to Radius must be greater than 0..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkError">
            <summary>
              Looks up a localized string similar to An error occurred while accessing the network..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkGamerDisposed">
            <summary>
              Looks up a localized string similar to This NetworkGamer is no longer valid. The gamer may have left the session..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkGamerNotLocal">
            <summary>
              Looks up a localized string similar to This method cannot be called on remote gamer instances. It is only valid when NetworkGamer.IsLocal is true. If you are looping over the contents of the NetworkSession.AllGamers collection, consider using NetworkSession.LocalGamers instead..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkGamerRequired">
            <summary>
              Looks up a localized string similar to An instance of NetworkGamer is required in order to access the leaderboard..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkGamerWrongSession">
            <summary>
              Looks up a localized string similar to This NetworkGamer belongs to the wrong session..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkNotAvailable">
            <summary>
              Looks up a localized string similar to Network not available. Networking is turned off or not connected..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkOperationTimedOut">
            <summary>
              Looks up a localized string similar to Network operation timed out..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NetworkSessionPropertiesReadOnly">
            <summary>
              Looks up a localized string similar to This NetworkSessionProperties collection is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoAudioPlaybackDevicesFound">
            <summary>
              Looks up a localized string similar to Unable to find any valid audio playback devices..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoCreatorsClub">
            <summary>
              Looks up a localized string similar to The current profile does not have an XNA Creators Club membership, which is required to sign in to the LIVE service. To continue, purchase a membership from Xbox LIVE Marketplace, or switch to a local gamer profile..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoDefaultConstructor">
            <summary>
              Looks up a localized string similar to Cannot deserialize type {0} because it does not have a parameterless constructor..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoDeviceConnected">
            <summary>
              Looks up a localized string similar to The device is no longer connected..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoGraphicsDevice">
            <summary>
              Looks up a localized string similar to GraphicsDevice not found..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoGraphicsDeviceContent">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. GraphicsDevice component not found..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoJoinInProgress">
            <summary>
              Looks up a localized string similar to This operation is not valid because join-in-progress is disabled..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NonZeroInstanceFrequency">
            <summary>
              Looks up a localized string similar to Non-instanced draw calls are not valid when a vertex buffer is bound with a non-zero instance frequency..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoProjectGuid">
            <summary>
              Looks up a localized string similar to Could not find a valid project identifier. In order to use Gamer Services functionality, you must have a GuidAttribute on your main game assembly..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoPublicSlots">
            <summary>
              Looks up a localized string similar to Session full. The session does not have any open public slots..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotCurrentTechnique">
            <summary>
              Looks up a localized string similar to Cannot Apply an EffectPass that is not from the CurrentTechnique..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotEnoughCorners">
            <summary>
              Looks up a localized string similar to You have to have at least 8 elements to copy corners..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotEnoughPacketSpace">
            <summary>
              Looks up a localized string similar to The graphics buffer is not large enough for this data..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotEnoughSourceSize">
            <summary>
              Looks up a localized string similar to Source array must be equal or bigger than requested length..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotEnoughTargetSize">
            <summary>
              Looks up a localized string similar to Target array size must be equal or bigger than source array size..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotFound">
            <summary>
              Looks up a localized string similar to The requested item was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NotInvited">
            <summary>
              Looks up a localized string similar to NetworkSession.JoinInvited can only be called in response to the InviteAccepted notification event..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NoWaveBank">
            <summary>
              Looks up a localized string similar to No wavebank exists for the requested operation..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NullGraphicsDeviceService">
            <summary>
              Looks up a localized string similar to Could not obtain graphics device service from the service provider..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NullNotAllowed">
            <summary>
              Looks up a localized string similar to This method does not accept null for this parameter..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NullWindowHandleNotAllowed">
            <summary>
              Looks up a localized string similar to PresentationParameters.DeviceWindowHandle must not be null..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.NumberVerticesMustBeGreaterZero">
            <summary>
              Looks up a localized string similar to When drawing indexed primitives, the number of vertices passed in must be greater than zero..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ObjectDisposedException">
            <summary>
              Looks up a localized string similar to This object has already been disposed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OffsetNotValid">
            <summary>
              Looks up a localized string similar to The offset must be within the valid range for this resource..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OnlyOneCacheContainer">
            <summary>
              Looks up a localized string similar to Only one CacheContainer can be opened at a time..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OnlySupportedForLIVEn">
            <summary>
              Looks up a localized string similar to This feature is only supported when using the LIVE-Enabled service type..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OnlySupportedForXboxLIVE">
            <summary>
              Looks up a localized string similar to This feature is only supported on Xbox LIVE service..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OpenResourceNotBinary">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Not a binary resource..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OpenResourceNotFound">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Resource not found..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OpenStreamError">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Cannot open file..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OpenStreamNotFound">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. File not found..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OppositePlanes">
            <summary>
              Looks up a localized string similar to Near plane distance is larger than Far plane distance. Near plane distance must be smaller than Far plane distance..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OutOfMemoryDrawUserPrimitives">
            <summary>
              Looks up a localized string similar to The amount of data being used to draw is too large for this drawing operation..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OutRangeFieldOfView">
            <summary>
              Looks up a localized string similar to {0} takes a value between 0 and Pi (180 degrees) in radians..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.OverTheInstancePacketLimit">
            <summary>
              Looks up a localized string similar to Please ensure that there are less than 64 buffers pending on this instance..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PacketArrayTooSmall">
            <summary>
              Looks up a localized string similar to The specified array is too small to receive the incoming {0} byte network packet..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PacketQueueFull">
            <summary>
              Looks up a localized string similar to Network data could not be sent because the output packet queue is full. You should send data less frequently, or use an unreliable SendDataOptions mode..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PlayerDeviceAlreadyOpened">
            <summary>
              Looks up a localized string similar to A new container cannot be opened until all previouses containers used by this PlayerIndex have been disposed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PlayerFourFolder">
            <summary>
              Looks up a localized string similar to Player4.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PlayerOneFolder">
            <summary>
              Looks up a localized string similar to Player1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PlayerThreeFolder">
            <summary>
              Looks up a localized string similar to Player3.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.PlayerTwoFolder">
            <summary>
              Looks up a localized string similar to Player2.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProFeatureNotSupported">
            <summary>
              Looks up a localized string similar to This feature is only available for Xbox LIVE Registered Developers..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileAspectRatio">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum {1} aspect ratio of {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileDataCountRange">
            <summary>
              Looks up a localized string similar to The count must be greater than zero and less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileDataIndexOutOfRange">
            <summary>
              Looks up a localized string similar to The index must be either 0, 1, or 2..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileDataOffsetRange">
            <summary>
              Looks up a localized string similar to The offset must be a valid index into dataBuffer..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileDataSizeTooBig">
            <summary>
              Looks up a localized string similar to The offset + count cannot exceed the size of the dataBuffer..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileFeatureNotSupported">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileFormatNotSupported">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support {1} format {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileInvalidBlendFormat">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support alpha blending or ColorWriteChannels when using rendertarget format {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileInvalidDevice">
            <summary>
              Looks up a localized string similar to Could not find a graphics device that supports the XNA Framework {0} profile..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileInvalidFilterFormat">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile requires TextureFilter to be Point when using texture format {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileMaxPrimitiveCount">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum of {1} primitives per draw call..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileMaxRenderTargets">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum of {1} simultaneous rendertargets..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileMaxVertexElements">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum of {1} simultaneous vertex elements..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileMaxVertexStreams">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum of {1} simultaneous vertex buffers..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileMaxVertexStride">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum vertex stride of {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNoIndexElementSize32">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support 32 bit indices. Use IndexElementSize.SixteenBits or a type that has a size of two bytes..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNoMinMaxSrcDestBlend">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile requires {1}SourceBlend and {1}DestinationBlend to be One when using {1}BlendFunction Min or Max..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNoSeparateAlphaBlend">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support separate alpha blend. BlendState.{1} and {2} must be set to the same value..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNotPowerOfTwo">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile requires {1} sizes to be powers of two..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNotPowerOfTwoDXT">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile requires DXT compressed {1} sizes to be powers of two. To use a non power of two {1}, disable DXT compression..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNotPowerOfTwoMipped">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile requires mipmapped {1} sizes to be powers of two. To use a non power of two {1}, remove the mipmaps..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNotPrivileged">
            <summary>
              Looks up a localized string similar to The current gamer profile does not have suitable privileges to perform this operation. You may require a LIVE Gold account, or need to change your parental control settings..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNotSignedIn">
            <summary>
              Looks up a localized string similar to A signed in gamer profile is required to perform this operation. A LIVE profile may also be required. There are no profiles currently signed in, or the profile is not signed in to LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileNoWrapNonPow2">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile requires TextureAddressMode to be Clamp when using texture sizes that are not powers of two..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfilePixelShaderModel">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support pixel shader model {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileTooBig">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile supports a maximum {1} size of {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileVertexShaderModel">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support vertex shader model {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProfileVertexTextureFormatNotSupported">
            <summary>
              Looks up a localized string similar to XNA Framework {0} profile does not support vertex texture format {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProxyAlreadyRunning">
            <summary>
              Looks up a localized string similar to Error initializing Games for Windows - LIVE. Another program is already using this functionality..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProxyCreateFailed">
            <summary>
              Looks up a localized string similar to Error running &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProxyInitializeFailed">
            <summary>
              Looks up a localized string similar to Error initializing Games for Windows - LIVE..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProxyMissingDependency">
            <summary>
              Looks up a localized string similar to Error running &apos;{0}. A required dependency such as the Games For Windows - LIVE or DirectX runtime may not be correctly installed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ProxyUpdateFailed">
            <summary>
              Looks up a localized string similar to Games for Windows - LIVE proxy process terminated unexpectedly..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.RankedNoJoinInProgress">
            <summary>
              Looks up a localized string similar to Ranked sessions do not support join-in-progress..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ReaderConstructedNewInstance">
            <summary>
              Looks up a localized string similar to ContentTypeReader {0} returned a new object instance from its Read method. This should have loaded data into the existingInstance parameter..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ReadOnly">
            <summary>
              Looks up a localized string similar to This {0} is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ReadOnlySharedResource">
            <summary>
              Looks up a localized string similar to Members marked with ContentSerializerAttribute.SharedResource cannot be read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ReflectiveReaderTypeNotFound">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Cannot find type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.RenderTargetsMustMatch">
            <summary>
              Looks up a localized string similar to All active render targets must be the same size with the same multisample type and bit depth..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.RequireNonNullAudioEngine">
            <summary>
              Looks up a localized string similar to You must pass in a valid audio engine..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ResourceDataMustBeCorrectSize">
            <summary>
              Looks up a localized string similar to The array is not the correct size for the amount of data requested..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ResourceInUse">
            <summary>
              Looks up a localized string similar to You may not call SetData on a resource while it is actively set on the GraphicsDevice. Unset it from the device before calling SetData..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ResourcesMustBeGreaterThanZeroSize">
            <summary>
              Looks up a localized string similar to Resource size must be greater than zero..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ResourceTooLarge">
            <summary>
              Looks up a localized string similar to The resource that is being created is too large..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SavedGameFolder">
            <summary>
              Looks up a localized string similar to SavedGames.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ScissorInvalid">
            <summary>
              Looks up a localized string similar to The scissor rectangle is invalid. The scissor rectangle cannot be larger than or outside of the current render target bounds..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SelectVariation">
            <summary>
              Looks up a localized string similar to A variation could not be selected..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionAlreadyExists">
            <summary>
              Looks up a localized string similar to Could not create object because a different session already exists. There can only be one NetworkSession or AvailableNetworkSessionCollection in use at a time. You must call Dispose on any previous session before creating a new one..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionEnded">
            <summary>
              Looks up a localized string similar to This operation is not valid because the session has ended..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionFindLocal">
            <summary>
              Looks up a localized string similar to NetworkSession.Find cannot be used with local session types..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionFull">
            <summary>
              Looks up a localized string similar to Session full. The specified session does not have enough open slots for all the local gamers signed in to this machine..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionNotFound">
            <summary>
              Looks up a localized string similar to Session not found. It may have ended, or there may be no network connectivity between the local machine and session host..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionNotHost">
            <summary>
              Looks up a localized string similar to This method can only be called by the session host..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SessionNotJoinable">
            <summary>
              Looks up a localized string similar to Session not joinable. You must wait for the host to return to the lobby before joining..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ShaderCodeSizeMustBeDword">
            <summary>
              Looks up a localized string similar to Effect code must have a size that is a multiple of four bytes..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ShadersMustBeCompiled">
            <summary>
              Looks up a localized string similar to Creating an effect requires that the shader code has been compiled..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ShowSignInPaneCountInvalid">
            <summary>
              Looks up a localized string similar to The paneCount argument is invalid. The valid options for this parameter are 1, 2, and 4..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SimulateMarketplacePurchaseCancelString">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SimulateMarketplacePurchaseOkString">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SimulateMarketplacePurchaseString">
             <summary>
               Looks up a localized string similar to Would you like to simulate purchasing the full version of this game?
            
            This screen is an emulation provided for testing. Once your game is available on LIVE Marketplace, the Marketplace purchase page will appear here instead..
             </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SimulateMarketplaceTitleString">
            <summary>
              Looks up a localized string similar to Test Purchase.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SkinnedEffectMaxBones">
            <summary>
              Looks up a localized string similar to SkinnedEffect supports a maximum of {0} bones..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SkinnedEffectWeightsPerVertex">
            <summary>
              Looks up a localized string similar to SkinnedEffect.WeightsPerVertex must be 1, 2, or 4..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.SongPlaybackFailed">
            <summary>
              Looks up a localized string similar to Song playback failed. Please verify that the song is not DRM protected. DRM protected songs are not supported for creator games..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.StaleSearchResult">
            <summary>
              Looks up a localized string similar to This session search result is no longer valid. NetworkSession.Find return data is only valid up until you create a NetworkSession or perform some other search..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.StreamNotSeekable">
            <summary>
              Looks up a localized string similar to The stream is required to be seekable..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.StreamTooLong">
            <summary>
              Looks up a localized string similar to The stream exceeds the maximum length of {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.StringCollectionInvalid">
            <summary>
              Looks up a localized string similar to The argument is invalid. It must contain between 1 and {0} strings. The strings cannot be null or empty, and must be less than {1} characters long..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.StringNullEmptyOrTooLong">
            <summary>
              Looks up a localized string similar to This string cannot be null or empty, and must be less than {0} characters long..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.StringTooLong">
            <summary>
              Looks up a localized string similar to This string must be less than {0} characters long..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TargetElapsedNegative">
            <summary>
              Looks up a localized string similar to The target elapsed time must be greater than or equal to zero.  Specify a non-negative value..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TargetElapsedTooLarge">
            <summary>
              Looks up a localized string similar to The target elapsed time is too large.  Specify a smaller value..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TitleNameNotNull">
            <summary>
              Looks up a localized string similar to You must pass in a non-null title name..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TooManyOperations">
            <summary>
              Looks up a localized string similar to The application is requesting more texture filtering operations than the device supports..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TooManyPendingAsyncOperations">
            <summary>
              Looks up a localized string similar to The asynchronous operation (IAsyncResult) could not be performed. There are too many pending operations..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TooManyRegions">
            <summary>
              Looks up a localized string similar to A maximum of 255 regions are allowed for this method..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TrialMode">
            <summary>
              Looks up a localized string similar to This functionality is not available when the game is running in trial mode..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TrueSkillNotHost">
            <summary>
              Looks up a localized string similar to TrueSkill score and team for non-ranked sessions can only be written by the host..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TypeReaderDuplicate">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. ContentTypeReader {1} conflicts with existing handler {2} for type {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TypeReaderInvalid">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Cannot instantiate ContentTypeReader {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TypeReaderNotFound">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Cannot find ContentTypeReader {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.TypeReaderNotRegistered">
            <summary>
              Looks up a localized string similar to Error loading &quot;{0}&quot;. Cannot find ContentTypeReader for {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.UnexpectedError">
            <summary>
              Looks up a localized string similar to An unexpected error has occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.UnknownError">
            <summary>
              Looks up a localized string similar to An unknown error occcured..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexElementBadUsage">
            <summary>
              Looks up a localized string similar to Invalid VertexDeclaration. Usage {0}{1} is out of range..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexElementOffsetNotMultipleFour">
            <summary>
              Looks up a localized string similar to Invalid VertexDeclaration. Vertex stride and VertexElement.Offset must be multiples of four..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexElementOutsideStride">
            <summary>
              Looks up a localized string similar to Invalid VertexDeclaration. Element {0}{1} does not fit within the specified vertex stride..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexElementsOverlap">
            <summary>
              Looks up a localized string similar to Invalid VertexDeclaration. Elements {0}{1} and {2}{3} are overlapping..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexStrideTooSmall">
            <summary>
              Looks up a localized string similar to The vertex stride is too small for the type of data requested. This is not allowed..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexTypeNotIVertexType">
            <summary>
              Looks up a localized string similar to Invalid vertex type. {0} does not implement the IVertexType interface..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexTypeNotValueType">
            <summary>
              Looks up a localized string similar to Invalid vertex type. {0} is not a value type..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexTypeNullDeclaration">
            <summary>
              Looks up a localized string similar to Invalid vertex type. {0} returned a null VertexDeclaration..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VertexTypeWrongSize">
            <summary>
              Looks up a localized string similar to Invalid vertex type. The size of {0} does not match the stride of its vertex declaration..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.ViewportInvalid">
            <summary>
              Looks up a localized string similar to The viewport is invalid. The viewport cannot be larger than or outside of the current render target bounds. The MinDepth and MaxDepth must be between 0 and 1..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VisualizationArrayTooSmall">
            <summary>
              Looks up a localized string similar to Length of visualization data buffers must be at least {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.VoiceDestructionFailed">
            <summary>
              Looks up a localized string similar to Failed to destroy the low-level voice..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.WaveBankNotPrepared">
            <summary>
              Looks up a localized string similar to The wave bank is not prepared..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.WmpMediaSource">
            <summary>
              Looks up a localized string similar to Local Windows Media Player library.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.WriteLeaderboardException">
            <summary>
              Looks up a localized string similar to WriteLeaderboard event handler failed. See InnerException for details..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.WriteOnlyGetNotSupported">
            <summary>
              Looks up a localized string similar to Calling GetData on a resource that was created with BufferUsage.WriteOnly is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.WrongNumberOfGamers">
            <summary>
              Looks up a localized string similar to There are an invalid number of gamers listed in the {0} argument. This method supports between {1} and {2} gamers..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.WrongTextureFormat">
            <summary>
              Looks up a localized string similar to The pixel format of the texture surface is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XactReadFile">
            <summary>
              Looks up a localized string similar to An error occurred while attempting to read a file..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XBLIGFeatureNotSupported">
            <summary>
              Looks up a localized string similar to This feature is only available to Xbox LIVE Indie Games developers..
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XdkUnexpectedError">
            <summary>
              Looks up a localized string similar to An unexpected error has occurred. ErrorCode=0x{0:x8}.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastAchievement">
            <summary>
              Looks up a localized string similar to achievement.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastAvatarAsset">
            <summary>
              Looks up a localized string similar to avatar asset.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastContextValue">
            <summary>
              Looks up a localized string similar to context value.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastGameMode">
            <summary>
              Looks up a localized string similar to game mode.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastGamerPicture">
            <summary>
              Looks up a localized string similar to gamer picture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastLeaderboard">
            <summary>
              Looks up a localized string similar to leaderboard.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastPresenceMode">
            <summary>
              Looks up a localized string similar to presence mode.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastProperty">
            <summary>
              Looks up a localized string similar to property or context.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkResources.XlastUnknown">
            <summary>
              Looks up a localized string similar to Unknown {0} &apos;{1}&apos;. This was not defined in the XLAST configuration..
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.FrameworkUIResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkUIResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkUIResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkUIResources.GamerServicesOkButton">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.FrameworkUIResources.GamerServicesCancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.FrameworkDispatcher">
            <summary>
            The framework dispatcher is responsible for dispatching events from various framework components, such as System.PowerStateChanged.
            These events will be fired when the Update method is called. Most developers will not have to worry about this, because the base 
            Game class will call this method at the appropriate time. Developers who are not using the Game class will have to call Update themselves.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.FrameworkCallbackLinker">
            <summary>
            This dll does not know about other XNA dll's, so it cannot call into it to fire these events.
            Instead it proxies these events and have the dependent dll hook in from the other direction.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Logger">
            <summary>
            The Logger class is responsible for maintaining logging mechanisms for
            each platform.  This provides a layer of abstraction over separate
            platform-dependent logging mechanisms which allows all logging code
            within the framework to stay the same regardless of the state of the
            logging mechanisms.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Logger.LogEvent(Microsoft.Xna.Framework.LoggingEvent,System.String)">
            <summary>
            Use this to log an instaneous event.
            </summary>
            <param name="eventID">The unique identifier for the event.</param>
            <param name="message">A String containing data about the event.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Logger.BeginLogEvent(Microsoft.Xna.Framework.LoggingEvent,System.String)">
            <summary>
            Use this to mark the start of an event.  When coupled with an
            EndLogEvent marker using the same eventID, the logger will capture
            the time in between.
            </summary>
            <param name="eventID">The unique identifier for the event.</param>
            <param name="message">A String containing data about the event.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Logger.EndLogEvent(Microsoft.Xna.Framework.LoggingEvent,System.String)">
            <summary>
            Use this to mark the end of an event.  When coupled with a 
            BeginLogEvent marker using the same eventID, the logger will 
            capture the time in between.
            </summary>
            <param name="eventID">The unique identifier for the event.</param>
            <param name="message">A String containing data about the event.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.PlayerIndex">
            <summary>
            Index of a player used for both input and storage
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeystrokeFlags">
            <summary>
            Flags for a keystroke
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.ButtonState">
            <summary>State of a button</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadType">
            <summary>Type of the game pad</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePad">
            <summary>
            Used to manipulate and get data from a controller connected to your system
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Retrieve the current state of the gamepad of the associated player index,
            using the default deadzone type, which is GamePadDeadZone.IndependentAxes
            on Xbox and Windows, or GamePadDeadZone.None on Zune.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.GetState(Microsoft.Xna.Framework.PlayerIndex,Microsoft.Xna.Framework.Input.GamePadDeadZone)">
            <summary>
            Retrieve the current state of the gamepad of the associated player index,
            using the specified deadzone type
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.GetCapabilities(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Retrieve the current capabilities of the gamepad of the associated player index
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.SetVibration(Microsoft.Xna.Framework.PlayerIndex,System.Single,System.Single)">
            <summary>
            Set the vibration motor speeds of the gamepad
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadDeadZone">
            <summary>
            Describes what type of deadzone calculation should be applied when reading gamepad input.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadDeadZone.None">
            <summary>
            Disables deadzone calculation. This option is suitable for
            games that will apply their own deadzone calculations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadDeadZone.IndependentAxes">
            <summary>
            Applies deadzones independently to the X and Y axes. This option
            is suitable for games where the two stick axes are used to control
            independent values, for instance steering and accelerating a vehicle.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadDeadZone.Circular">
            <summary>
            Applies a circular deadzone computation to both axes. This option
            is suitable for games where the stick is used to control a two
            dimensional value, such as aiming a scope.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadDeadZoneUtils">
            <summary>
            Internal helper for applying deadzone computations.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDeadZoneUtils.ApplyLeftStickDeadZone(System.Int32,System.Int32,Microsoft.Xna.Framework.Input.GamePadDeadZone)">
            <summary>
            Applies a deadzone to the left thumbstick.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDeadZoneUtils.ApplyRightStickDeadZone(System.Int32,System.Int32,Microsoft.Xna.Framework.Input.GamePadDeadZone)">
            <summary>
            Applies a deadzone to the right thumbstick.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDeadZoneUtils.ApplyStickDeadZone(System.Int32,System.Int32,Microsoft.Xna.Framework.Input.GamePadDeadZone,System.Int32)">
            <summary>
            Applies a deadzone to a thumbstick input.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDeadZoneUtils.ApplyTriggerDeadZone(System.Int32,Microsoft.Xna.Framework.Input.GamePadDeadZone)">
            <summary>
            Applies a deadzone to a trigger input.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDeadZoneUtils.ApplyLinearDeadZone(System.Single,System.Single,System.Single)">
            <summary>
            Applies a linear deadzone computation to a scalar value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Keyboard">
            <summary>
            Used to interface with the keyboard on your system
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Keyboard.GetState">
            <summary>
            Retrieve the current state of the keyboard for any user
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Keyboard.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Retrieve the current state of the keyboard for a specific user
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Keyboard.WindowHandle">
            <summary>
            The handle that's used to receive touch messages.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Keys">
            <summary>
            Possible keys on a keyboard
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeyState">
            <summary>
            State of a keyboard key
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeyboardState">
            <summary>
            Current state of the keyboard
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.#cctor">
            <summary>
            On startup, populate the legal keys mask to match what is supported by our keys enum.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.#ctor(Microsoft.Xna.Framework.Input.Keys[])">
            <summary>
            Create a new keyboard state object with the specified set of keys
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.AddPressedKey(System.Int32)">
            <summary>
            Sets a key to pressed in the state bitfield.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.RemovePressedKey(System.Int32)">
            <summary>
            Removes a key from the state bitfield.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.IsKeyDown(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is this key down
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.IsKeyUp(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is this key up
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.GetPressedKeys">
            <summary>
            Return an array of keys that are currently being pressed
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.CheckPressedKeys(System.UInt32,System.Int32,Microsoft.Xna.Framework.Input.Keys[],System.Int32@)">
            <summary>
            Helper used by GetPressedKeys for unpacking bitfield data
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.GetHashCode">
            <summary>
            Gets a hash code for the keyboard state.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.Equals(System.Object)">
            <summary>
            Determines whether this keyboard state is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.op_Equality(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.op_Inequality(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.KeyboardState.Item(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Get the state of this key
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Mouse">
            <summary>
            Dummy mouse implementation used on Xbox and Windows Phone.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.GetState">
            <summary>
            Gets the current state of the mouse.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32,System.Int32)">
            <summary>
            Moves the mouse pointer to the specified position.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.SetState(Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            sets the current MouseState
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Mouse.WindowHandle">
            <summary>
            Gets or sets the window handle used to interface with the mouse.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.MouseState">
            <summary>
            Current state of the mouse.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.#ctor(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.GetHashCode">
            <summary>
            Gets a hash code for the mouse state.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.ToString">
            <summary>
            Converts the mouse state to a string.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.Equals(System.Object)">
            <summary>
            Determines whether this mouse state is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.op_Equality(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.op_Inequality(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadButtons">
            <summary>
            State of the buttons on the game pad
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.Equals(System.Object)">
            <summary>
            Equality operator
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.GetHashCode">
            <summary>
            Get a unique hash code for this set of buttons
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.ToString">
            <summary>
            Returns a string representation of the object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.op_Equality(Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadButtons)">
            <summary>
            Equality operator for buttons
            </summary>
            <returns>true if equal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.op_Inequality(Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadButtons)">
            <summary>
            Inequality operator for buttons
            </summary>
            <returns>true if not equal; false otherwise</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.A">
            <summary>
            Current state of the A button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.B">
            <summary>
            Current state of the B button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.Back">
            <summary>
            Current state of the Back button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.X">
            <summary>
            Current state of the X button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.Y">
            <summary>
            Current state of the Y button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.Start">
            <summary>
            Current state of the Start button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.LeftShoulder">
            <summary>
            Current state of the LeftShoulder button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.LeftStick">
            <summary>
            Current state of the LeftStick button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.RightShoulder">
            <summary>
            Current state of the RightShoulder button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.RightStick">
            <summary>
            Current state of the RightStick button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadButtons.BigButton">
            <summary>
            Current state of the BigButton button
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadDPad">
            <summary>
            State of the DPad on the gamepad
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.#ctor(Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState)">
            <summary>
            Create a new object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.Equals(System.Object)">
            <summary>
            Equality operator
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.GetHashCode">
            <summary>
            Get a unique hash code for this set of buttons
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.ToString">
            <summary>
            Returns a string representation of the object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.op_Equality(Microsoft.Xna.Framework.Input.GamePadDPad,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Equality operator for buttons
            </summary>
            <returns>true if equal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.op_Inequality(Microsoft.Xna.Framework.Input.GamePadDPad,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Inequality operator for buttons
            </summary>
            <returns>true if not equal; false otherwise</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadDPad.Up">
            <summary>
            Current state of the Up button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadDPad.Down">
            <summary>
            Current state of the Down button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadDPad.Right">
            <summary>
            Current state of the Right button
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadDPad.Left">
            <summary>
            Current state of the Left button
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks">
            <summary>
            State of the thumb sticks on the gamepad
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Create a new object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.Equals(System.Object)">
            <summary>
            Equality operator
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.GetHashCode">
            <summary>
            Get a unique hash code for this set of buttons
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.ToString">
            <summary>
            Returns a string representation of the object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.op_Equality(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadThumbSticks)">
            <summary>
            Equality operator for thumb sticks
            </summary>
            <returns>true if equal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.op_Inequality(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadThumbSticks)">
            <summary>
            Inequality operator for buttons
            </summary>
            <returns>true if not equal; false otherwise</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadThumbSticks.Left">
            <summary>
            Current state of the Left thumbstick
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadThumbSticks.Right">
            <summary>
            Current state of the Right thumbstick
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadTriggers">
            <summary>
            State of the triggers on the gamepad
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.#ctor(System.Single,System.Single)">
            <summary>
            Create a new object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.Equals(System.Object)">
            <summary>
            Equality operator
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.GetHashCode">
            <summary>
            Get a unique hash code for this set of buttons
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.ToString">
            <summary>
            Returns a string representation of the object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.op_Equality(Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadTriggers)">
            <summary>
            Equality operator for triggers
            </summary>
            <returns>true if equal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.op_Inequality(Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadTriggers)">
            <summary>
            Inequality operator for triggers
            </summary>
            <returns>true if not equal; false otherwise</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadTriggers.Left">
            <summary>
            Current state of the Left trigger
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadTriggers.Right">
            <summary>
            Current state of the Right trigger
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.#ctor(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Create a new object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Input.Buttons[])">
            <summary>
            Create a new object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.FillInternalState">
            <summary>
            Fill internal state
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.#ctor(Microsoft.Xna.Framework.Input.XINPUT_STATE@,Microsoft.Xna.Framework.ErrorCodes,Microsoft.Xna.Framework.Input.GamePadDeadZone)">
            <summary>
            Create a new instance of our state object based on our results from xinput
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.IsButtonDown(Microsoft.Xna.Framework.Input.Buttons)">
            <summary>Is the specified button down?</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.IsButtonUp(Microsoft.Xna.Framework.Input.Buttons)">
            <summary>Is the specified button up?</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.Equals(System.Object)">
            <summary>
            Equality operator
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.GetHashCode">
            <summary>
            Get a unique hash code for this set of buttons
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.ToString">
            <summary>
            Returns a string representation of the object
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.op_Equality(Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            Equality operator for the game pad state
            </summary>
            <returns>true if equal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.op_Inequality(Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            Inequality operator for the game pad state
            </summary>
            <returns>true if not equal; false otherwise</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.Buttons">
            <summary>
            Current state of the buttons
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.DPad">
            <summary>
            Current state of the DPad
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.IsConnected">
            <summary>
            Is this device connected?
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.PacketNumber">
            <summary>
            Current packet number
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.ThumbSticks">
            <summary>
            Current state of the thumb sticks
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.Triggers">
            <summary>
            Current state of the triggers
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadCapabilities">
            <summary>Capabilities of a game pad (or similar device)</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadCapabilities.#ctor(Microsoft.Xna.Framework.Input.XINPUT_CAPABILITIES@,Microsoft.Xna.Framework.ErrorCodes)">
            <summary>Create a new instance of the object</summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.E">
            <summary>
            Nutulal number
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log2E">
            <summary>
            log2(e)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log10E">
            <summary>
            log10(e)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Pi">
            <summary>
            Pi
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.TwoPi">
            <summary>
            2 * Pi
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver2">
            <summary>
            Pi over 2
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver4">
            <summary>
            Pi over 4
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToRadians(System.Single)">
            <summary>
            Convert degrees to radian
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToDegrees(System.Single)">
            <summary>
            Convert radians to degrees
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a point in Barycentric coordinates, using the specified values.
            value1 + amount1( value2 - value1 ) + amount2( value3 - value1 )
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="amount1"></param>
            <param name="amount2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Perfroms a Catmull-Rom interpolation, using the specfied float values.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="amount">Weighting factor.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation, using the specfied float values.
            </summary>
            <param name="value1"></param>
            <param name="tangent1"></param>
            <param name="value2"></param>
            <param name="tangent2"></param>
            <param name="amount">Weighting factor</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.WrapAngle(System.Single)">
            <summary>
            Returns the angle wrapped to fit the range -Pi and Pi.
            For instance if the input is TwoPi (a full circle), this would
            be wrapped to zero, while TwoPi + 0.1 would be wrapped to 0.1.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8">
            Packed vector type containing a single 8 bit unsigned normalized W value, range 0 to 1.
            This corresponds to the D3DFMT_A8 texture format.
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1">
            <summary>
            Generic interface exposes direct access to the compressed
            encoding of a packed vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector">
            <summary>
            Interface converts packed vector types to and from Vector4 values.
            This allows multiple encodings to be manipulated in a generic way.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.#ctor(System.Single)">
            <summary>
            Constructs a packed representation of an alpha value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.PackHelper(System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.ToAlpha">
            <summary>
            Expands the packed representation into a Vector2.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8,Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8,Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565">
            Packed vector type containing unsigned normalized values,
            range 0 to 1, using 5 bits each for X and Z, and 6 for Y.
            This corresponds to the D3DFMT_R5G6B5 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.PackHelper(System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.ToVector3">
            <summary>
            Expands the packed representation into a Vector3.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565,Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565,Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551">
            Packed vector type containing unsigned normalized values,
            range 0 to 1, using 5 bits each for X, Y, and Z, and 1 for W.
            This corresponds to the D3DFMT_A1R5G5B5 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551,Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551,Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444">
            Packed vector type containing unsigned normalized values,
            range 0 to 1, using 4 bits each for X, Y, and Z, and W.
            This corresponds to the D3DFMT_A4R4G4B4 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444,Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444,Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4">
            <summary>
            Packed vector type containing four 8 bit unsigned integer values, range 0 to 255.
            This corresponds to the D3DDECLTYPE_UBYTE4 vertex buffer format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle">
            Packed vector type containing a single 16 bit floating point value.
            This corresponds to the D3DFMT_R16F texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.#ctor(System.Single)">
            <summary>
            Constructs a packed representation of a float.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.ToSingle">
            <summary>
            Expands the packed representation into a float.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle,Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle,Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2">
            Packed vector type containing two 16 bit floating point values.
            This corresponds to the D3DDECLTYPE_FLOAT16_2 vertex buffer format,
            and the D3DFMT_G16R16F texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.PackHelper(System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.ToVector2">
            <summary>
            Expands the packed representation into a Vector2.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4">
            Packed vector type containing four 16 bit floating point values.
            This corresponds to the D3DDECLTYPE_FLOAT16_4 vertex buffer format,
            and the D3DFMT_A16B16G16R16F texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2">
            Packed vector type containing two 8 bit signed normalized values, range -1 to 1.
            This corresponds to the D3DFMT_V8U8 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.PackHelper(System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.ToVector2">
            <summary>
            Expands the packed representation into a Vector2.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4">
            Packed vector type containing four 8 bit signed normalized values, range -1 to 1.
            This corresponds to the D3DFMT_Q8W8V8U8 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2">
            Packed vector type containing two 16 bit signed normalized values, range -1 to 1.
            This corresponds to the D3DDECLTYPE_SHORT2N vertex buffer format,
            and the D3DFMT_V16U16 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.PackHelper(System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.ToVector2">
            <summary>
            Expands the packed representation into a Vector2.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4">
            Packed vector type containing four 16 bit signed normalized values, range -1 to 1.
            This corresponds to the D3DDECLTYPE_SHORT4N vertex buffer format,
            and the D3DFMT_Q16W16V16U16 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4,Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils">
            <summary>
            Helpers for packing and unpacking integer vector components.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.PackUnsigned(System.Single,System.Single)">
            <summary>
            Packs a floating point value into an unsigned integer format.
            </summary>
            <param name="bitmask">Field range: 2^numberOfBits - 1.</param>
            <param name="value">Value to be packed, ranging 0 to bitmask (inclusive).</param>
            <returns>Right aligned sequence of packed bits (to be shifted by the caller).</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.PackSigned(System.UInt32,System.Single)">
            <summary>
            Packs a floating point value into a signed integer format.
            </summary>
            <param name="bitmask">Field range: 2^numberOfBits - 1.</param>
            <param name="value">Value to be packed, ranging -ceil(bitmask/2) to floor(bitmask/2).</param>
            <returns>Right aligned sequence of packed bits (to be shifted by the caller).</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.PackUNorm(System.Single,System.Single)">
            <summary>
            Packs a floating point value into an unsigned normalized integer format.
            </summary>
            <param name="bitmask">Field range: 2^numberOfBits - 1.</param>
            <param name="value">Value to be packed, ranging 0 to 1.</param>
            <returns>Right aligned sequence of packed bits (to be shifted by the caller).</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.UnpackUNorm(System.UInt32,System.UInt32)">
            <summary>
            Unpacks an unsigned normalized integer value to floating point format.
            </summary>
            <param name="bitmask">Field range: 2^numberOfBits - 1.</param>
            <param name="value">Right aligned sequence of packed bits (preshifted by the caller, but may contain garbage in higher bits).</param>
            <returns>Floating point value ranging 0 to 1.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.PackSNorm(System.UInt32,System.Single)">
            <summary>
            Packs a floating point value into a signed normalized integer format.
            </summary>
            <param name="bitmask">Field range: 2^numberOfBits - 1.</param>
            <param name="value">Value to be packed, ranging -1 to 1.</param>
            <returns>Right aligned sequence of packed bits (to be shifted by the caller).</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.UnpackSNorm(System.UInt32,System.UInt32)">
            <summary>
            Unpacks a signed normalized integer value to floating point format.
            </summary>
            <param name="bitmask">Field range: 2^numberOfBits - 1.</param>
            <param name="value">Right aligned sequence of packed bits (preshifted by the caller, but may contain garbage in higher bits).</param>
            <returns>Floating point value ranging -1 to 1.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.PackUtils.ClampAndRound(System.Single,System.Single,System.Single)">
            <summary>
            Helper for clamping floating point values to a specific range.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32">
            Packed vector type containing two 16 bit unsigned normalized values, range 0 to 1.
            This corresponds to the D3DDECLTYPE_USHORT2N vertex buffer format,
            and the D3DFMT_G16R16 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.PackHelper(System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.ToVector2">
            <summary>
            Expands the packed representation into a Vector2.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Rg32)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Rg32,Microsoft.Xna.Framework.Graphics.PackedVector.Rg32)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Rg32,Microsoft.Xna.Framework.Graphics.PackedVector.Rg32)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102">
            <summary>
            Packed vector type containing unsigned normalized values,
            range 0 to 1, using 10 bits each for X, Y, and Z, and 2 for W.
            This corresponds to the D3DFMT_A2B10G10R10 texture format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102,Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102,Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64">
            Packed vector type containing four 16 bit unsigned normalized values, range 0 to 1.
            This corresponds to the D3DDECLTYPE_USHORT4N vertex buffer format,
            and the D3DFMT_A16B16G16R16 texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64,Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64,Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Short2">
            <summary>
            Packed vector type containing two 16 bit signed integer values, range -32768 to 32767.
            This corresponds to the D3DDECLTYPE_SHORT2 vertex buffer format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.PackHelper(System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.ToVector2">
            <summary>
            Expands the packed representation into a Vector2.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Short2)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Short2,Microsoft.Xna.Framework.Graphics.PackedVector.Short2)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Short2,Microsoft.Xna.Framework.Graphics.PackedVector.Short2)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Short2.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Short4">
            <summary>
            Packed vector type containing four 16 bit signed integer values, range -32768 to 32767.
            This corresponds to the D3DDECLTYPE_SHORT4 vertex buffer format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs a packed representation of a vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Short4,Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Short4,Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.MediaSourceType">
            <summary>
            The type that the MediaSource is. This can either be the LocalDevice, or WindowsMediaConnect. On Windows and Zune, the only
            available MediaSource is the LocalDevice. On Xbox360, a MediaSource can either come from the LocalDevice or via WindowsMediaConnect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.MediaSource">
            <summary>
            A MediaSource represents the source that the MediaLibrary will read media from. This can either be the LocalDevice, or WindowsMediaConnect. 
            On Windows and Zune, the only available MediaSource is the LocalDevice. On Xbox360, a MediaSource can either come from the LocalDevice or 
            via WindowsMediaConnect.
            </summary>
            <summary>
            A MediaSource represents the source that the MediaLibrary will read media from. This can either be the LocalDevice, or WindowsMediaConnect. 
            On Windows and Zune, the only available MediaSource is the LocalDevice. On Xbox360, a MediaSource can either come from the LocalDevice or 
            via WindowsMediaConnect.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources">
            <summary>
            Get the available MediaSources that a MediaLibrary can be constructed with. On Zune and Windows, 
            this will always return a single media source - the Local device. On Xbox, this can return multiple
            sources, depending on how many PCs are connected via Windows Media Connect.
            </summary>
            <returns>a collection of the available MediaSources</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType">
            <summary>
            Get the MediaSourceType of this MediaSource.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaSource.Name">
            <summary>
            Gets the name of this MediaSource.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.UnsafeNativeMethods">
            <summary>
            Holds all interop calls pertaining to the media api
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.VisualizationData">
            <summary>
            VisualizationData encapsulates the visualization data obtained from the media player.
            Frequencies collection contains frequency spectrum information in the range of 20Hz-20KHz.
            This range is mapped on a log scale across 256 elements. Each element in the collection
            contains a normalized power value between 0.0f and 1.0f (full scale).
            Samples collection provides a snapshot of the last 256 audio samples rendered where each
            sample value is normalized from -1.0f to +1.0f (0.0f is silence).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VisualizationData.#ctor">
            <summary>
            Constructor allocates the frequency and sample collections.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VisualizationData.Frequencies">
            <summary>
            Returns the frequencies.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VisualizationData.Samples">
            <summary>
            Returns the samples.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.TitleContainer.IsPathAbsolute(System.String)">
            <summary>
            Checks whether the specified path is absolute.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.TitleContainer.GetCleanPath(System.String)">
            <summary>
            Simplifies a path into canonical format.
            Converts / to \.
            Collapses . and .. entries.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.TitleContainer.CollapseParentDirectory(System.String@,System.Int32,System.Int32)">
            <summary>
            Helper used by GetCleanPath.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.TitleContainer.IsCleanPathAbsolute(System.String)">
            <summary>
            Checks whether the specified path (which must already
            have been processed by GetCleanPath) is absolute.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.TitleLocation.Path">
            <summary>The title's install location.</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.MicrophoneState">
            <summary>
            Microphone state.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.Microphone.Name">
            <summary>
            Returns the name of the microphone.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.#cctor">
            <summary>
            Initial enumeration of all connected microphones.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.#ctor(System.UInt32)">
            <summary>
            Constructs a microphone from the native mic handle.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.Finalize">
            <summary>
            Destructor - releases the native mic resource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.GetSampleSizeInBytes(System.TimeSpan)">
            <summary>
            Returns the block aligned count of bytes required
            to hold audio samples worth the specified duration.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.GetSampleDuration(System.Int32)">
            <summary>
            Returns the duration of audio playback
            from the specified buffer size in number of bytes.
            The specified size must be satisfy format alignment restrictions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.Start">
            <summary>
            Starts the audio capture.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.Stop">
            <summary>
            Stops audio capture.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.GetData(System.Byte[])">
            <summary>
            Gets the latest recorded data from the microphone.
            Returns the actual number of bytes copied.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Microphone.GetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Fetches the latest captured audio data from the native capture buffer.
            The offset and count values must fall within the buffer boundaries
            and satisfy format alignment requirements.
            Returns the actual number of bytes copied.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Microphone.All">
            <summary>
            Returns an enumerator to iterate through all the available microphones.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Microphone.Default">
            <summary>
            Returns the default microhone.
            Returns null if there are no microphones connected.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Microphone.State">
            <summary>
            Returns the current state of the microphone.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Microphone.BufferDuration">
            <summary>
            Gets/sets the capture buffer duration.
            The duration must be between 100ms and 1 second and it must be 10ms aligned.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Microphone.SampleRate">
            <summary>
            Returns the sample rate at which the audio is captured.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Microphone.IsHeadset">
            <summary>
            Returns true if the microphone is a headset.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Audio.Microphone.BufferReady">
            <summary>
            Raised when an entire capture buffer is ready to be picked up.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.MicrophoneCollection.#ctor">
            <summary>
            Provides an enumerable collection of connected microphones.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.MicrophoneCollection.Default">
            <summary>
            Returns the "default" microphone selected.
            Default being whatever the best choice of mic is on a specific platforms.
            On Windows it's whatever set as the default in the multimedia control panel.
            On Xbox it's what the native stack thinks is the best connected mic.
            On WM7 there's only one connected mic ever.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioChannels">
            <summary>
            Defines the number of channels in the audio data.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.LoopRegion">
            <summary>
            Internal structure to define the looping information.
            The values are in bytes and must be block-aligned for the format.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundEffect">
            <summary>
            SoundEffect type provides the ability to load the audio data for sound effects
            and play back instances that can be controlled individually.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32,System.TimeSpan)">
            <summary>   
            Internal constructor used by the content loader.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Finalize">
            <summary>
            If the object is getting cleaned up without
            Dispose being called explicitely then clean up
            the unamanged resources appropriately.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Dispose(System.Boolean)">
            <summary>
            Frees the unmanaged memory buffers for format and data.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.AllocateFormatAndData(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Format and data are loaded as byte arrays and are shared
            by all SoundEffectInstance objects created from this SoundEffect.
            These buffers are passed down to the native audio engine for voice
            creation and playback and hence need to be pinned for the lifetime of
            this SoundEffect object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.CreateInstance">
            <summary>
            Creates a new sound instance with default settings.
            </summary>
            <returns>A new sound instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Play">
            <summary>
            Plays a fire and forget sound effect with default volume, pitch and pan settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Play(System.Single,System.Single,System.Single)">
            <summary>
            Plays a fire and forget sound effect with specified values for volume, pitch, pan and looping.
            </summary>
            <param name="volume">Volume to start the playback at.</param>
            <param name="pitch">Pitch to start the playback at.</param>
            <param name="pan">Pan to start the playback at.</param>
            <returns>true if the sound was successfully played.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.GetSampleSizeInBytes(System.TimeSpan,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Returns the length of the audio in samples for the given sample rate, channels and duration.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.GetSampleDuration(System.Int32,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Returns the duration for the given sample length at the spefied samplerate and channels.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.RecycleStoppedFireAndForgetInstances">
            <summary>
            Disposes all stopped fire and forget sound effect instances.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.AddToInstancePool(Microsoft.Xna.Framework.Audio.SoundEffectInstance)">
            <summary>
            Adds an instance to the pool of cached fire and forget instances.
            This method will free the low-level native voice for the instance.
            </summary>
            <param name="instance">Instance to cache</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.GetFromInstancePool">
            <summary>
            Gets a previouly used fire and forget sound instance from the cache.
            This instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.IsStoppedInstance(Microsoft.Xna.Framework.Audio.SoundEffectInstance)">
            <summary>
            Returns true if the instance has stopped playing.
            </summary>
            <param name="instance"></param>
            <returns>true if the instance has stopped; false otherwise</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.IsDisposed">
            <summary>
            Has the object been disposed?
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.Loop">
            <summary>
            Returns the loop region information.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.Name">
            <summary>
            Name of the sound effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.Duration">
            <summary>
            Returns the duration of this effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.MasterVolume">
            <summary>
            Master volume affects all playing sound effect instances.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.SpeedOfSound">
            <summary>
            Speed of sound used for Doppler calculations of moving 3D positioned sounds
            must be positive, default is 343.5f
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.DopplerScale">
            <summary>
            Doppler scale used to adjust the affect of Doppler calculations (can not be negative)
            0.0f eliminates the effect of Doppler
            greater than 0.0f but less than 1.0f reduces the effect
            equal to 1.0f (default) has no effect
            greater than 1.0f increases the effect
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.DistanceScale">
            <summary>
            Scale used to adjust the apparent volume drop off of sounds due to distance attenuation
            greater than 0.0f but less than 1.0f increases the effect of distance attenuation
            greater than 1.0f decreases the effect of distance attenuation
            less than or equal to 0.0f is invalid
            default is 1.0f (no scaling)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.MaxVelocityComponent">
            <summary>
            Gets the maximum velocity component allowed for use during doppler calculations
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundState">
            <summary>
            Sound effect states.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.#ctor(Microsoft.Xna.Framework.Audio.SoundEffect,System.Boolean)">
            <summary>
            Creates a new looping or one-shot sound effect instance with
            the specified initial values for volume, pitch and pan.
            </summary>
            <param name="parentEffect">SoundEffect object that owns the audio data and format buffers.</param>
            <param name="fireAndForget">Instance needs to be disposed after it's finished playing</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Finalize">
            <summary>
            If the object is getting cleaned up without
            Dispose being called explicitly then clean up
            the unamanged resources appropriately.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose">
            <summary>
            Dispose the object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose(System.Boolean)">
            <summary>
            Frees the unmanaged voice.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.AllocateVoice">
            <summary>
            Allocate the low level voice.
            </summary>
            <returns>Handle to the allocated voice</returns>
            
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.DeallocateVoice">
            <summary>
            Frees the low level voice resource
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Play">
            <summary>
            Starts the playback for a stopped sound effect.
            Resumes the playback for a paused sound effect.
            Has no effect if the sound effect is already playing.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Stop">
            <summary>
            Immediately stops the current playback.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Stop(System.Boolean)">
            <summary>
            Stops the current playback.
            </summary>
            <param name="immediate">
            If true stops the playback immediately.
            If false then stops naturally by playing to the end (by breaking out of the loop if necessary).
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Pause">
            <summary>
            Pauses the current playback. Use Play to resume.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Resume">
            <summary>
            Resumes the playback if the effct is currently paused.
            Starts the playback if the effect is currently stopped.
            Has no effect if the playback is currently active.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Apply3D(Microsoft.Xna.Framework.Audio.AudioListener,Microsoft.Xna.Framework.Audio.AudioEmitter)">
            <summary>
            Applys 3D positioning to the sound using a single listener.
            </summary>
            <param name="listener">Listener.</param>
            <param name="emitter">Emitter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Apply3D(Microsoft.Xna.Framework.Audio.AudioListener[],Microsoft.Xna.Framework.Audio.AudioEmitter)">
            <summary>
            Applys 3D position to the sound using multiple listeners.
            </summary>
            <param name="listeners">Array of listeneres.</param>
            <param name="emitter">Emitter position.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.IsFireAndForget">
            <summary>
            Returns true if this is a fire and forget instance
            that needs to be disposed when done playing.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.IsDisposed">
            <summary>
            Has this object been disposed yet?
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.SoundEffect">
            <summary>
            Returns the owner SoundEffect object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Volume">
            <summary>
            Volume must be between 0.0 (silent) and 1.0 (full scale).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Pitch">
            <summary>
            Pitch must be between -1.0 (octave lower) and +1.0 (octave higher).
            0.0 means no pitch change (play at authored pitch).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Pan">
            <summary>
            Pan value must be between -1.0 (hard left) and +1.0 (hard right); 0.0 is center
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.IsLooped">
            <summary>
            Returns true is the sound effect is looped.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.State">
            <summary>
            Returns the current state of the sound effect.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.#ctor(System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Creates a dynamic sound effect at the specified samplerate and channels.
            The sampleate must be between 8KHz and 48KHz.
            Only mono or stereo content is supported.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.AllocateVoice">
            <summary>
            Allocate the low level voice.
            </summary>
            <returns>Handle to the allocated voice</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.SubmitBuffer(System.Byte[])">
            <summary>
            Submits an audio buffer for playback.
            The playback will start at the beginning and entire buffer will be played.
            The buffer length must satisfy the format alignment requirements.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.SubmitBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Submits an audio buffer for playback.
            The playback will begin at the specifed offset.
            The count of bytes will determine the number of samples played.
            The offset and count values must fall within the passed buffer
            and satisfy the format alignment restrictions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.GetSampleDuration(System.Int32)">
            <summary>
            Returns the total duration for the specified size of the buffer in bytes.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.GetSampleSizeInBytes(System.TimeSpan)">
            <summary>
            Returns the size of the buffer in bytes required
            to hold audio samples for the specified duration.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.Play">
            <summary>
            Starts the playback for a stopped sound effect.
            Resumes the playback for a paused sound effect.
            Has no effect if the sound effect is already playing.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.IsLooped">
            <summary>
            Dynamic sound effect instances cannot be looped.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.PendingBufferCount">
            <summary>
            Returns the number of buffers in the queue awaiting playback.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance.BufferNeeded">
            <summary>
            Event is raised when the number of pending buffers hits 2 or below.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioHelper.Byteswap(System.Int16)">
            <summary>
            Changes the byte order if running on big-endian platform.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioHelper.Byteswap(System.Int32)">
            <summary>
            Changes the byte order if running on big-endian platform.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioHelper.MakeFormat(System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels,System.Int16)">
            <summary>
            Creates a format with the specified parameters, byte swapping
            the necessary fields and returns it as a byte array.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioHelper.LocalizeFormat(System.Byte[])">
            <summary>
            Takes format as a byte array, copies to a new byte array adjusting the size and
            byte swaps the fields if necessary. Returns the new localized copy.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioHelper.GetSampleDuration(System.Int32,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Calculates duration in milliseconds from sample count and sample rate.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioHelper.GetSampleSizeInBytes(System.TimeSpan,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Calculates the sample count from the sample rate and duration
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.Open(System.IO.Stream)">
            <summary>
            Factory method open a wave file and parses it for information.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.#ctor(System.IO.Stream)">
            <summary>
            Parses the passed stream for wave data.
            The stream is expected to contain a complete RIFF::WAVE container.
            </summary>
            
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ParseWavHeader">
            <summary>
            Parses the RIFF header. Looks for "RIFFF:[size]:WAVE" format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ReadChunk">
            <summary>
            Reads a generic RIFF chunk and calls the WAVE container chunk specific parsing code.
            </summary>
            
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ParseFormat">
            <summary>
            Parses the 'fmt' chunk to extract the WAVEFORMATEX info.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ParseData">
            <summary>
            Reads all the samples from the 'data' chunk.
            Any partial block at the end is thrown away.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ParseLoopRegion">
            <summary>
            Parses 'wsmp' and 'smpl' chunks to extract the loop info.
            'wsmp' chunk takes preference over 'smpl'.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ParseWsmpChunk">
            <summary>
            Parse the DLS loop chunk - 'wsmp'
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WavFile.ParseSmplChunk">
            <summary>
            Parses the MIDI loop info chunk - 'smpl'
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.WavFile.Format">
            <summary>
            Returns the raw format buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.WavFile.Data">
            <summary>
            Returns the audio data buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.WavFile.LoopStart">
            <summary>
            Returns the loop start value in samples.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.WavFile.LoopLength">
            <summary>
            Returns the loop length in samples.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.WavFile.SampleLength">
            <summary>
            Returns the total number of samples.
            This may not have much value for non-PCM formats.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.WavFile.Duration">
            <summary>
            Returns the duration of the wave in milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.Album.Empty">
            <summary>
            An empty album.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.#ctor(System.UInt32)">
            <summary>
            Constructs the album from the low-level album resource.
            </summary>
            <param name="handle">Handle to the low-level album resource</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.Finalize">
            <summary>
            Destructor releases the low-level resources.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.GetAlbumArt">
            <summary>
            Returns the texture for the album art.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.GetThumbnail">
            <summary>
            Returns an image stream for the album art thumbnail.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.op_Equality(Microsoft.Xna.Framework.Media.Album,Microsoft.Xna.Framework.Media.Album)">
            <summary>
            Equality operator returns true if the two album objects
            represent the same album.
            </summary>
            <param name="first">First album</param>
            <param name="second">Second album</param>
            <returns>True if the albums are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.op_Inequality(Microsoft.Xna.Framework.Media.Album,Microsoft.Xna.Framework.Media.Album)">
            <summary>
            Equality operator returns true if the two albums objects
            are different.
            </summary>
            <param name="first">First album.</param>
            <param name="second">Second album.</param>
            <returns>True if the albums are different, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.Equals(System.Object)">
            <summary>
            Returns true if the passed object represents the same as this album.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>True if the albums match, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.Equals(Microsoft.Xna.Framework.Media.Album)">
            <summary>
            Returns true if the passed album represents the same as this album.
            </summary>
            <param name="other">Object to compare.</param>
            <returns>True if the albums match, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.ToString">
            <summary>
            Returns the album name as the string representation of the album.
            </summary>
            <returns>Name of the album.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.GetHashCode">
            <summary>
            Returns the hash code for this album.
            </summary>
            <returns>Int representing the has code.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Handle">
            <summary>
            Returns the handle to the low-level resource.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Name">
            <summary>
            Name of the album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Artist">
            <summary>
            Returns the album artist.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Songs">
            <summary>
            Returns the collection of songs from the album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Genre">
            <summary>
            Returns the album genre.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Duration">
            <summary>
            Returns the total album duration.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.HasArt">
            <summary>
            Returns true if the album has associated album art.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.AlbumCollection.Empty">
            <summary>
            An empty album collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumCollection.#ctor">
            <summary>
            Default constructor for empty collections.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumCollection.#ctor(System.UInt32)">
            <summary>
            Constructs a album collection from a low-level album list resource handle.
            </summary>
            <param name="handle">Low-level handle for the album resource.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the album collection.
            </summary>
            <returns>An enumerator that can iterate through the album collection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the album collection.
            </summary>
            <returns>An enumerator that can iterate through the album collection.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.Item(System.Int32)">
            <summary>
            Returns an album at the specified index.
            </summary>
            <param name="index">index of the album required.</param>
            <returns>Album at this index in the collection</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.Count">
            <summary>
            Gets the number of albums in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.Artist.Empty">
            <summary>
            An empty artist.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.#ctor(System.UInt32)">
            <summary>
            Constructs an artist object from the low-level resource handle.
            </summary>
            <param name="handle">Low-level resoruce handle.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.Finalize">
            <summary>
            Destructor, releases the low-level resource handle.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.op_Equality(Microsoft.Xna.Framework.Media.Artist,Microsoft.Xna.Framework.Media.Artist)">
            <summary>
            Compares the two artist objects for equality.
            </summary>
            <param name="first">First artist.</param>
            <param name="second">Secons artist.</param>
            <returns>True if the artists are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.op_Inequality(Microsoft.Xna.Framework.Media.Artist,Microsoft.Xna.Framework.Media.Artist)">
            <summary>
            Compares the two artists for inequality.
            </summary>
            <param name="first">First artist.</param>
            <param name="second">Second artist.</param>
            <returns>True if the artists are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.Equals(System.Object)">
            <summary>
            Compares the passed object for equality with this artist.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>True if the passed object represents the same artist; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.Equals(Microsoft.Xna.Framework.Media.Artist)">
            <summary>
            Compares the passed artist to this artist for equality.
            </summary>
            <param name="other">Artist to compare.</param>
            <returns>True if the artist is the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.ToString">
            <summary>
            Returns the name as the string represenation fot the artist.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.GetHashCode">
            <summary>
            Returns the hash code for the artist.
            </summary>
            <returns>32-bit hash code for the artist.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Handle">
            <summary>
            Returns the low-level resource handle.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Name">
            <summary>
            Returns the name of the artist.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Songs">
            <summary>
            Returns a collection of songs for this artist.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Albums">
            <summary>
            Returns a collection of albums for this artist.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.ArtistCollection.Empty">
            <summary>
            An empty artist collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistCollection.#ctor">
            <summary>
            Default constructor for empty collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistCollection.#ctor(System.UInt32)">
            <summary>
            Constructs an artist collection from the low-level artist list handle.
            </summary>
            <param name="handle">Handle to the low-level artist list.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistCollection.GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the artist collection.
            </summary>
            <returns>An enumerator to iterate through the artist collection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the artist collection.
            </summary>
            <returns>An enumerator to iterate through the artist collection.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ArtistCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ArtistCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ArtistCollection.Item(System.Int32)">
            <summary>
            Returns an artist from the collection at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Index for the required artist.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ArtistCollection.Count">
            <summary>
            Number of artists in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.Genre.Empty">
            <summary>
            An empty genre.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.#ctor(System.UInt32)">
            <summary>
            Construsts a genre from the low level resource handle.
            </summary>
            <param name="handle">Handle to the low level genre resource.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.Finalize">
            <summary>
            Destructor releases the low level resource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.op_Equality(Microsoft.Xna.Framework.Media.Genre,Microsoft.Xna.Framework.Media.Genre)">
            <summary>
            Compares two genres for equality.
            </summary>
            <param name="first">First genre.</param>
            <param name="second">Second genre.</param>
            <returns>True if the genres are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.op_Inequality(Microsoft.Xna.Framework.Media.Genre,Microsoft.Xna.Framework.Media.Genre)">
            <summary>
            Compares two genres for inequality.
            </summary>
            <param name="first">First genre.</param>
            <param name="second">Second genre.</param>
            <returns>True if the genres are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.Equals(System.Object)">
            <summary>
            Compares the specified object with this genre for equality.
            </summary>
            <param name="obj">Object to be compared.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.Equals(Microsoft.Xna.Framework.Media.Genre)">
            <summary>
            Compares the specified genre object with this genre for equality.
            </summary>
            <param name="other">Genre to be compared.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.ToString">
            <summary>
            Returns the name of the genre as the string represenation of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.GetHashCode">
            <summary>
            Returns the hash code for this genre.
            </summary>
            <returns>32-bit int as the genre hash code.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Handle">
            <summary>
            Returns the handle to the low level resource.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Name">
            <summary>
            Returns the name of the genre.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Songs">
            <summary>
            Returns the collection of all songs under this genre.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Albums">
            <summary>
            Retunrs a collection of all albums under this genre.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.GenreCollection.Empty">
            <summary>
            An empty genre collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreCollection.#ctor">
            <summary>
            Default constructor for empty collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreCollection.#ctor(System.UInt32)">
            <summary>
            Constructs a genre collection from the low level genre list handle.
            </summary>
            <param name="handle">Handle to the low level genre list.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreCollection.GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the collection of genres.
            </summary>
            <returns>An enumerator to iterate through the collection of genres.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the collection of genres.
            </summary>
            <returns>An enumerator to iterate through the collection of genres.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.GenreCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.GenreCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.GenreCollection.Item(System.Int32)">
            <summary>
            Returns the genre in the collection from the specified index.
            </summary>
            <param name="index">Index of the genre requested.</param>
            <returns>Genre at the specified index in the collection.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.GenreCollection.Count">
            <summary>
            Returns the number of genres in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.#ctor(Microsoft.Xna.Framework.Color[],System.Int32,System.Int32,Microsoft.Xna.Framework.XnaImageFormat,System.Int32,System.Int32)">
            <summary>
            Constructs an encoded image stream from an array of colors.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.EncodeBuffer(System.Byte[],Microsoft.Xna.Framework.XnaImageFormat,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an image stream to an image buffer in the specified format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a data from the stream and advances the position within the stream by the number of bytes read.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.Flush">
            <summary>
            Clears all the internal buffers.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeks to the specified read position in the stream.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.SetLength(System.Int64)">
            <summary>
            Image stream length cannot be modified.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ImageStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Image stream is not writeable.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ImageStream.IsDisposed">
            <summary>
            Returns true if the object is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ImageStream.CanSeek">
            <summary>
            Returns true to indicate support for seeking.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ImageStream.CanRead">
            <summary>
            Returns true to indicate read support.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ImageStream.CanWrite">
            <summary>
            Image stream is not writeable.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ImageStream.Length">
            <summary>
            Returns the length of the image stream in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.ImageStream.Position">
            <summary>
            Returns the current read position in the stream.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibrary.#ctor">
            <summary>
            Creates a MediaLibrary using the default media source. If there is one and only one Windows Media Connect source
            available, this is the default media source. Otherwise, the LocalDevice is used.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibrary.PickBestMediaSource">
            <summary>
            Private helper function that enumerates all of the available media sources and picks the "best" one. 
            If there is 1 and only 1 WMC source available, we pick it. Otherwise, we go with the local HDD.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibrary.#ctor(Microsoft.Xna.Framework.Media.MediaSource)">
            <summary>
            Creates a MediaLibrary using the specified MediaSource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibrary.Dispose(System.Boolean)">
            <summary>
            Zune doesn't have any cleanup to do; this function is a no-op but is required so that all platforms
            implement IDisposable properly.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibrary.GetPictureFromToken(System.String)">
            <summary>
            Get a Picture from the MediaLibrary based on a picture token
            </summary>
            <param name="token">Token representing the Picture</param>
            <returns>Picture object corresponding to the specified token</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.MediaSource">
            <summary>
            Returns the MediaSource that this library was constructed with.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.Songs">
            <summary>
            Returns a collection of all songs in the library
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.Artists">
            <summary>
            Returns a collection of all artists in the library
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.Albums">
            <summary>
            Returns a collection of all albums in the library
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.Playlists">
            <summary>
            Returns a collection of all playlists in the library
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.Genres">
            <summary>
            Returns a collection of all genres in the library
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.Pictures">
            <summary>
            Returns a collection of all pictures in the library
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.RootPictureAlbum">
            <summary>
            Returns the root album for all pictures in the library.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibrary.SavedPictures">
            <summary>
            Returns a collection of all pictures in the library
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.#ctor">
            <summary>
            Default enumerator for empty lists.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.#ctor(System.UInt32)">
            <summary>
            Constructs a generic media library list enumerator
            from the low level list handle.
            </summary>
            <param name="handle">Handle to the low level list resource.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.System#Collections#IEnumerator#MoveNext">
            <summary>
            Moves the iterator to the next element.
            </summary>
            <returns>True if there are more elements left to iterate; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.System#Collections#IEnumerator#Reset">
            <summary>
            Resets the current index to invalid (-1).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.CreateItemInstance(System.UInt32)">
            <summary>
            Provides a factory to creates the specific non-generic types.
            All derived types must implement this to return concrete types.
            </summary>
            <param name="handleItem">Low level resource handle of the collection item to create the instance of</param>
            <returns>Instance of the specific collection type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.Dispose">
            <summary>
            Disposes the enumerator
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.Dispose(System.Boolean)">
            <summary>
            Handles dispose by releasing the low level resource.
            </summary>
            <param name="disposing">True if called through IDisposable.Dispose; false otherwise</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.System#Collections#Generic#IEnumerator{T}#Current">
            <summary>
            Returns the object at the current index.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Returns the object at the current index.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.Item(System.Int32)">
            <summary>
            Indexer returns the element at the specified index.
            </summary>
            <param name="index">Index requested.</param>
            <returns>Object at the specified index.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaLibraryEnumerator`1.IsDisposed">
            <summary>
            Has this object been disposed yet?
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.SongLibraryEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.SongLibraryEnumerator.#ctor(Microsoft.Xna.Framework.Media.SongCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through a song collection.
            </summary>
            <param name="handle">Handle to the low level song list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.SongLibraryEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns a Song type from the specified low level song resource handle.
            </summary>
            <param name="handleItem">Handle to the low level song resource.</param>
            <returns>Song instance.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.SongLibraryEnumerator.Handle">
            <summary>
            Returns the low level song collection handle.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistEnumerator.#ctor(Microsoft.Xna.Framework.Media.ArtistCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through the collection.
            </summary>
            <param name="handle">Handle to the low level list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.ArtistEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns a Artist type from the specified low level artist resource handle.
            </summary>
            <param name="handleItem">Handle to the low level artist resource.</param>
            <returns>Artist instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumEnumerator.#ctor(Microsoft.Xna.Framework.Media.AlbumCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through the collection.
            </summary>
            <param name="handle">Handle to the low level list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns an Album type from the specified low level album resource handle.
            </summary>
            <param name="handleItem">Handle to the low level album resource.</param>
            <returns>Album instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreEnumerator.#ctor(Microsoft.Xna.Framework.Media.GenreCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through the collection.
            </summary>
            <param name="handle">Handle to the low level list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.GenreEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns a Genre type from the specified low level genre resource handle.
            </summary>
            <param name="handleItem">Handle to the low level genre resource.</param>
            <returns>Genre instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PlaylistEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PlaylistEnumerator.#ctor(Microsoft.Xna.Framework.Media.PlaylistCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through the collection.
            </summary>
            <param name="handle">Handle to the low level list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PlaylistEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns a Playlist type from the specified low level playlist resource handle.
            </summary>
            <param name="handleItem">Handle to the low level playlist resource.</param>
            <returns>Playlist instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureEnumerator.#ctor(Microsoft.Xna.Framework.Media.PictureCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through the collection.
            </summary>
            <param name="handle">Handle to the low level list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns a Picture type from the specified low level picture resource handle.
            </summary>
            <param name="handleItem">Handle to the low level picture resource.</param>
            <returns>Picture instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbumEnumerator.#ctor">
            <summary>
            Default constructor for empty enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbumEnumerator.#ctor(Microsoft.Xna.Framework.Media.PictureAlbumCollection,System.UInt32)">
            <summary>
            Constructs an enumerator to iterate through the collection.
            </summary>
            <param name="handle">Handle to the low level list.</param>
            <param name="collection">the collection that created this enumerator</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbumEnumerator.CreateItemInstance(System.UInt32)">
            <summary>
            Returns a PictureAlbum type from the specified low level picture album resource handle.
            </summary>
            <param name="handleItem">Handle to the low level picture album resource.</param>
            <returns>PictureAlbum instance.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.MediaFinalizerHelper">
            
             Used specifically to shutdown the media stack on WM7.
            
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Play(Microsoft.Xna.Framework.Media.Song)">
            <summary>
            Clears the current queue and queues up the specified song
            for playback. The playback starts immediately from the
            start of this song.
            </summary>
            <param name="song"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Play(Microsoft.Xna.Framework.Media.SongCollection)">
            <summary>
            Clears the current queue and queues up the specified song
            collection for playback starting with the first song.
            </summary>
            <param name="songs"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Play(Microsoft.Xna.Framework.Media.SongCollection,System.Int32)">
            <summary>
            Clears the current queue and queues up the specified song
            collection for playback starting from the specified index.
            The playback starts immediately from the beginning of the song.
            </summary>
            <param name="songs">Collection of songs to be queued.</param>
            <param name="index">Index to start the playback at.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Pause">
            <summary>
            Pauses the playback.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Resume">
            <summary>
            Resumes the playback from the previously paused/stopped position.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Stop">
            <summary>
            Stops the playback.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.MoveNext">
            <summary>
            Moves to the next song in the playback queue.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.MovePrevious">
            <summary>
            Moves to the previous song in the playback queue.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.GetVisualizationData(Microsoft.Xna.Framework.Media.VisualizationData)">
            <summary>
            Returns visualization data if the analysis is turned on.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.IsShuffled">
            <summary>
            turns the shuffle mode on or off.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.IsRepeating">
            <summary>
            Turns the repeat mode on or off.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.Queue">
            <summary>
            Returns the current media queue.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.State">
            <summary>
            Returns the current play state.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.PlayPosition">
            <summary>
            Returns the current play position within the active media stream.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.Volume">
            <summary>
            Controls the media stream volume.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.IsMuted">
            <summary>
            Mutes/unmutes the volume.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.IsVisualizationEnabled">
            <summary>
            Turns visualization analysis on/off.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaPlayer.GameHasControl">
            <summary>
            Gamers can play their own custom soundtracks for your game by using the dashboard. When a gamer is doing this,
            GameHasControl will be false, and the game's music will be stopped until the gamer returns control to your game.
            Calls to Play, Stop, Pause, Resume, MoveNext, and MovePrevious will have no effect while this property is true.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Media.MediaPlayer.ActiveSongChanged">
            <summary>
            Raised when active song changes either due to active playback
            or due to explicit MediaQueue.MoveNext/MovePrev calls.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Media.MediaPlayer.MediaStateChanged">
            <summary>
            Raised when the media player play state changes.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaQueue.Count">
            <summary>
            Count of songs in the playback queue.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaQueue.ActiveSongIndex">
            <summary>
            Index of the currently active song in the playback queue.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaQueue.ActiveSong">
            <summary>
            Returns the currently active song in the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.MediaQueue.Item(System.Int32)">
            <summary>
            Returns the song at the specified index from the playback queue.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.#ctor(System.UInt32)">
            <summary>
            Constructs a picture from the low level resource handle.
            </summary>
            <param name="handle">Handle to the low level picture resource.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.Finalize">
            <summary>
            Releases the low level picture resource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.GetImage">
            <summary>
            Returns the texture for the picture.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.GetDimensions">
            <summary>
            Obtains the picture dimensions from the low level picture resource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.op_Equality(Microsoft.Xna.Framework.Media.Picture,Microsoft.Xna.Framework.Media.Picture)">
            <summary>
            Compares two pictures for equality.
            </summary>
            <param name="first">First picture.</param>
            <param name="second">Second picture</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.op_Inequality(Microsoft.Xna.Framework.Media.Picture,Microsoft.Xna.Framework.Media.Picture)">
            <summary>
            Compares two pictures for inequality.
            </summary>
            <param name="first">First picture.</param>
            <param name="second">Second picture.</param>
            <returns>True if different, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.Equals(System.Object)">
            <summary>
            Compares the specified object with this picture for equality.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>True if equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.ToString">
            <summary>
            Returns the name of the picture as the string representation of the picture.
            </summary>
            <returns>Name of the picture.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.GetHashCode">
            <summary>
            Returns the hash code for the picture.
            </summary>
            <returns>32-bit integer hash code.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Picture.Equals(Microsoft.Xna.Framework.Media.Picture)">
            <summary>
            Compare the passed picture for equality with this picture.
            </summary>
            <param name="other">Picture to compare.</param>
            <returns>True if equal, false if different.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.Handle">
            <summary>
            Returns the low level picture resource handle.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.Name">
            <summary>
            Returns the picture name.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.Album">
            <summary>
            Returns the album that contains this picture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.Width">
            <summary>
            Returns the picture width.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.Height">
            <summary>
            Returns the picture height.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Picture.Date">
            <summary>
            Returns the picture date.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.PictureAlbum.Empty">
            <summary>
            An empty picture album.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.#ctor">
            <summary>
            Default constructor for empty picture album.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.#ctor(System.UInt32)">
            <summary>
            Constructs a picture album from the low level resource handle.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.Finalize">
            <summary>
            Destructor releases the low level resource handle.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.op_Equality(Microsoft.Xna.Framework.Media.PictureAlbum,Microsoft.Xna.Framework.Media.PictureAlbum)">
            <summary>
            Compares two picture albums for equality.
            </summary>
            <param name="first">First picture album.</param>
            <param name="second">Second picture album.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.op_Inequality(Microsoft.Xna.Framework.Media.PictureAlbum,Microsoft.Xna.Framework.Media.PictureAlbum)">
            <summary>
            Compares the two picture albums for inequality.
            </summary>
            <param name="first">First picture album.</param>
            <param name="second">Second picture album.</param>
            <returns>True if different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.Equals(System.Object)">
            <summary>
            Compares the specified object for equality with this picture album.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>True if equal; flase otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.ToString">
            <summary>
            Returns the name as the string representation of the picture album .
            </summary>
            <returns>Name of the picture album.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.GetHashCode">
            <summary>
            Returns the hash code for the picture album.
            </summary>
            <returns>32-bit integer hash code for the picture album.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbum.Equals(Microsoft.Xna.Framework.Media.PictureAlbum)">
            <summary>
            Compares the passed picture album for equality with this one.
            </summary>
            <param name="other">Picture album to compare.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.Handle">
            <summary>
            Returns the low level resource handle.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.Name">
            <summary>
            Returns the name of the picture album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.Albums">
            <summary>
            Returns the colletion of children albums.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.Pictures">
            <summary>
            Returns the collection of pictures from this album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbum.Parent">
            <summary>
            Returns the parent picture album.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.PictureAlbumCollection.Empty">
            <summary>
            An empty picture album collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbumCollection.#ctor">
            <summary>
            Default constructor for empty collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureAlbumCollection.#ctor(System.UInt32)">
            <summary>
            Creates a collection of picture albums from the low-level list handle.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbumCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbumCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbumCollection.Item(System.Int32)">
            <summary>
            Returns the picture album at the specified index in the collection.
            </summary>
            <param name="index">Index of the required picture album</param>
            <returns>Picture album at the specified index in the collection.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureAlbumCollection.Count">
            <summary>
            Returns the number of picture albums in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.PictureCollection.Empty">
            <summary>
            An empty picture collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureCollection.#ctor">
            <summary>
            Default constructor for empty collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PictureCollection.#ctor(System.UInt32)">
            <summary>
            Constructs a picture collection from the handle
            to the low-level picture list.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureCollection.Item(System.Int32)">
            <summary>
            Returns the picture at the specified index in the collection.
            </summary>
            <param name="index">Index of the required picture.</param>
            <returns>Picture at the specified index.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PictureCollection.Count">
            <summary>
            Returns the number of pictures in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.Playlist.Empty">
            <summary>
            An empty playlist.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.#ctor">
            <summary>
            Default empty playlist.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.#ctor(System.UInt32)">
            <summary>
            Construsts a playlist from the low level resource handle.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.Finalize">
            <summary>
            Destructor releases the low level resource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.op_Equality(Microsoft.Xna.Framework.Media.Playlist,Microsoft.Xna.Framework.Media.Playlist)">
            <summary>
            Compares two playlists for equality.
            </summary>
            <param name="first">First playlist.</param>
            <param name="second">Second playlist.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.op_Inequality(Microsoft.Xna.Framework.Media.Playlist,Microsoft.Xna.Framework.Media.Playlist)">
            <summary>
            Compares two playlists for inequality.
            </summary>
            <param name="first">First playlist.</param>
            <param name="second">Second playlist.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.Equals(System.Object)">
            <summary>
            Compares the specified object for equality with this playlist.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.ToString">
            <summary>
            Returns the name as the string representation of this playlist.
            </summary>
            <returns>Name of the playlist.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.GetHashCode">
            <summary>
            Returns the hash code for the playlist.
            </summary>
            <returns>32-bit integer hash code.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Playlist.Equals(Microsoft.Xna.Framework.Media.Playlist)">
            <summary>
            Compares the specified playlist for equalitywith this playlist.
            </summary>
            <param name="other">Playlist to compare.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Playlist.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Playlist.Handle">
            <summary>
            Returns the low level resource handle.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Playlist.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Playlist.Name">
            <summary>
            Returns the playlist name.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Playlist.Songs">
            <summary>
            Returns the collection of all songs in the playlist/
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Playlist.Duration">
            <summary>
            Returns the total duration of the playlist.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.PlaylistCollection.Empty">
            <summary>
            An empty playlist collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PlaylistCollection.#ctor">
            <summary>
            Default constructor for empty collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PlaylistCollection.#ctor(System.UInt32)">
            <summary>
            Constructs a playlist collection from a 
            handle to the low level list resource.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.PlaylistCollection.GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the playlist collection.
            </summary>
            <returns>An enumerator to iterate through the playlist collection.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PlaylistCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PlaylistCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PlaylistCollection.Item(System.Int32)">
            <summary>
            Returns the playlist from the collection
            at the specified index.
            </summary>
            <param name="index">Index for the playlist</param>
            <returns>Playlist at the specified index.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.PlaylistCollection.Count">
            <summary>
            Returns the total number of playlists in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.Song.Empty">
            <summary>
            An empty song.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.EnsureMedia">
            <summary>Ensure we've connected to the mediaHelper</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.#ctor(System.UInt32)">
            <summary>
            Construsts a song from the low level song resource handle.
            </summary>
            <param name="handle">Low level song resource handle.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.FromUri(System.String,System.Uri)">
            <summary>
            Construsts a song from the given URI.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructs a game song from a file in the game container.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.Finalize">
            <summary>
            Destructor releases the low level resource handle.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.op_Equality(Microsoft.Xna.Framework.Media.Song,Microsoft.Xna.Framework.Media.Song)">
            <summary>
            Compares two songs for equality.
            </summary>
            <param name="first">First song.</param>
            <param name="second">Second song.</param>
            <returns>True if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.op_Inequality(Microsoft.Xna.Framework.Media.Song,Microsoft.Xna.Framework.Media.Song)">
            <summary>
            Compares two songs for inequality.
            </summary>
            <param name="first">First song.</param>
            <param name="second">Second song.</param>
            <returns>True if different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.Equals(System.Object)">
            <summary>
            Compares the specified object for equality with this song.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>True if equal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.Equals(Microsoft.Xna.Framework.Media.Song)">
            <summary>
            Compares the passed song for equality with this song.
            </summary>
            <param name="other">Song to compare</param>
            <returns>Tre if equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.ToString">
            <summary>
            Returns the name as the string representation of the song.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.GetHashCode">
            <summary>
            Returns the song hash code.
            </summary>
            <returns>32-bit integer hash code value.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Handle">
            <summary>
            Returns the low level song resource handle.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.IsGameSong">
            <summary>
            Returns true if this is a game song.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.FileName">
            <summary>
            Returns the filename for this song IFF a game song (empty string otherwise).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Name">
            <summary>
            Returns the song name.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Artist">
            <summary>
            Returns the song artist.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Album">
            <summary>
            Returns the song album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Genre">
            <summary>
            Returns the song genre.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Duration">
            <summary>
            Returns the total length of the song.
            </summary>        
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.IsRated">
            <summary>
            Returns true if the song has been rated.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Rating">
            <summary>
            Returns the song rating.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.PlayCount">
            <summary>
            Returns the song play count.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.TrackNumber">
            <summary>
            Returns the song track number on the album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.IsProtected">
            <summary>
            Queries if the song is DRM protected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.SongCollection.Empty">
            <summary>
            An empty song collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.SongCollection.#ctor">
            <summary>
            Default constructor for empty collections.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.SongCollection.#ctor(System.UInt32)">
            <summary>
            Creates a song collection from the low-level song list handle.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.SongCollection.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.SongCollection.IsDisposed">
            <summary>Has this object been disposed yet?</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.SongCollection.Handle">
            <summary>
            Returns the handle to the low-level song list.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.SongCollection.IsValidHandle">
            <summary>
            Returns true if the low-level resource handle is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.SongCollection.Count">
            <summary>
            Returns the number of songs in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.SongCollection.Item(System.Int32)">
            <summary>
            Returns the song at the specified index in the collection.
            </summary>
            <param name="index">Index of the song required.</param>
            <returns>Song at the specified index in the collection.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.MediaState">
            <summary>
            Media States
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.XOverlappedAsyncResult.PrepareForEndFunction(System.IAsyncResult)">
            <summary>
            Static helper function is designed to be used by the End* function in a Begin/End pair.
            it makes sure that result isn't null, that it's an xoverasync, that end has been called,
            and that the operation has finished.
            </summary>
            <param name="result">The IAsyncResult passed into your End* function</param>
            <returns>result as an XOverlappedAsyncResult. use its kernel handle to execute the
            kernel call.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Helpers.SmartGetHashCode(System.Object)">
            <summary>Determine hash code progmatically</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Helpers.GetSizeOf``1">
            <summary>Determine the size of a generic T</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Helpers.ThrowExceptionFromResult(System.UInt32)">
            <summary>Throw an exception from a result</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Helpers.GetExceptionFromResult(System.UInt32)">
            <summary>Get an exception from an HRESULT</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.GetCorners">
            <summary>
            Returns 8 corner position of bounding box.
                Near    Far
               0----1  4----5
               |    |  |    |
               |    |  |    |
               3----2  7----6
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.GetCorners(Microsoft.Xna.Framework.Vector3[])">
            <summary>
            It copies bounding box corner points to given array.
            </summary>
            <param name="corners">vector3 array that has equal or bigger than 8 elements.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Construct a bounding box from min and max position.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.CreateMerged(Microsoft.Xna.Framework.BoundingBox,Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Create a merged bounding box from two bounding boxes.
            </summary>
            <param name="original"></param>
            <param name="additional"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.CreateFromSphere(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Create Bounding box from sphere.
            </summary>
            <param name="sphere"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create a bounding box from points.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Intersection test aginst another bounding box.
            </summary>
            <param name="box"></param>
            <returns>Returns true if given bounding box is intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Intersection test aginst another bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns true if given frustum is intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Intersection test aginst another plane.
            </summary>
            <param name="plane"></param>
            <returns>Returns PlaneIntersectionType that contins Inside, Outisde, or Intersecting.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Intersection test aginst another Ray.
            </summary>
            <param name="ray"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Intersection test against another sphere.
            </summary>
            <param name="sphere"></param>
            <returns>Returns true if another sphere is intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Contains test against another bounding box.
            </summary>
            <param name="box"></param>
            <returns>Returns IntersectionType that contains Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Contains test against another bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns IntersectionType that contains Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Contains test against another point.
            </summary>
            <param name="point"></param>
            <returns>Returns IntersectionType that contains Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Contains test against another sphere.
            </summary>
            <param name="sphere"></param>
            <returns>Returns IntersectionType that contains Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.SupportMapping(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Suport mappint for Gjk
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners">
            <summary>
            Returns 8 corners position of bounding frustum.
                Near    Far
               0----1  4----5
               |    |  |    |
               |    |  |    |
               3----2  7----6
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])">
            <summary>
            It copies bounding box corner points to given array.
            </summary>
            <param name="corners">vector3 array that has equal or bigger than 8 elements.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.#ctor">
            <summary>
            We are not allowed to instanciate this class by using default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.#ctor(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Instanciate a BoundingFrustum from given matrix.
            </summary>
            <param name="value">Combined matrix that usually takes view * projection matrix.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Intersection test against BoundingBox
            </summary>
            <param name="box"></param>
            <returns>Returns true if this frustum and given bounding box are intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Intersection test agains Frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns true if this frustum and given frustum are intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Intersection test against Plane.
            </summary>
            <param name="plane"></param>
            <returns>It returns PlaneIntersectionType that contains Outside, Inside, and Intersecting states.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Intersection test against Ray.
            </summary>
            <param name="ray"></param>
            <returns>It returns Nullable&gt;float&lt; it nearest intersection point of ray otherwise it returns null.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Intersection test against BoundingSphere
            </summary>
            <param name="sphere"></param>
            <returns>Returns true if this frustum and given bounding sphere are intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Contains test against BoundingBox
            </summary>
            <param name="box"></param>
            <returns>Returns IntersectionType that contains Inside, Outside, and Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Contains test against frustum
            </summary>
            <param name="frustum"></param>
            <returns>Returns IntersectionType that contains Inside, Outside, and Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Contains test against point.
            </summary>
            <param name="point"></param>
            <returns>Returns IntersectionType that contains Inside, Outside, and Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Contains test against bounding sphere.
            </summary>
            <returns>Returns IntersectionType that contains Inside, Outside, and Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.SupportMapping(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Support mapping for GJK.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Near">
            <summary>
            Gets Near plane of frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Far">
            <summary>
            Gets Far plane of frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Left">
            <summary>
            Gets Left plane of frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Right">
            <summary>
            Gets Right plane of frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Top">
            <summary>
            Gets Top plane of frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Bottom">
            <summary>
            Gets Bottom plane of frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Matrix">
            <summary>
            Gets Matrix that used when this bounding frustum was instanciated.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateMerged(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Merge two bounding spheres and create another bounding sphere.
            </summary>
            <param name="original"></param>
            <param name="additional"></param>
            <returns>Merged bounding sphere.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromBoundingBox(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Create bounding sphere from given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create bounding sphere from points.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromFrustum(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Create bounding sphere from given bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Intersection test against another bounding box.
            </summary>
            <param name="box"></param>
            <returns>Returns true if another bounding box is intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Intersection test against another bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns true if another bounding frustum is intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Intersection test against another plane.
            </summary>
            <param name="plane"></param>
            <returns>Returns PlaneIntersectionType that contins value Outside, Inside, or Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Intersection test against another ray.
            </summary>
            <param name="ray"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Intersection test against another bounding sphere.
            </summary>
            <returns>Returns true if another bounding sphere is intersecting, otherwise returns false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Contains test against another bounding box.
            </summary>
            <param name="box"></param>
            <returns>Returns IntersectionType that contians value Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Contains test against another bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns IntersectionType that contians value Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Contains test against another point.
            </summary>
            <param name="point"></param>
            <returns>Returns IntersectionType that contians value Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Contains test against another bounding sphere.
            </summary>
            <param name="sphere"></param>
            <returns>Returns IntersectionType that contians value Contains, Intersects, or Disjoint.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.SupportMapping(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Suport mappint for Gjk
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Transform(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transform the bounding sphere returning a new one
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Compute given CurveKey tangent values based of neighbor key values.
            </summary>
            <param name="keyIndex">Index of target CurveKey.</param>
            <param name="tangentType">designated tangent type</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Compute given CurveKey tangent values based of neighbor key values.
            </summary>
            <param name="keyIndex">Index of target CurveKey.</param>
            <param name="tangentInType">designated tangent type for TangentIn</param>
            <param name="tangentOutType">designated tangent type for TangentOut</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Compute tangents for all keys.
            </summary>
            <param name="tangentType">designated tangent type</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Compute tangents for all keys.
            </summary>
            <param name="tangentInType">designated tangent type for TangentIn</param>
            <param name="tangentOutType">designated tangent type for TangentOut</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.PreLoop">
            <summary>
            Gets or sets PreLoop.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.PostLoop">
            <summary>
            Gets or sets PostLoop.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.Keys">
            <summary>
            Gets keys.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.CompareTo(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Compares this instance to another CurveKey and returns an indication of their relative values. 
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.Position">
            <summary>
            Gets position.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.Value">
            <summary>
            Gets or sets value.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.TangentIn">
            <summary>
            Gets or sets TangentIn
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.TangentOut">
            <summary>
            Gets or sets TangentOut
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.Continuity">
            <summary>
            Gets or sets Continuity
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.CurveKeyCollection">
            <summary>
            CurveKeyList contents sorted CurveKeys.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.IndexOf(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Determines the index of a specfied CurveKey in the CurveKeyList.
            </summary>
            <param name="item">CurveKey to locate in the CurveKeyList</param>
            <returns>The index of value if found in the CurveKeyList; otherwise -1.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a CurveKey from at the specfied index.
            </summary>
            <param name="index">The Zero-based index of the item to remove.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Add(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Add an item to the CurveKeyList
            </summary>
            <param name="item">CurveKey to add to the CurveKeyList</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Clear">
            <summary>
            Removes all CurveKeys from the CurveKeyList.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Contains(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Determines whether the CurveKeyList contains a specific CurveKey.
            </summary>
            <param name="item">The CurveKey to locate in the CurveKeyList. </param>
            <returns>true if the CurveKey is found in the CurveKeyList; otherwise, false. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.CopyTo(Microsoft.Xna.Framework.CurveKey[],System.Int32)">
            <summary>
            Copies the CurveKeys of the CurveKeyList to an Array, starting at a particular Array index. 
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the CurveKeys copied from CurveKeyList. The Array must have zero-based indexing. </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Remove(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Removes the first occurrence of a specific CurveKey from the CurveKeyList.
            </summary>
            <param name="item">The CurveKey to remove from the CurveKeyList. </param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the CurveKeyList. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the CurveKeyList. 
            </summary>
            <returns>A IEnumerator&gt;CurveKey&lt; for the CurveKeyList. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the CurveKeyList. 
            </summary>
            <returns>A IEnumerator for the CurveKeyList. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKeyCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specfied index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specfied index.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKeyCollection.Count">
            <summary>
            Gets the number of elements contained in the CurveKeyList.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKeyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the CurveKeyList is read-only.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Gjk">
            <summary>
            GJK (Gilbert-Johnson-Keerthi) Algorithm from "Collision Detection in interactive 3D environments".
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Gjk.Reset">
            <summary>
            Reset current simplex and ready for new iteration.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Gjk.AddSupportPoint(Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Add new support point and update simplex.
            </summary>
            <param name="newPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Gjk.UpdateSimplex(System.Int32)">
            <summary>
            Update simplex that smallest X is less than Y
            </summary>
            <param name="newIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Gjk.ComputeClosestPoint">
            <summary>
            return current closest point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Gjk.IsSatisfiesRule(System.Int32,System.Int32)">
            <summary>
            Check specfied x subsets is satisfies rules.
            </summary>
            <param name="xBits"></param>
            <param name="yBits"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Gjk.FullSimplex">
            <summary>
            Return true if simplex is full (has 4 supporting point)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Gjk.MaxLengthSquared">
            <summary>
            Return max squared length of current simplex.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Gjk.ClosestPoint">
            <summary>
            Return current closest point.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Construct Matrix by given element values.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create spherical billboard that rotates around specfied object position.
            Vector3.Forward vector of local coordinate facing towards to camera position.
            Vector3.Up vector of local coordinate aligned to cameraUpVector.
            </summary>
            <param name="objectPosition"></param>
            <param name="cameraPosition"></param>
            <param name="cameraUpVector">mut be unit vector</param>
            <param name="cameraForwardVector">Optional: specify camera foward vector. unit vector.</param>
            <returns>Created billboard matrix.</returns>
            <remarks>This method computes facing direction from object position and camera position.
            When object and camera positions are too close, it can't compute proper matrix.
            To avoid this problem, this method uses Vector3.Forward vector when that situation.
            This assumption is good as long as camera forward direction is close to Vector3.Foward.
            Otherwise you see the 'pop' effect in this situation.
            You can reduce this issue by specify cameraForwardVector
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create cylindalical billboard that rotating around specfied axis.
            rotateAxis matches y-axis of local coordinate and Vector3.Forward of object coordinate facing towards to camera position.
            </summary>
            <param name="objectPosition"></param>
            <param name="cameraPosition"></param>
            <param name="rotateAxis">must be unit vector.</param>
            <param name="cameraForwardVector">Optional: specify camera foward vector. unit vector.</param>
            <param name="objectForwardVector">Optional: specify object foward vector. unit vector.</param>
            <returns>Created billboard matrix.</returns>
            <remarks>This method computes facing direction from object position and camera position.
            When object and camera positions are too close, it can't compute proper matrix.
            To avoid this problem, this method uses Vector3.Forward vector when that situation.
            This assumption is good as long as camera forward direction is close to Vector3.Foward.
            Otherwise you see the 'pop' effect in this situation.
            You can reduce this issue by specify cameraForwardVector
            
            Also when angle between camera to object direction and rotateAxis become close to 0, it can�t compute proper matrix either.
            To avoid this problem, this method tries to use Vector3.Forward then Vector3.Right vector for object facing direction.
            You can change this behavior by passing objectForwardVector.
            Usually you want to pass an object forward direction from previous frame computation result.
            So it keeps previous frame object rotation while this problem occurring.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Create translation matrix by given position.
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Create translation matrix by given position.
            </summary>
            <param name="xPosition"></param>
            <param name="yPosition"></param>
            <param name="zPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Create scale matrix by given parameters.
            </summary>
            <param name="xScale"></param>
            <param name="yScale"></param>
            <param name="zScale"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Create scale matrix by given vector3.
            </summary>
            <param name="scales">scale vector that contains x, y, and z scales.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)">
            <summary>
            Create uniform scale matrix
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)">
            <summary>
            Returns X-axis rotate matrix
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)">
            <summary>
            Returns Y-axis rotate matrix
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Returns Y-axis rotate matrix
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            
            </summary>
            <param name="axis">unit vector.</param>
            <param name="angle">in radians.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a perspective projection matrix based on a field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction, in radians.</param>
            <param name="aspectRatio">Aspect ratio, defined as view space width divided by height.</param>
            <param name="nearPlaneDistance">Distance from the orign to the near view-plane.</param>
            <param name="farPlaneDistance">Distance from the origin to the far view-plane.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a perspective projection matrix.
            </summary>
            <param name="width">width of the view volume at the near view-plane.</param>
            <param name="height">height of the view volume at the near view-plane.</param>
            <param name="nearPlaneDistance">Distance from the orign to the near view-plane.</param>
            <param name="farPlaneDistance">Distance from the origin to the far view-plane.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a customized, perspective projection matrix.
            </summary>
            <param name="left">Minimum x-value of the view volume at the near view-plane.</param>
            <param name="right">Maximum x-value of the view volume at the near view-plane.</param>
            <param name="bottom">Minimum y-value of the view volume at the near view-plane.</param>
            <param name="top">Maximum y-value of the view volume at the near view-plane.</param>
            <param name="nearPlaneDistance">Distance from the orign to the near view-plane.</param>
            <param name="farPlaneDistance">Distance from the origin to the far view-plane.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds Orthognal projection matrix.
            </summary>
            <param name="width">Width of the view volume.</param>
            <param name="height">Height of the view volume.</param>
            <param name="zNearPlane">Minimum z-value of the view volume.</param>
            <param name="zFarPlane">Maximum z-value of the view volume.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a customized, orthognal projection matrix.
            </summary>
            <param name="left">Minimum x-value of the view volume.</param>
            <param name="right">Maximum x-value of the view volume.</param>
            <param name="bottom">Minimum y-value of the view volume.</param>
            <param name="top">Maximum y-value of the view volume.</param>
            <param name="zNearPlane">Minimum z-value of the view volume.</param>
            <param name="zFarPlane">Maximum z-value of the view volume.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Build look-at matrix.
            </summary>
            <param name="cameraPosition">Camera position. this value is used in traslation.</param>
            <param name="cameraTarget">look-at target position.</param>
            <param name="cameraUpVector">current world's up, usually [0, 1, 0].</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Build world matrix.
            </summary>
            <param name="position">Object position. this value is used in traslation.</param>
            <param name="forward">Forward direction of the object.</param>
            <param name="up">current object's up, usually [0, 1, 0].</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Create Rotation matrix from quaternion.
            </summary>
            <param name="quaternion"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Create a matrix with a specfied yaw, pitch, and roll.
            </summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)">
            <summary>
            Builds a matrix that flattens geometry into a plane.
            </summary>
            <param name="lightDirection"></param>
            <param name="plane"></param>
            <returns></returns>
            <remarks>This method flatterns geometry into a plne, as if casting a shadow from a light.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)">
            <summary>
            Create a matrix that reflects the coodinate system about a plane.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Break down a general 3D 3D transformation matrix into its scalar, rotation, and traslation.
            </summary>
            <param name="scale"></param>
            <param name="rotation"></param>
            <param name="translation"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Transform(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transform a matrix by given quaterion.
            </summary>
            <param name="value"></param>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Negate individual elements of given matrix
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Add individual elements of given matrix a and b.
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Subtract individual elements of given matrix matrix2 from matrix1.
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Multiply given matrix matrix1 and matrix2.
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Multiply given factor aginst given matrix.
            </summary>
            <param name="matrix1"></param>
            <param name="scaleFactor"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Divide individual elements of given matrix matrix1 by matrix matrix2.
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Divide individual elements of given matrix matrix1 by scalar vlaue matrix2.
            </summary>
            <param name="matrix1"></param>
            <param name="divider"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Up">
            <summary>
            Gets, Sets Up vector of matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Down">
            <summary>
            Gets, Sets Down vector of matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Right">
            <summary>
            Gets, Sets Right vector of matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Left">
            <summary>
            Gets, Sets Left vector of matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Forward">
            <summary>
            Gets, Sets Forward vector of matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Backward">
            <summary>
            Gets, Sets Backward vector of matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Translation">
            <summary>
            Gets, Sets Translation part of matrix.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Color">
            Packed vector type containing four 8 bit unsigned normalized
            values, range 0 to 1, in an RGBA ordering. This corresponds to the
            D3DDECLTYPE_UBYTE4N vertex buffer format, and the D3DFMT_A8B8G8R8
            texture format.
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.UInt32)">
            <summary>
            Private constructor for use by the static color property getters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGB color from integer values ranging 0 to 255.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from integer values ranging 0 to 255.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGB color from floating point values ranging 0 to 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from floating point values ranging 0 to 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Constructs an RGB color from a Vector3 value ranging 0 to 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Constructs an RGBA color from a Vector4 value ranging 0 to 1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Converts a color from non-premultiplied alpha format, which uses
            floating point values ranging 0 to 1, into a premultiplied Color object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a color from non-premultiplied alpha format, which uses
            integer values ranging 0 to 255, into a premultiplied Color object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.PackHelper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Encodes from floating point into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ClampToByte32(System.Int32)">
            <summary>
            Helper clamps an integer value to the range 0 to 255.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ClampToByte64(System.Int64)">
            <summary>
            Helper clamps a long integer value to the range 0 to 255.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector3">
            <summary>
            Expands the packed representation into a Vector3.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Lerp(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Returns a new color created by interpolating part way between two other colors.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiplies the specified color by the specified value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiplies the specified color by the specified value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.GetHashCode">
            <summary>
            Gets a hash code for the packed vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(System.Object)">
            <summary>
            Determines whether this packed vector is equal to another object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(Microsoft.Xna.Framework.Color)">
            <summary>
            Determines whether this packed vector is equal to another.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Equality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Inequality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.R">
            <summary>
            Gets or sets the red component of the color as a byte ranging 0 to 255.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.G">
            <summary>
            Gets or sets the green component of the color as a byte ranging 0 to 255.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.B">
            <summary>
            Gets or sets the blue component of the color as a byte ranging 0 to 255.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.A">
            <summary>
            Gets or sets the alpha component of the color as a byte ranging 0 to 255.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the vector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a plane from plane equation.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Create a plane from 3 points (Triagnle).
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Normalize">
            <summary>
            Normalize the plane coefficients so that the plane normal has unit length.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms a plane by a matrix.
            </summary>
            <param name="plane">plane that contains vlaue that will be transformed. The Normal of this plane must be normalized before this method is called.</param>
            <param name="matrix">transformation matirx.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transforms a plane by a quaternion. This input quaternion is inverse transpose of the actual transformation.
            </summary>
            <param name="plane">plane that contains vlaue that will be transformed. The Normal of this plane must be normalized before this method is called.</param>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Intersection test against another bounding box.
            </summary>
            <param name="box"></param>
            <returns>Returns PlaneIntersectionType that contains value Inside, Outside, or Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Intersection test against another bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns PlaneIntersectionType that contains value Inside, Outside, or Intersects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Intersection test against another sphere.
            </summary>
            <param name="sphere"></param>
            <returns>Returns PlaneIntersectionType that contains value Inside, Outside, or Intersects.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Point.Zero">
            <summary>
            Returns Point(0,0)
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.LengthSquared">
            <summary>
            Returns the square of the length of a quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Length">
            <summary>
            Returns the length of a quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize">
            <summary>
            Computes a unit length quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Computes a unit length quaternion.
            </summary>
            <param name="quaternion"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate">
            <summary>
            Returns Conjugate of given quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Inverse(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Returns inverse of given quaternion.
            </summary>
            <param name="quaternion"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Rotates a quaternion about an arbitrary axis.
            </summary>
            <param name="axis"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a quaternion with a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw"></param>
            <param name="pitch"></param>
            <param name="roll"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromRotationMatrix(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Create quaternion from rotation matrix.
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Dot(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Returns the dot product of two quaternions.
            </summary>
            <param name="quaternion1"></param>
            <param name="quaternion2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Slerp(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Interpolates btween two quaternions, using spherical linear interpolation.
            </summary>
            <param name="quaternion1"></param>
            <param name="quaternion2"></param>
            <param name="amount">Paramter that indicates how far to interpolate between the quaternions.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Lerp(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Linear Interpolation betwee two quaternions.
            This works well when two quaternions are less than 90 degrees apart.
            </summary>
            <param name="quaternion1"></param>
            <param name="quaternion2"></param>
            <param name="amount">Paramter that indicates how far to interpolate between the quaternions.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Concatenate(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Concatenate two quaternions.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The result represents the rotation value1 followed by the rotation value2.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Multiply(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1"></param>
            <param name="quaternion2"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Quaternion.Identity">
            <summary>
            Returns Identity Quaternion(0, 0, 0, 1)
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Ray.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Create ray from position and direction.
            </summary>
            <param name="position">origin of ray.</param>
            <param name="direction">direction of ray. this must be unit vector.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Ray.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Intersection test against another bounding box.
            </summary>
            <param name="box"></param>
            <returns>Returns a nullable float.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Ray.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Intersection test against another bounding frustum.
            </summary>
            <param name="frustum"></param>
            <returns>Returns a nullable float.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Ray.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Intersection test against another plane.
            </summary>
            <param name="plane"></param>
            <returns>Returns a nullable float.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Ray.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Intersection test against another sphere.
            </summary>
            <param name="sphere"></param>
            <returns>Returns a nullable float.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.#ctor(System.Single)">
            <summary>
            Create Vector2 (value, value)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Reflect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Return refelct vector of given vector and normal.
            </summary>
            <param name="vector"></param>
            <param name="normal"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Barycentric(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Returns a point in Barycentric coordinates, using the specified values.
            value1 + amount1( value2 - value1 ) + amount2( value3 - value1 )
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="amount1"></param>
            <param name="amount2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.CatmullRom(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Perfroms a Catmull-Rom interpolation, using the specfied 2D vectors.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="amount">Weighting factor.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Hermite(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Performs a Hermite spline interpolation, using the specfied 2D values.
            </summary>
            <param name="value1"></param>
            <param name="tangent1"></param>
            <param name="value2"></param>
            <param name="tangent2"></param>
            <param name="amount">Weighting factor</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms a 2D vector by a given matrix, projecting the result back into w = 1.
            </summary>
            <param name="position"></param>
            <param name="matrix"></param>
            <returns></returns>
            <remarks>This function transforms the vector position(x,y,0,1), by the matrix, projecting the result back into w=1.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms the 2D vector normal by the given matrix.
            </summary>
            <param name="normal"></param>
            <param name="matrix"></param>
            <returns></returns>
            <remarks>This method transforms the vector normal (x, y, 0, 0 ) of the vector, v by the matrix.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transform vector (x, y, 0, 0) by given quaternion.
            </summary>
            <param name="value"></param>
            <param name="rotation"></param>
            <returns></returns>
            <remarks>This method transforms the vector normal (x, y, 0, 0 ) of the vector, v by the quaternion.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Transfrom by array of vectors by given matrix.
            </summary>
            <param name="sourceArray"></param>
            <param name="matrix"></param>
            <param name="destinationArray"></param>
            <remarks>This method transforms the vector normal (x, y, 0, 1 ) of the vector, v by the matrix.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Transfrom by array of vectors by given matrix.
            </summary>
            <param name="sourceArray"></param>
            <param name="matrix"></param>
            <param name="destinationArray"></param>
            <remarks>This method transforms the vector normal (x, y, 0, 0 ) of the vector, v by the matrix.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Transform array of vectors by given quaternion.
            </summary>
            <param name="sourceArray"></param>
            <param name="rotation"></param>
            <param name="destinationArray"></param>
            <remarks>This method transforms the vector normal (x, y, 0, 0 ) of the vector, v by the quaternion.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.Zero">
            <summary>
            Returns Vector(0,0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.One">
            <summary>
            Returns Vector(1,1)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.UnitX">
            <summary>
            Returns Vector(1,0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.UnitY">
            <summary>
            Retunrs Vector( 0, 1 )
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(System.Single)">
            <summary>
            Create Vector3 (value, value, value)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Reflect(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Return refelct vector of given vector and normal.
            </summary>
            <param name="vector"></param>
            <param name="normal"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Barycentric(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            Returns a point in Barycentric coordinates, using the specified values.
            value1 + amount1( value2 - value1 ) + amount2( value3 - value1 )
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="amount1"></param>
            <param name="amount2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.CatmullRom(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Perfroms a Catmull-Rom interpolation, using the specfied 3D vectors.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="amount">Weighting factor.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Hermite(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Performs a Hermite spline interpolation, using the specfied 3D values.
            </summary>
            <param name="value1"></param>
            <param name="tangent1"></param>
            <param name="value2"></param>
            <param name="tangent2"></param>
            <param name="amount">Weighting factor</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms a 3D vector by a given matrix, projecting the result back into w = 1.
            </summary>
            <param name="position"></param>
            <param name="matrix"></param>
            <returns></returns>
            <remarks>This function transforms the vector position(x,y,z,1), by the matrix, projecting the result back into w=1.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms the 3D vector normal by the given matrix.
            </summary>
            <param name="normal"></param>
            <param name="matrix"></param>
            <returns></returns>
            <remarks>This method transforms the vector normal (x, y, z, 0 ) of the vector, v by the matrix.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transform vector (x, y, z, 1) by given quaternion.
            </summary>
            <param name="value"></param>
            <param name="rotation"></param>
            <returns></returns>
            <remarks>This method transforms the vector normal (x, y, z, 0 ) of the vector, v by the quaternion.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Transform array of vectors (x, y, z, 1) by given matrix.
            </summary>
            <param name="sourceArray"></param>
            <param name="matrix"></param>
            <param name="destinationArray"></param>
            <returns></returns>
            <remarks>This method transforms the vector (x, y, z, 1 ) of the vector, v by the matrix.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Transfrom by array of vectors by given matrix.
            This method treat vector3 as (x, y, z, 0)
            </summary>
            <param name="sourceArray"></param>
            <param name="matrix"></param>
            <param name="destinationArray"></param>
            <remarks>This method transforms the vector (x, y, z, 0 ) of the vector, v by the matrix.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Transform array of vectors (x, y, z, 1) by given quaternion.
            </summary>
            <param name="sourceArray"></param>
            <param name="rotation"></param>
            <param name="destinationArray"></param>
            <returns></returns>
            <remarks>This method transforms the vector (x, y, z, 1 ) of the vector, v by the quaternion.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Zero">
            <summary>
            Retunrs Vector( 0, 0, 0 )
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.One">
            <summary>
            Retunrs Vector( 1, 1, 1 )
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitX">
            <summary>
            Retunrs Vector( 1, 0, 0 )
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitY">
            <summary>
            Retunrs Vector( 0, 1, 0 )
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitZ">
            <summary>
            Returns Vector( 0, 0, 1 )
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Up">
            <summary>
            Returns Up direction unit vector ( 0,1, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Down">
            <summary>
            Returns Down direction unit vector ( 0,-1, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Right">
            <summary>
            Returns Right direction unit vector ( 1, 0, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Left">
            <summary>
            Returns Left direction unit vector ( -1, 0, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Forward">
            <summary>
            Returns Forward direction unit vector ( 0, 0, -1)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Backward">
            <summary>
            Returns Backward direction unit vector ( 0, 0, 1)
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single)">
            <summary>
            Create Vector4 (value, value, value, value)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)">
            <summary>
            Returns a point in Barycentric coordinates, using the specified values.
            value1 + amount1( value2 - value1 ) + amount2( value3 - value1 )
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="amount1"></param>
            <param name="amount2"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Perfroms a Catmull-Rom interpolation, using the specfied 4D vectors.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="amount">Weighting factor.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Performs a Hermite spline interpolation, using the specfied 4D values.
            </summary>
            <param name="value1"></param>
            <param name="tangent1"></param>
            <param name="value2"></param>
            <param name="tangent2"></param>
            <param name="amount">Weighting factor</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transform vector (x, y, 0, 1) by given matrix.
            </summary>
            <param name="position"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transform vector (x, y, z, 1) by given matrix.
            </summary>
            <param name="position"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transform vector (x, y, z, w) by given matrix.
            </summary>
            <param name="vector"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transform vector (x, y, 0, 1) by given quaternion.
            </summary>
            <param name="value"></param>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transform vector (x, y, z, 1) by given quaternion.
            </summary>
            <param name="value"></param>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transform vector (x, y, z, w) by given quaternion.
            </summary>
            <param name="value"></param>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.Zero">
            <summary>
            Returns Vector (0, 0, 0, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.One">
            <summary>
            Returns Vector (1, 1, 1, 1)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitX">
            <summary>
            Returns Vector (1, 0, 0, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitY">
            <summary>
            Returns Vector (0, 1, 0, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitZ">
            <summary>
            Returns Vector (0, 0, 1, 0)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitW">
            <summary>
            Returns Vector (0, 0, 0, 1)
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.PendingOperation">
            <summary>
            The UserAsyncDispatcher maintains a dictionary mapping from kernel handles to "PendingOperations."
            the PendingOperation struct will tell him what async operation just finished, and what callback to call.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.UserAsyncDispatcher.AsyncDispatcherThreadFunction">
            <summary>
            this function runs on a separate thread from the main game code, and will handle async operations.
            this function will call into the kernel and block waiting for operations to finish. when an operation finishes, 
            control returns to this function, who will handle the finished operation (signal the managed handle, etc).
            the function will then call back into the kernel and wait for more operations to finish.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.UserAsyncDispatcher.CallbackGoesToDispatcher(Microsoft.Xna.Framework.ManagedCallType)">
            <summary>
            helper function tells the async dispatcher whether he should send the event
            to the main dispatcher for later processsing, or just raise it immediately.
            </summary>
            <param name="managedCallType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.UserAsyncDispatcher.OperationStillPending(Microsoft.Xna.Framework.XOverlappedAsyncResult)">
            <summary>
            check to see if an operation is still pending ( in the pending operations collection. )
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentReader">
            <summary>
            Worker object implements most of ContentManager.Load. A fresh
            one of these is constructed for each asset that gets loaded.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.Create(Microsoft.Xna.Framework.Content.ContentManager,System.IO.Stream,System.String,System.Action{System.IDisposable})">
            <summary>
            Public factory method.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.#ctor(Microsoft.Xna.Framework.Content.ContentManager,System.IO.Stream,System.String,System.Action{System.IDisposable},System.Int32)">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.PrepareStream(System.IO.Stream,System.String,System.Int32@)">
            <summary>
            Reads and validates the XNB file prologue, and returns a stream that can be
            used to read the rest of the file. This is implemented as a static method,
            so it can be called from the ContentReader constructor, thus allowing us to
            pick whether to use a DecompressStream before we have to pass that stream
            on to the base BinaryReader constructor (irritatingly, BinaryReader does
            not allow you to switch the underlying stream after it is constructed).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadAsset``1">
            <summary>
            Reads an entire asset from the compiled binary format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadHeader">
            <summary>
            Reads and validates the file header, from where PrepareStream left off.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadObject``1">
            <summary>
            Reads a single managed object from the compiled binary format.
            Can be called recursively.
            </summary>
            <typeparam name="T">Type of the object to read.</typeparam>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadObject``1(``0)">
            <summary>
            Reads a single managed object from the compiled binary format.
            Can be called recursively.
            </summary>
            <typeparam name="T">Type of the object to read.</typeparam>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadObject``1(Microsoft.Xna.Framework.Content.ContentTypeReader)">
            <summary>
            Reads a single managed object from the compiled binary format, using the
            specified type hint (this should be looked up from the Initialize method of
            the ContentTypeReader that is calling ReadObject, by calling manager.GetTypeReader).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadObject``1(Microsoft.Xna.Framework.Content.ContentTypeReader,``0)">
            <summary>
            Reads a single managed object from the compiled binary format, using the
            specified type hint (this should be looked up from the Initialize method of
            the ContentTypeReader that is calling ReadObject, by calling manager.GetTypeReader).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadObjectInternal``1(System.Object)">
            <summary>
            Helper code shared between the various ReadObject overloads.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadObjectInternal``1(Microsoft.Xna.Framework.Content.ContentTypeReader,System.Object)">
            <summary>
            Helper code shared between the various ReadObject overloads.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadRawObject``1">
            <summary>
            Reads a single managed object from the compiled binary format, as an instance
            of the specified type. If you specify a base class of the actual object type,
            only data from this base type will be read.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadRawObject``1(``0)">
            <summary>
            Reads a single managed object from the compiled binary format, as an instance
            of the specified type. If you specify a base class of the actual object type,
            only data from this base type will be read.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadRawObject``1(Microsoft.Xna.Framework.Content.ContentTypeReader)">
            <summary>
            Reads a single managed object from the compiled binary format, using the
            specified writer reader (this should be looked up from the Initialize method
            of the ContentTypeReader that is calling ReadRawObject, by calling manager.GetTypeReader).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadRawObject``1(Microsoft.Xna.Framework.Content.ContentTypeReader,``0)">
            <summary>
            Reads a single managed object from the compiled binary format, using the
            specified writer reader (this should be looked up from the Initialize method
            of the ContentTypeReader that is calling ReadRawObject, by calling manager.GetTypeReader).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.InvokeReader``1(Microsoft.Xna.Framework.Content.ContentTypeReader,System.Object)">
            <summary>
            Helper for invoking the ContentTypeReader.Read method, avoiding unneccessary boxing.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadSharedResource``1(System.Action{``0})">
            <summary>
            Reads a shared resource ID, and records it for subsequent fixup.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadSharedResources(System.Int32)">
            <summary>
            Reads the list of shared resources, and performs fixups on anything that references them.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadExternalReference``1">
            <summary>
            Reads a link to an external file.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.GetPathToReference(System.String)">
            <summary>
            Returns the path to a related reference relative to the asset location.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.GetAbsolutePathToReference(System.String)">
            <summary>
            Returns an absolute filesystem path to a related reference.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadByteBuffer(System.Int32)">
            <summary>
            BinaryReader.ReadBytes creates a new array every time you call it. Over the 
            course of content loading, this garbage can trigger a significant number of 
            unnecessary collections, due to sillyness like allocating a new temporary 
            buffer for each mip level of a texture. To improve load times, this internal 
            helper allows us to reuse a single buffer for all texture and vertex/index 
            buffer loading within a single ContentManager.Load call (the buffer is freed 
            when ContentManager.Load returns).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.CreateContentLoadException(System.String,System.Object[])">
            <summary>
            Helper for constructing content load exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.CreateContentLoadException(System.Exception,System.String,System.Object[])">
            <summary>
            Helper for constructing content load exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.CreateContentLoadException(System.String,System.Exception,System.String,System.Object[])">
            <summary>
            Helper for constructing content load exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadVector2">
            <summary>
            Reads a Vector2 value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadVector3">
            <summary>
            Reads a Vector3 value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadVector4">
            <summary>
            Reads a Vector4 value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadMatrix">
            <summary>
            Reads a Matrix value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadQuaternion">
            <summary>
            Reads a Quaternion value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadColor">
            <summary>
            Reads a Color value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadSingle">
            <summary>
            The .NET Compact Framework has a poor ReadSingle() implementation that allocates
            each time it is called. We provide a better version that will not create any garbage.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentReader.ReadDouble">
            <summary>
            The .NET Compact Framework has a poor ReadDouble() implementation that allocates
            each time it is called. We provide a better version that will not create any garbage.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentReader.ContentManager">
            <summary>
            Backlink to the parent content manager.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentReader.AssetName">
            <summary>
            Gets the name of the asset currently being read.
            This can be useful to include in the exception message
            if a custom ContentTypeReader encounters an error.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentTypeReaderManager">
            <summary>
            Singleton manager constructs and keeps track of type reader objects.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.#cctor">
            <summary>
            Prime the reader list with a magic entry for System.Object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.#ctor(Microsoft.Xna.Framework.Content.ContentReader)">
            <summary>
            Most of the time we are a static class, keeping a global stash of instantiated
            type readers. We expose a bunch of static internal methods for use by ContentReader.
            But when we call the Initialize method on new type readers, we pass them an
            actual ContentTypeReaderManager instance, which they can use to access the instance
            version of GetTypeReader. These temporary instances need to track what ContentReader
            they belong to, so they give sensible exception messages if badness takes place.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ReadTypeManifest(System.Int32,Microsoft.Xna.Framework.Content.ContentReader)">
            <summary>
            Reads the type manifest from the top of the compiled binary format, returning
            an array of the ContentTypeReader workers it describes, or throwing if there 
            is a type version mismatch.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.String,Microsoft.Xna.Framework.Content.ContentReader,System.Collections.Generic.List{Microsoft.Xna.Framework.Content.ContentTypeReader}@)">
            <summary>
            Demand creates a type reader worker instance, given the
            assembly qualified name of the reader implementation type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.InstantiateTypeReader(System.String,Microsoft.Xna.Framework.Content.ContentReader,Microsoft.Xna.Framework.Content.ContentTypeReader@)">
            <summary>
            Instantiates a reader worker. Returns a boolean indicating whether it
            created a new instance, as opposed to reusing an existing instantiation.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeReader(System.String,Microsoft.Xna.Framework.Content.ContentReader,Microsoft.Xna.Framework.Content.ContentTypeReader)">
            <summary>
            Adds a new reader instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.RollbackAddReaders(System.Collections.Generic.List{Microsoft.Xna.Framework.Content.ContentTypeReader})">
            <summary>
            Helper for rolling back failed attempts to add new type readers.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.RollbackAddReader``1(System.Collections.Generic.Dictionary{``0,Microsoft.Xna.Framework.Content.ContentTypeReader},Microsoft.Xna.Framework.Content.ContentTypeReader)">
            <summary>
            Helper for rolling back failed attempts to add new type readers.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.Type,Microsoft.Xna.Framework.Content.ContentReader)">
            <summary>
            Looks up a reader for the specified type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.Type)">
            <summary>
            Looks up a reader for the specified type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ContainsTypeReader(System.Type)">
            <summary>
            Checks whether we have a reader for the specified type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ReflectiveReader`1">
            <summary>
            Uses reflection to figure out how to load any arbitrary type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReader`1.Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)">
            <summary>
            Use reflection to figure out how to serialize this type.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReader`1.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)">
            <summary>
            Reads an object from disk.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ReflectiveReader`1.CanDeserializeIntoExistingObject">
            <summary>
            Are we able to load data into an existing object?
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ReflectiveReader`1.TypeVersion">
            <summary>
            Gets a format version number for this type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper">
            <summary>
            Worker for deserializing a field or property.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.TryCreate(Microsoft.Xna.Framework.Content.ContentTypeReaderManager,System.Type,System.Reflection.FieldInfo)">
            <summary>
            Creates a handler for the specified field, if it is appropriate for this to be serialized.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.TryCreate(Microsoft.Xna.Framework.Content.ContentTypeReaderManager,System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Creates a handler for the specified property, if it is appropriate for this to be serialized.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.#ctor(Microsoft.Xna.Framework.Content.ContentTypeReaderManager,System.Reflection.FieldInfo,System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.ShouldSerializeMember(Microsoft.Xna.Framework.Content.ContentTypeReaderManager,System.Type,System.Reflection.MemberInfo,System.Type,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Checks whether it is appropriate to include a field or property in the serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.ShouldSerializeProperty(Microsoft.Xna.Framework.Content.ContentTypeReaderManager,System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Checks whether it is appropriate to include a property in the serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.IsSharedResource(System.Reflection.MemberInfo)">
            <summary>
            Checks whether this field or property has a shared resource attribute on it.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.ValidateSkippedMember(System.Reflection.MemberInfo)">
            <summary>
            Checks if it is cool for us not to be serializing this member.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)">
            <summary>
            Read data from XNB format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ReflectiveReaderMemberHelper.FixupSharedResource(Microsoft.Xna.Framework.Content.ContentReader,System.Object,System.Object)">
            <summary>
            Applies a shared resource fixup.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfUtils.Pack(System.Single)">
            <summary>
            Encodes a vector into packed format.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfUtils.Unpack(System.UInt16)">
            <summary>
            Expands the packed representation into a float.
            </summary>
        </member>
    </members>
</doc>
