<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System</name>
  </assembly>
  <members>
    <member name="T:System.FileStyleUriParser">
      <summary>Ein vom Benutzer anpassbarer Parser auf Grundlage des Dateischemas.</summary>
    </member>
    <member name="M:System.FileStyleUriParser.#ctor">
      <summary>Erstellt einen vom Benutzer anpassbaren Parser auf Grundlage des Dateischemas.</summary>
    </member>
    <member name="T:System.FtpStyleUriParser">
      <summary>Ein vom Benutzer anpassbarer Parser auf Grundlage des FTP-Schemas.</summary>
    </member>
    <member name="M:System.FtpStyleUriParser.#ctor">
      <summary>Erstellt einen vom Benutzer anpassbaren Parser auf Grundlage des FTP-Schemas.</summary>
    </member>
    <member name="T:System.GenericUriParser">
      <summary>Ein vom Benutzer anpassbarer Parser für einen hierarchischen URI.</summary>
    </member>
    <member name="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)">
      <summary>Erstellen Sie einen vom Benutzer anpassbaren Parser für einen hierarchischen URI.</summary>
      <param name="options">Geben Sie die Optionen für diesen <see cref="T:System.GenericUriParser" /> an.</param>
    </member>
    <member name="T:System.GenericUriParserOptions">
      <summary>Legt Optionen für ein <see cref="T:System.UriParser" /> fest.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.AllowEmptyAuthority">
      <summary>Der Parser lässt einen URI ohne Zertifizierungsstelle zu.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.Default">
      <summary>Der Parser:</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontCompressPath">
      <summary>Der Parser kanonisiert den URI nicht.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontConvertPathBackslashes">
      <summary>Der Parser konvertiert umgekehrte Schrägstriche nicht in Schrägstriche.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontUnescapePathDotsAndSlashes">
      <summary>Der Parser entfernt keine Escapezeichen von Pfadpunkten, Schrägstrichen oder umgekehrten Schrägstrichen.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.GenericAuthority">
      <summary>Der Parser lässt eine registrierungsbasierte Zertifizierungsstelle zu.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.Idn">
      <summary>Der Parser unterstützt IDN-Analysen (Internationalized Domain Name) von Hostnamen.Durch die Konfigurationswerte wird festgelegt, ob IDN verwendet wird.Weitere Informationen finden Sie in den Hinweisen.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.IriParsing">
      <summary>Der Parser unterstützt die in RFC 3987 für IRI (International Resource Identifiers) angegebenen Analyseregeln.Durch die Konfigurationswerte wird festgelegt, ob IRI verwendet wird.Weitere Informationen finden Sie in den Hinweisen.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoFragment">
      <summary>Das Schema definiert keinen Fragmentteil.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoPort">
      <summary>Das Schema definiert keinen Anschluss.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoQuery">
      <summary>Das Schema definiert keinen Abfrageteil.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoUserInfo">
      <summary>Das Schema definiert keinen Benutzerinformationsteil.</summary>
    </member>
    <member name="T:System.HttpStyleUriParser">
      <summary>Ein vom Benutzer anpassbarer Parser auf Grundlage des HTTP-Schemas.</summary>
    </member>
    <member name="M:System.HttpStyleUriParser.#ctor">
      <summary>Erstellt einen vom Benutzer anpassbaren Parser auf Grundlage des HTTP-Schemas.</summary>
    </member>
    <member name="T:System.Uri">
      <summary>Stellt eine Objektdarstellung eines URIs (Uniform Resource Identifier) und einfachen Zugriff auf die Teile des URIs bereit.</summary>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse mit dem angegebenen URI.</summary>
      <param name="uriString">Ein URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> ist leer.- oder - Das in <paramref name="uriString" /> angegebene Schema entspricht nicht der korrekten Form. Weitere Informationen finden Sie unter <see cref="M:System.Uri.CheckSchemeName(System.String)" />.- oder - <paramref name="uriString" /> enthält zu viele Schrägstriche (/).- oder - Das in <paramref name="uriString" /> angegebene Kennwort ist ungültig.- oder - Der in <paramref name="uriString" /> angegebene Hostname ist ungültig.- oder - Der in <paramref name="uriString" /> angegebene Dateiname ist ungültig. - oder - Der in <paramref name="uriString" /> angegebene Benutzername ist ungültig.- oder - Am Ende des in <paramref name="uriString" /> angegeben Hostnamens oder Namens der Zertifizierungsstelle sind umgekehrte Schrägstriche unzulässig.- oder - Die in <paramref name="uriString" /> angegebene Anschlussnummer ist ungültig oder kann nicht analysiert werden.- oder - <paramref name="uriString" /> ist länger als 65519 Zeichen.- oder - Das in <paramref name="uriString" /> angegebene Schema ist länger als 1024 Zeichen.- oder - <paramref name="uriString" /> enthält eine ungültige Zeichensequenz.- oder - Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse mit dem angegebenen URI. Mit diesem Konstruktor können Sie angeben, ob die URI-Zeichenfolge ein relativer URI, ein absoluter URI oder unbestimmt ist.</summary>
      <param name="uriString">Eine Zeichenfolge, die die Ressource identifiziert, die durch die <see cref="T:System.Uri" />-Instanz dargestellt werden soll.</param>
      <param name="uriKind">Gibt an, ob die URI-Zeichenfolge ein relativer URI, ein absoluter URI oder unbestimmt ist.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> ist nicht gültig (mögliche Werte sind <see cref="F:System.UriKind.Absolute" />, <see cref="F:System.UriKind.Relative" /> oder <see cref="F:System.UriKind.RelativeOrAbsolute" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> enthält einen relativen URI, und <paramref name="uriKind" /> ist <see cref="F:System.UriKind.Absolute" />.oder<paramref name="uriString" /> enthält einen absoluten URI, und <paramref name="uriKind" /> ist <see cref="F:System.UriKind.Relative" />.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse auf Grundlage des angegebenen Basis-URIs und der relativen URI-Zeichenfolge.</summary>
      <param name="baseUri">Der Basis-URI. </param>
      <param name="relativeUri">Der relative URI, der dem Basis-URI hinzugefügt werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> ist keine absolute <see cref="T:System.Uri" />-Instanz.</exception>
      <exception cref="T:System.UriFormatException">Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> erstellte URI ist leer oder enthält nur Leerzeichen.- oder - Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI enthält zu viele Schrägstriche.- oder - Das Kennwort, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Der Hostname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Der Dateiname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig. - oder - Der Benutzername, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Am Ende des Hostnamens oder Namens der Zertifizierungsstelle, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, sind umgekehrte Schrägstriche unzulässig.- oder - Die Anschlussnummer, die in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig oder kann nicht analysiert werden.- oder - Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI ist länger als 65519 Zeichen.- oder - Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist länger als 1024 Zeichen.- oder - Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI enthält eine ungültige Zeichenfolge.- oder - Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Uri" />-Klasse auf Grundlage der Kombination einer angegebenen <see cref="T:System.Uri" />-Instanz als Basis und einer relativen <see cref="T:System.Uri" />-Instanz.</summary>
      <param name="baseUri">Ein absoluter <see cref="T:System.Uri" />, der die Basis für die neue <see cref="T:System.Uri" />-Instanz ist. </param>
      <param name="relativeUri">Eine relative <see cref="T:System.Uri" />-Instanz, die mit <paramref name="baseUri" /> kombiniert wird. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> ist keine absolute <see cref="T:System.Uri" />-Instanz.</exception>
      <exception cref="T:System.UriFormatException">Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> erstellte URI ist leer oder enthält nur Leerzeichen.- oder - Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI enthält zu viele Schrägstriche.- oder - Das Kennwort, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Der Hostname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Der Dateiname, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig. - oder - Der Benutzername, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig.- oder - Am Ende des Hostnamens oder Namens der Zertifizierungsstelle, der in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, sind umgekehrte Schrägstriche unzulässig.- oder - Die Anschlussnummer, die in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist ungültig oder kann nicht analysiert werden.- oder - Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildete URI ist länger als 65519 Zeichen.- oder - Das Schema, das in dem durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI angegeben ist, ist länger als 1024 Zeichen.- oder - Der durch Kombination von <paramref name="baseUri" /> und <paramref name="relativeUri" /> gebildeten URI enthält eine ungültige Zeichenfolge.- oder - Der in <paramref name="uriString" /> angegebene MS DOS-Pfad muss mit c:\\ beginnen.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Ruft den absoluten Pfad des URIs ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem absoluten Pfad der Ressource.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Ruft den absoluten URI ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem vollständigen URI.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Ruft den DNS-Hostnamen (Domain Name System) oder die IP-Adresse und die Anschlussnummer für einen Server ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Zertifizierungsstellenkomponente des von dieser Instanz dargestellten URIs enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Bestimmt, ob der angegebene Hostname ein gültiger DNS-Name ist.</summary>
      <returns>Ein <see cref="T:System.UriHostNameType" />, der den Typ des Hostnamens angibt. Wenn der Typ des Hostnamens nicht bestimmt werden kann oder der Hostname null oder eine Zeichenfolge der Länge 0 (null) ist, gibt diese Methode <see cref="F:System.UriHostNameType.Unknown" /> zurück.</returns>
      <param name="name">Der Hostname, der überprüft werden soll. Dies kann eine IPv4- oder IPv6-Adresse oder ein Internethostname sein. </param>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Bestimmt, ob der angegebene Schemaname gültig ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der Schemaname gültig ist, andernfalls false.</returns>
      <param name="schemeName">Der Schemaname, der überprüft werden soll. </param>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Vergleicht die angegebenen Teile von zwei URIs gemäß den angegebenen Vergleichsregeln.</summary>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der die lexikalische Beziehung zwischen den verglichenen <see cref="T:System.Uri" />-Komponenten angibt.WertBedeutungKleiner als 0 (null)<paramref name="uri1" /> ist kleiner als <paramref name="uri2" />.0 (null)<paramref name="uri1" /> ist gleich <paramref name="uri2" />.Größer als 0 (null)<paramref name="uri1" /> ist größer als <paramref name="uri2" />.</returns>
      <param name="uri1">Der erste <see cref="T:System.Uri" />.</param>
      <param name="uri2">Der zweite <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">Eine bitweise Kombination der <see cref="T:System.UriComponents" />-Werte, die die Teile von <paramref name="uri1" /> und <paramref name="uri2" /> angeben, die verglichen werden sollen.</param>
      <param name="compareFormat">Einer der <see cref="T:System.UriFormat" />-Werte, der das Escapezeichen angibt, das beim Vergleichen der URI-Komponenten verwendet wird.</param>
      <param name="comparisonType">Einer der <see cref="T:System.StringComparison" />-Werte.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</exception>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Ruft einen Hostnamen ohne Escapezeichen ab, der sicher für die DNS-Auflösung verwendet werden kann.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem Teil des Hostnamens ohne Escapezeichen im URI für die DNS-Auflösung oder die ursprüngliche Hostzeichenfolge ohne Escapezeichen, wenn diese zur Auflösung verwendet werden kann.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Überprüft zwei <see cref="T:System.Uri" />-Instanzen auf Gleichheit.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die zwei Instanzen denselben URI darstellen, andernfalls false.</returns>
      <param name="comparand">Die <see cref="T:System.Uri" />-Instanz oder ein URI-Bezeichner, der mit der aktuellen Instanz verglichen werden soll. </param>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine Darstellung mit Escapezeichen.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Darstellung von <paramref name="stringToEscape" /> mit Escapezeichen enthält.</returns>
      <param name="stringToEscape">Die Zeichenfolge, die mit Escapezeichen versehen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stringToEscape" /> ist länger als 32766 Zeichen.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Konvertiert eine URI-Zeichenfolge in eine Darstellung mit Escapezeichen.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Darstellung von <paramref name="stringToEscape" /> mit Escapezeichen enthält.</returns>
      <param name="stringToEscape">Die Zeichenfolge, die mit Escapezeichen versehen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stringToEscape" /> ist länger als 32766 Zeichen.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Ruft das mit Escapezeichen versehene URI-Fragment ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der URI-Fragmentinformationen enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="M:System.Uri.FromHex(System.Char)">
      <summary>Ruft den Dezimalwert einer Hexadezimalziffer ab.</summary>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der eine Zahl von 0 bis 15 enthält, die der angegebenen Hexadezimalziffer entspricht.</returns>
      <param name="digit">Die zu konvertierende Hexadezimalziffer (0-9, a-f, A-F). </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="digit" /> ist keine gültige Hexadezimalziffer (0-9, a-f, A-F). </exception>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Ruft die angegebenen Komponenten der aktuellen Instanz mit dem angegebenen Escapeverhalten für Sonderzeichen ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Komponenten enthält.</returns>
      <param name="components">Eine bitweise Kombination der <see cref="T:System.UriComponents" />-Werte, die angeben, welche Teile der aktuellen Instanz dem Aufrufer zurückgegeben werden sollen.</param>
      <param name="format">Einer der <see cref="T:System.UriFormat" />-Werte, die steuern, wie Sonderzeichen mit Escapezeichen versehen werden. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" /> ist keine Kombination von gültigen <see cref="T:System.UriComponents" />-Werten.</exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig.</exception>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Ruft den Hashcode für den URI ab.</summary>
      <returns>Ein <see cref="T:System.Int32" />, der den für diesen URI generierten Hashwert enthält.</returns>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Ruft die Hostkomponente dieser Instanz ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Hostnamen enthält. Das ist normalerweise der DNS-Hostname oder die IP-Adresse des Servers.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Ruft den Typ des im URI angegebenen Hostnamens ab.</summary>
      <returns>Ein Member aus der <see cref="T:System.UriHostNameType" />-Enumeration.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Ruft ab, ob die <see cref="T:System.Uri" />-Instanz absolut ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die <see cref="T:System.Uri" />-Instanz absolut ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Bestimmt, ob die aktuelle <see cref="T:System.Uri" />-Instanz eine Basis der angegebenen <see cref="T:System.Uri" />-Instanz ist.</summary>
      <returns>true, wenn die aktuelle <see cref="T:System.Uri" />-Instanz eine Basis von <paramref name="uri" /> ist, andernfalls false.</returns>
      <param name="uri">Die angegebene <see cref="T:System.Uri" />-Instanz, die getestet werden soll. </param>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Ruft ab, ob der Portwert im URI der Standardwert für dieses Schema ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der Wert in der <see cref="P:System.Uri.Port" />-Eigenschaft der Standardport für dieses Schema ist, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Ruft einen Wert ab, der angibt, ob der angegebene <see cref="T:System.Uri" /> ein Datei-URI ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> einen Datei-URI darstellt, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="M:System.Uri.IsHexDigit(System.Char)">
      <summary>Bestimmt, ob ein angegebenes Zeichen eine gültige Hexadezimalziffer ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn das Zeichen eine gültige Hexadezimalziffer ist, andernfalls false.</returns>
      <param name="character">Das Zeichen, das validiert werden soll. </param>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Ruft ab, ob der angegebene <see cref="T:System.Uri" /> auf den lokalen Host verweist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn dieser <see cref="T:System.Uri" /> auf den lokalen Host verweist, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Ruft ab, ob der angegebene <see cref="T:System.Uri" /> einen UNC-Pfad (Universal Naming Convention) darstellt.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> einen UNC-Pfad darstellt, andernfalls false.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Gibt an, ob die zum Erstellen dieses <see cref="T:System.Uri" /> verwendete Zeichenfolge wohlgeformt war und keine weiteren Escapezeichen eingefügt werden müssen.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die Zeichenfolge wohlgeformt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Gibt an, ob eine Zeichenfolge wohlgeformt ist, indem versucht wird, einen <see cref="T:System.Uri" />-Wert aus der Zeichenfolge zu erstellen. Es wird sichergestellt, dass keine weiteren Escapezeichen in die Zeichenfolge eingefügt werden müssen.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die Zeichenfolge gemäß RFC 3986 wohlgeformt ist, andernfalls false.</returns>
      <param name="uriString">Ein als Zeichenfolge dargestellter <see cref="T:System.Uri" />-Wert.</param>
      <param name="uriKind">Der Typ des URI im <paramref name="uriString" />-Parameter.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Ruft die Darstellung eines Dateinamens im lokalen Betriebssystem ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit der Darstellung eines Dateinamens im lokalen Betriebssystem.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Bestimmt den Unterschied zwischen zwei <see cref="T:System.Uri" />-Instanzen.</summary>
      <returns>Wenn der Hostname und das Schema dieser URI-Instanz mit <paramref name="toUri" /> identisch sind, gibt diese Methode einen relativen <see cref="T:System.Uri" /> zurück, der beim Anfügen an die aktuelle URI-Instanz <paramref name="toUri" /> liefert.Wenn der Hostname oder das Schema nicht identisch ist, gibt diese Methode einen <see cref="T:System.Uri" /> zurück, der den <paramref name="toUri" />-Parameter darstellt.</returns>
      <param name="uri">Der mit dem aktuellen URI zu vergleichende URI.</param>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Uri" />-Instanzen denselben Wert haben.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die <see cref="T:System.Uri" />-Instanzen äquivalent sind, andernfalls false.</returns>
      <param name="uri1">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri2" /> verglichen werden soll. </param>
      <param name="uri2">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri1" /> verglichen werden soll. </param>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Uri" />-Instanzen verschiedene Werte haben.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn die beiden <see cref="T:System.Uri" />-Instanzen ungleich sind, andernfalls false. Wenn einer der Parameter null ist, gibt diese Methode true zurück.</returns>
      <param name="uri1">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri2" /> verglichen werden soll. </param>
      <param name="uri2">Eine <see cref="T:System.Uri" />-Instanz, die mit <paramref name="uri1" /> verglichen werden soll. </param>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Ruft die ursprüngliche URI-Zeichenfolge ab, die an den <see cref="T:System.Uri" />-Konstruktor übergeben wurde.</summary>
      <returns>Ein <see cref="T:System.String" />, der exakt den URI enthält, der beim Erstellen dieser Instanz angegeben wurde, andernfalls <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Ruft die durch ein Fragezeichen (?) getrennten Werte der <see cref="P:System.Uri.AbsolutePath" />-Eigenschaft und der <see cref="P:System.Uri.Query" />-Eigenschaft ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die durch ein Fragezeichen (?) getrennten Werte der <see cref="P:System.Uri.AbsolutePath" />-Eigenschaft und der <see cref="P:System.Uri.Query" />-Eigenschaft enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Ruft die Anschlussnummer dieses URIs ab.</summary>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der die Portnummer für diesen URI enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Ruft im angegebenen URI enthaltene Abfrageinformationen ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit den im angegebenen URI enthaltenen Abfrageinformationen.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Ruft den Namen des Schemas für diesen URI ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der das in Kleinbuchstaben umgewandelte Schema für diesen URI enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="F:System.Uri.SchemeDelimiter">
      <summary>Gibt die Zeichen an, die das Schema des Kommunikationsprotokolls vom Adressteil des URIs trennen. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Ruft ein Array mit den Pfadsegmenten ab, aus denen sich der angegebene URI zusammensetzt.</summary>
      <returns>Ein <see cref="T:System.String" />-Array mit den Pfadsegmenten, aus denen sich der angegebene URI zusammensetzt.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Instanz stellt einen relativen URI dar, diese Eigenschaft ist jedoch nur für absolute URIs gültig. </exception>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Ruft eine kanonische Zeichenfolgenentsprechung der angegebenen <see cref="T:System.Uri" />-Instanz ab.</summary>
      <returns>Eine <see cref="T:System.String" />-Instanz, die eine kanonische Darstellung der <see cref="T:System.Uri" />-Instanz enthält, die nicht mit Escapezeichen versehen wurde. #, ? und % sind die einzigen Zeichen, die mit Escapezeichen versehen sind.</returns>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Erstellt mit der angegebenen <see cref="T:System.String" />-Instanz und einer <see cref="T:System.UriKind" /> einen neuen <see cref="T:System.Uri" />.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> erfolgreich erstellt wurde, andernfalls false.</returns>
      <param name="uriString">Der <see cref="T:System.String" />, der den <see cref="T:System.Uri" /> darstellt.</param>
      <param name="uriKind">Der Typ des Uris.</param>
      <param name="result">Diese Methode gibt den erstellten <see cref="T:System.Uri" /> zurück.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Erstellt mit der angegebenen Basis und den relativen <see cref="T:System.String" />-Instanzen einen neuen <see cref="T:System.Uri" />.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> erfolgreich erstellt wurde, andernfalls false.</returns>
      <param name="baseUri">Das Basis-<see cref="T:System.Uri" />.</param>
      <param name="relativeUri">Der relative <see cref="T:System.Uri" />, dargestellt als ein <see cref="T:System.String" />, der dem Basis-<see cref="T:System.Uri" /> hinzugefügt werden soll.</param>
      <param name="result">Enthält nach dem Beenden der Methode einen aus <paramref name="baseUri" /> und <paramref name="relativeUri" /> erstellten <see cref="T:System.Uri" />. Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Erstellt mit der angegebenen Basis und den relativen <see cref="T:System.Uri" />-Instanzen einen neuen <see cref="T:System.Uri" />.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <see cref="T:System.Uri" /> erfolgreich erstellt wurde, andernfalls false.</returns>
      <param name="baseUri">Das Basis-<see cref="T:System.Uri" />. </param>
      <param name="relativeUri">Der relative <see cref="T:System.Uri" />, der dem Basis-<see cref="T:System.Uri" /> hinzugefügt werden soll. </param>
      <param name="result">Enthält nach dem Beenden der Methode einen aus <paramref name="baseUri" /> und <paramref name="relativeUri" /> erstellten <see cref="T:System.Uri" />. Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine Darstellung ohne Escapezeichen.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Darstellung von <paramref name="stringToUnescape" /> ohne Escapezeichen enthält. </returns>
      <param name="stringToUnescape">Die Zeichenfolge, deren Escapezeichen entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" /> ist null. </exception>
    </member>
    <member name="F:System.Uri.UriSchemeFile">
      <summary>Gibt an, dass der URI ein Zeiger auf eine Datei ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeFtp">
      <summary>Gibt an, dass auf den URI über FTP (File Transfer Protocol) zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeGopher">
      <summary>Gibt an, dass auf den URI über das Gopher-Protokoll zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeHttp">
      <summary>Gibt an, dass auf den URI über HTTP (Hypertext Transfer Protocol) zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeHttps">
      <summary>Gibt an, dass auf den URI über HTTPS (Secure Hypertext Transfer Protocol) zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeMailto">
      <summary>Gibt an, dass der URI eine E-Mail-Adresse ist und der Zugriff über SMTP (Simple Mail Transport Protocol) erfolgt. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNetPipe">
      <summary>Gibt an, dass auf den URI über das NetPipe-Schema des "Indigo"-Systems zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNetTcp">
      <summary>Gibt an, dass auf den URI über das NetTcp-Schema des "Indigo"-Systems zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNews">
      <summary>Gibt an, dass der URI eine Internetnewsgroup ist, auf die über NNTP (Network News Transport Protocol) zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNntp">
      <summary>Gibt an, dass der URI eine Internetnewsgroup ist, auf die über NNTP (Network News Transport Protocol) zugegriffen wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Gibt an, dass die URI-Zeichenfolge vor dem Erstellen der <see cref="T:System.Uri" />-Instanz vollständig mit Escapezeichen versehen war.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der <paramref name="dontEscape" />-Parameter auf true festgelegt wurde, als die <see cref="T:System.Uri" />-Instanz erstellt wurde; andernfalls false.</returns>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Ruft Benutzernamen, Kennwort oder weitere benutzerspezifische Informationen ab, die dem angegebenen URI zugeordnet sind.</summary>
      <returns>Ein <see cref="T:System.String" />, der die dem URI zugeordneten Benutzerinformationen enthält. Der zurückgegebene Wert schließt nicht das '@'-Zeichen ein, das zum Begrenzen des Benutzerinformationsteils des URIs reserviert ist.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft ist nur für eine absolute <see cref="T:System.Uri" />-Instanz gültig. </exception>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Stellt einen benutzerdefinierten Konstruktor für URIs (Uniform Resource Identifier) bereit und ändert URIs für die <see cref="T:System.Uri" />-Klasse.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit dem angegebenen URI.</summary>
      <param name="uri">Eine URI-Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uri" /> ist eine Zeichenfolge der Länge 0 oder enthält nur Leerzeichen.- oder - Die Analyseroutine hat ein Schema in einem ungültigen Formular gefunden.- oder - Der Parser hat mehr als zwei aufeinander folgende Schrägstriche in einem URI gefunden, der nicht das Schema "file" verwendet.- oder - <paramref name="uri" /> ist kein gültiger URI. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit dem angegebenen Schema und dem angegebenen Host.</summary>
      <param name="schemeName">Ein Internetprotokoll. </param>
      <param name="hostName">Ein Domänenname im DNS-Format oder eine IP-Adresse. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="schemeName" /> ist kein gültiger Schemaname.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit den Angaben für Schema, Host und Anschluss.</summary>
      <param name="scheme">Ein Internetprotokoll. </param>
      <param name="host">Ein Domänenname im DNS-Format oder eine IP-Adresse. </param>
      <param name="portNumber">Eine IP-Anschlussnummer für den Dienst. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scheme" /> ist kein gültiger Schemaname. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="portNumber" /> ist kleiner als 0 oder größer als 65.535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit den Angaben für Schema, Host, Anschluss und Pfad.</summary>
      <param name="scheme">Ein Internetprotokoll. </param>
      <param name="host">Ein Domänenname im DNS-Format oder eine IP-Adresse. </param>
      <param name="port">Eine IP-Anschlussnummer für den Dienst. </param>
      <param name="pathValue">Der Pfad zur Internetressource. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scheme" /> ist kein gültiger Schemaname. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als 0 oder größer als 65.535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit den Angaben für Schema, Host, Anschluss, Pfad und Abfragezeichenfolge oder Fragmentbezeichner.</summary>
      <param name="scheme">Ein Internetprotokoll. </param>
      <param name="host">Ein Domänenname im DNS-Format oder eine IP-Adresse. </param>
      <param name="port">Eine IP-Anschlussnummer für den Dienst. </param>
      <param name="path">Der Pfad zur Internetressource. </param>
      <param name="extraValue">Eine Abfragezeichenfolge oder ein Fragmentbezeichner. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extraValue" /> ist weder null noch <see cref="F:System.String.Empty" />, und weder beginnt ein gültiger Fragmentbezeichner mit einem Nummernzeichen (#), noch eine gültige Abfragezeichenfolge mit einem Fragezeichen (?).- oder - <paramref name="scheme" /> ist kein gültiger Schemaname. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als 0 oder größer als 65.535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit der angegebenen <see cref="T:System.Uri" />-Instanz.</summary>
      <param name="uri">Eine Instanz der <see cref="T:System.Uri" />-Klasse. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="uri" /> ist null. </exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Überprüft eine vorhandene <see cref="T:System.Uri" />-Instanz und den Inhalt des <see cref="T:System.UriBuilder" /> auf Gleichheit.</summary>
      <returns>true, wenn <paramref name="rparam" /> denselben <see cref="T:System.Uri" /> wie der <see cref="T:System.Uri" /> darstellt, der durch diese <see cref="T:System.UriBuilder" />-Instanz erstellt wurde, andernfalls false.</returns>
      <param name="rparam">Das Objekt, das mit der aktuellen Instanz verglichen werden soll. </param>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Ruft den Fragmentteil des URIs ab oder legt diesen fest.</summary>
      <returns>Der Fragmentteil des URIs. Der Fragmentbezeichner ("#") wird am Anfang des Fragments hinzugefügt.</returns>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Gibt den Hashcode für den URI zurück.</summary>
      <returns>Der für den URI generierte Hashcode.</returns>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Ruft den DNS-Hostnamen (Domain Name System) oder die IP-Adresse eines Servers ab oder legt diese fest.</summary>
      <returns>Der DNS-Hostname oder die IP-Adresse des Servers.</returns>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Ruft das Kennwort des Benutzers ab, der auf den URI zugreift, oder legt dieses fest.</summary>
      <returns>Das Kennwort des Benutzers, der auf den URI zugreift.</returns>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Ruft den Pfad der Ressource ab, auf die der URI verweist, oder legt diesen fest.</summary>
      <returns>Der Pfad der Ressource, auf die der URI verweist.</returns>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Ruft die Anschlussnummer des URIs ab oder legt diese fest.</summary>
      <returns>Die Anschlussnummer des URIs.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anschlussnummer kann nicht auf kleiner als 0 oder größer als 65.535 festgelegt werden. </exception>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Ruft zum URI gehörende Abfrageinformationen ab oder legt diese fest.</summary>
      <returns>Die zum URI gehörenden Abfrageinformationen.</returns>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Ruft den Schemanamen des URIs ab oder legt diesen fest.</summary>
      <returns>Das Schema des URIs.</returns>
      <exception cref="T:System.ArgumentException">Der Schemaname kann nur auf einen gültigen Schemanamen festgelegt werden. </exception>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Gibt die Anzeigezeichenfolge für die angegebene <see cref="T:System.UriBuilder" />-Instanz zurück.</summary>
      <returns>Die Zeichenfolge mit der Anzeigezeichenfolge des <see cref="T:System.UriBuilder" /> ohne Escapesequenzen.</returns>
      <exception cref="T:System.UriFormatException">Der Benutzername und das Kennwort des von den <see cref="T:System.UriBuilder" />-Eigenschaften erstellten URI sind ungültig (die <see cref="P:System.UriBuilder.UserName" />-Eigenschaft ist NULL oder eine leere Zeichenfolge, die <see cref="P:System.UriBuilder.Password" />-Eigenschaft ist jedoch nicht leer). </exception>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Ruft die von der angegebenen <see cref="T:System.UriBuilder" />-Instanz erstellte <see cref="T:System.Uri" />-Instanz ab.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem von <see cref="T:System.UriBuilder" /> erstellten URI.</returns>
      <exception cref="T:System.UriFormatException">Der mit den <see cref="T:System.UriBuilder" />-Eigenschaften erstellte URI ist ungültig. </exception>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>Der Benutzername des Benutzers, der auf den URI zugreift.</summary>
      <returns>Der Benutzername des Benutzers, der auf den URI zugreift.</returns>
    </member>
    <member name="T:System.UriComponents">
      <summary>Gibt die Teile von einem <see cref="T:System.Uri" /> an.</summary>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>Die Daten <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" /> und <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>Die <see cref="P:System.Uri.Fragment" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>Die <see cref="P:System.Uri.Host" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>Die <see cref="P:System.Uri.Host" />-Daten und die <see cref="P:System.Uri.Port" />-Daten. Wenn der URI keine Anschlussdaten enthält und dem <see cref="P:System.Uri.Scheme" /> ein Standardanschluss zugewiesen ist, wird der Standardanschluss zurückgegeben. Wenn kein Standardanschluss vorhanden ist, wird -1 zurückgegeben.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>Die Daten <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /> und <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Gibt an, dass das Trennzeichen eingeschlossen werden soll.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>Die normalisierte Form des <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>Die <see cref="P:System.Uri.LocalPath" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>Die <see cref="P:System.Uri.LocalPath" />-Daten und die <see cref="P:System.Uri.Query" />-Daten. </summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>Die <see cref="P:System.Uri.Port" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>Die <see cref="P:System.Uri.Query" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>Die <see cref="P:System.Uri.Scheme" />-Daten.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>Die Daten <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> und <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>Der vollständige für die URI-Serialisierung erforderliche <see cref="T:System.Uri" />-Kontext. Der Kontext schließt den IPv6-Bereich ein.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>Die Daten <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> und <see cref="P:System.Uri.Port" />. Wenn der <see cref="T:System.Uri" /> keine Anschlussdaten enthält und dem <see cref="P:System.Uri.Scheme" /> ein Standardanschluss zugewiesen ist, wird der Standardanschluss zurückgegeben. Wenn kein Standardanschluss vorhanden ist, wird -1 zurückgegeben.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>Die <see cref="P:System.Uri.Port" />-Daten. Wenn der <see cref="T:System.Uri" /> keine Anschlussdaten enthält und dem <see cref="P:System.Uri.Scheme" /> ein Standardanschluss zugewiesen ist, wird der Standardanschluss zurückgegeben. Wenn kein Standardanschluss vorhanden ist, wird -1 zurückgegeben.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>Die <see cref="P:System.Uri.UserInfo" />-Daten.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Steuert, wie URI-Informationen mit Escapezeichen versehen werden.</summary>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>Die Escapezeichen von Zeichen, die in den angeforderten URI-Komponenten eine reservierte Bedeutung haben, werden nicht entfernt. Alle anderen Zeichen werden nicht mit Escapezeichen versehen. Weitere Informationen finden Sie in den Hinweisen.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>Es werden keine Escapezeichen hinzugefügt.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>Gemäß den Regeln in RFC 3986 werden Escapezeichen hinzugefügt.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>Eine Ausnahme, die bei Feststellung eines ungültigen URIs (Uniform Resource Identifier) ausgelöst wird.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriFormatException" />-Klasse.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriFormatException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="textString">Die Zeichenfolge der Fehlermeldung. </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriFormatException" />-Klasse mit der angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="textString">Die Zeichenfolge der Fehlermeldung.</param>
      <param name="e">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="e" />-Parameter kein NULL-Verweis ist (Nothing in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt. </param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Definiert die Typen von Hostnamen für die <see cref="M:System.Uri.CheckHostName(System.String)" />-Methode.</summary>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>Der Host ist festgelegt, aber der Typ kann nicht bestimmt werden.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>Der Hostname ist ein Hostname im DNS-Format (Domain Name System).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>Der Hostname ist eine Hostadresse für IP, Version 4 (Internetprotokoll).</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>Der Hostname ist eine Hostadresse für IP, Version 6 (Internetprotokoll).</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>Der Typ des Hostnamens ist nicht angegeben.</summary>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>Stellt die möglichen Werte für die Konfigurationseinstellung IDN (Internationalized Domain Name)-Analyse bereit.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>Durch diesen Wert werden alle Unicode-Domänennamen in ihre Punycode-Entsprechungen (IDN-Namen) konvertiert.</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>Durch diesen Wert werden alle externen Unicode-Domänennamen so konvertiert, dass die Punycode-Entsprechungen (IDN-Namen) verwendet werden. Wenn internationale Namen im lokalen Intranet verarbeitet werden sollen, müssen die DNS-Server im Intranet Unicode-Namen unterstützen.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>Durch diesen Wert werden keine Unicode-Domänennamen in ihre Punycode-Entsprechungen konvertiert. Dies ist der Standardwert, der dem .NET Framework 2.0-Verhalten entspricht.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Definiert die Arten von <see cref="T:System.Uri" />s für mehrere <see cref="Overload:System.Uri.#ctor" />-Methoden.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>Der URI ist ein absoluter URI.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>Der URI ist ein relativer URI.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>Die Art des URIs ist unbestimmt.</summary>
    </member>
    <member name="T:System.UriParser">
      <summary>Analysiert ein neues URI-Schema. Dies ist eine abstract-Klasse.</summary>
    </member>
    <member name="M:System.UriParser.#ctor">
      <summary>Erstellt einen Standard-URI-Parser.</summary>
    </member>
    <member name="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
      <summary>Ruft die Komponenten aus einem URI ab.</summary>
      <returns>Eine Zeichenfolge, die die Komponenten enthält.</returns>
      <param name="uri">Der zu analysierende <see cref="T:System.Uri" />.</param>
      <param name="components">Die <see cref="T:System.UriComponents" />, die von <paramref name="uri" /> abgerufen werden sollen.</param>
      <param name="format">Einer der <see cref="T:System.UriFormat" />-Werte, die steuern, wie Sonderzeichen mit Escapezeichen versehen werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" /> ist ungültig.- oder -<paramref name="components" /> ist keine Kombination von gültigen <see cref="T:System.UriComponents" />-Werten. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="uri" /> erfordert eine benutzergesteuerte Analyse.- oder -<paramref name="uri" /> ist kein absoluter URI. Relative URIs können mit dieser Methode nicht verwendet werden.</exception>
    </member>
    <member name="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
      <summary>Initialisieren Sie den Zustand des Parsers, und überprüfen Sie den URI.</summary>
      <param name="uri">Der zu validierende <see cref="T:System.Uri" />.</param>
      <param name="parsingError">Validierungsfehler, sofern vorhanden.</param>
    </member>
    <member name="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
      <summary>Bestimmt, ob <paramref name="baseUri" /> ein Basis-URI für <paramref name="relativeUri" /> ist.</summary>
      <returns>true, wenn <paramref name="baseUri" /> ein Basis-URI für <paramref name="relativeUri" /> ist, andernfalls false.</returns>
      <param name="baseUri">Der Basis-URI.</param>
      <param name="relativeUri">Der zu testende URI.</param>
    </member>
    <member name="M:System.UriParser.IsKnownScheme(System.String)">
      <summary>Gibt an, ob der Parser für ein Schema registriert ist.</summary>
      <returns>true, wenn <paramref name="schemeName" /> registriert ist, andernfalls false.</returns>
      <param name="schemeName">Der zu überprüfende Schemaname.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="schemeName" />-Parameter ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="schemeName" />-Parameter ist ungültig. </exception>
    </member>
    <member name="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
      <summary>Gibt an, ob die Form eines URIs korrekt ist.</summary>
      <returns>true, wenn <paramref name="uri" /> wohlgeformt ist, andernfalls false.</returns>
      <param name="uri">Der zu überprüfende URI.</param>
    </member>
    <member name="M:System.UriParser.OnNewUri">
      <summary>Wird von einem <see cref="T:System.Uri" />-Konstruktor aufgerufen, um eine <see cref="T:System.UriParser" />-Instanz abzurufen</summary>
      <returns>Ein <see cref="T:System.UriParser" /> für den konstruierten <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.UriParser.OnRegister(System.String,System.Int32)">
      <summary>Wird vom Framework aufgerufen, wenn eine <see cref="T:System.UriParser" />-Methode registriert ist.</summary>
      <param name="schemeName">Das diesem <see cref="T:System.UriParser" /> zugeordnete Schema.</param>
      <param name="defaultPort">Die Anschlussnummer des Schemas.</param>
    </member>
    <member name="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
      <summary>Ordnet einem <see cref="T:System.UriParser" /> ein Schema und eine Anschlussnummer zu.</summary>
      <param name="uriParser">Der zu registrierende <see cref="T:System.UriParser" />.</param>
      <param name="schemeName">Der Name des Schemas, das diesem Parser zugeordnet ist.</param>
      <param name="defaultPort">Die Standardanschlussnummer für das angegebene Schema.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="uriParser" />-Parameter ist NULL- oder -Der <paramref name="schemeName" />-Parameter ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="schemeName" />-Parameter ist ungültig.- oder -<paramref name="defaultPort" />-Parameter ist ungültig. Der <paramref name="defaultPort" />-Parameter darf nicht kleiner als 0 (null) oder größer als 65534 sein.</exception>
    </member>
    <member name="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
      <summary>Wird von <see cref="T:System.Uri" />-Konstruktoren und <see cref="Overload:System.Uri.TryCreate" /> aufgerufen, um einen relativen URI aufzulösen.</summary>
      <returns>Die Zeichenfolge des aufgelösten relativen <see cref="T:System.Uri" />.</returns>
      <param name="baseUri">Ein Basis-URI.</param>
      <param name="relativeUri">Ein relativer URI.</param>
      <param name="parsingError">Fehler während des Auflösevorgangs, sofern vorhanden.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="baseUri" /> -Parameter ist kein absoluter Wert. <see cref="T:System.Uri" />- oder -<paramref name="baseUri" />-Parameter erfordert eine benutzergesteuerte Analyse.</exception>
    </member>
    <member name="T:System.UriTypeConverter">
      <summary>Konvertiert Instanzen des <see cref="T:System.String" />-Typs in <see cref="T:System.Uri" />-Instanzen.</summary>
    </member>
    <member name="M:System.UriTypeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriTypeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Quelltyps in eine Instanz des <see cref="T:System.Uri" />-Typs konvertieren kann. </summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn der Konverter den angegebenen Typ in eine Instanz von <see cref="T:System.Uri" /> konvertieren kann, und andernfalls false.</returns>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangstyp der Konvertierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> ist null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ konvertieren kann.</summary>
      <returns>Ein <see cref="T:System.Boolean" />-Wert, der true ist, wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" /> oder <see cref="T:System.Uri" /> ist, und andernfalls false.</returns>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
    </member>
    <member name="M:System.UriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt unter Verwendung des angegebenen Kontexts und der Kulturinformationen in den Typ dieses Konverters. </summary>
      <returns>Eine <see cref="T:System.Uri" />-Instanz, die das konvertierte <see cref="T:System.Object" /> darstellt. Wenn der <paramref name="value" />-Parameter null ist, wird null zurückgegeben.</returns>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="value">Das <see cref="T:System.Object" />, das in eine Instanz von <see cref="T:System.Uri" /> konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht ausgeführt werden. Diese Ausnahme tritt auf, wenn der <paramref name="value" /> ein anderer Typ ist als eine <see cref="T:System.String" /> bzw. ein <see cref="T:System.Uri" /> oder wenn die <paramref name="context" />- oder <paramref name="culture" />-Parameter für den <paramref name="value" />-Parameter nicht unterstützt werden.</exception>
    </member>
    <member name="M:System.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert ein angegebenes Wertobjekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den angegebenen Typ.</summary>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />. Wenn null übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Das zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der <paramref name="value" />-Parameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationType" />-Parameter ist NULL.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht ausgeführt werden.</exception>
    </member>
    <member name="T:System.CodeDom.Compiler.GeneratedCodeAttribute">
      <summary>Erkennt Code, der von einem Tool generiert wird.Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.Compiler.GeneratedCodeAttribute" />-Klasse. </summary>
      <param name="tool">Der Name des Tools, das den Code generiert hat.</param>
      <param name="version">Die Version des Tools, das den Code generiert hat.</param>
    </member>
    <member name="P:System.CodeDom.Compiler.GeneratedCodeAttribute.Tool">
      <summary>Ruft den Namen des Tools ab, das den Code generiert hat.</summary>
      <returns>Der Name des Tools, das den Code generiert hat.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.GeneratedCodeAttribute.Version">
      <summary>Ruft die Version des Tools ab, das den Code generiert hat.</summary>
      <returns>Die Version des Tools, das den Code generiert hat.</returns>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Stellt die Basisschnittstelle für die Abstraktion von Gruppen bereit.</summary>
      <typeparam name="T">Der Typ der Elemente in der Gruppe.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Fügt der aktuellen Gruppe ein Element hinzu und gibt einen Wert zurück, um anzugeben, ob das Element erfolgreich hinzugefügt wurde. </summary>
      <returns>true, wenn das Element der Menge hinzugefügt wird; false, wenn das Element bereits in der Menge enthalten ist.</returns>
      <param name="item">Der Element, das zur Menge hinzugefügt wird.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Entfernt alle Elemente in der angegebenen Auflistung aus der aktuellen Gruppe.</summary>
      <param name="other">Die Auflistung der Elemente, die aus der Gruppe entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die in einer angegebenen Auflistung ebenfalls enthalten sind.</summary>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe eine echte (eng gefasste) Teilmenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine echte Teilmenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe eine echte Obermenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.ISet`1" />-Objekt eine echte Obermenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob eine Gruppe eine Teilmenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine Teilmenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe eine Obermenge einer angegebenen Auflistung ist.</summary>
      <returns>true, wenn die aktuelle Gruppe eine Obermenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob sich die aktuelle Menge und die angegebene Auflistung überschneiden.</summary>
      <returns>true, wenn die aktuelle Auflistung und <paramref name="other" /> über mindestens ein gemeinsames Element verfügen, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob die aktuelle Gruppe und die angegebene Auflistung dieselben Elemente enthalten.</summary>
      <returns>true, wenn die aktuelle Menge und <paramref name="other" /> gleich sind, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung, nicht jedoch in beiden vorhanden sind. </summary>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert die aktuelle Gruppe, sodass sie alle Elemente enthält, die sowohl in der aktuellen Gruppe als auch in der angegebenen Auflistung vorhanden sind.</summary>
      <param name="other">Die Auflistung, die mit der aktuellen Menge verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1">
      <summary>Stellt eine doppelt verknüpfte Liste dar.</summary>
      <typeparam name="T">Gibt den Elementtyp der verknüpften Liste an.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.LinkedList`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.LinkedList`1" />-Klasse, die aus dem angegebenen <see cref="T:System.Collections.IEnumerable" /> kopierte Elemente enthält und eine ausreichende Kapazität für die Anzahl der kopierten Elemente aufweist. </summary>
      <param name="collection">Das <see cref="T:System.Collections.IEnumerable" />, dessen Elemente in die neue <see cref="T:System.Collections.Generic.LinkedList`1" /> kopiert werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Fügt den angegebenen neuen Knoten nach dem angegebenen vorhandenen Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzu.</summary>
      <param name="node">Der <see cref="T:System.Collections.Generic.LinkedListNode`1" />, nach dem der <paramref name="newNode" /> eingefügt werden soll.</param>
      <param name="newNode">Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.- oder -<paramref name="newNode" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> befindet sich nicht in der aktuellen <see cref="T:System.Collections.Generic.LinkedList`1" />.- oder -<paramref name="newNode" /> gehört zu einer anderen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Fügt nach dem angegebenen vorhandenen Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" /> einen neuen Knoten mit dem angegebenen Wert hinzu.</summary>
      <returns>Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" /> mit dem <paramref name="value" />.</returns>
      <param name="node">Der <see cref="T:System.Collections.Generic.LinkedListNode`1" />, nach dem ein neuer <see cref="T:System.Collections.Generic.LinkedListNode`1" /> mit dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der Wert, der der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> befindet sich nicht in der aktuellen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Fügt den angegebenen neuen Knoten vor dem angegebenen vorhandenen Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzu.</summary>
      <param name="node">Der <see cref="T:System.Collections.Generic.LinkedListNode`1" />, vor dem der <paramref name="newNode" /> eingefügt werden soll.</param>
      <param name="newNode">Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.- oder -<paramref name="newNode" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> befindet sich nicht in der aktuellen <see cref="T:System.Collections.Generic.LinkedList`1" />.- oder -<paramref name="newNode" /> gehört zu einer anderen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Fügt vor dem angegebenen vorhandenen Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" /> einen neuen Knoten mit dem angegebenen Wert hinzu.</summary>
      <returns>Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" /> mit dem <paramref name="value" />.</returns>
      <param name="node">Der <see cref="T:System.Collections.Generic.LinkedListNode`1" />, vor dem ein neuer <see cref="T:System.Collections.Generic.LinkedListNode`1" /> mit dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der Wert, der der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> befindet sich nicht in der aktuellen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Fügt am Anfang der <see cref="T:System.Collections.Generic.LinkedList`1" /> den angegebenen neuen Knoten hinzu.</summary>
      <param name="node">Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der am Anfang der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> gehört zu einer anderen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
      <summary>Fügt am Anfang der <see cref="T:System.Collections.Generic.LinkedList`1" /> einen neuen Knoten mit dem angegebenen Wert hinzu.</summary>
      <returns>Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" /> mit dem <paramref name="value" />.</returns>
      <param name="value">Der Wert, der am Anfang der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Fügt am Ende der <see cref="T:System.Collections.Generic.LinkedList`1" /> den angegebenen neuen Knoten hinzu.</summary>
      <param name="node">Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der am Ende der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> gehört zu einer anderen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.Generic.LinkedList`1" /> einen neuen Knoten mit dem angegebenen Wert hinzu.</summary>
      <returns>Der neue <see cref="T:System.Collections.Generic.LinkedListNode`1" /> mit dem <paramref name="value" />.</returns>
      <param name="value">Der Wert, der am Ende der <see cref="T:System.Collections.Generic.LinkedList`1" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Clear">
      <summary>Entfernt alle Knoten aus der <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
      <summary>Bestimmt, ob sich ein Wert in der <see cref="T:System.Collections.Generic.LinkedList`1" /> befindet.</summary>
      <returns>true, wenn <paramref name="value" /> in der <see cref="T:System.Collections.Generic.LinkedList`1" /> gefunden wird, andernfalls false.</returns>
      <param name="value">Der in der <see cref="T:System.Collections.Generic.LinkedList`1" /> zu suchende Wert. Der Wert kann für Verweistypen NULL sein.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.Generic.LinkedList`1" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.LinkedList`1" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist gleich oder größer als die Länge von <paramref name="array" />.- oder -<paramref name="index" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.LinkedList`1" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Count">
      <summary>Ruft die Anzahl der Knoten ab, die tatsächlich in der <see cref="T:System.Collections.Generic.LinkedList`1" /> enthalten sind.</summary>
      <returns>Die Anzahl der Knoten, die tatsächlich in der <see cref="T:System.Collections.Generic.LinkedList`1" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Find(`0)">
      <summary>Sucht den ersten Knoten, der den angegebenen Wert enthält.</summary>
      <returns>Der erste <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der den angegebenen Wert enthält, sofern er gefunden wird, andernfalls NULL.</returns>
      <param name="value">Der in der <see cref="T:System.Collections.Generic.LinkedList`1" /> zu suchende Wert.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
      <summary>Sucht den letzten Knoten, der den angegebenen Wert enthält.</summary>
      <returns>Der letzte <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der den angegebenen Wert enthält, sofern er gefunden wird, andernfalls NULL.</returns>
      <param name="value">Der in der <see cref="T:System.Collections.Generic.LinkedList`1" /> zu suchende Wert.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.First">
      <summary>Ruft den ersten Knoten der <see cref="T:System.Collections.Generic.LinkedList`1" /> ab.</summary>
      <returns>Der erste <see cref="T:System.Collections.Generic.LinkedListNode`1" /> der <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Generic.LinkedList`1" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> für die <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Last">
      <summary>Ruft den letzten Knoten der <see cref="T:System.Collections.Generic.LinkedList`1" /> ab.</summary>
      <returns>Der letzte <see cref="T:System.Collections.Generic.LinkedListNode`1" /> der <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Entfernt den angegebenen Knoten aus der <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Der <see cref="T:System.Collections.Generic.LinkedListNode`1" />, der aus der <see cref="T:System.Collections.Generic.LinkedList`1" /> entfernt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> befindet sich nicht in der aktuellen <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
      <summary>Entfernt das erste Vorkommen des angegebenen Werts aus der <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true, wenn das Element, das <paramref name="value" /> enthält, entfernt wurde; andernfalls false.  Diese Methode gibt auch false zurück, wenn <paramref name="value" /> nicht in der ursprünglichen <see cref="T:System.Collections.Generic.LinkedList`1" /> gefunden wurde.</returns>
      <param name="value">Die Wert, der aus der <see cref="T:System.Collections.Generic.LinkedList`1" /> entfernt werden soll.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
      <summary>Entfernt den Knoten am Anfang der <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Generic.LinkedList`1" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveLast">
      <summary>Entfernt den Knoten am Ende der <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Generic.LinkedList`1" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.</summary>
      <param name="value">Der Wert, der am Ende der <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.LinkedList`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle, die zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> beginnend bei einem bestimmten <see cref="T:System.Array" />-Index in ein <see cref="T:System.Array" />.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ vom Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.LinkedList`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.LinkedList`1" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die verknüpfte Liste als Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die verknüpfte Liste als Auflistung durchlaufen kann.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1.Enumerator">
      <summary>Listet die Elemente einer <see cref="T:System.Collections.Generic.LinkedList`1" /> auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der <see cref="T:System.Collections.Generic.LinkedList`1" /> an der aktuellen Position des Enumerators.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose">
      <summary>Gibt alle vom <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung. Die Klasse kann nicht geerbt werden.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedListNode`1">
      <summary>Stellt einen Knoten in einer <see cref="T:System.Collections.Generic.LinkedList`1" /> dar. Die Klasse kann nicht geerbt werden.</summary>
      <typeparam name="T">Gibt den Elementtyp der verknüpften Liste an.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedListNode`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.LinkedListNode`1" />-Klasse, die den angegebenen Wert enthält.</summary>
      <param name="value">Der Wert, der im <see cref="T:System.Collections.Generic.LinkedListNode`1" /> enthalten sein soll.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.List">
      <summary>Ruft die <see cref="T:System.Collections.Generic.LinkedList`1" /> ab, zu der der <see cref="T:System.Collections.Generic.LinkedListNode`1" /> gehört.</summary>
      <returns>Ein Verweis auf die <see cref="T:System.Collections.Generic.LinkedList`1" />, zu der der <see cref="T:System.Collections.Generic.LinkedListNode`1" /> gehört, oder NULL, wenn der <see cref="T:System.Collections.Generic.LinkedListNode`1" /> nicht zugeordnet ist.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Next">
      <summary>Ruft den nächsten Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" /> ab.</summary>
      <returns>Ein Verweis auf den nächsten Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" />, oder NULL, wenn der aktuelle Knoten das letzte Element (<see cref="P:System.Collections.Generic.LinkedList`1.Last" />) der <see cref="T:System.Collections.Generic.LinkedList`1" /> ist.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Previous">
      <summary>Ruft den vorherigen Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" /> ab.</summary>
      <returns>Ein Verweis auf den vorherigen Knoten in der <see cref="T:System.Collections.Generic.LinkedList`1" />, oder NULL, wenn der aktuelle Knoten das erste Element (<see cref="P:System.Collections.Generic.LinkedList`1.First" />) der <see cref="T:System.Collections.Generic.LinkedList`1" /> ist.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Value">
      <summary>Ruft den im Knoten enthaltenen Wert ab.</summary>
      <returns>Der im Knoten enthaltene Wert.</returns>
    </member>
    <member name="T:System.Collections.Generic.Queue`1">
      <summary>Stellt eine FIFO-Auflistung (First-In-First-Out) von Objekten dar.</summary>
      <typeparam name="T">Gibt den Typ der Elemente in der Warteschlange an.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.Queue`1" />-Klasse, die über die anfängliche Standardkapazität verfügt.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.Queue`1" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und eine ausreichende Kapazität für die Anzahl der kopierten Elemente aufweist.</summary>
      <param name="collection">Die Auflistung, deren Elemente in die neue <see cref="T:System.Collections.Generic.Queue`1" /> kopiert werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.Queue`1" />-Klasse, die die angegebene Anfangskapazität aufweist.</summary>
      <param name="capacity">Die anfängliche Anzahl von Elementen, die die <see cref="T:System.Collections.Generic.Queue`1" /> enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Clear">
      <summary>Entfernt alle Objekte aus der <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Contains(`0)">
      <summary>Bestimmt, ob sich ein Element in der <see cref="T:System.Collections.Generic.Queue`1" /> befindet.</summary>
      <returns>true, wenn <paramref name="item" /> in der <see cref="T:System.Collections.Generic.Queue`1" /> gefunden wird, andernfalls false.</returns>
      <param name="item">Das im <see cref="T:System.Collections.Generic.Queue`1" /> zu suchende Objekt. Der Wert kann für Verweistypen NULL sein.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die <see cref="T:System.Collections.Generic.Queue`1" />-Elemente in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.Queue`1" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.Queue`1" /> ist größer als der verfügbare Speicherplatz ab <paramref name="arrayIndex" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.Generic.Queue`1" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der <see cref="T:System.Collections.Generic.Queue`1" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Dequeue">
      <summary>Entfernt das Objekt am Anfang der <see cref="T:System.Collections.Generic.Queue`1" /> und gibt es zurück.</summary>
      <returns>Das Objekt, das vom Anfang der <see cref="T:System.Collections.Generic.Queue`1" /> entfernt wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Generic.Queue`1" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.Generic.Queue`1" /> ein Objekt hinzu.</summary>
      <param name="item">Das Objekt, das <see cref="T:System.Collections.Generic.Queue`1" /> hinzugefügt werden soll. Der Wert kann für Verweistypen NULL sein.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Generic.Queue`1" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> für die <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Peek">
      <summary>Gibt das Objekt am Anfang der <see cref="T:System.Collections.Generic.Queue`1" /> zurück, ohne es zu entfernen.</summary>
      <returns>Das Objekt am Anfang der <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Generic.Queue`1" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle, die zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> beginnend bei einem bestimmten <see cref="T:System.Array" />-Index in ein <see cref="T:System.Array" />.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ vom Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.Queue`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.Queue`1" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.ToArray">
      <summary>Kopiert die <see cref="T:System.Collections.Generic.Queue`1" />-Elemente in ein neues Array.</summary>
      <returns>Ein neues Array mit Elementen, die aus der <see cref="T:System.Collections.Generic.Queue`1" /> kopiert wurden.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TrimExcess">
      <summary>Legt die Kapazität auf die tatsächliche Anzahl der Elemente in der <see cref="T:System.Collections.Generic.Queue`1" /> fest, sofern diese Anzahl unter 90 Prozent der aktuellen Kapazität liegt.</summary>
    </member>
    <member name="T:System.Collections.Generic.Queue`1.Enumerator">
      <summary>Listet die Elemente einer <see cref="T:System.Collections.Generic.Queue`1" /> auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der <see cref="T:System.Collections.Generic.Queue`1" /> an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.Dispose">
      <summary>Gibt sämtliche vom <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2">
      <summary>Stellt eine Auflistung von Schlüssel-Wert-Paaren dar, deren Reihenfolge anhand des Schlüssels bestimmt wird. </summary>
      <typeparam name="TKey">Der Typ der Schlüssel im Wörterbuch.</typeparam>
      <typeparam name="TValue">Der Typ der Werte im Wörterbuch.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, bei der die <see cref="T:System.Collections.Generic.IComparer`1" />-Standardimplementierung für den Typ des Schlüssels verwendet wird.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, bei der die angegebene <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung für den Vergleich von Schlüsseln verwendet wird.</summary>
      <param name="comparer">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die zum Vergleichen von Schlüsseln verwendet werden soll, oder  NULL, wenn der Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für diesen Schlüsseltyp verwendet werden soll.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, die Elemente enthält, die aus dem angegebenen <see cref="T:System.Collections.Generic.IDictionary`2" /> kopiert wurden, und bei der die <see cref="T:System.Collections.Generic.IComparer`1" />-Standardimplementierung für den Typ des Schlüssels verwendet wird.</summary>
      <param name="dictionary">Das <see cref="T:System.Collections.Generic.IDictionary`2" />, dessen Elemente in die neue <see cref="T:System.Collections.Generic.SortedDictionary`2" /> kopiert werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> enthält mindestens einen doppelten Schlüssel.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2" />-Klasse, die Elemente enthält, die aus dem angegebenen <see cref="T:System.Collections.Generic.IDictionary`2" /> kopiert wurden, und bei der die angegebene <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung für den Vergleich von Schlüsseln verwendet wird.</summary>
      <param name="dictionary">Das <see cref="T:System.Collections.Generic.IDictionary`2" />, dessen Elemente in die neue <see cref="T:System.Collections.Generic.SortedDictionary`2" /> kopiert werden.</param>
      <param name="comparer">Die <see cref="T:System.Collections.Generic.IComparer`1" />-Implementierung, die zum Vergleichen von Schlüsseln verwendet werden soll, oder  NULL, wenn der Standard-<see cref="T:System.Collections.Generic.Comparer`1" /> für diesen Schlüsseltyp verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> enthält mindestens einen doppelten Schlüssel.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
      <summary>Fügt dem <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des Elements, das hinzugefügt werden soll. Der Wert kann für Verweistypen NULL sein.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit demselben Schlüssel ist bereits im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> vorhanden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Clear">
      <summary>Entfernt alle Elemente aus dem <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Comparer">
      <summary>Ruft den <see cref="T:System.Collections.Generic.IComparer`1" /> ab, der zum Sortieren der Elemente des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> verwendet wird.</summary>
      <returns>Der <see cref="T:System.Collections.Generic.IComparer`1" />, der zum Sortieren der Elemente des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> verwendet wird.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
      <summary>Ermittelt, ob das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
      <summary>Ermittelt, ob das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Wert enthält.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Wert enthält, andernfalls false.</returns>
      <param name="value">Der im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> zu suchende Wert. Der Wert kann für Verweistypen NULL sein.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Kopiert die Elemente des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> in das angegebene Array von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Strukturen, wobei am angegebenen Index begonnen wird.</summary>
      <param name="array">Das eindimensionale Array von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Strukturen, in das die Elemente aus der aktuellen <see cref="T:System.Collections.Generic.SortedDictionary`2" /> kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.SortedDictionary`2" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Count">
      <summary>Ruft die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ab.</summary>
      <returns>Die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> für das <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Der dem angegebenen Schlüssel zugeordnete Wert. Wenn der angegebene Schlüssel nicht gefunden wird, löst ein Get-Vorgang eine <see cref="T:System.Collections.Generic.KeyNotFoundException" /> aus, und durch einen Set-Vorgang wird ein neues Element mit dem angegebenen Schlüssel erstellt.</returns>
      <param name="key">Der Schlüssel des abzurufenden oder festzulegenden Werts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Die Eigenschaft wird abgerufen, und der <paramref name="key" /> ist nicht in der Auflistung vorhanden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Keys">
      <summary>Ruft eine Auflistung ab, die die Schlüssel im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, die die Schlüssel im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false.  Diese Methode gibt auch dann false zurück, wenn der <paramref name="key" /> nicht in dem <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gefunden wurde.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.</summary>
      <param name="keyValuePair">Die <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur, die der <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyValuePair" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit demselben Schlüssel ist bereits im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> vorhanden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Bestimmt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> einen bestimmten Schlüssel und Wert enthält.</summary>
      <returns>true, wenn <paramref name="keyValuePair" /> in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wird, andernfalls false.</returns>
      <param name="keyValuePair">Die <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur, die in der <see cref="T:System.Collections.Generic.ICollection`1" /> gesucht werden soll.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false. In der Standardimplementierung des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Entfernt das erste Vorkommen des angegebenen Elements aus der <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>true, wenn <paramref name="keyValuePair" /> aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn das <paramref name="keyValuePair" /> nicht in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</returns>
      <param name="keyValuePair">Die <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur, die aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt werden soll.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" />-Schnittstelle ab, die die Schlüssel von <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Werte in <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Werte in <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.Generic.ICollection`1" /> in ein Array, wobei am angegebenen Arrayindex begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.Generic.ICollection`1" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.ICollection`1" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.- oder -Der Typ der Quell-<see cref="T:System.Collections.Generic.ICollection`1" /> kann nicht automatisch in den Typ vom Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann. </returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IDictionary" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Das Objekt, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</param>
      <param name="value">Das Objekt, das als Wert für das hinzuzufügende Element verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> weist einen Typ auf, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.IDictionary" /> nicht zugeordnet werden kann.- oder -<paramref name="value" /> weist einen Typ auf, der dem Werttyp <paramref name="TValue" /> des <see cref="T:System.Collections.IDictionary" /> nicht zugeordnet werden kann.- oder -Ein Element mit demselben Schlüssel ist bereits im <see cref="T:System.Collections.IDictionary" /> vorhanden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Bestimmt, ob das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der im <see cref="T:System.Collections.IDictionary" /> zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.IDictionary" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist, andernfalls false.  In der Standardimplementierung des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist, andernfalls false.  In der Standardimplementierung des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <returns>Das Element mit dem angegebenen Schlüssel, oder NULL, wenn <paramref name="key" /> nicht im Wörterbuch enthalten ist, oder <paramref name="key" /> einen Typ aufweist, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nicht zugeordnet werden kann.</returns>
      <param name="key">Der Schlüssel des abzurufenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Es wird ein Wert zugewiesen, und <paramref name="key" /> ist ein Typ, der dem Schlüsseltyp <paramref name="TKey" /> des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nicht zugeordnet werden kann.- oder -Es wird ein Wert zugewiesen, und <paramref name="value" /> ist ein Typ, der dem Werttyp <paramref name="TValue" /> des <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nicht zugeordnet werden kann.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle, die zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Enthält nach dem Beenden dieser Methode den dem angegebenen Schlüssel zugeordneten Wert, sofern der Schlüssel gefunden wurde, oder andernfalls den Standardwert für den Typ des <paramref name="value" />-Parameters. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Values">
      <summary>Ruft eine Auflistung ab, die die Werte im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, die die Werte im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> enthält.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
      <summary>Listet die Elemente eines <see cref="T:System.Collections.Generic.SortedDictionary`2" /> auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element im <see cref="T:System.Collections.Generic.SortedDictionary`2" /> an der aktuellen Position des Enumerators.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose">
      <summary>Gibt sämtliche vom <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element des <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary>Ruft das Element an der aktuellen Position des Enumerators als <see cref="T:System.Collections.DictionaryEntry" />-Struktur ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Wörterbuches als <see cref="T:System.Collections.DictionaryEntry" />-Struktur.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>Ruft den Schlüssel des Elements an der aktuellen Position des Enumerators ab.</summary>
      <returns>Der Schlüssel des Elements in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>Ruft den Wert des Elements an der aktuellen Position des Enumerators ab.</summary>
      <returns>Der Wert des Elements in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
      <summary>Stellt die Auflistung von Schlüsseln in einem <see cref="T:System.Collections.Generic.SortedDictionary`2" /> dar. Die Klasse kann nicht geerbt werden. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />-Klasse, die die Schlüssel im angegebenen <see cref="T:System.Collections.Generic.SortedDictionary`2" /> angibt.</summary>
      <param name="dictionary">Das <see cref="T:System.Collections.Generic.SortedDictionary`2" />, dessen Schlüssel in der neuen <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> angegeben werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />-Elemente in ein vorhandenes eindimensionales Array, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />-Struktur für die <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="item">Das Objekt, das der <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.Generic.ICollection`1" />.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Bestimmt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> den angegebenen Wert enthält.</summary>
      <returns>true, wenn <paramref name="item" /> in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wird, andernfalls false.</returns>
      <param name="item">Das in der <see cref="T:System.Collections.Generic.ICollection`1" /> zu suchende Objekt.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>true, wenn <paramref name="item" /> aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn das <paramref name="item" /> nicht in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</returns>
      <param name="item">Das aus der <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle, die zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ vom Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator">
      <summary>Listet die Elemente einer <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> an der aktuellen Position des Enumerators.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Dispose">
      <summary>Gibt alle vom <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection">
      <summary>Stellt die Auflistung von Werten in einem <see cref="T:System.Collections.Generic.SortedDictionary`2" /> dar. Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />-Klasse, die die Werte im angegebenen <see cref="T:System.Collections.Generic.SortedDictionary`2" /> angibt.</summary>
      <param name="dictionary">Das <see cref="T:System.Collections.Generic.SortedDictionary`2" />, dessen Werte in der neuen <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> angegeben werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary>Kopiert die <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />-Elemente in ein vorhandenes eindimensionales Array, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" />-Struktur für die <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Add(`1)">
      <summary>Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="item">Das Objekt, das der <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.Generic.ICollection`1" />.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Contains(`1)">
      <summary>Ermittelt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> einen bestimmten Wert enthält.</summary>
      <returns>true, wenn <paramref name="item" /> in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wird, andernfalls false.</returns>
      <param name="item">Das in der <see cref="T:System.Collections.Generic.ICollection`1" /> zu suchende Objekt.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns>true, wenn die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls false.  In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Remove(`1)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>true, wenn <paramref name="item" /> aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn das <paramref name="item" /> nicht in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</returns>
      <param name="item">Das aus der <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.  Diese Implementierung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>true, wenn <paramref name="item" /> aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn das <paramref name="item" /> nicht in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</returns>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="index" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ vom Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung von <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann.  In der Standardimplementierung der <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator">
      <summary>Listet die Elemente einer <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> an der aktuellen Position des Enumerators.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose">
      <summary>Gibt sämtliche vom <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1">
      <summary>Stellt eine Auflistung von Objekten dar, deren Sortierreihenfolge beibehalten wird.</summary>
      <typeparam name="T">Der Typ der Elemente in der Gruppe.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedSet`1" />-Klasse. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedSet`1" />-Klasse, die den angegebenen Vergleich verwendet.</summary>
      <param name="comparer">Der zum Vergleichen von Objekten zu verwendende Standardvergleich. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedSet`1" />-Klasse, die Elemente enthält, die aus einer angegebenen zählbaren Auflistung kopiert wurden.</summary>
      <param name="collection">Die zu kopierende zählbare Auflistung. </param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SortedSet`1" />-Klasse, die aus einer angegebenen zählbaren Auflistung kopierte Elemente enthält und einen angegebenen Vergleich verwendet.</summary>
      <param name="collection">Die zu kopierende zählbare Auflistung. </param>
      <param name="comparer">Der zum Vergleichen von Objekten zu verwendende Standardvergleich. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Add(`0)">
      <summary>Fügt der Gruppe ein Element hinzu und gibt einen Wert zurück, der angibt, ob es erfolgreich hinzugefügt wurde.</summary>
      <returns>true, wenn <paramref name="item" /> zu der Menge hinzugefügt wird, andernfalls false. </returns>
      <param name="item">Der Element, das zur Menge hinzugefügt wird.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Clear">
      <summary>Entfernt alle Elemente aus der Gruppe.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Comparer">
      <summary>Ruft das <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Objekt ab, mit dem die Gleichheit der Werte im <see cref="T:System.Collections.Generic.SortedSet`1" /> bestimmt wird.</summary>
      <returns>Der Vergleich, mit dem die Gleichheit der Werte im <see cref="T:System.Collections.Generic.SortedSet`1" /> bestimmt wird.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
      <summary>Ermittelt, ob die Gruppe ein bestimmtes Element enthält.</summary>
      <returns>true, wenn die Menge <paramref name="item" /> enthält, andernfalls false.</returns>
      <param name="item">Das Element, das in der Gruppe gesucht werden soll.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
      <summary>Kopiert das gesamte <see cref="T:System.Collections.Generic.SortedSet`1" /> in ein kompatibles eindimensionales Array, wobei am Anfang des Zielarrays begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, in das die Elemente aus <see cref="T:System.Collections.Generic.SortedSet`1" /> kopiert werden.</param>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente im Quell-<see cref="T:System.Collections.Generic.SortedSet`1" /> ist größer als die Anzahl der Elemente, die das Zielarray enthalten kann. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert das vollständige <see cref="T:System.Collections.Generic.SortedSet`1" /> in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Arrays.</summary>
      <param name="array">Das eindimensionale Array, in das die Elemente aus <see cref="T:System.Collections.Generic.SortedSet`1" /> kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente im Quellarray ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Zielarrays.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Kopiert eine angegebene Anzahl von Elementen aus <see cref="T:System.Collections.Generic.SortedSet`1" /> in ein kompatibles eindimensionales Array, beginnend ab dem angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale Array, in das die Elemente aus <see cref="T:System.Collections.Generic.SortedSet`1" /> kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <param name="count">Die Anzahl der zu kopierenden Elemente.</param>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente im Quellarray ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Zielarrays.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null).- oder -<paramref name="count" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Count">
      <summary>Ruft die Anzahl der Elemente im <see cref="T:System.Collections.Generic.SortedSet`1" /> ab.</summary>
      <returns>Die Anzahl der Elemente im <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Entfernt alle Elemente in einer angegebenen Auflistung aus dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt.</summary>
      <param name="other">Die Auflistung der Elemente, die aus dem <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der das <see cref="T:System.Collections.Generic.SortedSet`1" /> durchläuft.</summary>
      <returns>Ein Enumerator, der die <see cref="T:System.Collections.Generic.SortedSet`1" /> in sortierter Reihenfolge durchläuft.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
      <summary>Gibt eine Ansicht einer Teilmenge in einem <see cref="T:System.Collections.Generic.SortedSet`1" /> zurück.</summary>
      <returns>Eine Teilmengenansicht, die nur die Werte im angegebenen Bereich enthält.</returns>
      <param name="lowerValue">Der niedrigste gewünschte Wert in der Ansicht.</param>
      <param name="upperValue">Der höchste gewünschte Wert in der Ansicht. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="lowerValue" /> ist laut Vergleich größer als <paramref name="upperValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Vorgang, der ausgeführt werden sollte, befand sich außerhalb des von <paramref name="lowerValue" /> und <paramref name="upperValue" /> angegebenen Bereichs.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt, sodass es nur Elemente enthält, die in einer angegebenen Auflistung ebenfalls enthalten sind.</summary>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob ein <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine echte Teilmenge der angegebenen Auflistung ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine echte Teilmenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob ein <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine echte Obermenge der angegebenen Auflistung ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine echte Obermenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob ein <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine Teilmenge der angegebenen Auflistung ist.</summary>
      <returns>true, wenn das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine Untermenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob ein <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine Obermenge der angegebenen Auflistung ist.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt eine Obermenge von <paramref name="other" /> ist, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Max">
      <summary>Ruft den durch den Vergleich definierten Höchstwert im <see cref="T:System.Collections.Generic.SortedSet`1" /> ab.</summary>
      <returns>Der Höchstwert in der Gruppe.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Min">
      <summary>Ruft den durch den Vergleich definierten Mindestwert im <see cref="T:System.Collections.Generic.SortedSet`1" /> ab.</summary>
      <returns>Der Mindestwert in der Gruppe.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt und eine angegebene Auflistung gemeinsame Elemente enthalten.</summary>
      <returns>true, wenn das <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt und <paramref name="other" /> mindestens ein gemeinsames Element enthalten, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
      <summary>Entfernt ein angegebenes Element aus der <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>true, wenn das Element gefunden und entfernt wurde, andernfalls false. </returns>
      <param name="item">Das zu entfernende Element.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>Entfernt alle Elemente, die die vom angegebenen Prädikat definierten Bedingungen erfüllen, aus einer <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Die Anzahl von Elementen, die aus der <see cref="T:System.Collections.Generic.SortedSet`1" />-Auflistung entfernt wurden. </returns>
      <param name="match">Der Delegat, der die Bedingungen für die Elemente definiert, die entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Reverse">
      <summary>Gibt ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurück, das das <see cref="T:System.Collections.Generic.SortedSet`1" /> in umgekehrter Reihenfolge durchläuft.</summary>
      <returns>Ein Enumerator, der das <see cref="T:System.Collections.Generic.SortedSet`1" /> in umgekehrter Reihenfolge durchläuft.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt und die angegebene Auflistung dieselben Elemente enthalten.</summary>
      <returns>true, wenn das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt und <paramref name="other" /> gleich sind, andernfalls false.</returns>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt, sodass es nur Elemente enthält, die entweder im aktuellen Objekt oder in der angegebenen Auflistung, nicht jedoch in beiden vorhanden sind.</summary>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Fügt einem <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ein Element hinzu.</summary>
      <param name="item">Das Objekt, das dem <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob eine <see cref="T:System.Collections.ICollection" /> schreibgeschützt ist.</summary>
      <returns>true, wenn die Auflistung schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert das vollständige <see cref="T:System.Collections.Generic.SortedSet`1" /> in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Arrays.</summary>
      <param name="array">Das eindimensionale Array, in das die Elemente aus <see cref="T:System.Collections.Generic.SortedSet`1" /> kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente im Quellarray ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Zielarrays. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf <see cref="T:System.Collections.ICollection" /> is synchronisiert ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann. In der Standardimplementierung der <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Ändert das aktuelle <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt, sodass es alle Elemente enthält, die entweder im aktuellen Objekt oder in der angegebenen Auflistung vorhanden sind.</summary>
      <param name="other">Die Auflistung, die mit dem aktuellen <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekt verglichen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1.Enumerator">
      <summary>Listet die Elemente eines <see cref="T:System.Collections.Generic.SortedSet`1" />-Objekts auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose">
      <summary>Gibt sämtliche von <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" /> verwendeten Ressourcen frei. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.Collections.Generic.SortedSet`1" />-Auflistung.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.Generic.Stack`1">
      <summary>Stellt eine LIFO (Last-In-First-Out)-Auflistung variabler Größe von Instanzen desselben beliebigen Typs dar.</summary>
      <typeparam name="T">Gibt den Typ der Elemente im Stapel an.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.Stack`1" />-Klasse, die über die anfängliche Standardkapazität verfügt.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.Stack`1" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und eine ausreichende Kapazität für die Anzahl der kopierten Elemente aufweist.</summary>
      <param name="collection">Die Auflistung, aus der Elemente kopiert werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Generic.Stack`1" />-Klasse, die über die angegebene anfängliche Kapazität, mindestens aber über die anfängliche Standardkapazität verfügt.</summary>
      <param name="capacity">Die anfängliche Anzahl an Elementen, die der <see cref="T:System.Collections.Generic.Stack`1" /> enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Clear">
      <summary>Entfernt alle Objekte aus dem <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Contains(`0)">
      <summary>Bestimmt, ob sich ein Element im <see cref="T:System.Collections.Generic.Stack`1" /> befindet.</summary>
      <returns>true, wenn <paramref name="item" /> im <see cref="T:System.Collections.Generic.Stack`1" /> gefunden wird, andernfalls false.</returns>
      <param name="item">Das im <see cref="T:System.Collections.Generic.Stack`1" /> zu suchende Objekt. Der Wert kann für Verweistypen NULL sein.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert den <see cref="T:System.Collections.Generic.Stack`1" /> in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus dem <see cref="T:System.Collections.Generic.Stack`1" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Generic.Stack`1" /> ist größer als der verfügbare Speicherplatz ab <paramref name="arrayIndex" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Count">
      <summary>Ruft die Anzahl der Elemente ab, die im <see cref="T:System.Collections.Generic.Stack`1" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die im <see cref="T:System.Collections.Generic.Stack`1" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.GetEnumerator">
      <summary>Gibt einen Enumerator für den <see cref="T:System.Collections.Generic.Stack`1" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> für den <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Peek">
      <summary>Gibt das oberste Objekt im <see cref="T:System.Collections.Generic.Stack`1" /> zurück, ohne es zu entfernen.</summary>
      <returns>Das oberste Objekt im <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Generic.Stack`1" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Pop">
      <summary>Entfernt das oberste Objekt aus dem <see cref="T:System.Collections.Generic.Stack`1" /> und gibt es zurück.</summary>
      <returns>Das Objekt, das von der obersten Position aus dem <see cref="T:System.Collections.Generic.Stack`1" /> entfernt wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Collections.Generic.Stack`1" /> ist leer.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Push(`0)">
      <summary>Fügt ein Objekt an der obersten Position im <see cref="T:System.Collections.Generic.Stack`1" /> ein.</summary>
      <param name="item">Das Objekt, das auf dem <see cref="T:System.Collections.Generic.Stack`1" /> abgelegt werden soll. Der Wert kann für Verweistypen NULL sein.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle, die zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> beginnend bei einem bestimmten <see cref="T:System.Array" />-Index in ein <see cref="T:System.Array" />.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.- oder -<paramref name="array" /> hat keine nullbasierte Indizierung.- oder -Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Speicherplatz ab <paramref name="arrayIndex" /> bis zum Ende des <paramref name="array" />, das als Ziel festgelegt wurde.- oder -Der Typ der Quell-<see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ vom Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls false.  In der Standardimplementierung des <see cref="T:System.Collections.Generic.Stack`1" /> gibt diese Eigenschaft immer false zurück.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" />-Schnittstelle synchronisiert werden kann.  In der Standardimplementierung des <see cref="T:System.Collections.Generic.Stack`1" /> gibt diese Eigenschaft immer die aktuelle Instanz zurück.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.ToArray">
      <summary>Kopiert den <see cref="T:System.Collections.Generic.Stack`1" /> in ein neues Array.</summary>
      <returns>Ein neues Array, das Kopien der Elemente aus dem <see cref="T:System.Collections.Generic.Stack`1" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TrimExcess">
      <summary>Legt die Kapazität auf die Anzahl der tatsächlich im <see cref="T:System.Collections.Generic.Stack`1" /> befindlichen Elemente fest, sofern diese Anzahl unter 90 Prozent der aktuellen Kapazität liegt.</summary>
    </member>
    <member name="T:System.Collections.Generic.Stack`1.Enumerator">
      <summary>Listet die Elemente eines <see cref="T:System.Collections.Generic.Stack`1" /> auf.</summary>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element im <see cref="T:System.Collections.Generic.Stack`1" /> an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.Dispose">
      <summary>Gibt sämtliche vom <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> verwendeten Ressourcen frei. </summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>true, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde; false, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
      <returns>Das Element in der Auflistung an der aktuellen Position des Enumerators.</returns>
      <exception cref="T:System.InvalidOperationException">Der Enumerator ist vor dem ersten Element oder hinter dem letzten Element der Auflistung positioniert. </exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung. Die Klasse kann nicht geerbt werden.</summary>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde nach dem Erstellen des Enumerators geändert. </exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableCollection`1">
      <summary>Stellt eine dynamische Datenauflistung dar, die Benachrichtigungen bereitstellt, wenn Elemente hinzugefügt oder entfernt werden oder wenn die gesamte Liste aktualisiert wird.</summary>
      <typeparam name="T">Der Typ der Elemente in der Auflistung.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />-Klasse und füllt diese mit Elementen, die aus der angegebenen Auflistung kopiert wurden.</summary>
      <param name="collection">Die Auflistung, aus der die Elemente kopiert werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />-Klasse und füllt diese mit Elementen, die aus der angegebenen Liste kopiert wurden.</summary>
      <param name="list">Die Liste, aus der die Elemente kopiert werden.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
      <summary>Verweigert das Ändern dieser Auflistung durch wiedereintretende Versuche.</summary>
      <returns>Ein <see cref="T:System.IDisposable" />-Objekt, das zum Freigeben des Objekts verwendet werden kann.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
      <summary>Sucht wiedereintretende Versuche, diese Auflistung zu ändern.</summary>
      <exception cref="T:System.InvalidOperationException">Bei einem Aufruf von <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />, bei dem der <see cref="T:System.IDisposable" />-Rückgabewert noch nicht freigegeben wurde. In der Regel sind hiermit zusätzliche Versuche gemeint, diese Auflistung während eines <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />-Ereignisses zu ändern. Dies hängt jedoch davon ab, wann abgeleitete Klassen <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /> aufrufen.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Methode wird in einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" />-Ereignishandler oder einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />-Ereignishandler aufgerufen. </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
      <summary>Tritt ein, wenn ein Element in der Auflistung oder die gesamte Auflistung geändert wird.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende Objekt.</param>
      <exception cref="T:System.InvalidOperationException">Die Methode wird in einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" />-Ereignishandler oder einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />-Ereignishandler aufgerufen.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
      <summary>Verschiebt das Element am angegebenen Index an eine neue Position in der Auflistung.</summary>
      <param name="oldIndex">Der nullbasierte Index, der die Position des zu verschiebenden Elements angibt.</param>
      <param name="newIndex">Der nullbasierte Index, der die neue Position des Elements angibt.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
      <summary>Verschiebt das Element am angegebenen Index an eine neue Position in der Auflistung.</summary>
      <param name="oldIndex">Der nullbasierte Index, der die Position des zu verschiebenden Elements angibt.</param>
      <param name="newIndex">Der nullbasierte Index, der die neue Position des Elements angibt.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />-Ereignis mit den angegebenen Ereignisdaten aus.</summary>
      <param name="e">Die Ereignisdaten, die im Ereignis gemeldet werden sollen.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" />-Ereignis mit den angegebenen Argumenten aus.</summary>
      <param name="e">Die Ereignisdaten, die im Ereignis gemeldet werden sollen.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
      <summary>Tritt ein, wenn eine Eigenschaft für ein einzelnes Element in der Auflistung geändert wird.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.InvalidOperationException">Die Methode wird in einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" />-Ereignishandler oder einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />-Ereignishandler aufgerufen.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary>Ersetzt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index.</param>
      <exception cref="T:System.InvalidOperationException">Die Methode wird in einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" />-Ereignishandler oder einem <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />-Ereignishandler aufgerufen. </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1">
      <summary>Stellt eine schreibgeschützte <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> dar.</summary>
      <typeparam name="T">Der Typ von Objekten, die in der Auflistung enthalten sind.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" />-Klasse, die als Wrapper für die angegebene <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> dient.</summary>
      <param name="list">Die Auflistung, für die ein Wrapper erstellt werden soll.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged">
      <summary>Tritt ein, wenn ein Element hinzugefügt oder entfernt wird.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged" />-Ereignis aus. </summary>
      <param name="args">Die Ereignisdaten.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged" />-Ereignis aus. </summary>
      <param name="args">Die Ereignisdaten.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="T:System.Collections.Specialized.INotifyCollectionChanged">
      <summary>Benachrichtigt Listener über dynamische Änderungen an einer Auflistung, z. B. wenn Elemente hinzugefügt und entfernt werden oder das gesamte Auflistungsobjekt zurückgesetzt wird.</summary>
    </member>
    <member name="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <summary>Tritt auf, wenn die Elementliste der Auflistung geändert oder die Auflistung zurückgesetzt wird.</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedAction">
      <summary>Beschreibt die Aktion, die ein <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis ausgelöst hat. </summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add">
      <summary>Der Auflistung wurden ein oder mehrere Elemente hinzugefügt.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move">
      <summary>Ein oder mehrere Elemente wurden innerhalb der Auflistung verschoben.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove">
      <summary>Ein oder mehrere Elemente wurden aus der Auflistung entfernt.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace">
      <summary>Ein oder mehrere Elemente wurden in der Auflistung ersetzt.</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset">
      <summary>Der Inhalt der Auflistung hat sich wesentlich geändert.</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, wobei der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction" />-Wert angegeben wird.</summary>
      <param name="action">Der Aktionswert als Wert der Enumeration. Dieser sollte immer <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" /> sein, siehe Hinweise.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> ist nicht <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine Änderung mehrerer Elemente beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />, <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> festgelegt werden.</param>
      <param name="changedItems">Die Elemente, die von der Änderung betroffen sind.</param>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Änderung mehrerer Elemente beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann nur auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> festgelegt werden.</param>
      <param name="newItems">Die neuen Elemente, die die ursprünglichen Elemente ersetzen.</param>
      <param name="oldItems">Die ursprünglichen Elemente, die ersetzt werden.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Replace ist.</exception>
      <exception cref="T:System.ArgumentNullException">Wenn <paramref name="oldItems" /> oder <paramref name="newItems" /> NULL ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Änderung mehrerer Elemente beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann nur auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> festgelegt werden.</param>
      <param name="newItems">Die neuen Elemente, die die ursprünglichen Elemente ersetzen.</param>
      <param name="oldItems">Die ursprünglichen Elemente, die ersetzt werden.</param>
      <param name="startingIndex">Der Index des ersten Elements der Elemente, die ersetzt werden.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Replace ist.</exception>
      <exception cref="T:System.ArgumentNullException">Wenn <paramref name="oldItems" /> oder <paramref name="newItems" /> NULL ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine Änderung an mehreren Elementen oder eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />-Änderung beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />, <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> festgelegt werden.</param>
      <param name="changedItems">Die von der Änderung betroffenen Elemente.</param>
      <param name="startingIndex">Der Index, an dem die Änderung aufgetreten ist.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Reset, Add oder Remove ist, wenn <paramref name="action" /> Reset und entweder <paramref name="changedItems" /> nicht NULL oder <paramref name="startingIndex" /> nicht -1 ist oder wenn action Add oder Remove und <paramref name="startingIndex" /> kleiner als -1 ist.</exception>
      <exception cref="T:System.ArgumentNullException">Wenn <paramref name="action" /> Add oder Remove ist und <paramref name="changedItems" /> NULL ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />-Änderung mehrerer Elemente beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann nur auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" /> festgelegt werden.</param>
      <param name="changedItems">Die von der Änderung betroffenen Elemente.</param>
      <param name="index">Der neue Index für die geänderten Elemente.</param>
      <param name="oldIndex">Der alte Index für die geänderten Elemente.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Move oder <paramref name="index" /> kleiner als 0 ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die die Änderung eines Elements beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />, <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> festgelegt werden.</param>
      <param name="changedItem">Das Element, das von der Änderung betroffen ist.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Reset, Add oder Remove ist oder wenn <paramref name="action" /> Reset und <paramref name="changedItem" /> nicht NULL ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" />-Änderung oder eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />-Änderung beschreibt.</summary>
      <param name="action">Der Aktionswert als Wert der Enumeration. Dieser sollte <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" /> sein, siehe Hinweise.</param>
      <param name="changedItem">Das Element, das von der Änderung betroffen ist.</param>
      <param name="index">Der Index, an dem die Änderung aufgetreten ist.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> ist nicht <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die die <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />-Änderung eines Elements beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann nur auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" /> festgelegt werden.</param>
      <param name="changedItem">Das von der Änderung betroffene Element.</param>
      <param name="index">Der neue Index für das geänderte Element.</param>
      <param name="oldIndex">Der alte Index für das geänderte Element.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Move oder <paramref name="index" /> kleiner als 0 ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die die <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Änderung eines Elements beschreibt.</summary>
      <param name="action">Die Aktion, die das Ereignis ausgelöst hat. Kann nur auf <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> festgelegt werden.</param>
      <param name="newItem">Das neue Element, das das ursprüngliche Element ersetzt.</param>
      <param name="oldItem">Das ursprüngliche Element, das ersetzt wird.</param>
      <exception cref="T:System.ArgumentException">Wenn <paramref name="action" /> nicht Replace ist.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Klasse, die eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Änderung beschreibt.</summary>
      <param name="action">Der Aktionswert als Wert der Enumeration. Dieser sollte <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> sein, siehe Hinweise.</param>
      <param name="newItem">Das neue Element, das das ursprüngliche Element ersetzt.</param>
      <param name="oldItem">Das ursprüngliche Element, das ersetzt wird.</param>
      <param name="index">Der Index des gerade ersetzten Elements.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="action" /> ist nicht <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />.</exception>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action">
      <summary>Ruft die Beschreibung der Aktion ab, die das Ereignis ausgelöst hat. </summary>
      <returns>Die Beschreibung der Aktion, die das Ereignis ausgelöst hat, als Wert der Enumeration.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems">
      <summary>Ruft die von einer Aktion betroffenen Elemente ab.</summary>
      <returns>Die Liste der von einer Aktion betroffenen Elemente. Der Standardwert ist null.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary>Ruft den Index ab, an dem die Änderung aufgetreten ist.</summary>
      <returns>Der Index, an dem die Änderung aufgetreten ist.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems">
      <summary>Ruft das von einer <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Aktion oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />-Aktion betroffene Element ab.</summary>
      <returns>Die Liste der von einer <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Aktion oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />-Aktion betroffenen Elemente.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary>Ruft den Index ab, an dem die Änderung für eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Aktion oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />-Aktion aufgetreten ist.</summary>
      <returns>Der Index, an dem die Änderung für eine <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />-Aktion oder <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />-Aktion aufgetreten ist.</returns>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler">
      <summary>Stellt die Methode dar, die Ereignisse behandelt, die das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis implementieren.</summary>
      <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventArgs">
      <summary>Stellt Daten für das MethodNameCompleted-Ereignis bereit. </summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Klasse.</summary>
      <param name="error">Ein während des asynchronen Vorgangs aufgetretener Fehler.</param>
      <param name="cancelled">Ein Wert, der angibt, ob der asynchrone Vorgang abgebrochen wurde.</param>
      <param name="userState">Das optional vom Benutzer bereitgestellte Zustandsobjekt, das verwendet wird, um die Aufgabe zu identifizieren, die das Completed-Ereignis ausgelöst hat.</param>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">
      <summary>Ruft einen Wert ab, der angibt, ob ein asynchroner Vorgang abgebrochen wurde.</summary>
      <returns>true, wenn der asynchrone Vorgang abgebrochen wurde, andernfalls false.Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Error">
      <summary>Ruft einen Wert ab, der angibt, welcher Fehler während eines asynchronen Vorgangs aufgetreten ist.</summary>
      <returns>Eine <see cref="T:System.Exception" />-Instanz, wenn während eines asynchronen Vorgangs ein Fehler aufgetreten ist, andernfalls null.</returns>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary">
      <summary>Löst eine benutzerdefinierte Ausnahme aus, wenn bei einem asynchronen Vorgang ein Fehler aufgetreten ist.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />-Eigenschaft ist true.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Die <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft wurde durch den asynchronen Vorgang festgelegt.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">
      <summary>Ruft den eindeutigen Bezeichner der asynchronen Aufgabe ab.</summary>
      <returns>Ein Objektverweis, der die asynchrone Aufgabe eindeutig bezeichnet, andernfalls null, wenn kein Wert festgelegt wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventHandler">
      <summary>Stellt die Methode dar, die das MethodNameCompleted-Ereignis eines asynchronen Vorgangs behandelt. </summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncOperation">
      <summary>Verfolgt die Lebensdauer eines asynchronen Vorgangs. </summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.OperationCompleted">
      <summary>Beendet die Lebensdauer eines asynchronen Vorgangs.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Ruft einen Delegaten auf dem Thread oder Kontext auf, der für das Anwendungsmodell geeignet ist.</summary>
      <param name="d">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</param>
      <param name="arg">Ein Argument für den Delegaten, der im <paramref name="d" />-Parameter enthalten ist.</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />-Methode wurde zuvor für diese Aufgabe aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist NULL.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Beendet die Lebensdauer eines asynchronen Vorgangs.</summary>
      <param name="d">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</param>
      <param name="arg">Ein Argument für den Delegaten, der im <paramref name="d" />-Parameter enthalten ist.</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" />-Methode wurde zuvor für diese Aufgabe aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist NULL.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
      <summary>Ruft das <see cref="T:System.Threading.SynchronizationContext" />-Objekt ab, das an den Konstruktor übergeben wurde, als das Objekt mit <see cref="T:System.ComponentModel.AsyncOperationManager" /> erstellt wurde.</summary>
      <returns>Das <see cref="T:System.Threading.SynchronizationContext" />-Objekt, das an den Konstruktor übergeben wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
      <summary>Ruft ein Objekt ab, das für die eindeutige Identifikation eines asynchronen Vorgangs verwendet wird, oder legt dieses fest.</summary>
      <returns>Das Zustandsobjekt, das an den asynchronen Methodenaufruf übergeben wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncOperationManager">
      <summary>Stellt Parallelitätsverwaltung für Klassen bereit, die asynchrone Methodenaufrufe unterstützen.Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
      <summary>Gibt für die Überwachung der Dauer eines bestimmten asynchronen Vorgangs eine <see cref="T:System.ComponentModel.AsyncOperation" /> zurück.</summary>
      <returns>Eine, <see cref="T:System.ComponentModel.AsyncOperation" /> die Sie verwenden können, um die Dauer eines asynchronen Methodenaufrufs zu verfolgen.</returns>
      <param name="userSuppliedState">Ein Objekt, das dazu verwendet wird, einem bestimmten asynchronen Vorgang einen Bestandteil des Clientzustands, z. B. eine Aufgaben-ID, zuzuordnen.</param>
    </member>
    <member name="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext">
      <summary>Ruft den <see cref="T:System.Threading.SynchronizationContext" /> für den asynchronen Vorgang ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Threading.SynchronizationContext" /> für den asynchronen Vorgang.</returns>
    </member>
    <member name="T:System.ComponentModel.BackgroundWorker">
      <summary>Führt einen Vorgang auf einem separaten Thread aus.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BackgroundWorker" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.CancelAsync">
      <summary>Fordert das Abbrechen eines anstehenden Hintergrundvorgangs an.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> ist false. </exception>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.CancellationPending">
      <summary>Ruft einen Wert ab, der angibt, ob die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat.</summary>
      <returns>true, wenn die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat, andernfalls false.Der Standardwert ist false.</returns>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.DoWork">
      <summary>Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> aufgerufen wird.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.IsBusy">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> einen Hintergrundvorgang ausführt.</summary>
      <returns>true, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> einen Hintergrundvorgang ausführt, andernfalls false.</returns>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.DoWorkEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
      <summary>Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> aufgerufen wird.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
      <summary>Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</summary>
      <param name="percentProgress">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf false festgelegt. </exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
      <summary>Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</summary>
      <param name="percentProgress">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</param>
      <param name="userState">Das Zustandsobjekt, das <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" /> übergeben wird.</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf false festgelegt. </exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <summary>Startet die Ausführung eines Hintergrundvorgangs.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> gibt true zurück.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
      <summary>Startet die Ausführung eines Hintergrundvorgangs und schließt einen Parameter ein, der vom Hintergrundvorgang verwendet wird.</summary>
      <param name="argument">Ein Parameter, der von dem Hintergrundvorgang im <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignishandler verwendet wird.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> gibt true zurück.</exception>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
      <summary>Tritt ein, wenn der Hintergrundvorgang entweder abgeschlossen ist, abgebrochen wurde oder eine Ausnahme ausgelöst hat.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen melden kann, oder legt diesen Wert fest.</summary>
      <returns>true, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen unterstützt, andernfalls false.Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> asynchrone Abbrüche unterstützt, oder legt diesen Wert fest.</summary>
      <returns>true, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> Abbrüche unterstützt, andernfalls false.Der Standardwert ist false.</returns>
    </member>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary>Gibt an, ob eine Eigenschaft oder ein Ereignis in einem Eigenschaftenfenster angezeigt werden soll.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BrowsableAttribute" />-Klasse.</summary>
      <param name="browsable">true, wenn eine Eigenschaft oder ein Ereignis zur Entwurfszeit geändert werden kann, andernfalls false.Der Standardwert ist true.</param>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary>Ruft einen Wert ab, der angibt, ob ein Objekt browsebar ist.</summary>
      <returns>true, wenn das Objekt durchsuchbar ist, andernfalls false.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.BrowsableAttribute" /> an, der <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" /> ist.Dieses statische Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary>Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <returns>true, wenn <paramref name="obj" /> mit dieser Instanz übereinstimmt, andernfalls false.</returns>
      <param name="obj">Ein weiteres Objekt für den Vergleich. </param>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary>Gibt an, dass eine Eigenschaft oder ein Ereignis zur Entwurfszeit nicht geändert werden kann.Dieses statische Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary>Gibt an, dass eine Eigenschaft oder ein Ereignis zur Entwurfszeit geändert werden kann.Dieses statische Feld ist schreibgeschützt.</summary>
    </member>
    <member name="T:System.ComponentModel.CancelEventArgs">
      <summary>Stellt Daten für ein abbrechbares Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CancelEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CancelEventArgs" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CancelEventArgs" />-Klasse, deren <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" />-Eigenschaft auf den angegebenen Wert festgelegt ist.</summary>
      <param name="cancel">true, um den Vorgang abzubrechen, andernfalls false.</param>
    </member>
    <member name="P:System.ComponentModel.CancelEventArgs.Cancel">
      <summary>Ruft einen Wert ab, der angibt, ob der Vorgang abgebrochen werden soll, oder legt diesen fest.</summary>
      <returns>true, wenn der Vorgang abgebrochen werden soll, andernfalls false.</returns>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary>Gibt den Namen der Kategorie an, in der die Eigenschaft oder das Ereignis bei der Anzeige in einem Eigenschaftenraster-Steuerelement gruppiert werden soll, das auf den Modus Nach Kategorien festgelegt ist.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CategoryAttribute" />-Klasse unter Verwendung des Kategorienamens Standard.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CategoryAttribute" />-Klasse unter Verwendung des angegebenen Kategorienamens.</summary>
      <param name="category">Der Name der Kategorie. </param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Aktion" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Aktion".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Darstellung" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Darstellung".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Asynchron" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Asynchron".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Verhalten" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Verhalten".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary>Ruft den Namen der Kategorie für die Eigenschaft oder das Ereignis ab, auf die bzw. auf das dieses Attribut angewendet wird.</summary>
      <returns>Der Name der Kategorie für die Eigenschaft oder das Ereignis, auf die bzw. auf das dieses Attribut angewendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Daten" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Daten".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Standard" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Standard".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Entwurf" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Entwurf".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Drag &amp; Drop" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Drag &amp; Drop".</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.CategoryAttribute" /> ist.</summary>
      <returns>true, wenn der Wert des angegebenen Objekts dem des aktuellen <see cref="T:System.ComponentModel.CategoryAttribute" /> entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll. </param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Fokus" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Fokus".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Format" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Format".</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary>Gibt den Hashcode für dieses Attribut zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary>Sucht den lokalisierten Namen einer angegebenen Kategorie.</summary>
      <returns>Der lokalisierte Name der Kategorie oder null, wenn kein lokalisierter Name vorhanden ist.</returns>
      <param name="value">Der Bezeichner für die zu suchende Kategorie. </param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Schlüssel" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Schlüssel".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Layout" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Layout".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Maus" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Maus".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary>Ruft ein <see cref="T:System.ComponentModel.CategoryAttribute" /> ab, das die Kategorie "Fensterstil" darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.CategoryAttribute" /> für die Kategorie "Fensterstil".</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary>Ruft eine bestimmte Komponente im Container ab.</summary>
    </member>
    <member name="T:System.ComponentModel.DataErrorsChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataErrorsChangedEventArgs" />-Klasse. </summary>
      <param name="propertyName">Der Name der Eigenschaft, bei der sich die Fehler geändert haben, oder NULL oder <see cref="F:System.String.Empty" /> für Fehler auf der Entitätsebene.</param>
    </member>
    <member name="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName">
      <summary>Ruft den Namen der Eigenschaft ab, bei der sich die Fehler geändert haben, oder NULL oder <see cref="F:System.String.Empty" /> für Fehler auf der Entitätsebene.</summary>
      <returns>Der Name der betroffenen Eigenschaft oder NULL oder <see cref="F:System.String.Empty" /> für Fehler auf Entitätebene.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>Gibt den Standardwert für eine Eigenschaft an.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse mit einem Wert vom Typ <see cref="T:System.Boolean" />.</summary>
      <param name="value">Ein <see cref="T:System.Boolean" />, der der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer vorzeichenlosen 8-Bit-Ganzzahl.</summary>
      <param name="value">Eine vorzeichenlose 8-Bit-Ganzzahl, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung eines Unicode-Zeichens.</summary>
      <param name="value">Ein Unicode-Zeichen, das der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Eine Gleitkommazahl mit doppelter Genauigkeit, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, das den Standardwert darstellt. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse unter Verwendung einer Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Eine Gleitkommazahl mit einfacher Genauigkeit, die der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse mit einem Wert vom Typ <see cref="T:System.String" />.</summary>
      <param name="value">Ein <see cref="T:System.String" />, der der Standardwert ist. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultValueAttribute" />-Klasse, wobei der angegebene Wert unter Verwendung einer invarianten Kultur als Übersetzungskontext in den angegebenen Typ konvertiert wird.</summary>
      <param name="type">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den der Wert konvertiert werden soll. </param>
      <param name="value">Eine <see cref="T:System.String" />, die unter Verwendung der Kultur Englisch (USA) mit <see cref="T:System.ComponentModel.TypeConverter" /> in den Typ konvertiertwerden kann.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.DefaultValueAttribute" /> ist.</summary>
      <returns>true, wenn der Wert des angegebenen Objekts dem des aktuellen Objekts entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode"></member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.SetValue(System.Object)">
      <summary>Legt den Standardwert der Eigenschaft fest, an die dieses Attribut gebunden ist.</summary>
      <param name="value">Der Standardwert.</param>
    </member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>Ruft den Standardwert der Eigenschaft ab, an die dieses Attribut gebunden ist.</summary>
      <returns>Ein <see cref="T:System.Object" />, das den Standardwert der Eigenschaft darstellt, an die dieses Attribut gebunden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary>Gibt eine Beschreibung für eine Eigenschaft oder ein Ereignis an.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse ohne Parameter.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse mit einer Beschreibung.</summary>
      <param name="description">Beschreibungstext. </param>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.DescriptionAttribute" /> an, der eine leere Zeichenfolge ("") ist.Dieses statische Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary>Ruft die in diesem Attribut gespeicherte Beschreibung ab.</summary>
      <returns>Die in diesem Attribut gespeicherte Beschreibung.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary>Ruft die als Beschreibung gespeicherte Zeichenfolge ab oder legt diese fest.</summary>
      <returns>Die als Beschreibung gespeicherte Zeichenfolge.Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.DescriptionAttribute" /> ist.</summary>
      <returns>true, wenn der Wert des angegebenen Objekts dem des aktuellen <see cref="T:System.ComponentModel.DescriptionAttribute" /> entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode"></member>
    <member name="T:System.ComponentModel.DoWorkEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DoWorkEventArgs" />-Klasse.</summary>
      <param name="argument">Gibt ein Argument für einen asynchronen Vorgang an.</param>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Argument">
      <summary>Ruft einen Wert ab, der das Argument eines asynchronen Vorgangs darstellt.</summary>
      <returns>Ein <see cref="T:System.Object" />, das das Argument eines asynchronen Vorgangs darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Cancel">
      <summary>Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang abgebrochen wurde, oder legt diesen Wert fest.</summary>
      <returns>true, wenn der Vorgang abgebrochen wurde, andernfalls false.Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Result">
      <summary>Ruft einen Wert ab, der das Ergebnis eines asynchronen Vorgangs darstellt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Object" />, das das Ergebnis eines asynchronen Vorgangs darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignis behandelt, das ausgelöst wird, wenn die <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />-Methode aufgerufen wird.</summary>
      <param name="sender">Die Quelle des Ereignisses. </param>
      <param name="e">Ein <see cref="T:System.ComponentModel.DoWorkEventArgs" />, das die Ereignisdaten enthält. </param>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>Gibt an, dass eine Eigenschaft oder Methode in einem Editor angezeigt werden kann.Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />-Klasse, wobei <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" /> auf den Standardzustand festgelegt ist.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />-Klasse mit einem<see cref="T:System.ComponentModel.EditorBrowsableState" />.</summary>
      <param name="state">Der <see cref="T:System.ComponentModel.EditorBrowsableState" />-Wert, auf den <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" /> festgelegt werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.EditorBrowsableAttribute" /> ist.</summary>
      <returns>true, wenn der Wert des angegebenen Objekts dem des aktuellen Objekts entspricht, andernfalls false.</returns>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode"></member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>Ruft den browserbaren Zustand der Eigenschaft oder Methode ab.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.EditorBrowsableState" />, der der durchsuchbare Zustand der Eigenschaft oder Methode ist.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>Gibt den browsebaren Zustand einer Eigenschaft oder Methode aus einem Editor an. </summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>Bei der Eigenschaft oder Methode handelt es sich um ein Feature, das nur für fortgeschrittene Benutzer sichtbar sein sollte.In einem Editor können solche Eigenschaften angezeigt oder ausgeblendet werden.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>Die Eigenschaft oder Methode ist aus einem Editor immer browsebar.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>Die Eigenschaft oder Methode ist aus einem Editor nie browsebar.</summary>
    </member>
    <member name="T:System.ComponentModel.IChangeTracking">
      <summary>Definiert den Mechanismus zum Abfragen von Änderungen des Objekts und zum Zurücksetzen des veränderten Status. </summary>
    </member>
    <member name="M:System.ComponentModel.IChangeTracking.AcceptChanges">
      <summary>Setzt den Zustand des Objekts durch Akzeptieren der Änderungen auf unverändert zurück. </summary>
    </member>
    <member name="P:System.ComponentModel.IChangeTracking.IsChanged">
      <summary>Ruft den veränderten Status des Objekts ab.</summary>
      <returns>true, wenn sich der Inhalt des Objekts seit dem letzten Aufruf von <see cref="M:System.ComponentModel.IChangeTracking.AcceptChanges" /> verändert hat, andernfalls false. </returns>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary>Ruft bei der Implementierung durch eine Klasse die der Komponente zugeordnete <see cref="T:System.ComponentModel.ISite" /> ab oder legt diese fest.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary>Fügt einen Ereignishandler hinzu, der das Disposed-Ereignis für die Komponente überwacht.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary>Ruft bei der Implementierung durch eine Klasse die der Komponente zugeordnete <see cref="T:System.ComponentModel.ISite" /> ab oder legt diese fest.</summary>
      <returns>Die der Komponente zugeordnete <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary>Stellt Funktionen für Container bereit.Container sind Objekte, die logisch 0 oder mehr Komponenten enthalten.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary>Fügt dem Container eine Komponente hinzu.</summary>
      <param name="component">Die hinzuzufügende Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Fügt dem Container eine Komponente hinzu.</summary>
      <param name="component">Die hinzuzufügende Komponente.</param>
      <param name="name">Identifizierender Name der Komponente.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary>Ruft alle Komponenten im <see cref="T:System.ComponentModel.IContainer" /> ab.</summary>
      <returns>Die Auflistung der Komponenten im <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary>Entfernt eine Komponente aus dem Container.</summary>
      <param name="component">Die zu entfernende Komponente.</param>
    </member>
    <member name="T:System.ComponentModel.IEditableObject">
      <summary>Stellt ein Objekt dar, das einen Bearbeitungsmodus hat und die Fähigkeit besitzt, einen Commit auszuführen oder Änderungen rückgängig zu machen. </summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.BeginEdit">
      <summary>Veranlasst das Objekt, in den Bearbeitungsmodus zu schalten.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.CancelEdit">
      <summary>Veranlasst das Objekt, den Bearbeitungsmodus zu verlassen und den vorherigen, nicht bearbeiteten Wert zu verwenden.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.EndEdit">
      <summary>Veranlasst das Objekt, den Bearbeitungsmodus zu verlassen und den bearbeiteten Wert zu übernehmen.</summary>
    </member>
    <member name="T:System.ComponentModel.INotifyDataErrorInfo">
      <summary>Definiert Member, die von Datenentitätsklassen implementiert werden können, um benutzerdefinierten, synchronen und asynchronen Validierungssupport bereitzustellen.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
      <summary>Tritt auf, wenn sich die Validierungsfehler für eine Eigenschaft oder die gesamte Entität geändert haben. </summary>
    </member>
    <member name="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
      <summary>Ruft die Validierungsfehler für eine angegebene Eigenschaft oder für die gesamte Entität ab.</summary>
      <returns>Die Validierungsfehler für die Eigenschaft oder die Entität.</returns>
      <param name="propertyName">Der Name der Eigenschaft, für die Validierungsfehler abgerufen werden sollen, oder null oder <see cref="F:System.String.Empty" />, um Fehler auf Entitätsebene abzurufen.</param>
    </member>
    <member name="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
      <summary>Ruft einen Wert ab, der angibt, ob die Entität Validierungsfehler aufweist. </summary>
      <returns>true, wenn die Entität derzeit Validierungsfehler aufweist, andernfalls false.</returns>
    </member>
    <member name="T:System.ComponentModel.INotifyPropertyChanged">
      <summary>Benachrichtigt Clients, dass ein Eigenschaftswert geändert wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="T:System.ComponentModel.INotifyPropertyChanging">
      <summary>Definiert ein Ereignis, mit dem Clients darüber benachrichtigt werden, dass sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="T:System.ComponentModel.IRevertibleChangeTracking">
      <summary>Unterstützt den Rollback der Änderungen.</summary>
    </member>
    <member name="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
      <summary>Setzt den Zustand des Objekts durch Ablehnen der Änderungen auf den unveränderten Zustand zurück. </summary>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary>Stellt von Sites benötigte Funktionen bereit.Sites binden eine Komponente an einen Container und ermöglichen die Kommunikation zwischen diesen. Darüber hinaus bieten sie dem Container die Möglichkeit, seine Komponenten zu verwalten.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary>Ruft bei der Implementierung durch eine Klasse die der <see cref="T:System.ComponentModel.ISite" /> zugeordnete Komponente ab.</summary>
      <returns>Die der Komponente zugeordnete <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary>Ruft bei der Implementierung durch eine Klasse den der <see cref="T:System.ComponentModel.ISite" /> zugeordneten Container ab.</summary>
      <returns>Der der <see cref="T:System.ComponentModel.ISite" /> zugeordnete Container.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary>Bestimmt bei der Implementierung durch eine Klasse, ob sich die Komponente im Entwurfsmodus befindet.</summary>
      <returns>true, wenn sie sich im Entwurfsmodus befindet, andernfalls false.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary>Ruft bei der Implementierung durch eine Klasse den Namen der Komponente ab, die der <see cref="T:System.ComponentModel.ISite" /> zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Der Name der Komponente.</returns>
    </member>
    <member name="T:System.ComponentModel.ITypeDescriptorContext">
      <summary>Stellt einem Typkonverter oder einem Wert-Editor Informationen über einen Kontext bereit, sodass Typkonverter oder Editor eine Konvertierung durchführen kann.</summary>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Container">
      <summary>Ruft den Container mit dem Satz von Objekten für dieses Formatierungsprogramm ab.</summary>
      <returns>Der Container mit dem Satz von Objekten für dieses Formatierungsprogramm.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Instance">
      <summary>Ruft die Instanz ab, die die Methode für das Formatierungsobjekt aufruft.</summary>
      <returns>Die Instanz, die die Methode für das Formatierungsobjekt aufruft.</returns>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
      <summary>Löst das <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />-Ereignis aus.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt geändert werden kann.</summary>
      <returns>true, wenn dieses Objekt geändert werden kann, andernfalls false.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
      <summary>Ruft den <see cref="T:System.ComponentModel.PropertyDescriptor" /> ab, der das angegebene Kontextelement anzeigt.</summary>
      <returns>Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das angegebene Kontextelement anzeigt.</returns>
    </member>
    <member name="T:System.ComponentModel.ListSortDirection">
      <summary>Gibt die Richtung eines Sortiervorgangs an.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Ascending">
      <summary>Sortiert in aufsteigender Reihenfolge.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Descending">
      <summary>Sortiert in absteigender Reihenfolge.</summary>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />-Klasse.</summary>
      <param name="progressPercentage">Gibt an, wie viel Prozent eines asynchronen Vorgangs ausgeführt wurden.</param>
      <param name="userState">Ein eindeutiger Benutzerzustand.</param>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage">
      <summary>Ruft ab, wie viel Prozent eines asynchronen Vorgangs ausgeführt wurden.</summary>
      <returns>Ein Prozentwert, der den Fortschritt des asynchronen Vorgangs angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.UserState">
      <summary>Ruft einen eindeutigen Benutzerzustand ab.</summary>
      <returns>Ein eindeutiges <see cref="T:System.Object" />, das den Benutzerzustand angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis behandelt, das ausgelöst wird, wenn der Fortschritt von einem <see cref="T:System.ComponentModel.BackgroundWorker" /> gemeldet wird.</summary>
      <param name="sender">Die Quelle des Ereignisses. </param>
      <param name="e">Ein <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />, das die Ereignisdaten enthält. </param>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventArgs.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />-Klasse.</summary>
      <param name="propertyName">Der Name der geänderten Eigenschaft. </param>
    </member>
    <member name="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName">
      <summary>Ruft den Namen der geänderten Eigenschaft ab.</summary>
      <returns>Der Name der geänderten Eigenschaft; <see cref="F:System.String.Empty" /> oder null, wenn alle Eigenschaften geändert wurden.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventHandler">
      <summary>Stellt die Methode für die Behandlung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses. </param>
      <param name="e">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält. </param>
    </member>
    <member name="T:System.ComponentModel.PropertyChangingEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyChangingEventArgs" />-Klasse.</summary>
      <param name="propertyName">Der Name der Eigenschaft, die sich ändert.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyChangingEventArgs.PropertyName">
      <summary>Ruft den Name der Eigenschaft ab, die sich ändert.</summary>
      <returns>Der Name der Eigenschaft, die sich ändert.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyChangingEventHandler">
      <summary>Stellt eine Methode dar, die das <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />-Ereignis behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptor">
      <summary>Stellt eine Beschreibung einer Eigenschaft bereit.</summary>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary>Gibt an, ob es sich bei der Eigenschaft, für die dieses Attribut angewendet wird, um eine schreibgeschützte Eigenschaft oder um eine Lese-/Schreibeigenschaft handelt.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ReadOnlyAttribute" />-Klasse.</summary>
      <param name="isReadOnly">true gibt an, dass es sich bei der Eigenschaft, für die dieses Attribut angewendet wird, um eine schreibgeschützte Eigenschaft handelt; false gibt an, dass es sich um eine Lese-/Schreibeigenschaft handelt.</param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <returns>true, wenn <paramref name="obj" /> mit dieser Instanz übereinstimmt, andernfalls false. </returns>
      <param name="obj">Das Objekt, mit dem verglichen werden soll. </param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück. </summary>
      <returns>Ein Hashcode für das aktuelle <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Eigenschaft, für die dieses Attribut angewendet wird, schreibgeschützt ist. </summary>
      <returns>true, wenn es sich bei der Eigenschaft, für die dieses Attribut angewendet wird, um eine schreibgeschützte Eigenschaft handelt; false, wenn es sich um eine Lese-/Schreibeigenschaft handelt. </returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />-Klasse.</summary>
      <param name="result">Das Ergebnis des asynchronen Vorgangs.</param>
      <param name="error">Ein während des asynchronen Vorgangs aufgetretener Fehler.</param>
      <param name="cancelled">Ein Wert, der angibt, ob der asynchrone Vorgang abgebrochen wurde.</param>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
      <summary>Ruft einen Wert ab, der das Ergebnis eines asynchronen Vorgangs darstellt.</summary>
      <returns>Ein <see cref="T:System.Object" />, das das Ergebnis eines asynchronen Vorgangs darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis behandelt, das ausgelöst wird, wenn die von einem <see cref="T:System.ComponentModel.BackgroundWorker" /> ausgeführte Operation abgeschlossen oder abgebrochen wurde oder eine Ausnahme ausgelöst hat.</summary>
      <param name="sender">Die Quelle des Ereignisses. </param>
      <param name="e">Ein <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />, das die Ereignisdaten enthält. </param>
    </member>
    <member name="T:System.ComponentModel.TypeConverter">
      <summary>Stellt eine vereinheitlichte Möglichkeit der Konvertierung von Werttypen in andere Typen bereit.<see cref="T:System.ComponentModel.TypeConverter" /> unterstützt in der Regel die Konvertierung von Zeichenfolgen in Objekte, die entweder für Eigenschaften-Editoren in Entwurfsumgebungen oder zur Aktivierung der XAML-Nutzung verwendet wird.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter" />-Klasse. </summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob der Typkonverter ein Objekt aus dem angegebenen Typ in den Typ dieses Konverters konvertieren kann.</summary>
      <returns>true, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls false.</returns>
      <param name="context">Ein Objekt, das einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
      <summary>Gibt zurück, ob der Typkonverter ein Objekt aus dem angegebenen Typ in den Typ dieses Konverters konvertieren kann.</summary>
      <returns>true, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls false.</returns>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob der Typkonverter ein Objekt in den angegebenen Typ konvertieren kann. </summary>
      <returns>true, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls false.</returns>
      <param name="context">Ein Objekt, das einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Der Typ, in den konvertiert werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
      <summary>Gibt zurück, ob der Typkonverter ein Objekt in den angegebenen Typ konvertieren kann. </summary>
      <returns>true, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls false.</returns>
      <param name="destinationType">Der Typ, in den konvertiert werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert vom angegebenen Wert in den gewünschten Konvertierungstyp des Konverters.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="context">Ein Objekt, das einen Formatierungskontext bereitstellt. </param>
      <param name="culture">Die als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />. </param>
      <param name="value">Der Wert, der in den Typ dieses Konverters konvertiert werden soll.</param>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> in Basis-<see cref="T:System.ComponentModel.TypeConverter" /> nicht implementiert.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
      <summary>Konvertiert vom angegebenen Wert in den Typ dieses Konverters.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="value">Der Wert, der in den Typ dieses Konverters konvertiert werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
      <summary>Konvertiert den angegebenen Text in ein Objekt.</summary>
      <returns>Ein Objekt, das die konvertierte Textzeichenfolge darstellt.</returns>
      <param name="text">Die Textdarstellung des zu konvertierenden Objekts.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Typ.</summary>
      <returns>Das konvertierte Objekt.</returns>
      <param name="context">Ein Objekt, das einen Formatierungskontext bereitstellt. </param>
      <param name="culture">Die als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />. </param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> in Basis-<see cref="T:System.ComponentModel.TypeConverter" /> nicht implementiert.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Typ.</summary>
      <returns>Das konvertierte Objekt.</returns>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
      <summary>Konvertiert das angegebene Objekt in eine Zeichenfolgendarstellung.</summary>
      <returns>Ein Objekt, das den konvertierten Wert darstellt.</returns>
      <param name="value">Das zu konvertierende Objekt.</param>
    </member>
    <member name="T:System.ComponentModel.TypeConverterAttribute">
      <summary>Gibt die Klasse an, die als Typkonverter für den Typ oder die Eigenschaft verwendet werden soll, an die dieses Attribut gebunden ist.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse. </summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse. Dabei wird der angegebene Typname als Datenkonverter für das Objekt verwendet, an das dieses Attribut gebunden ist.</summary>
      <param name="typeName">Der vollqualifizierte Name der Klasse, mit der die Datenkonvertierung für das Objekt erfolgt, an die dieses Attribut gebunden ist.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse. Dabei wird der angegebene Typ als Datenkonverter für das Objekt verwendet, an das dieses Attribut gebunden ist.</summary>
      <param name="type">Der Typ der Konverterklasse, mit der die Datenkonvertierung für das Objekt erfolgt, an die dieses Attribut gebunden ist.</param>
    </member>
    <member name="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
      <summary>Ruft den vollqualifizierten Typnamen des Typs ab, der als Konverter für das Objekt verwendet wird, an das dieses Attribut gebunden ist.</summary>
      <returns>Der vollqualifizierten Typname des Typs, der als Konverter für das Objekt verwendet wird, an das dieses Attribut gebunden ist, oder eine leere Zeichenfolge (""), wenn kein Konverter vorhanden ist.Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="T:System.Diagnostics.Debug">
      <summary>Stellt eine Reihe von Methoden und Eigenschaften zum Debuggen von Code bereit.Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>Überprüft eine Bedingung und gibt die Aufrufliste aus, wenn das Ergebnis false ist.</summary>
      <param name="condition">Der bedingte Ausdruck, der ausgewertet werden soll.Wenn die Bedingung true ist, wird die Aufrufliste nicht angezeigt.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>Sucht nach einer Bedingung und zeigt eine angegebene Meldung an, wenn das Ergebnis false ist.</summary>
      <param name="condition">Der bedingte Ausdruck, der ausgewertet werden soll.Wenn die Bedingung true ist, wird die angegebene Nachricht nicht angezeigt.</param>
      <param name="message">Eine anzuzeigende Meldung. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Sucht nach einer Bedingung und zeigt zwei angegebene Meldungen an, wenn das Ergebnis false ist.</summary>
      <param name="condition">Der bedingte Ausdruck, der ausgewertet werden soll.Wenn die Bedingung true ist, werden die angegebenen Nachrichten nicht angezeigt.</param>
      <param name="message">Eine anzuzeigende Meldung. </param>
      <param name="detailMessage">Eine detaillierte Meldung, die angezeigt werden soll. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>Überprüft eine Bedingung und gibt die Meldung und die Aufrufliste aus, wenn das Ergebnis false ist. </summary>
      <param name="condition">Der bedingte Ausdruck, der ausgewertet werden soll.Wenn die Bedingung true ist, werden die angegebene Meldung und die Aufrufliste nicht angezeigt.</param>
      <param name="message">Eine anzuzeigende Meldung.</param>
      <param name="detailMessageFormat">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im <paramref name="args" />-Array entsprechen.</param>
      <param name="args">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode eines angegebenen Objekts mit der OutputDebugString-Funktion in den Debugger.</summary>
      <param name="value">Ein Objekt, dessen Name mit der OutputDebugString-Funktion an den Debugger gesendet wird.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>Schreibt eine angegebene Meldung und danach ein Zeilenabschlusszeichen mit der OutputDebugString-Funktion in den Debugger.</summary>
      <param name="message">Die an den Debugger zu schreibende Meldung. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Zeichenfolge und danach ein Zeilenabschlusszeichen mit der OutputDebugString-Funktion in den Debugger.</summary>
      <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im <paramref name="args" />-Array entsprechen.</param>
      <param name="args">Ein Objektarray mit 0 oder mehr zu formatierenden Objekten. </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>Schreibt eine angegebene Meldung und danach ein Zeilenabschlusszeichen mit der OutputDebugString-Funktion in den Debugger, wenn eine Bedingung true ist.</summary>
      <param name="condition">Der bedingte Ausdruck, der ausgewertet werden soll.Wenn die Bedingung true ist, wird die angegebene Nachricht in den Debugger geschrieben.</param>
      <param name="message">Eine in den Debugger zu schreibende Meldung. </param>
    </member>
    <member name="T:System.Diagnostics.Stopwatch">
      <summary>Stellt eine Gruppe von Methoden und Eigenschaften bereit, mit denen sich eine verstrichene Zeitspanne genau messen lässt.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Diagnostics.Stopwatch" />-Klasse.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.Elapsed">
      <summary>Ruft die von der aktuellen Instanz gemessene verstrichene Zeitspanne ab.</summary>
      <returns>Gibt <see cref="T:System.TimeSpan" /> zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <summary>Ruft die von der aktuellen Instanz gemessene verstrichene Zeitspanne ab.</summary>
      <returns>Gibt <see cref="T:System.Int64" /> zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <summary>Ruft die von der aktuellen Instanz in Ticks des Zeitgebers gemessene verstrichene Zeitspanne ab.</summary>
      <returns>Gibt <see cref="T:System.Int64" /> zurück.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.Frequency">
      <summary>Ruft die Frequenz des Zeitgebers als Anzahl von Ticks pro Sekunde ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetElapsedDateTimeTicks">
      <summary>Ruft die Anzahl der Ticks ab, die Datum und Uhrzeit dieser Instanz darstellen.</summary>
      <returns>Gibt <see cref="T:System.Int64" /> zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetRawElapsedTicks">
      <summary>Ruft die von der aktuellen Instanz in Ticks des Zeitgebers gemessene verstrichene Zeitspanne ab.</summary>
      <returns>Gibt <see cref="T:System.Int64" /> zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <summary>Ruft die aktuelle Anzahl von Ticks im Zeitgebermechanismus ab.</summary>
      <returns>Gibt <see cref="T:System.Int64" /> zurück.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <summary>Gibt an, ob der Zeitgeber auf einem hochauflösenden Leistungsindikator basiert. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.IsRunning">
      <summary>Ruft einen Wert ab, der angibt, ob der Stopwatch-Zeitgeber ausgeführt wird.</summary>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.true, wenn die Stopwatch-Instanz derzeit ausgeführt wird und die verstrichene Zeit für ein Intervall misst; andernfalls false. </returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Reset">
      <summary>Stoppt die Messung des Zeitintervalls und setzt die verstrichene Zeit auf Null (0) zurück.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Restart">
      <summary>Beendet die Zeitintervallmessung, setzt die verstrichene Zeit auf 0 (null) zurück, und startet die Messung der verstrichenen Zeit.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Start">
      <summary>Startet die Messung der verstrichenen Zeit für ein Intervall oder setzt diese Messung fort.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.StartNew">
      <summary>Initialisiert eine neue Stopwatch-Instanz, legt die Eigenschaft der verstrichenen Zeit auf 0 (null) fest und beginnt mit dem Messen der verstrichenen Zeit.</summary>
      <returns>Gibt <see cref="T:System.Diagnostics.Stopwatch" /> zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Stop">
      <summary>Stoppt die Messung der verstrichenen Zeit für ein Intervall.</summary>
    </member>
    <member name="T:System.IO.InvalidDataException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Datenstream ein ungültiges Format hat.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InvalidDataException" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InvalidDataException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InvalidDataException" />-Klasse mit einem Verweis auf die innere Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht NULL ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Stellt Methoden für das Codieren und Decodieren von URLs beim Verarbeiten von Webanforderungen bereit. </summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Konvertiert eine Zeichenfolge, die für die HTTP-Übertragung HTML-codiert wurde, in eine decodierte Zeichenfolge.</summary>
      <returns>Eine decodierte Zeichenfolge.</returns>
      <param name="value">Die zu decodierende Zeichenfolge.</param>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge.</summary>
      <returns>Eine codierte Zeichenfolge.</returns>
      <param name="value">Die zu codierende Zeichenfolge.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecode(System.String)">
      <summary>Konvertiert eine Zeichenfolge, die für die Übertragung in eine URL codiert wurde, in eine decodierte Zeichenfolge.</summary>
      <returns>Eine decodierte Zeichenfolge.</returns>
      <param name="encodedValue">Die zu decodierende Zeichenfolge.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Konvertiert mithilfe des angegebenen Codierungsobjekts ein URL-codiertes Bytearray in eine decodierte Zeichenfolge, wobei dieser Vorgang an der angegebenen Position im Array begonnen und für die angegebene Anzahl von Bytes fortgesetzt wird.</summary>
      <returns>Eine decodierte Zeichenfolge.</returns>
      <param name="encodedValue">Das zu decodierende Bytearray.</param>
      <param name="offset">Die Position im Bytearray, an der mit der Decodierung begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu decodierenden Bytes.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
      <summary>Codiert eine URL-Zeichenfolge.</summary>
      <returns>Eine codierte Zeichenfolge.</returns>
      <param name="value">Der zu codierende Text.</param>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Konvertiert ein Bytearray in eine URL-codierte Zeichenfolge, wobei dieser Vorgang an der angegebenen Position im Array begonnen und für die angegebene Anzahl von Bytes fortgesetzt wird.</summary>
      <returns>Eine codierte Zeichenfolge.</returns>
      <param name="value">Das zu codierende Bytearray.</param>
      <param name="offset">Die Position im Bytearray, an der mit der Codierung begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu codierenden Bytes.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Stellt die Ergebnisse aus einer einzelnen Teilausdruckerfassung dar. </summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>Die Position in der ursprünglichen Zeichenfolge, an der das erste Zeichen der aufgezeichneten Teilzeichenfolge gefunden wurde.</summary>
      <returns>Die nullbasierte Anfangsposition in der ursprünglichen Zeichenfolge, an der die aufgezeichnete Teilzeichenfolge gefunden wurde.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>Die Länge der aufgezeichneten Teilzeichenfolge.</summary>
      <returns>Die Länge der aufgezeichneten Teilzeichenfolge.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Ruft die aufgezeichnete Teilzeichenfolge aus der Eingabezeichenfolge ab.</summary>
      <returns>Die Teilzeichenfolge, die tatsächlich von der Übereinstimmung aufgezeichnet wurde.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Ruft die aufgezeichnete Teilzeichenfolge aus der Eingabezeichenfolge ab.</summary>
      <returns>Die Teilzeichenfolge, die tatsächlich von der Übereinstimmung aufgezeichnet wurde.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Stellt den Satz von Erfassungen einer einzelnen Erfassungsgruppe dar. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert alle Elemente der Auflistung ab dem angegeben Index in das angegebene Array.</summary>
      <param name="array">Das Array, in das die Auflistung kopiert werden soll. </param>
      <param name="arrayIndex">Die Position im Zielarray, an der mit dem Kopieren begonnen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.- oder -<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> liegt außerhalb der Grenzen von <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Ruft die Anzahl der Teilzeichenfolgen ab, die von der Gruppe erfasst wurden.</summary>
      <returns>Die Anzahl der Objekte in der <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Stellt einen Enumerator bereit, der die Auflistung durchläuft.</summary>
      <returns>Ein Objekt, das alle <see cref="T:System.Text.RegularExpressions.Capture" />-Objekte in der <see cref="T:System.Text.RegularExpressions.CaptureCollection" /> enthält.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>In allen Fällen true.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
      <returns>In allen Fällen false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Ruft einen einzelnen Member der Auflistung ab.</summary>
      <returns>Die erfasste Teilzeichenfolge an Position <paramref name="i" /> der Auflistung.</returns>
      <param name="i">Index in der Erfassungsauflistung. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> ist kleiner als 0 oder größer als <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Stellt die Ergebnisse einer einzelnen Erfassungsgruppe dar.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Ruft eine Auflistung aller der Erfassungsgruppe entsprechenden Erfassungsübereinstimmungen in der Reihenfolge von innen nach außen und von links nach rechts ab (oder in der Reihenfolge von innen nach außen und von rechts nach links bei einer Änderung des regulären Ausdrucks mit der <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />-Option).Die Auflistung kann 0 (null) oder mehr Elemente enthalten.</summary>
      <returns>Die Auflistung der Teilzeichenfolge, die mit der Gruppe übereinstimmen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Ruft einen Wert ab, der angibt, ob die Übereinstimmung erfolgreich ist.</summary>
      <returns>true, wenn die Übereinstimmung erfolgreich ist, andernfalls false.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Stellt eine Auflistung erfasster Gruppen in einer einzelnen Übereinstimmung dar.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert alle Elemente der Auflistung ab dem angegeben Index in das angegebene Array.</summary>
      <param name="array">Das Array, in das die Auflistung kopiert werden soll. </param>
      <param name="arrayIndex">Die Position im Zielarray, an der mit dem Kopieren begonnen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist NULL.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.- oder -<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> liegt außerhalb der Grenzen von <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Gibt die Anzahl der Gruppen in der Auflistung zurück.</summary>
      <returns>Die Anzahl der Gruppen in der Auflistung.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchlaufen kann.</summary>
      <returns>Ein Objekt, das alle <see cref="T:System.Text.RegularExpressions.Group" />-Objekte in der <see cref="T:System.Text.RegularExpressions.GroupCollection" /> enthält.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>true, wenn diese <see cref="T:System.Text.RegularExpressions.GroupCollection" /> schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Text.RegularExpressions.GroupCollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>In allen Fällen false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Ermöglicht den Zugriff auf einen Member der Auflistung über einen Ganzzahlenindex.</summary>
      <returns>Der durch <paramref name="groupnum" /> angegebene Member der Auflistung.</returns>
      <param name="groupnum">Der nullbasierte Index des Auflistungsmembers, der abgerufen werden soll. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Ermöglicht den Zugriff auf einen Member der Auflistung über einen Zeichenfolgenindex.</summary>
      <returns>Der durch <paramref name="groupname" /> angegebene Member der Auflistung.</returns>
      <param name="groupname">Der Name der Erfassungsgruppe.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Text.RegularExpressions.GroupCollection" /> synchronisiert werden kann.</summary>
      <returns>Eine Kopie des zu synchronisierenden <see cref="T:System.Text.RegularExpressions.Match" />-Objekts.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Stellt die Ergebnisse aus einer einzelnen Übereinstimmung eines regulären Ausdrucks dar.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Ruft die leere Gruppe ab.Alle fehlgeschlagenen Übereinstimmungen geben diese leere Übereinstimmung zurück.</summary>
      <returns>Ein leeres <see cref="T:System.Text.RegularExpressions.Match" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Ruft eine Auflistung der mit dem regulären Ausdruck übereinstimmenden Gruppen ab.</summary>
      <returns>Die Zeichengruppen, die mit dem Muster übereinstimmen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Gibt ein neues <see cref="T:System.Text.RegularExpressions.Match" />-Objekt mit den Ergebnissen für die nächste Übereinstimmung zurück und beginnt dabei an der Endposition der vorherigen Übereinstimmung (mit dem Zeichen, das dem letzten übereinstimmenden Zeichen folgt).</summary>
      <returns>Die folgende Übereinstimmung für einen regulären Ausdruck.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Gibt die Erweiterung des angegebenen Ersetzungsmusters zurück. </summary>
      <returns>Die erweiterte Version des <paramref name="replacement" />-Parameters.</returns>
      <param name="replacement">Das zu verwendende Ersetzungsmuster. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> ist null.</exception>
      <exception cref="T:System.NotSupportedException">Erweiterung ist für dieses Muster nicht zulässig.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Stellt alle gefundenen Übereinstimmungen dar, die durch iteratives Anwenden eines Musters für reguläre Ausdrücke auf die Eingabezeichenfolge gefunden wurden.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</summary>
      <param name="array">Das Array, in das die Auflistung kopiert werden soll. </param>
      <param name="arrayIndex">Die Position im Array, an der mit dem Kopieren begonnen werden soll. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist ein mehrdimensionales Array.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.- oder -<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> liegt außerhalb der Grenzen von <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Ruft die Anzahl der Übereinstimmungen ab.</summary>
      <returns>Die Anzahl der Übereinstimmungen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Stellt einen Enumerator in der Reihenfolge wie <see cref="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)" /> bereit.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das alle Match-Objekte innerhalb der MatchCollection enthält.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>Der Wert dieser Eigenschaft ist immer true.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
      <returns>Der Wert dieser Eigenschaft ist immer false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Ruft einen einzelnen Member der Auflistung ab.</summary>
      <returns>Die erfasste Teilzeichenfolge an Position <paramref name="i" /> der Auflistung.</returns>
      <param name="i">Index in der Match-Auflistung. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> ist kleiner als 0 (null) oder größer oder gleich <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.Diese Eigenschaft gibt immer das Objekt selbst zurück.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Stellt die Methode dar, die immer dann aufgerufen wird, wenn während eines <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />-Methodenvorgangs eine Übereinstimmung für einen regulären Ausdruck gefunden wird.</summary>
      <returns>Eine Zeichenfolge, die von der durch den <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten dargestellten Methode zurückgegeben wird.</returns>
      <param name="match">Das <see cref="T:System.Text.RegularExpressions.Match" />-Objekt, das eine einzelne Übereinstimmung mit einem regulären Ausdruck während eines <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />-Methodenvorgangs darstellt. </param>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Stellt einen unveränderlichen regulären Ausdruck dar.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Initialisiert und kompiliert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse für den angegebenen regulären Ausdruck.</summary>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Initialisiert und kompiliert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse für den angegebenen regulären Ausdruck mit Optionen zum Verändern des Musters.</summary>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> enthält ein ungültiges Flag.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse für den angegebenen regulären Ausdruck mit Optionen zum Verändern des Musters und einem Wert, der angibt, wie lange eine Mustervergleichsmethode nach einer Übereinstimmung suchen soll, bevor ein Timeout erfolgt.</summary>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte, die den regulären Ausdruck ändern.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Wert.- oder -<paramref name="matchTimeout" /> ist negativ oder größer als ungefähr 24 Tage.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Ruft die maximale Anzahl von Einträgen im aktuellen statischen Cache für die kompilierten regulären Ausdrücke ab oder legt diese fest.</summary>
      <returns>Die maximale Anzahl von Einträgen im statischen Cache.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert in einer Set-Operation ist kleiner als 0 (null).</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Interne Verwendung durch Modul für reguläre Ausdrücke. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Interne Verwendung durch Modul für reguläre Ausdrücke. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Versieht einen minimalen Satz an Zeichen (\, *, +, ?, |, {, [, (,), ^, $,., # und Leerzeichen) mit Escapezeichen, indem diese durch die jeweils entsprechende Escapesequenz ersetzt werden.Damit wird das Modul für reguläre Ausdrücke angewiesen, diese Zeichen als Literale statt als Metazeichen zu interpretieren.</summary>
      <returns>Ein Zeichenfolge, in der alle Metazeichen in die entsprechenden Escapecodes konvertiert wurden.</returns>
      <param name="str">Die Eingabezeichenfolge mit dem umzuwandelnden Text. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Gibt ein Array der Namen von Erfassungsgruppen für den regulären Ausdruck zurück.</summary>
      <returns>Ein Zeichenfolgenarray von Gruppennamen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Gibt ein Array der Nummern von Erfassungsgruppen zurück, die den Gruppennamen in einem Array entsprechen.</summary>
      <returns>Ein Array von ganzen Zahlen der Gruppennummern.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Ruft den Gruppennamen ab, der der angegebenen Gruppennummer entspricht.</summary>
      <returns>Eine Zeichenfolge, die den Gruppennamen enthält, der der angegebenen Gruppennummer zugeordnet ist.Wenn kein Gruppenname vorhanden ist, der <paramref name="i" /> entspricht, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</returns>
      <param name="i">Die Gruppennummer, die in den entsprechenden Gruppennamen konvertiert werden soll. </param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Gibt die Gruppennummer zurück, die dem angegebenen Gruppennamen entspricht.</summary>
      <returns>Die Gruppennummer, die dem angegebenen Gruppennamen entspricht, oder -1, wenn <paramref name="name" /> kein gültiger Gruppenname ist.</returns>
      <param name="name">Der Gruppenname, der in die entsprechende Gruppennummer konvertiert werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist NULL.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary>Gibt an, dass ein Mustervergleichsvorgang keinen Timeout aufweisen soll.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Gibt an, ob der im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebene reguläre Ausdruck eine Übereinstimmung in der Eingabezeichenfolge findet.</summary>
      <returns>true, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls false.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Gibt an, ob der im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebene reguläre Ausdruck ab der angegebenen Anfangsposition eine Übereinstimmung in der Eingabezeichenfolge findet.</summary>
      <returns>true, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls false.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="startat">Die Zeichenposition, an der mit der Suche begonnen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> darf nicht kleiner als 0 (null) oder größer als die Länge von <paramref name="input" /> sein.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Gibt an, ob der reguläre Ausdruck mithilfe des im <paramref name="pattern" />-Parameter angegebenen regulären Ausdrucks eine Übereinstimmung in der Eingabezeichenfolge findet.</summary>
      <returns>true, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls false.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Gibt an, ob der reguläre Ausdruck mithilfe des im <paramref name="pattern" />-Parameter und der im <paramref name="options" />-Parameter bereitgestellten Übereinstimmungsoptionen eine Übereinstimmung in der Eingabezeichenfolge findet.</summary>
      <returns>true, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls false.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Wert.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Gibt an, ob der angegebene reguläre Ausdruck unter Verwendung der angegebenen Übereinstimmungsoptionen und des Timeoutintervalls eine Übereinstimmung in der angegebenen Eingabezeichenfolge findet.</summary>
      <returns>true, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls false.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> oder <paramref name="pattern" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Wert.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ein Timeout ist aufgetreten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge nach dem ersten Vorkommen des im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenen regulären Ausdrucks.</summary>
      <returns>Ein Objekt, das Informationen zur Übereinstimmung enthält. </returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Durchsucht die Eingabezeichenfolge nach dem ersten Vorkommen des regulären Ausdrucks mit einer angegebenen Anfangsposition in der Eingabezeichenfolge.</summary>
      <returns>Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="startat">Die nullbasierte Zeichenposition, an der mit der Suche begonnen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Durchsucht die Eingabezeichenfolge nach dem ersten Vorkommen des regulären Ausdrucks mit einer angegebenen Anfangsposition und Länge der Eingabezeichenfolge.</summary>
      <returns>Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="beginning">Die nullbasierte Zeichenposition in der Eingabezeichenfolge, die die am weitesten links stehende Position definiert, die durchsucht werden soll. </param>
      <param name="length">Die Anzahl der Zeichen der Teilzeichenfolge, die in die Suche einbezogen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.- oder -<paramref name="length" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.- oder -<paramref name="beginning" />+<paramref name="length" />– 1 gibt eine Position an, die außerhalb des Bereichs von <paramref name="input" /> liegt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge nach dem ersten Vorkommen des im  <paramref name="pattern" />-Parameter bereitgestellten regulären Ausdrucks.</summary>
      <returns>Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Durchsucht die Eingabezeichenfolge nach dem ersten Vorkommen des in einem <paramref name="pattern" />-Parameter angegebenen regulären Ausdrucks mit den in einem <paramref name="options" />-Parameter bereitgestellten Übereinstimmungsoptionen.</summary>
      <returns>Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge unter Verwendung der angegebenen Übereinstimmungsoptionen und des Timeoutintervalls nach dem ersten Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <returns>Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> oder <paramref name="pattern" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ein Timeout ist aufgetreten.Weitere Informationen zu Timeouts finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge nach allen Vorkommen eines regulären Ausdrucks.</summary>
      <returns>Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte.Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge nach allen Vorkommen eines regulären Ausdrucks ab der angegebenen Anfangsposition in der Zeichenfolge.</summary>
      <returns>Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte.Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="startat">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen werden soll. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge nach allen Vorkommen des im <paramref name="pattern" />-Parameter angegebenen regulären Ausdrucks.</summary>
      <returns>Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte.Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Durchsucht die Eingabezeichenfolge nach allen Vorkommen des in einem <paramref name="pattern" />-Parameter angegebenen regulären Ausdrucks mit den in einem <paramref name="options" />-Parameter bereitgestellten Übereinstimmungsoptionen.</summary>
      <returns>Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte.Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Durchsucht die angegebene Eingabezeichenfolge unter Verwendung der angegebenen Übereinstimmungsoptionen und des Timeoutintervalls nach allen Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <returns>Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte.Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary>Ruft das Timeoutintervall der aktuellen Instanz ab.</summary>
      <returns>Die maximale Zeitspanne bei einem Mustervergleichsvorgang, bevor eine <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> ausgelöst wird, oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, wenn Timeouts deaktiviert sind.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Gibt die an den <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor übergebenen Optionen zurück.</summary>
      <returns>Der <paramref name="options" />-Parameter, der an den Regex-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Interne Verwendung durch Modul für reguläre Ausdrücke. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit dem Muster für den regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge. </summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="replacement">Die Ersatzzeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="replacement" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine angegebene Ersetzungszeichenfolge. </summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="replacement">Die Ersatzzeichenfolge. </param>
      <param name="count">Die höchstmögliche Anzahl der Vorkommen der Ersetzung. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="replacement" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Ersetzt in einer angegebenen untergeordneten Eingabezeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine angegebene Ersetzungszeichenfolge. </summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="replacement">Die Ersatzzeichenfolge. </param>
      <param name="count">Die höchstmögliche Anzahl der Vorkommen der Ersetzung. </param>
      <param name="startat">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen wird. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="replacement" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge. </summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="replacement">Die Ersatzzeichenfolge. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.- oder -<paramref name="replacement" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge.Durch angegebene Optionen wird die Suche nach Übereinstimmungen geändert.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="replacement">Die Ersatzzeichenfolge. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.- oder -<paramref name="replacement" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge.Zusätzliche Parameter geben Optionen, die die Suche nach Übereinstimmungen ändern, und ein Timeoutintervall an, wenn keine Übereinstimmung gefunden wurde.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="replacement">Die Ersatzzeichenfolge.</param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="replacement" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ein Timeout ist aufgetreten.Weitere Informationen zu Timeouts finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="evaluator">Eine benutzerdefinierte Methode, die jede Übereinstimmung prüft und die ursprüngliche übereinstimmende Zeichenfolge oder eine Ersetzungszeichenfolge zurückgibt.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.- oder -<paramref name="evaluator" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.Durch angegebene Optionen wird die Suche nach Übereinstimmungen geändert.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="evaluator">Eine benutzerdefinierte Methode, die jede Übereinstimmung prüft und die ursprüngliche übereinstimmende Zeichenfolge oder eine Ersetzungszeichenfolge zurückgibt. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.- oder -<paramref name="evaluator" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Teilzeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.Zusätzliche Parameter geben Optionen, die die Suche nach Übereinstimmungen ändern, und ein Timeoutintervall an, wenn keine Übereinstimmung gefunden wurde.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="evaluator">Eine benutzerdefinierte Methode, die jede Übereinstimmung prüft und die ursprüngliche übereinstimmende Zeichenfolge oder eine Ersetzungszeichenfolge zurückgibt.</param>
      <param name="options">Eine bitweise Kombination von Enumerationswerten, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="evaluator" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ein Timeout ist aufgetreten.Weitere Informationen zu Timeouts finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="evaluator">Eine benutzerdefinierte Methode, die jede Übereinstimmung prüft und die ursprüngliche übereinstimmende Zeichenfolge oder eine Ersetzungszeichenfolge zurückgibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="evaluator" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>Ersetzt in einer angegebenen Eingabezeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="evaluator">Eine benutzerdefinierte Methode, die jede Übereinstimmung prüft und die ursprüngliche übereinstimmende Zeichenfolge oder eine Ersetzungszeichenfolge zurückgibt.</param>
      <param name="count">Die maximale Anzahl der Vorkommen der Ersetzung. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="evaluator" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>Ersetzt in einer angegebenen untergeordneten Eingabezeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <returns>Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen.</returns>
      <param name="input">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge. </param>
      <param name="evaluator">Eine benutzerdefinierte Methode, die jede Übereinstimmung prüft und die ursprüngliche übereinstimmende Zeichenfolge oder eine Ersetzungszeichenfolge zurückgibt.</param>
      <param name="count">Die maximale Anzahl der Vorkommen der Ersetzung. </param>
      <param name="startat">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen wird. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="evaluator" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Ruft einen Wert ab, der angibt, ob der reguläre Ausdruck von rechts nach links sucht.</summary>
      <returns>true, wenn der reguläre Ausdruck von rechts nach links sucht, andernfalls false.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Interne Verwendung durch Modul für reguläre Ausdrücke. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Teilt die angegebene Eingabezeichenfolge an den Positionen auf, die durch ein im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenes Muster für einen regulären Ausdruck definiert werden.</summary>
      <returns>Ein Array von Zeichenfolgen.</returns>
      <param name="input">Die aufzuteilende Zeichenfolge. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Teilt die angegebene Eingabezeichenfolge höchstens die angegebene Anzahl von Malen an den Positionen auf, die durch einen im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenen regulären Ausdruck definiert werden.</summary>
      <returns>Ein Array von Zeichenfolgen.</returns>
      <param name="input">Die aufzuteilende Zeichenfolge. </param>
      <param name="count">Die maximale Anzahl der Teilungen. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Teilt die angegebene Eingabezeichenfolge höchstens die angegebene Anzahl von Malen an den Positionen auf, die durch einen im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenen regulären Ausdruck definiert werden.Die Suche nach dem Muster des regulären Ausdrucks beginnt bei einer angegebenen Zeichenposition in der Eingabezeichenfolge.</summary>
      <returns>Ein Array von Zeichenfolgen.</returns>
      <param name="input">Die aufzuteilende Zeichenfolge. </param>
      <param name="count">Die maximale Anzahl der Teilungen. </param>
      <param name="startat">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen wird. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Teilt die Eingabezeichenfolge an den Positionen auf, die durch das Muster eines regulären Ausdrucks definiert werden.</summary>
      <returns>Ein Array von Zeichenfolgen.</returns>
      <param name="input">Die aufzuteilende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Teilt die Eingabezeichenfolge an den Positionen auf, die durch das angegebene Muster eines regulären Ausdrucks definiert werden.Durch angegebene Optionen wird die Suche nach Übereinstimmungen geändert.</summary>
      <returns>Ein Array von Zeichenfolgen.</returns>
      <param name="input">Die aufzuteilende Zeichenfolge. </param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen. </param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte. </param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist NULL.- oder -<paramref name="pattern" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Teilt eine Eingabezeichenfolge an den Positionen in ein Array von Teilzeichenfolgen auf, die durch das angegebene Muster eines regulären Ausdrucks definiert werden.Zusätzliche Parameter geben Optionen, die die Suche nach Übereinstimmungen ändern, und ein Timeoutintervall an, wenn keine Übereinstimmung gefunden wurde.</summary>
      <returns>Ein Zeichenfolgenarray.</returns>
      <param name="input">Die aufzuteilende Zeichenfolge.</param>
      <param name="pattern">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, um anzugeben, dass die Methode keinen Timeout aufweist.</param>
      <exception cref="T:System.ArgumentException">Beim Analysieren des regulären Ausdrucks ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> oder <paramref name="pattern" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ein Timeout ist aufgetreten.Weitere Informationen zu Timeouts finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Gibt das Muster eines regulären Ausdrucks zurück, das an den Regex-Konstruktor übergeben wurde.</summary>
      <returns>Der <paramref name="pattern" />-Parameter, der an den Regex-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Entfernt alle Escapezeichen aus der Eingabezeichenfolge.</summary>
      <returns>Eine Zeichenfolge, in der alle Escapezeichen in die entsprechende Form ohne Escapezeichen konvertiert wurden.</returns>
      <param name="str">Die Eingabezeichenfolge mit dem umzuwandelnden Text. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> ist NULL.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Interne Verwendung durch Modul für reguläre Ausdrücke.</summary>
      <returns>true, wenn die <see cref="P:System.Text.RegularExpressions.Regex.Options" />-Eigenschaft die <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />-Option enthält, andernfalls false.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Ausführungszeit einer Mustervergleichsmethode für reguläre Ausdrücke das Timeoutintervall überschreitet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit einer vom System bereitgestellten Meldung.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit der angegebenen Meldungszeichenfolge.</summary>
      <param name="message">Eine Zeichenfolge, die die Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Eine Zeichenfolge, die die Ausnahme beschreibt.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit Informationen über das Muster des regulären Ausdrucks, den Eingabetext und das Timeoutintervall.</summary>
      <param name="regexInput">Der Eingabetext, der bei Auftreten des Timeouts vom Modul für reguläre Ausdrücke verarbeitet wurde.</param>
      <param name="regexPattern">Das Muster, das bei Auftreten des Timeouts vom Modul für reguläre Ausdrücke verwendet wurde.</param>
      <param name="matchTimeout">Das Timeoutintervall.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary>[SICHERHEITSKRITISCH] Ruft den Eingabetext ab, den das Modul für reguläre Ausdrücke bei Auftreten des Timeouts verarbeitet hat.</summary>
      <returns>Der Eingabetext des regulären Ausdrucks.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary>[SICHERHEITSKRITISCH] Ruft das Timeoutintervall für die Übereinstimmung eines regulären Ausdrucks ab.</summary>
      <returns>Das Timeoutintervall.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary>[SICHERHEITSKRITISCH] Ruft das Muster des regulären Ausdrucks ab, das bei der Suche nach Übereinstimmungen bei Auftreten des Timeouts verwendet wurde.</summary>
      <returns>Das Muster des regulären Ausdrucks.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Stellt Enumerationswerte bereit, mit deren Hilfe Optionen für reguläre Ausdrücke festgelegt werden können.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Gibt an, dass der reguläre Ausdruck in eine Assembly kompiliert wird.Dies beschleunigt zwar die Ausführung, verlängert jedoch die Ladezeit.Dieser Wert sollte der <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />-Eigenschaft nicht zugewiesen werden, wenn die <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />-Methode aufgerufen wird.Nur in Windows Phone vorhanden, wird jedoch nicht unterstützt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Gibt an, dass Unterschiede der Kultur bei der Sprache ignoriert werden.Gewöhnlich führt das Modul für reguläre Ausdrücke Zeichenfolgenvergleiche auf Grundlage der Konventionen der aktuellen Kultur aus.Wenn die <see cref="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant" />-Option angegeben wird, verwendet es die Konventionen der invarianten Kultur.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Aktiviert ECMAScript-kompatibles Verhalten für den Ausdruck.Dieser Wert kann nur in Verbindung mit den Werten <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" /> und <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> verwendet werden.Bei Verwendung dieses Werts mit allen anderen Werten wird eine Ausnahme ausgelöst.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Gibt an, dass die einzigen gültigen Erfassungen ausdrücklich benannt oder nummerierte Gruppen in der Form (?&lt;name&gt;...) sind.Dadurch können unbenannte Klammern wie Nicht-Erfassungsgruppen eingesetzt werden, ohne die komplexe Syntax des Ausdrucks (?:...) zu verwenden.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Gibt an, dass bei Übereinstimmungen die Groß- und Kleinschreibung berücksichtigt werden soll.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Entfernt Leerraum ohne Escapezeichen aus dem Muster und aktiviert die mit # markierten Kommentare.Der <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace" />-Wert beeinflusst oder entfernt jedoch keine Leerzeichen in Zeichenklassen.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Mehrzeilenmodus.Ändert die Bedeutung von ^ und $, sodass sie jeweils dem Anfang und Ende einer beliebigen Zeile und nicht nur dem Anfang und Ende der gesamten Zeichenfolge entsprechen.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Gibt an, dass keine Optionen festgelegt wurden.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Gibt an, dass die Suche von rechts nach links und nicht von links nach rechts durchgeführt wird.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Gibt den Einzeilenmodus an.Ändert die Bedeutung des Punkts (.), sodass dieser jedem Zeichen entspricht (und nicht jedem Zeichen mit Ausnahme von \n).</summary>
    </member>
    <member name="T:System.Threading.Barrier">
      <summary>Ermöglicht es mehreren Aufgaben, parallel über mehrere Phasen gemeinsam an einem Algorithmus zu arbeiten.</summary>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.Barrier" />-Klasse.</summary>
      <param name="participantCount">Die Anzahl teilnehmender Threads.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> ist kleiner als 0 oder größer als 32.767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.Barrier" />-Klasse.</summary>
      <param name="participantCount">Die Anzahl teilnehmender Threads.</param>
      <param name="postPhaseAction">Die <see cref="T:System.Action`1" />, die nach jeder Phase ausgeführt werden soll. NULL (Nothing in Visual Basic) kann übergeben werden, um anzugeben, dass keine Aktion ausgeführt wird.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> ist kleiner als 0 oder größer als 32.767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipant">
      <summary>Benachrichtigt <see cref="T:System.Threading.Barrier" /> über das Vorhandensein eines weiteren Teilnehmers.</summary>
      <returns>Die Phasennummer der Grenze, an der die neuen Teilnehmer zuerst teilnehmen.</returns>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Einen Teilnehmer hinzuzufügen würde verursachen, dass die Teilnehmeranzahl der Barriere 32.767 überschreitet.- oder -Die Methode wurde aus einer Postphasenaktion aufgerufen.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipants(System.Int32)">
      <summary>Benachrichtigt <see cref="T:System.Threading.Barrier" /> über das Vorhandensein weiterer Teilnehmer.</summary>
      <returns>Die Phasennummer der Grenze, an der die neuen Teilnehmer zuerst teilnehmen.</returns>
      <param name="participantCount">Die Anzahl zusätzlicher Teilnehmer, die der Grenze hinzugefügt werden soll.</param>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> ist kleiner als 0.- oder -<paramref name="participantCount" />-Teilnehmer hinzuzufügen würde verursachen, dass die Teilnehmeranzahl der Barriere 32.767 überschreitet.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde aus einer Postphasenaktion aufgerufen.</exception>
    </member>
    <member name="P:System.Threading.Barrier.CurrentPhaseNumber">
      <summary>Ruft die Nummer der aktuellen Phase der Grenze ab.</summary>
      <returns>Gibt die Nummer der aktuellen Phase der Grenze zurück.</returns>
    </member>
    <member name="M:System.Threading.Barrier.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Threading.Barrier" />-Klasse verwendeten Ressourcen frei.</summary>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde aus einer Postphasenaktion aufgerufen.</exception>
    </member>
    <member name="M:System.Threading.Barrier.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Threading.Barrier" /> verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">True, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, false, um nur nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantCount">
      <summary>Ruft die Gesamtanzahl von Teilnehmern für die Grenze ab.</summary>
      <returns>Gibt die Gesamtanzahl von Teilnehmern für die Grenze zurück.</returns>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantsRemaining">
      <summary>Ruft die Anzahl von Teilnehmern für die Grenze ab, die in der aktuellen Phase noch nicht signalisiert haben.</summary>
      <returns>Gibt die Anzahl von Teilnehmern für die Grenze zurück, die in der aktuellen Phase noch nicht signalisiert haben.</returns>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipant">
      <summary>Benachrichtigt <see cref="T:System.Threading.Barrier" />, dass ein Teilnehmer nicht mehr vorhanden ist.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Die Barriere hat bereits 0 Teilnehmer.- oder -Die Methode wurde aus einer Postphasenaktion aufgerufen.</exception>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
      <summary>Benachrichtigt <see cref="T:System.Threading.Barrier" /> über die geringere Anzahl von Teilnehmern.</summary>
      <param name="participantCount">Die Anzahl zusätzlicher Teilnehmer, die aus der Grenze entfernt werden sollen.</param>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">Die Barriere hat bereits 0 Teilnehmer.- oder -Die Methode wurde aus einer Postphasenaktion aufgerufen. - oder -aktuelle Teilnehmeranzahl ist kleiner als der angegebene participantCount</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die gesamte Teilnehmeranzahl ist kleiner als der angegebene<paramref name=" participantCount" /></exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait">
      <summary>Signalisiert, dass ein Teilnehmer <see cref="T:System.Threading.Barrier" /> erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Grenze ebenfalls erreichen.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</exception>
      <exception cref="T:System.BarrierPostPhaseException">Wenn eine Ausnahme aus der Post-Phasenaktion einer Grenze ausgelöst wird, nachdem alle teilnehmenden Threads SignalAndWait aufgerufen haben, wird die Ausnahme in einer BarrierPostPhaseException umbrochen und für alle teilnehmenden Threads ausgelöst.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
      <summary>Signalisiert, dass ein Teilnehmer <see cref="T:System.Threading.Barrier" /> erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Grenze ebenfalls erreichen. Dabei wird eine 32-Bit-Ganzzahl mit Vorzeichen zum Messen des Timeouts verwendet.</summary>
      <returns>wenn alle Teilnehmer die Grenze innerhalb der angegebenen Zeit erreicht haben, andernfalls false.</returns>
      <param name="millisecondsTimeout">Die Wartezeit in Millisekunden oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</param>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> ist eine negative Zahl, aber nicht -1. Der Wert -1 gibt einen Endlostimeout an.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</exception>
      <exception cref="T:System.BarrierPostPhaseException">Wenn eine Ausnahme aus der Post-Phasenaktion einer Grenze ausgelöst wird, nachdem alle teilnehmenden Threads SignalAndWait aufgerufen haben, wird die Ausnahme in einer BarrierPostPhaseException umbrochen und für alle teilnehmenden Threads ausgelöst.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
      <summary>Signalisiert, dass ein Teilnehmer die Grenze erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Grenze ebenfalls erreichen. Dabei wird eine 32-Bit-Ganzzahl mit Vorzeichen zum Messen des Timeouts verwendet und ein <see cref="T:System.Threading.CancellationToken" /> überwacht.</summary>
      <returns>wenn alle Teilnehmer die Grenze innerhalb der angegebenen Zeit erreicht haben, andernfalls false.</returns>
      <param name="millisecondsTimeout">Die Wartezeit in Millisekunden oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</param>
      <param name="cancellationToken">Das zu überwachende <see cref="T:System.Threading.CancellationToken" />.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> wurde abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> ist eine negative Zahl, aber nicht -1. Der Wert -1 gibt einen Endlostimeout an.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
      <summary>Signalisiert, dass ein Teilnehmer <see cref="T:System.Threading.Barrier" /> erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Grenze erreichen. Dabei wird ein <see cref="T:System.Threading.CancellationToken" /> überwacht.</summary>
      <param name="cancellationToken">Das zu überwachende <see cref="T:System.Threading.CancellationToken" />.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> wurde abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
      <summary>Signalisiert, dass ein Teilnehmer <see cref="T:System.Threading.Barrier" /> erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Grenze ebenfalls erreichen. Dabei wird ein <see cref="T:System.TimeSpan" /> zum Messen des Zeitintervalls verwendet.</summary>
      <returns>True, wenn alle anderen Teilnehmer die Grenze erreicht haben, andernfalls false.</returns>
      <param name="timeout">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</param>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist eine negative Zahl ungleich -1 Millisekunden, die ein unendliches Timeout darstellt, oder er ist größer als 32.767.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Signalisiert, dass ein Teilnehmer <see cref="T:System.Threading.Barrier" /> erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Grenze ebenfalls erreichen. Dabei wird ein <see cref="T:System.TimeSpan" /> zum Messen des Zeitintervalls verwendet und ein <see cref="T:System.Threading.CancellationToken" /> überwacht.</summary>
      <returns>True, wenn alle anderen Teilnehmer die Grenze erreicht haben, andernfalls false.</returns>
      <param name="timeout">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</param>
      <param name="cancellationToken">Das zu überwachende <see cref="T:System.Threading.CancellationToken" />.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> wurde abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits freigegeben.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist eine negative Zahl, aber nicht -1 Millisekunde. Ein Wert von -1 Millisekunde gibt einen unendlichen Timeout an.</exception>
      <exception cref="T:System.InvalidOperationException">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</exception>
    </member>
    <member name="T:System.Threading.BarrierPostPhaseException">
      <summary>Die Ausnahme, die bei einem Fehler der Nachphasenaktion einer <see cref="T:System.Threading.Barrier" /> ausgelöst wird.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.BarrierPostPhaseException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.BarrierPostPhaseException" />-Klasse mit der angegebenen internen Ausnahme.</summary>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.BarrierPostPhaseException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.BarrierPostPhaseException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde. </param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht NULL ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt. </param>
    </member>
    <member name="T:System.Threading.Semaphore">
      <summary>Schränkt die Anzahl von Threads ein, die gleichzeitig auf eine Ressource oder einen Pool von Ressourcen zugreifen können. </summary>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse, gibt die maximale Anzahl gleichzeitiger Einträge an und reserviert optional einige Einträge.</summary>
      <param name="initialCount">Die anfängliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</param>
      <param name="maximumCount">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> ist größer als <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> ist kleiner als 1.- oder -<paramref name="initialCount" /> ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)">
      <summary>[SICHERHEITSKRITISCH] Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse, gibt die maximale Anzahl gleichzeitiger Einträge an, reserviert optional einige Einträge für den aufrufenden Thread und gibt optional den Namen eines Systemsemaphorobjekts an.</summary>
      <param name="initialCount">Die anfängliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können. </param>
      <param name="maximumCount">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</param>
      <param name="name">Der Name eines benannten Systemsemaphorobjekts.</param>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)">
      <summary>[SICHERHEITSKRITISCH] Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse, gibt die maximale Anzahl gleichzeitiger Einträge an, reserviert optional einige Einträge für den aufrufenden Thread, gibt optional den Namen eines Systemsemaphorobjekts an und gibt eine Variable an, die einen Wert empfängt, der angibt, ob ein neues Systemsemaphor erstellt wurde.</summary>
      <param name="initialCount">Die ursprüngliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können. </param>
      <param name="maximumCount">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</param>
      <param name="name">Der Name eines benannten Systemsemaphorobjekts.</param>
      <param name="createdNew">Enthält nach dem Beenden dieser Methode den Wert true, wenn ein lokales Semaphor erstellt wurde (d. h., wenn <paramref name="name" /> gleich null oder eine leere Zeichenfolge ist) oder wenn das angegebene benannte Systemsemaphor erstellt wurde. Der Wert ist false, wenn das angegebene benannte Systemsemaphor bereits vorhanden war. Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="M:System.Threading.Semaphore.OpenExisting(System.String)">
      <summary>[SICHERHEITSKRITISCH] Öffnet das angegebene benannte Semaphor, wenn es bereits vorhanden ist.</summary>
      <returns>Ein Objekt, das das benannte Systemsemaphor darstellt.</returns>
      <param name="name">Der Name des zu öffnenden Systemsemaphors.</param>
    </member>
    <member name="M:System.Threading.Semaphore.Release">
      <summary>Beendet das Semaphor und gibt die vorherige Anzahl zurück.</summary>
      <returns>Die Anzahl für das Semaphor vor dem Aufruf der <see cref="Overload:System.Threading.Semaphore.Release" />-Methode. </returns>
      <exception cref="T:System.Threading.SemaphoreFullException">Die Anzahl für das Semaphor weist bereits den maximalen Wert auf.</exception>
      <exception cref="T:System.IO.IOException">Bei einem benannten Semaphor ist ein Win32-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar. Der Benutzer verfügt jedoch nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.- oder -Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar, es wurde jedoch nicht mit <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> geöffnet.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.Release(System.Int32)">
      <summary>Gibt das Semaphor eine festgelegte Anzahl von Malen frei und gibt den vorherigen Zähler zurück.</summary>
      <returns>Die Anzahl für das Semaphor vor dem Aufruf der <see cref="Overload:System.Threading.Semaphore.Release" />-Methode. </returns>
      <param name="releaseCount">Die Anzahl von Malen, die das Semaphor freigegeben werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="releaseCount" /> ist kleiner als 1.</exception>
      <exception cref="T:System.Threading.SemaphoreFullException">Die Anzahl für das Semaphor weist bereits den maximalen Wert auf.</exception>
      <exception cref="T:System.IO.IOException">Bei einem benannten Semaphor ist ein Win32-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar. Der Benutzer verfügt jedoch nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />-Rechte.- oder -Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar, es wurde jedoch nicht mit <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />-Rechten geöffnet.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)">
      <summary>[SICHERHEITSKRITISCH] Öffnet das angegebene benannte Semaphor, sofern bereits vorhanden, und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</summary>
      <returns>true, wenn das benannte Semaphor erfolgreich geöffnet wurde, andernfalls false.</returns>
      <param name="name">Der Name des zu öffnenden Systemsemaphors.</param>
      <param name="result">Enthält nach dem Beenden dieser Methode ein <see cref="T:System.Threading.Semaphore" />-Objekt, das das benannte Semaphor darstellt, wenn der Aufruf erfolgreich war, oder null, wenn der Aufruf fehlschlug. Dieser Parameter wird als nicht initialisiert behandelt.</param>
    </member>
    <member name="T:System.Windows.Input.ICommand">
      <summary>Definiert den Vertrag für die Befehlsverwendung.</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
      <summary>Definiert die Methode, mit der ermittelt wird, ob der Befehl im aktuellen Zustand ausgeführt werden kann.</summary>
      <returns>true, wenn der Befehl ausgeführt werden kann, andernfalls false.</returns>
      <param name="parameter">Daten, die vom Befehl verwendet werden. Wenn der Befehl keine Datenübergabe erfordert, kann das Objekt auf null festgelegt werden. </param>
    </member>
    <member name="E:System.Windows.Input.ICommand.CanExecuteChanged">
      <summary>Tritt ein, wenn Änderungen auftreten, die sich auf die Ausführung des Befehls auswirken.</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.Execute(System.Object)">
      <summary>Definiert die Methode, die aufgerufen werden soll, wenn der Befehl aufgerufen wird.</summary>
      <param name="parameter">Daten, die vom Befehl verwendet werden. Wenn der Befehl keine Datenübergabe erfordert, kann das Objekt auf null festgelegt werden. </param>
    </member>
  </members>
</doc>