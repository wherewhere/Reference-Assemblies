<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>提供具有項目的集合，該項目則是做為索引鍵的類型。</summary>
      <typeparam name="TItem">集合包含的項目類型同時做為集合的索引鍵。</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>初始化 <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>傳回指定型別集合的第 1 個項目。</summary>
      <returns>若是參考類型，則為類型 <paramref name="T" /> 的物件；若是值類型，則為類型 <paramref name="T" /> 的值。若集合未包含類型 <paramref name="T" /> 的物件，則傳回類型的預設值；若是參考類型則傳回 null；若是值類型則傳回 0。</returns>
      <typeparam name="T">要尋找之集合中的項目型別。</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>傳回 <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> 中包含的類型 <paramref name="T" /> 之物件集合。</summary>
      <returns>類型 <paramref name="T" /> 的 <see cref="T:System.Collections.ObjectModel.Collection`1" />，包含來自原始集合的類型 <paramref name="T" /> 之物件。</returns>
      <typeparam name="T">要尋找之集合中的項目型別。</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>取得集合中包含的項目類型。</summary>
      <returns>集合中指定的 <paramref name="item" /> 之類型。</returns>
      <param name="item">集合中要擷取其類型的項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>在特定的位置上將元素插入集合。</summary>
      <param name="index">應插入 <paramref name="item" /> 以零為起始的索引。</param>
      <param name="item">要插入集合中的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>從集合中移除指定型別的物件。</summary>
      <returns>從集合中移除的物件。</returns>
      <typeparam name="T">要移除之集合中項目的型別。</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>從集合中移除指定型別的所有元素。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />，其包含來自原始集合的類型 <paramref name="T" /> 之物件。</returns>
      <typeparam name="T">要移除之集合中項目的型別。</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>以新物件取代指定索引上的項目。</summary>
      <param name="index">要取代的 <paramref name="item" /> 以零為起始的索引。</param>
      <param name="item">要加入集合中的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>提供安全執行緒的唯讀集合，包含一般參數指定為元素的類型之物件。</summary>
      <typeparam name="T">內含為安全執行緒之唯讀集合中項目的物件類型。</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>從元素的指定可列舉清單，及用來同步存取安全執行緒之唯讀集合的物件來初始化 <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> 類別的新執行個體。</summary>
      <param name="syncRoot">用來同步存取安全執行緒之唯讀集合的物件。</param>
      <param name="list">用來初始化安全執行緒之唯讀集合的元素之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>判斷集合是否包含特定值的元素。</summary>
      <returns>如果在集合中找到項目 <paramref name="value" /> 則為 true，否則為 false。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是集合中包含的類型之物件。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>從特定索引開始，將集合的元素複製到指定的陣列。</summary>
      <param name="array">
        <see cref="T:System.Array" />，為從集合複製的元素之目的地。</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>取得安全執行緒之唯讀集合所包含的元素數目。</summary>
      <returns>安全執行緒之唯讀集合所包含的元素數目。</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>傳回透過同步的唯讀集合逐一查看的列舉程式。</summary>
      <returns>集合中儲存的類型物件之 <see cref="T:System.Collections.Generic.IEnumerator`1" />。</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>傳回集合中第 1 個出現值的索引。</summary>
      <returns>集合中第 1 個出現的 <paramref name="value" /> 以零為起始的索引。</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>從安全執行緒之唯讀集合中取得指定索引處的元素。</summary>
      <returns>唯讀集合中指定索引處的元素。</returns>
      <param name="index">要從集合中擷取的元素以零為起始的索引。</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>取得安全執行緒之唯讀集合所包含的元素清單。</summary>
      <returns>安全執行緒之唯讀集合中包含的元素之 <see cref="T:System.Collections.Generic.IList`1" />。</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>若呼叫則擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="value">要加入至集合的元素。</param>
      <exception cref="T:System.NotSupportedException">無法加入至唯讀集合的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>若呼叫則擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <exception cref="T:System.NotSupportedException">無法從唯讀集合清除的項目。</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>傳回 true。</summary>
      <returns>true。</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>從 <see cref="T:System.Collections.Generic.ICollection`1" /> 移除第一次出現的特定物件。</summary>
      <returns>此方法傳回 false，指出未從唯讀集合移除項目。</returns>
      <param name="value">要從集合中移除的值。</param>
      <exception cref="T:System.NotSupportedException">無法從唯讀集合移除的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>若呼叫則擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index">要插入 <paramref name="value" /> 以零為起始的索引。</param>
      <param name="value">要插入集合中的物件。</param>
      <exception cref="T:System.NotSupportedException">無法插入至唯讀集合的項目。</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>取得指定索引的元素。</summary>
      <returns>指定索引上類型 <paramref name="T" /> 的元素。</returns>
      <param name="index">要從集合中擷取的元素以零為起始的索引。</param>
      <exception cref="T:System.NotSupportedException">無法在唯讀集合中設定的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>若呼叫則擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index">要從集合中擷取的元素以零為起始的索引。</param>
      <exception cref="T:System.NotSupportedException">無法從唯讀集合移除的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從指定索引開始，將集合的元素複製到指定的陣列。</summary>
      <param name="array">
        <see cref="T:System.Array" />，為從集合複製的元素之目的地。</param>
      <param name="index">陣列中開始複製以零為起始的索引。</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，指出是否同步存取集合。</summary>
      <returns>true。</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>取得物件，這個物件可用來同步化集合的存取。</summary>
      <returns>可用來同步存取集合的物件。</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回透過同步的唯讀集合逐一查看的列舉程式。</summary>
      <returns>透過同步的唯讀集合逐一查看的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />。</returns>
      <param name="value">要加入至集合的元素。</param>
      <exception cref="T:System.NotSupportedException">無法加入至唯讀集合的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <exception cref="T:System.NotSupportedException">無法從唯讀集合清除的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>判斷集合是否包含特定值的元素。</summary>
      <returns>如果在集合中找到項目 <paramref name="value" /> 則傳回 true，否則為 false。</returns>
      <param name="value">要在集合中尋找的物件。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是集合中包含的類型之物件。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>判斷集合中特定項目的索引。</summary>
      <returns>如果可在清單中找到，則為 <paramref name="value" /> 的索引；否則為 -1。</returns>
      <param name="value">正在擷取其索引的元素。</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>若呼叫則擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index">要插入 <paramref name="value" /> 以零為起始的索引。</param>
      <param name="value">要插入集合中的物件。</param>
      <exception cref="T:System.NotSupportedException">無法插入至唯讀集合的項目。</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>取得值，指出集合大小是否固定。</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>取得值，該值指出集合是否是唯讀的。</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>取得指定索引上的元素，如果已設定元素則擲回例外狀況。</summary>
      <returns>集合中指定位置的物件。</returns>
      <param name="index">集合中元素以零為起始的索引。</param>
      <exception cref="T:System.NotSupportedException">無法在唯讀集合中設定的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>從 <see cref="T:System.Collections.IList" /> 移除第一次出現的特定物件。</summary>
      <param name="value">要從集合中擷取的元素以零為起始的索引。</param>
      <exception cref="T:System.NotSupportedException">無法從唯讀集合移除的項目。</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>若呼叫則擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index">要從集合中擷取的元素以零為起始的索引。</param>
      <exception cref="T:System.NotSupportedException">無法從唯讀集合移除的項目。</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>當叫用的作業的相關動作不符服務中任何可用作業的動作時，用戶端上將擲回此例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成例外狀況之內部例外狀況的參考來初始化 <see cref="T:System.ServiceModel.ActionNotSupportedException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
      <param name="innerException">造成擲回目前例外狀況的 <see cref="T:System.Exception" />。 </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>表示一個繫結，可讓 Windows Phone 用戶端用來設定端點，以便與 ASMX 型網頁服務及符合 WS-I Basic Profile 1.1 的其他服務通訊。</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>使用繫結所使用的指定安全性類型，以初始化 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 類別的新執行個體。</summary>
      <param name="securityMode">
        <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> 的值，指定使用 SOAP 訊息及適用於用戶端的安全性類型。</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>傳回目前繫結中包含的繫結元素之排序集合。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />，包含 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 說明的繫結元素之排序堆疊。</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>取得或設定值，指出 <see cref="T:P:System.ServiceModel.BasicHttpBinding" /> 是否將包含 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />。</summary>
      <returns>如果繫結包含 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>取得使用於此繫結處理的訊息之 SOAP 版本。</summary>
      <returns>使用此繫結的 <see cref="T:System.ServiceModel.EnvelopeVersion" /> 值。此值一律是 SOAP 1.1。</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>取得或設定從通道接收訊息之緩衝區大小上限。</summary>
      <returns>緩衝區大小上限 (位元組)，當系統為此繫結設定的端點處理訊息時，該緩衝區將儲存這些訊息。預設值為 65,536 個位元組。</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>取得或設定可在此繫結設定的通道上接收的訊息大小上限。</summary>
      <returns>繫結處理的訊息大小上限 (位元組)。預設值為 65,536 個位元組。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">值小於零。</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>取得此繫結設定的通道和接聽程式之 URI 傳輸配置。</summary>
      <returns>若將傳輸繫結元素中的安全性模式設為 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> 或 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" />，則為 "https"，否則為 "http"。</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>取得使用此繫結的安全性類型。</summary>
      <returns>使用此繫結的 <see cref="T:System.ServiceModel.BasicHttpSecurity" />。預設值為 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />。</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>取得或設定使用於訊息文字的字元編碼。</summary>
      <returns>指出使用的字元編碼之 <see cref="T:System.Text.Encoding" />。預設值為 <see cref="T:System.Text.UTF8Encoding" />。</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>列舉在 BasicHttpBinding 繫結中啟用安全性時，用戶端可驗證的認證類型。</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>指出用戶端可使用使用者名稱認證進行驗證。</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>僅在 Windows Phone 中出現，但不受支援。</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>指定使用於 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 設定的 Windows Phone 用戶端之安全性。</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>取得或設定 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 設定的用戶端之安全性模式。</summary>
      <returns>
        <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> 列舉中的值。此內容的預設值為 <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">此值不是 <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> 的合法值。</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>指定可使用系統提供的 <see cref="T:System.ServiceModel.BasicHttpBinding" /> 繫結之安全性類型。</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>在傳送期不會保護 SOAP 訊息安全。這是預設行為。</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>安全性是使用 HTTPS 來提供。必須以 SSL 憑證設定服務。使用 HTTPS 可完全保護 SOAP 訊息。使用服務的 SSL 憑證，由用戶端驗證此服務。</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>此模式使用 HTTPS 來提供完整性、機密性和伺服器驗證。必須以憑證設定服務。用戶端驗證由 SOAP 訊息安全性提供。</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>此模式僅提供 HTTP 型用戶端驗證。它不提供訊息完整性或機密性。</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>建立和管理通道，用戶端會使用通道將訊息傳至服務端點。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ChannelFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>使用指定的設定檔提供的行為，及通道處理站的服務端點中的行為，以初始化通道處理站。</summary>
      <param name="configurationName">設定檔的名稱。</param>
      <exception cref="T:System.InvalidOperationException">通道處理站的服務端點為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>在衍生類別中實作時，建立通道處理站的相關服務端點說明。</summary>
      <returns>通道處理站的相關 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>建立處理站的目前端點之通道處理站。</summary>
      <returns>目前處理站的端點之 <see cref="T:System.ServiceModel.Channels.IChannelFactory" />。</returns>
      <exception cref="T:System.InvalidOperationException">處理站通道所連線的服務端點為 null、端點的繫結為 null，或缺少含有指定之組態名稱的項目。</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>取得用戶端透過處理站產生的通道，與服務端點通訊時所使用的認證。</summary>
      <returns>如果已針對通道處理站設定它們，或者端點並非 null 參考且未處於 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 通訊狀態，則為使用者所使用的 <see cref="T:System.ServiceModel.Description.ClientCredentials" />，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>取得為了讓關閉作業完成而提供的預設時間間隔。</summary>
      <returns>指定關閉作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>取得為了讓開啟作業完成而提供的預設時間間隔。</summary>
      <returns>指定開啟作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>取得處理站所產生的通道所連線的服務端點。</summary>
      <returns>處理站產生的通道所連線的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>若尚未開啟目前的通道處理站，則予以開啟。</summary>
      <exception cref="T:System.ObjectDisposedException">目前的處理站正在關閉或已關閉，因此無法開啟。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (如果出現)，若未出現，則為 null。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的繫結和位址來初始化通道處理站的服務端點。</summary>
      <param name="binding">用來初始化通道處理站的端點之 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <param name="address">用來初始化通道處理站的端點之 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的位址和設定來初始化通道處理站的服務端點。</summary>
      <param name="configurationName">用來初始化通道處理站之設定檔的名稱。</param>
      <param name="address">用來初始化通道處理站的端點之 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>終止目前通道處理站的內部通道處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在具有相關狀態物件的目前通道處理站之內部通道處理站上，開始非同步關閉作業。</summary>
      <returns>參考非同步作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">指定作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在具有相關狀態物件的目前通道處理站之內部通道處理站上，開始非同步開啟作業。</summary>
      <returns>參考非同步作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">指定作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>使用作業完成的指定逾時，在內部通道處理站上呼叫關閉。</summary>
      <param name="timeout">指定作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>在目前通道處理站的內部通道處理站上完成非同步關閉作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>在目前通道處理站的內部通道處理站上完成非同步開啟作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>使用作業完成的指定逾時，在目前通道處理站的內部通道處理站上呼叫開啟。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定在逾時前完成開啟作業的時間長度。</param>
      <exception cref="T:System.InvalidOperationException">目前通道的內部通道為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>初始化通道處理站的 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 物件之唯讀複本。</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>建立目前通道的內部通道處理站。</summary>
      <exception cref="T:System.InvalidOperationException">通道處理站的內部通道處理站為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>關閉目前的通道處理站。</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>一個處理站，可建立用戶端使用的不同類型通道，供用戶端將訊息傳送到各種設定的服務端點。</summary>
      <typeparam name="TChannel">通道處理站產生的通道型別。此類型必須是 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的端點位址和繫結設定來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</summary>
      <param name="binding">用來設定處理站建立的通道之 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <param name="remoteAddress">處理站建立的通道之目的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體及設定端點。</summary>
      <param name="endpointConfigurationName">檔案的名稱，該檔案包含處理站建立的通道之服務端點設定。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的端點位址和端點設定來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">檔案的名稱，該檔案包含處理站建立的通道之服務端點設定。</param>
      <param name="remoteAddress">處理站建立的通道之目的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>建立通道，以便將訊息傳送至特定端點位址上的服務。</summary>
      <returns>由 Factory 建立之類型為 <see cref="T:System.ServiceModel.Channels.IChannel" /> 的 <paramref name="TChannel" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>建立通道，以便透過指定的傳輸位址，將訊息傳送至特定端點位址上的服務。</summary>
      <returns>由 Factory 建立之類型為 <see cref="T:System.ServiceModel.Channels.IChannel" /> 的 <paramref name="TChannel" />。</returns>
      <param name="via">包含傳輸位址的 <see cref="T:System.Uri" />，可讓通道將訊息傳送至該位址。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.ChannelFactory" /> 具有其不支援的雙工作業。</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>建立服務端點的描述。</summary>
      <returns>服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
      <exception cref="T:System.InvalidOperationException">回呼合約為 null，但服務端點需要不是 null (Nothing) 的回呼合約。</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>提供基本實作，可用來建立 Windows Phone 用戶端物件 (Proxy) 來呼叫服務。</summary>
      <typeparam name="TChannel">用來連線到服務的通道，該服務可識別此 Proxy 封裝的服務合約的類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>使用應用程式設定檔的預設目標端點來初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <exception cref="T:System.InvalidOperationException">可能是設定檔中沒有預設的端點資訊、檔案中有多個端點，或沒有設定檔。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的繫結和目標位址來初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="binding">用來設定服務的呼叫方式之繫結。</param>
      <param name="remoteAddress">服務端點的位址。</param>
      <exception cref="T:System.ArgumentNullException">繫結為 null。</exception>
      <exception cref="T:System.ArgumentNullException">遠端位址為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>使用 <paramref name="endpointConfigurationName" /> 在應用程式設定檔中指定的設定資訊來初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">應用程式組態檔中的端點名稱。</param>
      <exception cref="T:System.ArgumentNullException">指定的端點資訊為 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到端點或端點合約無效。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的目標位址和端點資訊來初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">應用程式組態檔中的端點名稱。</param>
      <param name="remoteAddress">服務的位址。</param>
      <exception cref="T:System.ArgumentNullException">端點為 null。</exception>
      <exception cref="T:System.ArgumentNullException">遠端位址為 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到端點或端點合約無效。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="endpointConfigurationName">應用程式組態檔中的端點名稱。</param>
      <param name="remoteAddress">服務的位址。</param>
      <exception cref="T:System.ArgumentNullException">端點為 null。</exception>
      <exception cref="T:System.ArgumentNullException">遠端位址為 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到端點或端點合約無效。</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>造成 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從其目前狀態立即轉換為已關閉狀態。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>取得用來與服務通訊的內部通道。</summary>
      <returns>做為類型參數，傳遞至建構函式的目標服務合約介面之實作。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>取得基礎 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.ChannelFactory`1" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>取得用來呼叫作業的用戶端認證。</summary>
      <returns>表示用戶端出示的身分證明之 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>將新通道從用戶端傳回至服務。</summary>
      <returns>類型 <paramref name="TChannel" /> 的通道，用來識別此用戶端物件 (Proxy) 封裝的服務合約之類型。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>取得 Windows Phone 用戶端可連線之服務的目標端點。</summary>
      <returns>目標 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>複寫 C# 中的預設關鍵字行為。</summary>
      <returns>若 T 是參考類型，則傳回 null，若 T 是數值類型，則傳回零。</returns>
      <typeparam name="T">C# 類型。</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>取得基礎 <see cref="T:System.ServiceModel.IClientChannel" /> 實作。</summary>
      <returns>Windows Phone 用戶端物件的用戶端通道。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>提供實作事件型非同步模式支援。
    For more information about 
  這個模式，請參閱事件架構非同步模式概觀。</summary>
      <param name="beginOperationDelegate">使用於呼叫非同步作業的委派。</param>
      <param name="inValues">非同步呼叫的輸入值。</param>
      <param name="endOperationDelegate">用來結束已完成的非同步呼叫之委派。</param>
      <param name="operationCompletedCallback">完成非同步方法時叫用的用戶端提供之回呼。回呼將傳遞至 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />。</param>
      <param name="userState">與非同步呼叫相關聯的 <paramref name="userState" /> 物件。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>取得 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件的目前狀態。</summary>
      <returns>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以關閉 <see cref="T:System.ServiceModel.ClientBase`1" />。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">在完成時接收回呼的方法。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>使用指定的逾時，開始非同步作業以關閉 <see cref="T:System.ServiceModel.ClientBase`1" />。</summary>
      <returns>參考非同步開始關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">呼叫必須完成的期間。</param>
      <param name="callback">作業完成時所叫用的回呼物件。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業以開啟 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">在完成時接收回呼的方法。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在指定的時間間隔內，開始非同步作業以開啟 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">呼叫必須完成的時間。</param>
      <param name="callback">在完成時接收回呼的方法。</param>
      <param name="state">狀態資料。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>造成 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從其目前狀態轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>造成 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從其目前狀態轉換為已關閉狀態。</summary>
      <param name="timeout">呼叫必須完成的時間。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從其目前狀態轉換為已關閉狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從其目前狀態轉換為已關閉狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>完成非同步作業以關閉 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <param name="result">用來完成非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>完成非同步作業以開啟 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件。</summary>
      <param name="result">用來完成非同步結束開啟作業的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>在 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件上執行作業發生錯誤時所叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>造成 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>造成指定時間間隔內，<see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">呼叫必須完成的時段。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1" /> 物件從已建立狀態轉換為已開啟狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> 在用戶端上呼叫非同步作業時所使用的委派。</summary>
      <returns>非同步呼叫的結果。</returns>
      <param name="inValues">非同步呼叫的輸入值。</param>
      <param name="asyncCallback">參考對應的非同步作業完成時要叫用的方法。</param>
      <param name="state">可讓用戶端區隔不同的非同步呼叫之 <see cref="T:System.Object" />。用戶端可在事件完成回呼的 <paramref name="arguments" /> 參數中使用它。</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>自動產生的用戶端 Proxy 將使用此類別來呼叫服務，並不應以其他方式使用。 
</summary>
      <typeparam name="T">泛型類別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>從類別的現存執行個體初始化 <see cref="T:System.ServiceModel.ClientBase`1" /> 類別的新執行個體。</summary>
      <param name="client">用來初始化類別的新執行個體之 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 物件。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>依名稱啟動指定方法的非同步呼叫。</summary>
      <returns>參考叫用的非同步方法之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="methodName">要非同步呼叫的方法名稱。</param>
      <param name="args">叫用的方法之引數陣列。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>依指定方法的名稱完成非同步叫用。</summary>
      <returns>
叫用的方法之 <see cref="T:System.Object" /> 輸出。
</returns>
      <param name="methodName">非同步呼叫的方法名稱。</param>
      <param name="args">叫用的方法之引數陣列。</param>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>執行通道相關的可用、釋收或重設之未受管理資源所相關的應用程式定義工作。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <typeparam name="TProperty">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，將訊息傳輸至輸出通道的目的地。</summary>
      <returns>參考非同步訊息傳輸之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">由應用程式指定的物件，該物件包含與非同步傳送作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，在指定的時間間隔內將訊息傳輸至輸出通道的目的地。</summary>
      <returns>參考非同步傳送作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步作業傳送完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">由應用程式指定的物件，該物件包含與非同步傳送作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>完成非同步作業，將訊息傳輸至輸出通道的目的地。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>取得在輸出通道上傳送訊息的服務目的地。</summary>
      <returns>輸出通道傳送訊息目標的服務之 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>將訊息傳輸至輸出通道的目的地。</summary>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>在指定的時間間隔內，在目前的輸出通道上傳送訊息。</summary>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>取得包含傳輸位址的 URI，系統會在輸出通道上將訊息傳送至該位址。</summary>
      <returns>包含傳輸位址的 <see cref="T:System.Uri" />，系統會在輸出通道上將訊息傳送至該位址。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，將要求訊息傳輸到要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">可接收正在傳輸要求訊息之非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 代理人。</param>
      <param name="state">由應用程式指定的物件，該物件包含與正在傳輸要求訊息之非同步作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，在指定的時間間隔內，將要求訊息傳輸到要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" />，指定必須在該期間內接收回應的時間間隔。(在預設值上，請參閱備註。)</param>
      <param name="callback">可接收正在傳輸要求訊息之非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 代理人。</param>
      <param name="state">由應用程式指定的物件，該物件包含與正在傳輸要求訊息之非同步作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>完成非同步作業，將訊息型回應傳回到傳輸的要求。</summary>
      <returns>回應要求時接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>取得要求通道傳送訊息的目標遠端位址。</summary>
      <returns>要求通道傳送訊息的目標 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>傳送訊息型要求及傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>於指定的時間間隔內，傳送訊息型要求及傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" />，指定必須在該期間內接收回應的時間間隔。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>取得傳送要求的目標傳輸位址。</summary>
      <returns>
        <see cref="T:System.Uri" />，包含傳送訊息的目標傳輸位址。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>若未指定 <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />，<see cref="T:System.ServiceModel.EndpointAddress" /> 將做為最終目的地和實體位址。若指定 <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />，則為傳送訊息的目標實體位址，並且是訊息抵達其目的地所經過的位址。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>非同步呼叫開始使用使用者介面來取得認證資訊。</summary>
      <returns>在完成處理時用來回呼的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">完成此方法時所呼叫的方法。</param>
      <param name="state">通道狀態的相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>取得值，指出是否對使用者介面進行呼叫來取得認證資訊。</summary>
      <returns>若呼叫 <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 方法 (或 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 和 <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> 方法)，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>呼叫使用者介面以取得認證資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>完成 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 呼叫後呼叫。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>這是保留的事件。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>取得包含傳輸位址的 URI，系統會在用戶端通道上將訊息傳至該位址。</summary>
      <returns>包含傳輸位址的 <see cref="T:System.Uri" />，系統會在通道上將訊息傳至該位址。</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>造成通訊物件從其目前狀態立即轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始關閉通訊物件的非同步作業。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">可接收非同步關閉作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>使用指定的逾時，開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步關閉作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始開啟通訊物件的非同步作業。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">可接收非同步開啟作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在指定的時間間隔內，開始非同步作業以開啟通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步開啟作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>造成通訊物件從其目前狀態轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>造成通訊物件從其目前狀態轉換為已關閉狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 物件從其目前狀態轉換為已關閉狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 物件從其目前狀態轉換為已關閉狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>完成關閉通訊物件的非同步作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>完成開啟通訊物件的非同步作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>在 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 物件上執行作業發生錯誤時所叫用的事件處理常式。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>造成通訊物件從已建立狀態轉換為已開啟狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>造成指定時間間隔內，通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 物件從已建立狀態轉換為已開啟狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>當 <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> 物件從已建立狀態轉換為已開啟狀態時所叫用的事件處理常式。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>取得通訊導向物件的目前狀態。</summary>
      <returns>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>取得或設定值，這個值會指示 Windows Phone 先儲存一組訊息再傳輸該訊息。</summary>
      <returns>如果允許批次處理外寄郵件，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>取得通道的輸入工作階段。</summary>
      <returns>通道的 <see cref="T:System.ServiceModel.Channels.IInputSession" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>取得通道的本機端點。</summary>
      <returns>通道的本機 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>取得或設定時段，必須在該時段內完成作業，否則將擲回例外狀況。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，其指定必須完成作業的時段。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>取得通道的相關輸出工作階段 (若有的話)。</summary>
      <returns>若存在輸入工作階段，則為 <see cref="T:System.ServiceModel.Channels.IOutputSession" /> 實作，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>取得通道的相關遠端位址。</summary>
      <returns>通道的遠端 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>傳回目前工作階段的識別項 (若有的話)。</summary>
      <returns>目前工作階段識別項 (若有的話)。</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>取得此可延伸物件的延伸物件集合。</summary>
      <returns>延伸物件的 <see cref="T:System.ServiceModel.IExtensionCollection`1" />。</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>成功完成 <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> 對 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> 的呼叫時，由 <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> 叫用的委派。</summary>
      <returns>包含呼叫非同步方法的結果之 <see cref="T:System.Object" /> 陣列。此作業可能有多個傳回值，將在此物件陣列中傳回所有值。</returns>
      <param name="result">
        <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> 呼叫 <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> 所傳回的結果。</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>儲存用戶端執行的非同步呼叫之結果。</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>取得用戶端執行的非同步呼叫之結果。</summary>
      <returns>類型 <see cref="T:System.Object" /> 的陣列，其包含用戶端執行的非同步呼叫之結果。</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>表示服務或用戶端應用程式中的通訊錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤條件的描述。</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況來初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤條件的描述。</param>
      <param name="innerException">要使用的內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>呼叫已中止的 <see cref="T:System.ServiceModel.ICommunicationObject" /> 物件時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況所夾帶的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況來初始化 <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>呼叫已發生錯誤的通訊物件時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況來初始化 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>定義 <see cref="T:System.ServiceModel.ICommunicationObject" /> 可存在的狀態。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>指出已具現化及可設定，但尚未開啟或準備好使用的通訊物件。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>指出正在從 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 狀態轉換為 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態的通訊物件。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>指出現在已開啟並準備好使用的通訊物件。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>指出正在轉換為 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態的通訊物件。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>指出已關閉並且不可再使用的通訊物件。</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>指出通訊物件已發生錯誤或失敗，以致於無法復原且無法再使用。 </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>建構 Windows Phone 基礎結構以使用 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />。</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>取得或設定序列化資料的 SOAP 樣式。</summary>
      <returns>其中一個 <see cref="T:System.ServiceModel.OperationFormatStyle" /> 值。預設值為 <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />。</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>提供用戶端用來與服務端點通訊的唯一網路位址。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>使用指定的 URI 字串來初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</summary>
      <param name="uri">用來識別端點的 URI。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>使用指定的 URI 和標頭來初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</summary>
      <param name="uri">用來識別端點位置的 <see cref="T:System.Uri" />。</param>
      <param name="addressHeaders">類型 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 的 <see cref="T:System.Array" />，包含可與端點互動的位址資訊。</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>取得匿名 URI 的與版本無關表示。</summary>
      <returns>包含值 http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous 的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>將端點位址的 URI 和內容指派給指定訊息的標頭值。</summary>
      <param name="message">正在指派其標頭值的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>傳回值，指出指定的物件是否等於目前端點位址。</summary>
      <returns>如果指定的物件等於目前的位址，則為 true，否則為 false。</returns>
      <param name="obj">要與目前端點位址比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>提供目前端點位址的唯一雜湊程式碼。</summary>
      <returns>目前端點位址的唯一雜湊程式碼。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>取得產生器可建立的端點之位址標頭集合。</summary>
      <returns>包含端點的位址資訊之 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>取得值，這個值指出端點是否為匿名。</summary>
      <returns>如果端點是 <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>取得值，指出端點的 URI 是否為 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />。</summary>
      <returns>如果端點的 URI 是 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>取得與版本無關的 URI，該 URI 使用於必須傳送訊息的目標端點位址。</summary>
      <returns>包含值 http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None 的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>傳回值，指出指定的端點位址是否不相等。</summary>
      <returns>如果端點位址相等，則為 true，否則為 false。</returns>
      <param name="address1">要比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
      <param name="address2">要比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>傳回值，指出指定的端點位址是否不相等。</summary>
      <returns>如果端點位址不相等，則為 true，否則為 false。</returns>
      <param name="address1">要比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
      <param name="address2">要比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>從指定的 XML 字典讀取器讀取指定位址版本的端點位址。</summary>
      <returns>從 XML 讀取器讀取的指定版本之 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
      <param name="addressingVersion">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</param>
      <param name="reader">從中取得端點位址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>傳回端點位址包含的 URI 之正式字串表示。</summary>
      <returns>用來識別端點的 URI。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>取得端點的 URI。</summary>
      <returns>端點的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>將節點的所有子節點儲存至指定的 XML 字典寫入器。</summary>
      <param name="addressingVersion">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</param>
      <param name="writer">在其中儲存端點位址的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 或 <paramref name="addressingVersion" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>用來產生包含特定內容值之新 (不可變) 端點位址的處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>從現有的端點位址值初始化 <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> 類別的新執行個體。</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" />，其內容值可用來初始化此執行個體的內容值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>取得產生器可建立的端點之位址標頭集合。</summary>
      <returns>類型 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 的 <see cref="T:System.Collections.ObjectModel.Collection`1" />，包含產生器可建立的端點之位址標頭。</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>建立以目前端點位址產生器的內容值所初始化的新端點位址。</summary>
      <returns>以目前的端點位址產生器的值初始化其內容的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>取得或設定產生器可建立的端點之 URI。</summary>
      <returns>用來指定端點位址的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>找不到或無法連線遠端端點時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成目前例外狀況之內部例外狀況來初始化 <see cref="T:System.ServiceModel.EndpointNotFoundException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
      <param name="innerException">造成擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>取得字串，包含最終目的地的目前訊息版本關聯的 SOAP 角色之 URI 名稱。</summary>
      <returns>若使用 SOAP 1.1 則為空字串；若使用 SOAP 1.2 則為包含 http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver 的字串。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>取得字串，包含下一個目的地的目前訊息版本關聯的 SOAP 角色之 URI 名稱。</summary>
      <returns>若使用 <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" /> 則為包含 http://schemas.xmlsoap.org/soap/actor/next 的字串；若使用 <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" /> 則為包含 http://www.w3.org/2003/05/soap-envelope/role/next 的字串；如果 <see cref="T:System.ServiceModel.EnvelopeVersion" /> 為 <see cref="P:System.ServiceModel.EnvelopeVersion.None" /> 則為空字串。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>取得未使用 SOAP 版本的信封版本。</summary>
      <returns>信封版本目前未使用 SOAP 格式。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>取得 SOAP 1.1 信封版本。</summary>
      <returns>SOAP 1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>取得 SOAP 1.2 信封版本。</summary>
      <returns>SOAP 1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>取得表示目前信封版本的字串。</summary>
      <returns>目前的信封版本。</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>表示錯誤詳細資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>從例外狀況初始化 <see cref="T:System.ServiceModel.ExceptionDetail" /> 類別的新執行個體。</summary>
      <param name="exception">要序列化為 <see cref="T:System.ServiceModel.ExceptionDetail" /> 物件的例外狀況。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 參數為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>取得或設定表示內部例外狀況的 <see cref="T:System.ServiceModel.ExceptionDetail" /> 物件。</summary>
      <returns>內部例外狀況資訊。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>取得或設定傳遞至建構函式的例外狀況之訊息。</summary>
      <returns>例外狀況訊息。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>取得或設定傳遞至建構函式的例外狀況之堆疊追蹤資訊。</summary>
      <returns>例外狀況的堆疊追蹤。</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>傳回傳遞至建構函式的例外狀況之例外狀況詳細資訊。</summary>
      <returns>例外狀況的訊息和堆疊追蹤。</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>取得或設定傳遞至建構函式的例外狀況之型別字串。</summary>
      <returns>傳遞至建構函式的例外狀況之型別字串。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>表示 SOAP 錯誤碼。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的名稱。</param>
      <param name="subCode">錯誤子代碼。</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>使用指定的名稱和命名空間來初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的本機名稱。</param>
      <param name="ns">錯誤碼的命名空間名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 為空字串。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>使用指定的名稱、命名空間和錯誤子代碼來初始化 <see cref="T:System.ServiceModel.FaultCode" /> 類別的新執行個體。</summary>
      <param name="name">錯誤碼的本機名稱。</param>
      <param name="ns">錯誤碼的命名空間名稱。</param>
      <param name="subCode">表示錯誤子代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 為空字串。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>建立包含指定子代碼的傳送者錯誤碼。</summary>
      <returns>一個在 <see cref="P:System.ServiceModel.FaultCode.SubCode" /> 內容中包含已建立的 SOAP 錯誤子代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。</returns>
      <param name="subCode">表示錯誤子代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>取得值，指出錯誤為 SOAP 1.1 或 SOAP 1.2 錯誤。</summary>
      <returns>若錯誤為 SOAP 1.1 或 SOAP 1.2 錯誤，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>取得值，指出錯誤為 SOAP 1.1 伺服器錯誤或 SOAP 1.2 接收器錯誤。</summary>
      <returns>若錯誤為 SOAP 1.1 伺服器錯誤或 SOAP 1.2 接收器錯誤，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>取得值，指出錯誤為 SOAP 1.1 用戶端錯誤或 SOAP 1.2 傳送者錯誤。</summary>
      <returns>若錯誤為 SOAP 1.1 用戶端錯誤或 SOAP 1.2 傳送者錯誤，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>取得錯誤碼的本機名稱。</summary>
      <returns>錯誤碼的本機名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>取得錯誤碼的命名空間。</summary>
      <returns>命名空間名稱的統一資源識別項 (URI)。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>取得錯誤子代碼。</summary>
      <returns>表示錯誤子代碼的 <see cref="T:System.ServiceModel.FaultCode" /> 物件。 </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>指定當服務作業遇到處理錯誤時所傳回的一或多個 SOAP 錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultContractAttribute" /> 類別的新執行個體。</summary>
      <param name="detailType">包含呼叫端的錯誤資訊之可序列化類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detailType" /> 引數為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>取得或設定指定為作業合約一部分的 SOAP 錯誤訊息動作。</summary>
      <returns>SOAP 錯誤訊息的動作值。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>取得包含錯誤資訊的可序列化物件型別。</summary>
      <returns>表示可序列化錯誤類別的類型。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>取得或設定 Web 服務描述語言 (WSDL) 中的錯誤訊息名稱。</summary>
      <returns>錯誤訊息名稱。預設值為做為錯誤詳細資料的類型名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>取得或設定 SOAP 錯誤的命名空間。</summary>
      <returns>SOAP 錯誤的命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>表示 SOAP 錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.FaultException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>使用指定的訊息錯誤值和提供的動作字串來初始化 <see cref="T:System.ServiceModel.FaultException" /> 類別的新執行個體。</summary>
      <param name="fault">包含要使用的預設 SOAP 錯誤值之訊息錯誤。</param>
      <param name="action">SOAP 錯誤的動作。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>使用指定的原因、錯誤碼和動作值來初始化 <see cref="T:System.ServiceModel.FaultException" /> 類別的新執行個體。</summary>
      <param name="reason">SOAP 錯誤的原因。</param>
      <param name="code">SOAP 錯誤的錯誤碼。</param>
      <param name="action">SOAP 錯誤的動作值。</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>取得錯誤訊息的 SOAP 動作值。</summary>
      <returns>錯誤訊息的 SOAP 動作值。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>取得 SOAP 錯誤的錯誤碼。</summary>
      <returns>SOAP 錯誤的錯誤碼。</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>從指定的訊息錯誤、動作和詳細資料型別陣列中傳回 <see cref="T:System.ServiceModel.FaultException" /> 物件。</summary>
      <returns>可擲回的 <see cref="T:System.ServiceModel.FaultException" /> 物件，用來指出已接收的 SOAP 錯誤訊息。</returns>
      <param name="messageFault">包含預設的 SOAP 錯誤資訊之訊息錯誤。</param>
      <param name="action">錯誤動作值。</param>
      <param name="faultDetailTypes">包含錯誤詳細資料的型別陣列。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>從指定的訊息錯誤和詳細資料型別陣列中傳回 <see cref="T:System.ServiceModel.FaultException" /> 物件。</summary>
      <returns>可擲回的 <see cref="T:System.ServiceModel.FaultException" /> 物件，用來指出已接收的 SOAP 錯誤訊息。</returns>
      <param name="messageFault">包含預設的 SOAP 錯誤資訊之訊息錯誤。</param>
      <param name="faultDetailTypes">包含錯誤詳細資料的型別陣列。</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>傳回記憶體中 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件。</summary>
      <returns>傳遞至 <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> 的 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，可建立包含錯誤的訊息。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>取得例外狀況的訊息。</summary>
      <returns>例外狀況訊息。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>取得 SOAP 錯誤的 <see cref="T:System.ServiceModel.FaultReason" />。</summary>
      <returns>SOAP 錯誤的原因。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>使用於用戶端應用程式來快取合約所指定的 SOAP 錯誤。</summary>
      <typeparam name="TDetail">可序列化的錯誤詳細資料類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>使用指定的詳細資料物件和 SOAP 錯誤原因、代碼和動作值來初始化 <see cref="T:System.ServiceModel.FaultException`1" /> 類別的新執行個體。</summary>
      <param name="detail">做為 SOAP 錯誤詳細資料的物件。</param>
      <param name="reason">SOAP 錯誤的原因。</param>
      <param name="code">SOAP 錯誤的錯誤碼。</param>
      <param name="action">SOAP 錯誤的動作。</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>取得包含錯誤狀況詳細資訊的物件。</summary>
      <returns>為 <see cref="T:System.ServiceModel.FaultException`1" /> 物件的類型參數之詳細資料物件。</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>傳回 <see cref="T:System.ServiceModel.FaultException`1" /> 物件的字串。</summary>
      <returns>SOAP 錯誤的字串。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>提供 SOAP 錯誤的文字描述。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>使用指定的錯誤轉譯清單來初始化 <see cref="T:System.ServiceModel.FaultReason" /> 類別的新執行個體。</summary>
      <param name="translations">
        <see cref="T:System.ServiceModel.FaultReasonText" /> 物件的清單；每一個物件說明特定語言中的錯誤。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> 空白或一個或多個項目為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>使用說明特定語言中錯誤的指定文字元素來初始化 <see cref="T:System.ServiceModel.FaultReason" /> 類別的新執行個體。</summary>
      <param name="translation">對應於不同語言中錯誤描述的 <see cref="T:System.ServiceModel.FaultReasonText" /> 物件陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translation" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>使用指定的文字初始化 <see cref="T:System.ServiceModel.FaultReason" /> 類別的新執行個體。</summary>
      <param name="text">發生的錯誤原因描述。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>取得目前執行緒使用的語言之錯誤描述。</summary>
      <returns>指定的語言之錯誤文字。</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>取得指定語言的錯誤描述。</summary>
      <returns>包含轉譯的錯誤描述之 <see cref="T:System.ServiceModel.FaultReasonText" /> 物件。</returns>
      <param name="cultureInfo">指定錯誤描述語言的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>傳回做為字串的錯誤原因。</summary>
      <returns>錯誤的原因。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>取得不同語言的錯誤描述集合。</summary>
      <returns>
        <see cref="T:System.ServiceModel.FaultReasonText" /> 物件的 <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />，其中每一個物件皆以不同語言說明錯誤。</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>表示 SOAP 錯誤原因的文字。</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>初始化使用指定的錯誤文字之 <see cref="T:System.ServiceModel.FaultReasonText" /> 類別的新執行個體。</summary>
      <param name="text">SOAP 錯誤原因的文字。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>初始化使用指定的錯誤文字之 <see cref="T:System.ServiceModel.FaultReasonText" /> 類別的新執行個體。</summary>
      <param name="text">SOAP 錯誤原因的文字。</param>
      <param name="xmlLang">錯誤的語言。</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>傳回值，指出描述的語言是否符合提供的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</summary>
      <returns>如果指定的 <see cref="T:System.Globalization.CultureInfo" /> 符合，則為 true，否則為 false。</returns>
      <param name="cultureInfo">與描述語言比較的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>取得 SOAP 錯誤原因的文字。</summary>
      <returns>SOAP 錯誤原因的文字。</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>取得 SOAP 錯誤原因的語言。</summary>
      <returns>SOAP 錯誤原因的語言。</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>定義用戶端應用程式使用的輸出要求和要求/回覆通道之行為。</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>取得或設定值，指出 <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 嘗試在 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> 內容中呼叫 <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> 物件，或是在該集合非空時擲回例外狀況。</summary>
      <returns>若 Windows Communication Foundation (WCF) 允許叫用互動式通道初始設定式，則為 true，否則為 false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>非同步呼叫開始使用使用者介面來取得認證資訊。</summary>
      <returns>在完成處理時用來回呼的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">完成此方法時所呼叫的方法。</param>
      <param name="state">通道狀態的相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>取得值，指出是否對使用者介面進行呼叫來取得認證資訊。</summary>
      <returns>若呼叫 <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 方法 (或 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 和 <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> 方法)，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>呼叫使用者介面以取得認證資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>完成 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 呼叫後呼叫。</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>這是保留的事件。</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>取得包含傳輸位址的 URI，系統會在用戶端通道上將訊息傳至該位址。</summary>
      <returns>包含傳輸位址的 <see cref="T:System.Uri" />，系統會在通道上將訊息傳至該位址。</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>定義系統中所有通訊導向物件的基本狀態電腦之合約，包含通道、通道管理員、處理站、接聽程式、發送器和服務主機。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>造成通訊物件從其目前狀態立即轉換為已關閉狀態。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始關閉通訊物件的非同步作業。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">可接收非同步關閉作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉作業的相關狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能正常關閉前必須經過的預設逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>使用指定的逾時，開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步關閉作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉作業的相關狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能正常關閉前必須經過的指定逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始開啟通訊物件的非同步作業。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">可接收非同步開啟作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟作業的相關狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態之前，必須經過的預設開啟逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在指定的時間間隔內，開始非同步作業以開啟通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步開啟作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟作業的相關狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態之前，必須經過的指定逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>造成通訊物件從其目前狀態轉換為已關閉狀態。</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能正常關閉前必須經過的預設關閉逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>造成通訊物件從其目前狀態轉換為已關閉狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能正常關閉前必須經過的逾時。</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>發生於通訊物件完成從關閉狀態轉換為已關閉狀態時。</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>發生於通訊物件先進入關閉狀態時。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>完成關閉通訊物件的非同步作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能正常關閉前必須經過的逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>完成開啟通訊物件的非同步作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態之前，必須經過的逾時。</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>發生於通訊物件先進入錯誤狀態時。</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>造成通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態之前，必須經過的預設開啟逾時。</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>造成指定時間間隔內，通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <exception cref="T:System.ServiceModel.CommunicationException">
        <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態並已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態之前，必須經過的指定逾時。</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>發生於通訊物件完成從開啟狀態轉換為已開啟狀態時。</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>發生於通訊物件先進入開啟狀態時。</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>取得通訊導向物件的目前狀態。</summary>
      <returns>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>定義通道的內容控制之介面。</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>取得或設定值，這個值會指示 Windows Phone 先儲存一組訊息再傳輸該訊息。</summary>
      <returns>如果允許批次處理外寄郵件，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>取得通道的輸入工作階段。</summary>
      <returns>通道的 <see cref="T:System.ServiceModel.Channels.IInputSession" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>取得通道的本機端點。</summary>
      <returns>通道的本機 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>取得或設定時段，必須在該時段內完成作業，否則將擲回例外狀況。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，其指定必須完成作業的時段。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>取得通道的相關輸出工作階段 (若有的話)。</summary>
      <returns>如果有輸入工作階段存在，則為 <see cref="T:System.ServiceModel.Channels.IOutputSession" /> 實作，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>取得通道的相關遠端位址。</summary>
      <returns>通道的遠端 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>傳回目前工作階段的識別項 (若有的話)。</summary>
      <returns>目前工作階段識別項 (若有的話)。</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>定義介面來指定通道和通道管理員 (例如，通道處理站) 所使用的通訊逾時。</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>取得通訊物件所叫用之關閉方法逾時的時間間隔。</summary>
      <returns>用來指定等待關閉方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>取得通訊物件所叫用之開啟方法逾時的時間間隔。</summary>
      <returns>用來指定等待開啟方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>取得通訊物件所叫用之接收方法逾時的時間間隔。</summary>
      <returns>用來指定等待接收方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>取得通訊物件所叫用之傳送方法逾時的時間間隔。</summary>
      <returns>用來指定等待傳送方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>啟用物件以參與自訂行為，例如登錄事件，或查看狀態轉換。</summary>
      <typeparam name="T">延伸類別的類型。</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>取得此可延伸物件的延伸物件集合。</summary>
      <returns>延伸物件的 <see cref="T:System.ServiceModel.IExtensionCollection`1" />。</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>讓物件透過彙總延伸其他物件。</summary>
      <typeparam name="T">參與自訂行為的物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>讓延伸物件尋找其已彙總的時間。將延伸加入至 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 內容時呼叫。</summary>
      <param name="owner">彙總此延伸的可延伸物件。</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>讓物件尋找其不再彙總的時間。從 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 內容移除延伸時呼叫。</summary>
      <param name="owner">彙總此延伸的可延伸物件。</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>允許依其類型擷取 <see cref="T:System.ServiceModel.IExtension`1" /> 物件的 <see cref="T:System.ServiceModel.IExtension`1" /> 物件集合。</summary>
      <typeparam name="T">延伸物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>在集合中尋找指定的延伸物件。</summary>
      <returns>發現的延伸物件。</returns>
      <typeparam name="E">延伸物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>在 <paramref name="E" /> 指定的集合中尋找所有延伸物件。</summary>
      <returns>實作指定型別的集合中所有延伸物件集合。</returns>
      <typeparam name="E">延伸物件的型別。</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>表示無效的訊息合約。</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況來初始化 <see cref="T:System.ServiceModel.InvalidMessageContractException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>指定將成員序列化為 SOAP 本文內的元素。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>取得或設定值，指出將成員序列化至 SOAP 本文的位置。</summary>
      <returns>SOAP 本文中的元素位置。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">傳遞至內容設定器的值是負整數。</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>定義對應至 SOAP 訊息之強型別類別。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageContractAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>取得或設定值，指定訊息本文是否具有包裝函式元素。</summary>
      <returns>如果訊息本文具有包裝函式元素，則為 true，否則為 false。預設值為 true。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>取得或設定訊息本文的包裝函式元素名稱。</summary>
      <returns>訊息本文中的包裝函式元素名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空白字串。</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>取得或設定訊息本文包裝函式元素的命名空間。</summary>
      <returns>包裝函式元素命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>宣告 <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> 的基本成員。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>指定對應至此成員的元素名稱。</summary>
      <returns>對應至此成員的元素名稱。此字串必須是有效的 XML 元素名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>指定對應至此成員的元素命名空間。</summary>
      <returns>對應至此成員的元素之命名空間 URI。 </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>處理訊息後，如果不滿意 SOAP 訊息的相關預期標頭，則擲回例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況所夾帶的訊息。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>使用指定的訊息和指出訊息標頭重複或遺失的值，以初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="isDuplicate">若有多個重複的訊息標頭，則為 true，若無訊息標頭，則為 false。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和造成例外狀況之內部例外狀況來初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="innerException">包含造成例外狀況之內部例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的訊息、標頭名稱和命名空間來初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的訊息、標頭名稱和命名空間，以及指出訊息標頭重複或遺失的值，以初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
      <param name="isDuplicate">若有多個重複的訊息標頭，則為 true，若無訊息標頭，則為 false。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>使用指定的訊息、標頭名稱、命名空間、指出訊息標頭重複或遺失的值，以及造成例外狀況的內部例外狀況，以初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
      <param name="isDuplicate">若有多個重複的訊息標頭，則為 true，若無訊息標頭，則為 false。</param>
      <param name="innerException">包含造成例外狀況之內部例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>使用指定的訊息、標頭名稱、命名空間，以及造成例外狀況之內部例外狀況，以初始化 <see cref="T:System.ServiceModel.MessageHeaderException" /> 類別的新執行個體。</summary>
      <param name="message">例外狀況訊息。</param>
      <param name="headerName">訊息標頭的名稱。</param>
      <param name="ns">訊息標頭的命名空間。</param>
      <param name="innerException">包含造成例外狀況之內部例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>取得造成例外狀況的 SOAP 標頭名稱。</summary>
      <returns>SOAP 標頭的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>取得造成例外狀況的 SOAP 標頭之命名空間。</summary>
      <returns>SOAP 標頭的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>取得值，指出有多個訊息標頭或沒有訊息標頭。</summary>
      <returns>若有多個重複的訊息標頭，則為 true，若無訊息標頭，則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>控制要求和回應參數名稱的名稱。不能與 <see cref="T:System.ServiceModel.Channels.Message" /> 或訊息合約一起使用。</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.MessageParameterAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>在 XML 架構 (XSD) 中取得或設定參數的 name 屬性。</summary>
      <returns>XSD 中參數的 name 屬性。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空白字串。</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>提供服務方法的執行內容存取權限。</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>初始化在用戶端應用程式中使用指定 <see cref="T:System.ServiceModel.IContextChannel" /> 的 <see cref="T:System.ServiceModel.OperationContext" /> 類別之新執行個體。</summary>
      <param name="channel">用來建立新用戶端 <see cref="T:System.ServiceModel.OperationContext" /> 的 <see cref="T:System.ServiceModel.IContextChannel" />。</param>
      <exception cref="T:System.ArgumentNullException">通道為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>取得或設定目前執行緒的執行內容。</summary>
      <returns>表示目前方法的訊息和執行內容之 <see cref="T:System.ServiceModel.OperationContext" />。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>取得 <see cref="T:System.ServiceModel.OperationContext" /> 的傳入訊息標頭。</summary>
      <returns>包含傳入訊息標頭的 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>取得 <see cref="T:System.ServiceModel.OperationContext" /> 中傳入訊息的訊息內容。</summary>
      <returns>在傳入訊息上包含訊息內容的 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>取得 <see cref="T:System.ServiceModel.OperationContext" /> 的傳入 SOAP 訊息版本。</summary>
      <returns>傳入訊息的 SOAP 版本。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>此內容適用於系統，且不應由使用者呼叫。</summary>
      <returns>true。</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>發生於作業完成後。</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>取得使用中 <see cref="T:System.ServiceModel.OperationContext" /> 的傳出訊息標頭。</summary>
      <returns>包含使用中 <see cref="T:System.ServiceModel.OperationContext" /> 的傳出訊息標頭之 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>取得使用中 <see cref="T:System.ServiceModel.OperationContext" /> 傳出訊息的訊息內容。</summary>
      <returns>在傳出訊息上包含訊息內容的 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>取得或設定此方法的要求內容實作。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.RequestContext" /> 實作，如果沒有要求內容，則為 null。</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>建立 <see cref="T:System.ServiceModel.OperationContext" /> 物件所在的區塊。</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>初始化 <see cref="T:System.ServiceModel.OperationContextScope" /> 類別之新執行個體，該類別使用指定的 <see cref="T:System.ServiceModel.IContextChannel" /> 來建立範圍的新 <see cref="T:System.ServiceModel.OperationContext" />。</summary>
      <param name="channel">建立新 <see cref="T:System.ServiceModel.OperationContext" /> 的範圍時所使用的通道。</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>初始化 <see cref="T:System.ServiceModel.OperationContextScope" /> 類別的新執行個體，來建立指定 <see cref="T:System.ServiceModel.OperationContext" /> 物件的範圍。</summary>
      <param name="context">使用中 <see cref="T:System.ServiceModel.OperationContext" /> 位於建立的範圍。</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>將原始的 <see cref="T:System.ServiceModel.OperationContext" /> 還原至使用中內容並回收 <see cref="T:System.ServiceModel.OperationContextScope" /> 物件。</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>指出方法來定義 Windows Phone 應用程式中屬於服務合約一部分的作業。</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.OperationContractAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>取得或設定要求訊息的 WS-Addressing 動作。</summary>
      <returns>在產生 WS-Addressing Action 標頭時所使用的動作。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>指出在服務合約中使用 Begin&lt;methodName&gt; 和 End&lt;methodName&gt; 方法配對，以非同步方式實作作業。</summary>
      <returns>如果 Begin&lt;methodName&gt; 方法可與 End&lt;methodName&gt; 方法配對，並可由基礎結構將其做為作業處理，並且在服務介面上將該作業視為非同步方法配對予以實作，則為 true，否則為 false。預設值為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>取得或設定值，指出作業是否傳回回覆訊息。</summary>
      <returns>如果作業不會傳回回覆訊息，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>取得或設定作業的名稱。</summary>
      <returns>作業的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空白字串。</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>取得或設定作業的回覆訊息之 SOAP 動作值。</summary>
      <returns>回覆訊息的 SOAP 動作值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>表示 SOAP 樣式來決定服務的 WSDL 中繼資料之格式化方式。</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>造成 WSDL 表示包含單一元素，表示作業所交換的文件。</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>造成作業所交換的訊息之 WSDL 表示，並包含參數做為遠端程序呼叫。</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>因不符的資料傳送通訊協定而無法與遠端群體通訊，用戶端因此擲回例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ProtocolException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ProtocolException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成例外狀況之內部例外狀況的參考來初始化 <see cref="T:System.ServiceModel.ProtocolException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
      <param name="innerException">造成擲回目前例外狀況的 <see cref="T:System.Exception" />。 </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>超過訊息配額後擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.QuotaExceededException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.QuotaExceededException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成例外狀況之內部例外狀況的參考來初始化 <see cref="T:System.ServiceModel.QuotaExceededException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
      <param name="innerException">造成擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>當伺服器太忙而無法接受訊息時擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成例外狀況之內部例外狀況的參考來初始化 <see cref="T:System.ServiceModel.ServerTooBusyException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
      <param name="innerException">造成擲回目前例外狀況的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>當服務無法啟動時擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ServiceActivationException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.ServiceActivationException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和內部例外狀況來初始化 <see cref="T:System.ServiceModel.ServiceActivationException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況原因的錯誤訊息。</param>
      <param name="innerException">造成擲回目前例外狀況的 <see cref="T:System.Exception" />。 </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>指出在 Windows Phone 用戶端應用程式中定義服務合約的介面或類別。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>取得或設定合約為雙向合約時之回呼合約型別。</summary>
      <returns>指出回呼合約的 <see cref="T:System.Type" />。預設值為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>取得或設定在應用程式設定檔中用來尋找服務的名稱。</summary>
      <returns>在應用程式設定檔中用來尋找服務元素的名稱。預設值為服務實作類別的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空白字串。</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>取得或設定 Web 服務描述語言 (WSDL) 中的 &lt;portType&gt; 元素名稱。</summary>
      <returns>預設值為 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 套用目標的類別或介面之名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">值為空白字串。</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>取得或設定 Web 服務描述語言 (WSDL) 中的 &lt;portType&gt; 元素之命名空間。</summary>
      <returns>&lt;portType&gt; 元素的 WSDL 命名空間。預設值為 "http://tempuri.org"。</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>指定服務在序列化或還原序列化時所使用的已知型別。</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 類別的新執行個體，及指定傳回已知型別的方法名稱。</summary>
      <param name="methodName">傳回已知型別的方法名稱。</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>使用傳回已知型別的方法名稱，和包含傳回已知型別的方法之型別的方法名稱，以初始化 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 類別的新執行個體。</summary>
      <param name="methodName">傳回已知型別的方法名稱。</param>
      <param name="declaringType">可在其物件圖形中使用已知類型的類型。</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>使用指定的已知類型來初始化 <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> 類別的新執行個體。</summary>
      <param name="type">指定可在服務定義的參數或傳回值中使用的已知型別。</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>取得型別，包含傳回已知型別的方法。</summary>
      <returns>傳回已知型別的方法。</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>取得傳回已知類型集合的方法名稱。</summary>
      <returns>傳回已知型別的方法名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>可在物件圖形中包含的已知類型。</summary>
      <returns>已知類型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>包含通道接收的訊息，且無法與任何暫止的要求相關聯。</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>取得造成事件的未知訊息。</summary>
      <returns>引起事件的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>表示封裝位址資訊項目的標頭，該項目可用來識別端點或與端點互動。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>使用指定的值、名稱和命名空間來建立 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 類別的新執行個體。</summary>
      <returns>具有指定的 <paramref name="name" /> 和 <paramref name="ns" /> 之 <see cref="T:System.ServiceModel.Channels.AddressHeader" />，前二者則包含 <paramref name="value" /> 所指定的資訊項目。</returns>
      <param name="name">位址標頭的名稱。</param>
      <param name="ns">位址標頭的命名空間。</param>
      <param name="value">位址標頭的資訊項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null 或 <paramref name="name" />.Length == 0。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用指定的值和命名空間 (可使用指定的格式子來序列化指定物件的資訊項目)，以建立 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 類別的新執行個體。</summary>
      <returns>具有指定的 <paramref name="name" /> 和 <paramref name="ns" /> 之 <see cref="T:System.ServiceModel.Channels.AddressHeader" />，前二者則包含 <paramref name="value" /> 所指定的資訊項目。</returns>
      <param name="name">位址標頭的名稱。</param>
      <param name="ns">位址標頭的命名空間。</param>
      <param name="value">位址標頭的資訊項目。</param>
      <param name="serializer">用來序列化 <paramref name="value" /> 參數中指定物件的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="serializer" /> 為 null 或 <paramref name="name" />.Length == 0。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>判斷指定物件中的資訊項目是否等於目前位址標頭中包含的物件。</summary>
      <returns>如果指定 <paramref name="obj" /> 中的資訊項目等於目前位址標頭所包含的資訊項目，則為 true，否則為 false。尤其是當 <paramref name="obj" /> 為 null 時，則會傳回 false。</returns>
      <param name="obj">與目前位址標頭包含的物件比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>傳回可序列化目前位址標頭物件的 XML 讀取器。</summary>
      <returns>可序列化目前位址標頭物件的 <see cref="T:System.Xml.XmlDictionaryReader" /> 之執行個體。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>提供位址標頭的唯一雜湊程式碼。</summary>
      <returns>目前位址標頭的唯一雜湊程式碼。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>將目前位址標頭的資訊項目還原序列化至指定型別的物件。</summary>
      <returns>類型 <paramref name="T" /> 的類別之執行個體，其欄位和內容則設定為目前位址標頭物件所提供的值。</returns>
      <typeparam name="T">類型 <paramref name="T" /> 的類別，其欄位和內容則設定為目前位址標頭物件所提供的值。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>將目前位址標頭的資訊項目，還原序列化至使用指定格式子來序列化此資訊的指定型別之物件。</summary>
      <returns>類型 <paramref name="T" /> 的類別之執行個體，其欄位和內容則設定為目前位址標頭物件所提供的值。</returns>
      <param name="serializer">用來從目前位址標頭物件還原序列化資訊項目的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">類型 <paramref name="T" /> 的類別，其欄位和內容則設定為目前位址標頭物件所提供的值。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>實作時，取得位址標頭的名稱。</summary>
      <returns>位址標頭的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>實作時，取得位址標頭的命名空間。</summary>
      <returns>位址標頭的命名空間。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>在衍生類別中覆寫時，將位址標頭內容寫入資料流或檔案時叫用。</summary>
      <param name="writer">用來將位址標頭內容寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>在衍生類別中覆寫時，開始將位址標頭內容寫入資料流或檔案時叫用。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>將位址標頭包裝為訊息標頭。</summary>
      <returns>用來包裝目前位址標頭的 <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，將位址標頭寫入資料流或檔案。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" />，將位址標頭寫入資料流或檔案。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>將位址標頭內容寫入資料流或檔案。</summary>
      <param name="writer">用來將位址標頭內容寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>開始將位址標頭內容寫入資料流或檔案。</summary>
      <param name="writer">用來將位址標頭寫入資料流或檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>表示位址標頭的安全執行緒之唯讀集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>從位址標頭的可列舉集來初始化 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> 類別的新執行個體。</summary>
      <param name="addressHeaders">用來初始化集合的 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 物件之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="addressHeaders" /> 參數中的一個位址標頭為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>將集合中的標頭加入至指定訊息的標頭。</summary>
      <param name="message">要加入標頭的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>在集合中尋找包含指定名稱和命名空間的所有位址標頭。</summary>
      <returns>類型 <see cref="T:System.ServiceModel.Channels.AddressHeader" /> 的 <see cref="T:System.Array" />，包含在集合中具有指定名稱和命名空間的所有標頭。</returns>
      <param name="name">要尋找的位址標頭之名稱。</param>
      <param name="ns">要尋找的位址標頭之命名空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>在集合中尋找包含指定名稱和命名空間的第 1 個位址標頭。</summary>
      <returns>集合中包含指定名稱和命名空間的 <see cref="T:System.ServiceModel.Channels.AddressHeader" />。</returns>
      <param name="name">要尋找的位址標頭之名稱。</param>
      <param name="ns">要尋找的位址標頭之命名空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="ns" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">有多個具有指定的 <paramref name="name" /> 和 <paramref name="ns" /> 之標頭。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>與 SOAP 訊息相關，或端點所理解的 WS-Addressing 版本。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>取得位址版本，其指出沒有正在使用的 WS-Addressing 版本。</summary>
      <returns>不使用 WS-Addressing 版本的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>表示目前定址版本的字串。</summary>
      <returns>目前定址版本。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>取得 WS-Addressing 1.0 的相關位址版本之識別項。</summary>
      <returns>可識別 WS-Addressing 1.0 的相關 <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> 之單一執行個體。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>繫結元素，指定用來編碼訊息之 XML 的 .NET 二進位格式。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在為指定的內容建立指定的通道類型之用戶端上，建立通道處理站堆疊。</summary>
      <returns>指定內容的類型 <paramref name="TChannel" /> 之 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />。</returns>
      <param name="context">通道的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站產生的通道型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>建立從目前的物件所初始化的新 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 物件。</summary>
      <returns>其內容值等於目前元素之內容值的 <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>為利用 SOAP 和 WS-Addressing 版本，及目前編碼繫結元素指定的字元編碼之二進位訊息編碼器，建立處理站。</summary>
      <returns>此繫結元素建立的 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>取得或設定使用或預期的 SOAP 訊息和 WS-Addressing 版本。</summary>
      <returns>使用或預期的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
      <exception cref="T:System.ArgumentNullException">設定的值為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">此值集是不受支援的信封版本。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>包含繫結元素，可指定用戶端與服務之間的通訊所使用的通訊協定、傳輸和訊息編碼器。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>使用預設的名稱和命名空間來初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>從服務的指定繫結初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 類別的新執行個體。</summary>
      <param name="name">繫結的 <see cref="P:System.ServiceModel.Channels.Binding.Name" />。</param>
      <param name="ns">繫結的 <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 為 null 或空字串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>在建立指定的通道類型，及滿足物件陣列指定功能的用戶端上，建立通道處理站堆疊。</summary>
      <returns>滿足集合指定的功能之類型 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />。</returns>
      <param name="parameters">指定建立的通道處理站需求之物件陣列。</param>
      <typeparam name="TChannel">通道處理站產生的通道型別。</typeparam>
      <exception cref="T:System.InvalidOperationException">傳輸元素遺失或損壞，或者配置無效或未指定訊息版本。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>在建立指定的通道類型，及滿足繫結參數集合所指定的功能之用戶端上，建立通道處理站堆疊。</summary>
      <returns>滿足集合指定的功能之類型 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />。</returns>
      <param name="parameters">指定建立的通道處理站需求之 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <typeparam name="TChannel">通道處理站產生的通道型別。</typeparam>
      <exception cref="T:System.InvalidOperationException">傳輸元素遺失或損壞，或者配置無效或未指定訊息版本。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>傳回值，指出目前的繫結是否能在滿足物件陣列指定需求的用戶端上，建立通道處理站堆疊。</summary>
      <returns>若可在用戶端上建立指定的通道處理站堆疊，則為 true，否則為 false。</returns>
      <param name="parameters">指定建立的通道處理站需求之物件陣列。</param>
      <typeparam name="TChannel">正在測試處理站的通道類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>傳回值，指出目前的繫結是否能在滿足指定的繫結參數集合之用戶端上建立通道處理站堆疊。</summary>
      <returns>若可在用戶端上建立指定的通道處理站堆疊，則為 true，否則為 false。</returns>
      <param name="parameters">指定建立的通道處理站需求之 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <typeparam name="TChannel">正在測試處理站的通道類型。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>取得或設定時間間隔，經過此間隔將關閉連線，避免傳輸產生例外狀況。</summary>
      <returns>
        <see cref="T:System.Timespan" />，指定在逾時前完成關閉作業的時間長度。預設值為 1 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">值小於零或太大。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>在衍生類別中覆寫時，建立集合來包含目前繫結的繫結元素。</summary>
      <returns>類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 的 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件，包含正確順序的目前繫結物件之繫結元素。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>從繫結堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <param name="parameters">指定建立的通道需求之 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>取得繫結設定的用戶端和服務所使用的訊息版本。</summary>
      <returns>繫結設定的用戶端和服務所使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>取得或設定繫結的名稱。</summary>
      <returns>繫結的名稱。預設名稱為 null。</returns>
      <exception cref="T:System.ArgumentException">設定的值不可為 null 或空字串。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>取得或設定繫結的 XML 命名空間。</summary>
      <returns>繫結的 XML 命名空間。預設值為 "http://tempuri.org/"。</returns>
      <exception cref="T:System.ArgumentNullException">設定的值不可為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>取得或設定時間間隔，經過此間隔將開啟連線，避免傳輸產生例外狀況。</summary>
      <returns>
        <see cref="T:System.Timespan" />，指定在逾時前完成開啟作業的時間長度。預設值為 1 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">值小於零或太大。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>取得或設定時間間隔，以便在未接收應用程式訊息期間，讓連線在該時間間隔內維持閒置，然後再結束。</summary>
      <returns>
        <see cref="T:System.Timespan" />，指定應用程式在逾時前必須接收訊息的時間長度。預設值為 10 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">值小於零或太大。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>在衍生類別中實作時，設定 URI 配置來指定繫結建立的通道處理站所使用的傳輸。</summary>
      <returns>通道所使用的 URI 配置，該通道則由現行繫結建立的處理站所建立。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>取得或設定時間間隔，寫入作業必須在此間隔內完成，避免傳輸產生例外狀況。</summary>
      <returns>
        <see cref="T:System.Timespan" />，指定在逾時前完成寫入作業的時間長度。預設值為 1 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">值小於零或太大。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>提供在 Windows Phone 用戶端上建立通道處理站時所需的位址、繫結、繫結元素和繫結參數相關資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>針對繫結參數的指定繫結和集合來初始化 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 類別的新執行個體。</summary>
      <param name="binding">通道的 <see cref="T:System.ServiceModel.Channels.CustomBinding" />。</param>
      <param name="parameters">通道的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>取得在目前內容中建立的通道之繫結。</summary>
      <returns>目前內容中建立的通道之 <see cref="T:System.ServiceModel.Channels.CustomBinding" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>取得在目前內容中建立的通道之繫結參數集合。</summary>
      <returns>目前內容中建立的通道之 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>為目前通道處理站下的指定型別之通道，建立內部通道處理站。</summary>
      <returns>類型 <see cref="T:System.ServiceModel.Channels.IChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，表示目前通道處理站的內部通道處理站。</returns>
      <typeparam name="TChannel">內部通道處理站產生的 <see cref="T:System.ServiceModel.Channels.IChannel" /> 物件類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>傳回值，指出內部通道處理站是否能產生指定的通道類型。</summary>
      <returns>如果內部通道處理站可產生指定的 <paramref name="TChannel" />，則為 true，否則為 false。</returns>
      <typeparam name="TChannel">內部通道處理站產生的 <see cref="T:System.ServiceModel.Channels.IChannel" /> 物件類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>傳回目前通道建立內容的複本。</summary>
      <returns>做為目前通道建立內容複本的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>從繫結堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T " /> (若出現)，若未出現，則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>取得其他繫結元素用來建構通道堆疊的繫結元素。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />，包含其他繫結元素用來建構通道堆疊的繫結元素。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>繫結的元素，可建立各種通道型別的通道處理站，以處理 Windows Phone 用戶端上的傳出訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>從指定的繫結元素初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>初始化通道處理站，從繫結內容中產生指定型別的通道。</summary>
      <returns>從 <paramref name="context" /> 初始化的類型 <paramref name="TChannel" /> 之 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />。</returns>
      <param name="context">為繫結元素提供內容的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">處理站建立的通道類型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>傳回值，指出繫結元素是否能建立特定通道類型的通道處理站。</summary>
      <returns>若繫結元素可建立型別 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，則為 true，否則為 false。</returns>
      <param name="context">為繫結元素提供內容的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站產生的通道型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>在衍生類別中覆寫時，傳回繫結元素物件的複本。</summary>
      <returns>做為原稿的深度複製品之 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在衍生類別中覆寫時，從繫結堆疊中的適當層傳回要求的具型別物件 (若出現)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <param name="context">繫結元素的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>表示繫結中使用的繫結元素集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>從繫結元素的可列舉集來初始化 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 類別的新執行個體。</summary>
      <param name="elements">用來初始化集合的一般類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 之 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>從繫結元素陣列初始化 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 類別的新執行個體。</summary>
      <param name="elements">用來初始化集合的類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 之 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>將陣列的繫結元素加入至繫結元素的集合。</summary>
      <param name="elements">要加入至集合的類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 之 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>建立繫結元素集合的複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 的複本。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>傳回值，指出繫結元素的指定型別是否屬於繫結元素的集合。</summary>
      <returns>若在集合中包含指定的繫結元素型別，則為 true，否則為 false。</returns>
      <param name="bindingElementType">正在測試是否能內含於集合中的繫結元素類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>傳回繫結元素集合中指定型別的第 1 個項目。</summary>
      <returns>如果找到，則為型別 <see cref="T:System.Type" /> 的項目，如果 <paramref name="T" /> 為值型別，則為 0，如果 <paramref name="T" /> 為參考型別，則為 null。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>從繫結元素 (element) 集合中傳回指定型別的所有項目 (item)。</summary>
      <returns>如果找到，則為型別 <see cref="T:System.Type" /> 之所有項目的 <see cref="T:System.Collections.ObjectModel.Collection`1" />；如果找不到任何一個，則當 <paramref name="T" /> 值類型時為 0，<paramref name="T" /> 為參考型別則為 null。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>在繫結元素集合中的指定位置上插入繫結元素。</summary>
      <param name="index">在集合中插入繫結元素的位置。</param>
      <param name="item">要插入的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>從繫結元素集合中移除指定型別的繫結元素。</summary>
      <returns>已移除型別 <see cref="T:System.Type" /> 的項目。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>從繫結元素集合中移除指定型別的所有繫結元素。</summary>
      <returns>發現類型 <see cref="T:System.Type" /> 的所有項目之 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</returns>
      <typeparam name="T">要尋找之項目的 <see cref="T:System.Type" />。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>取代繫結元素集合中指定索引上的繫結元素。</summary>
      <param name="index">要取代之元素以零為起始的索引。</param>
      <param name="item">指定的 <paramref name="index" /> 上 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 項目之新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>表示繫結參數集合，可將繫結元素使用的資訊儲存至建立處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> 類別的新執行個體。 </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>表示訊息本文的寫入器。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BodyWriter" /> 類別的新執行個體，該執行個體能明確地指出是否要緩衝。</summary>
      <param name="isBuffered">若本文寫入器可多次呼叫，則為 true，否則為 false。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>取得值，指出寫入方法是否能多次呼叫。</summary>
      <returns>若本文寫入器可多次呼叫，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>實作時，在寫入本文內容時提供擴充點。</summary>
      <param name="writer">用來寫出訊息本文的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>寫出訊息本文的內容。</summary>
      <param name="writer">用來寫出訊息本文的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>在衍生類別中實作時，可使用 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 類別管理緩衝區集區。當您具現化此類別，並在記憶體回收對緩衝區集區進行回收時終結，則會建立集區及其緩衝區。每當您需要使用緩衝區時，可從集區取得一個緩衝區，使用緩衝區，並在完成時將緩衝區退回集區。相較於每次需要使用一個緩衝區時，就需要建立和終結緩衝區，此程序的執行速度快得多，並且使用較少的資源。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>釋放管理員中目前快取的緩衝區。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>使用指定的緩衝區集區大小上限，與集區中每一個個別緩衝區的大小上限，建立新的 BufferManager。</summary>
      <returns>使用指定的參數傳回 <see cref="T:System.ServiceModel.Channels.BufferManager" /> 物件。</returns>
      <param name="maxBufferPoolSize">集區的大小上限。</param>
      <param name="maxBufferSize">個別緩衝區的大小上限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> 或 <paramref name="maxBufferSize" /> 小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>將緩衝區退還至集區。</summary>
      <param name="buffer">正在傳回對緩衝區的參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 參考不可為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> 的長度不符集區的緩衝區長度內容。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>從集區取得至少為指定大小的緩衝區。</summary>
      <returns>為緩衝區的要求大小之位元組陣列。</returns>
      <param name="bufferSize">要求的緩衝區大小 (位元組)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> 不能小於零。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>提供自訂通道的基本實作。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelBase" /> 類別的新執行個體。</summary>
      <param name="channelManager">為通道作業 (傳送、接收、開啟和關閉) 提供預設逾時的 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>取得為了讓關閉作業完成而提供的預設時間間隔。</summary>
      <returns>指定關閉作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>取得為了讓開啟作業完成而提供的預設時間間隔。</summary>
      <returns>指定開啟作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>取得必須完成接收作業的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定在逾時前必須完成接收作業的時間長度。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>取得必須完成傳送作業的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定在逾時前必須完成傳送作業的時間長度。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>取得目前通道的相關通道管理員。</summary>
      <returns>目前通道的相關 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>在通訊物件轉換為關閉狀態的期間內叫用。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>取得通訊物件所叫用之關閉方法逾時的時間間隔。</summary>
      <returns>用來指定等待關閉方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>取得通訊物件所叫用之開啟方法逾時的時間間隔。</summary>
      <returns>用來指定等待開啟方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>取得通訊物件所叫用之接收方法逾時的時間間隔。</summary>
      <returns>用來指定等待接收方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>取得通訊物件所叫用之傳送方法逾時的時間間隔。</summary>
      <returns>用來指定等待傳送方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>提供所有自訂通道處理站的一般基本實作。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>使用指定的預設通訊逾時來初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> 類別的新執行個體。</summary>
      <param name="timeouts">為交換訊息時的開啟、傳送、接收和關閉作業指定預設逾時之 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>取得為了讓關閉作業完成而提供的預設時間間隔。</summary>
      <returns>指定關閉作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>取得為了讓開啟作業完成而提供的預設時間間隔。</summary>
      <returns>指定開啟作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>取得必須完成接收作業的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定在逾時前必須完成接收作業的時間長度。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>取得必須完成傳送作業的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定在逾時前必須完成傳送作業的時間長度。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>因叫用同步中止作業而轉換為關閉狀態後，通訊物件上的插入處理。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業來關閉處理站建立的每一個通道。</summary>
      <returns>參考非同步關閉中作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">指定關閉作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">在關閉完成時接收非同步作業通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉中作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>轉換為開啟狀態後 (必須在指定的時間間隔內完成)，通訊物件上的插入處理。</summary>
      <param name="timeout">指定關閉作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>完成非同步作業來關閉處理站開啟的通道。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>在用戶端上為通道處理站提供一般基本實作，建立連線至指定位址的指定型別通道。</summary>
      <typeparam name="TChannel">處理站產生的通道型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>使用指定的預設通訊逾時來初始化 <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> 類別的新執行個體。</summary>
      <param name="timeouts">為交換訊息時的開啟、傳送、接收和關閉作業指定預設逾時之 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>建立含指定端點位址的特定類型通道。</summary>
      <returns>包含指定 <paramref name="address" /> 的類型 <paramref name="TChannel" /> 之通道。</returns>
      <param name="address">通道傳送訊息之目標遠端端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>建立包含指定的傳輸和端點位址之特定類型通道。</summary>
      <returns>包含指定的遠端和傳輸位址之類型 <paramref name="TChannel" /> 通道。</returns>
      <param name="address">通道傳送訊息之目標遠端端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">包含傳輸位址的 <see cref="T:System.Uri" />，系統會在輸出通道上將訊息傳送至該位址。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 或 <paramref name="via" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>中止通道處理站管理的每一個通道。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，在指定的時間間隔內關閉通道處理站相關的所有通道。</summary>
      <returns>參考非同步關閉中作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成關閉中作業的時間長度。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派，可接收關閉中作業的非同步完成通知。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉中作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>在指定的時間間隔內關閉通道處理站相關的所有通道。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成關閉中作業的時間長度。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>在衍生類別中實作時，於建立通道時提供擴充點。</summary>
      <returns>包含指定位址的類型 <paramref name="TChannel" /> 之通道。</returns>
      <param name="address">通道傳送訊息之目標遠端端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">包含傳輸位址的 <see cref="T:System.Uri" />，系統會在輸出通道上將訊息傳送至該位址。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>完成非同步作業，在指定的時間間隔內關閉通道處理站相關的所有通道。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>確認通道處理站已開啟並準備好建立通道。</summary>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
      <exception cref="T:System.InvalidOperationException">目前通道處理站不在 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>提供基本實作來管理通道和接聽程式處理站的相關預設逾時。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>在衍生類別中覆寫時，取得通道必須完成訊息接收的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定在叫用接收方法後，在逾時前通道必須完成訊息接收的時間長度。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>在衍生類別中覆寫時，取得通道必須完成訊息傳送的預設時間間隔。</summary>
      <returns>預設 <see cref="T:System.Timespan" />，指定在叫用傳送方法後，在逾時前通道必須完成訊息傳送的時間長度。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>取得通訊物件所叫用之關閉方法逾時的時間間隔。</summary>
      <returns>用來指定等待關閉方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>取得通訊物件所叫用之開啟方法逾時的時間間隔。</summary>
      <returns>用來指定等待開啟方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>取得通訊物件所叫用之接收方法逾時的時間間隔。</summary>
      <returns>用來指定等待接收方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>取得通訊物件所叫用之傳送方法逾時的時間間隔。</summary>
      <returns>用來指定等待傳送方法逾時之時間間隔的 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>表示通道參數的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> 類別的新執行個體。</summary>
      <param name="channel">其參數位於此集合中的通道。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>取得其參數位於此集合中的通道。</summary>
      <returns>其參數位於此集合中的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>清除參數的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>使用指定的索引將指定的項目插入集合。</summary>
      <param name="index">集合中項目的索引。</param>
      <param name="item">要加入至集合的項目。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>將目前集合中的參數加入至指定通道的 <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />。</summary>
      <param name="innerChannel">用來接收目前集合的參數之通道。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>從集合移除參數。</summary>
      <param name="index">要移除之參數的索引。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>在指定的索引上取代集合中項目。</summary>
      <param name="index">要取代之項目的索引。</param>
      <param name="item">取代項目的值。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>為系統中所有通訊導向物件共用的基本狀態電腦提供一般的基本實作，包含通道和通道處理站。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>使用互斥鎖定來保護指定的狀態轉換來初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
      <param name="mutex">在狀態轉換期間保護類別執行個體的互斥鎖定。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>造成通訊物件從其目前狀態立即轉換為關閉狀態。</summary>
      <exception cref="T:System.InvalidOperationException">未呼叫基底類別 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" /> 方法或基底類別 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" /> 方法。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>開始關閉通訊物件的非同步作業。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">可接收非同步關閉作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉作業的相關狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">分配給作業的預設時間間隔已在作業完成之前超出。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>使用指定的逾時，開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定在逾時前完成關閉作業的時間長度。</param>
      <param name="callback">可接收非同步關閉作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉作業的相關狀態資訊。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>開始關閉通訊物件的非同步作業。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">可接收非同步開啟作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟作業的相關狀態資訊。</param>
      <exception cref="T:System.InvalidOperationException">通訊物件的狀態不是 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" />，因此無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />，因此無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />，因此無法修改。</exception>
      <exception cref="T:System.TimeoutException">分配給作業的預設時間間隔已在作業完成之前超出。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在指定的時間間隔內，開始非同步作業以關閉通訊物件。</summary>
      <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步開啟作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟作業的相關狀態資訊。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
      <exception cref="T:System.InvalidOperationException">通訊物件的狀態不是 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" />，因此無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />，因此無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />，因此無法修改。</exception>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>造成通訊物件從其目前狀態轉換為已關閉狀態。</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.TimeoutException">分配給作業的預設時間間隔已在作業完成之前超出。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>造成在指定的時間間隔內，通訊物件從其目前狀態轉換為已關閉狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定在逾時前完成關閉作業的時間長度。</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> 是在 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中的物件上呼叫。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>發生於將通訊物件轉換為已關閉狀態時。</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>發生於將通訊物件轉換為關閉狀態時。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>在衍生類別中覆寫時，取得為完成關閉作業所提供的預設時間間隔。</summary>
      <returns>指定關閉作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>在衍生類別中覆寫時，取得為完成開啟作業所提供的預設時間間隔。</summary>
      <returns>指定開啟作業必須在逾時之前多久完成的預設 <see cref="T:System.Timespan" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>完成關閉通訊物件的非同步作業。</summary>
      <param name="result">呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>完成開啟通訊物件的非同步作業。</summary>
      <param name="result">呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>造成通訊物件從其目前狀態轉換為錯誤狀態。</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>發生於將通訊物件轉換為錯誤狀態時。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>取得通訊物件的型別。</summary>
      <returns>通訊物件的型別。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>取得值，指出通訊物件是否已處置。</summary>
      <returns>若通訊物件處於已關閉狀態，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>在衍生類別中實作時，因叫用同步中止作業而轉換為關閉狀態後，通訊物件上的插入處理。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在衍生類別中實作時，因叫用非同步關閉作業而導致通訊物件轉換為關閉狀態後之插入處理。</summary>
      <returns>參考非同步關閉中作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">指定關閉作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">可接收非同步關閉中作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步關閉中作業的相關狀態資訊。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在衍生類別中實作時，因叫用同步開啟作業而轉換為開啟狀態後，通訊物件上的插入處理。</summary>
      <returns>參考非同步開啟中作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前可完成開啟中作業的時間長度。</param>
      <param name="callback">可接收非同步開啟中作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步開啟中作業的相關狀態資訊。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>在衍生類別中實作時，因叫用同步關閉作業而轉換為關閉狀態後，通訊物件上的插入處理。</summary>
      <param name="timeout">指定關閉作業必須在逾時之前多久完成的 <see cref="T:System.Timespan" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>在通訊物件轉換為關閉狀態的期間內叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>在通訊物件轉換為關閉狀態的期間內叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>在衍生類別中實作時，在通訊物件關閉時完成非同步作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>在衍生類別中實作時，在通訊物件開啟時完成非同步作業。</summary>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>因叫用同步錯誤作業而轉換為錯誤狀態後，通訊物件上的插入處理。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>在衍生類別上實作時，轉換為開啟狀態後 (必須在指定的時間間隔內完成)，通訊物件上的插入處理。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前可完成開啟中作業的時間長度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>在通訊物件轉換為已開啟狀態時叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>在通訊物件轉換為開啟狀態時叫用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>造成通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <exception cref="T:System.InvalidOperationException">通訊物件的狀態不是 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" />，因此無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />，因此無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />，因此無法修改。</exception>
      <exception cref="T:System.TimeoutException">分配給作業的預設時間間隔已在作業完成之前超出。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>造成指定時間間隔內，通訊物件從已建立狀態轉換為已開啟狀態。</summary>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定在逾時前完成開啟作業的時間長度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小於零。</exception>
      <exception cref="T:System.InvalidOperationException">通訊物件的狀態不是 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" />，因此無法修改。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />，因此無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />，因此無法修改。</exception>
      <exception cref="T:System.TimeoutException">完成作業之前，超過 <paramref name="timeout" /> 為該作業所指定的時間間隔。</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>發生於將通訊物件轉換為已開啟狀態時。</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>發生於將通訊物件轉換為開啟狀態時。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>取得值，指出通訊物件的目前狀態。</summary>
      <returns>指出物件目前狀態的 <see cref="T:System.ServiceModel.CommunicationState" /> 列舉值。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>取得在狀態轉換期間保護類別執行個體的互斥鎖定。</summary>
      <returns>在狀態轉換期間保護類別執行個體的互斥鎖定。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>如果已處置通訊物件則擲回例外狀況。</summary>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>如果 <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> 內容未將通訊物件設定為 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 狀態，則擲回例外狀況。</summary>
      <exception cref="T:System.InvalidOperationException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" />。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態為 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>若通訊物件未處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，則擲回例外狀況。</summary>
      <exception cref="T:System.InvalidOperationException">通訊物件的狀態不是 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" />，因此無法使用。</exception>
      <exception cref="T:System.ObjectDisposedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" />，因此無法修改。</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件的狀態是 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />，因此無法修改。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>從繫結元素清單中定義繫結。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>使用來自完整通道堆疊的繫結元素來初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 的 <see cref="T:System.Collections.Generic.IEnumerable`1" />，包含由上至下順序的通道堆疊之繫結元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>從指定的繫結值初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="binding">可用來初始化自訂繫結的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>從繫結元素陣列初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">可用來初始化自訂繫結的類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 之 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>從包含指定名稱和命名空間的繫結元素陣列來初始化 <see cref="T:System.ServiceModel.Channels.CustomBinding" /> 類別的新執行個體。</summary>
      <param name="name">繫結的名稱。</param>
      <param name="ns">繫結的命名空間。</param>
      <param name="bindingElementsInTopDownChannelStackOrder">可用來初始化自訂繫結的類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 之 <see cref="T:System.Array" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>從自訂繫結中傳回繫結元素的一般集合。</summary>
      <returns>類型 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 的 <see cref="T:System.Collections.Generic.ICollection`1" /> 物件，包含來自自訂繫結的繫結元素。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>從自訂繫結取得繫結元素。</summary>
      <returns>包含來自自訂繫結的繫結元素之 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>取得自訂繫結使用的傳輸之 URI 配置。</summary>
      <returns>自訂繫結使用的傳輸之 URI 配置；或如果沒有傳輸，則為空字串 (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> 為 null)。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>將通道擲回的例外狀況，轉換為符合通道通訊協定的 SOAP 錯誤訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.FaultConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>取得預設的錯誤轉換器。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.FaultConverter" /> 的執行個體。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>在衍生類別中實作時，嘗試建立例外狀況。</summary>
      <returns>若成功轉換錯誤，則為 true，否則為 false。預設值為 false。</returns>
      <param name="message">錯誤 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="fault">錯誤。</param>
      <param name="exception">若成功轉換，會將 SOAP <see cref="T:System.Exception" /> 做為 out 參數傳回。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>在衍生類別中實作時，嘗試在將錯誤轉換為 SOAP 例外狀況後建立錯誤訊息。</summary>
      <returns>若成功建立錯誤訊息，則為 true，否則為 false。預設值為 false。</returns>
      <param name="exception">SOAP 例外狀況。</param>
      <param name="message">傳回錯誤訊息做為 out 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> 傳回 true，但是 <paramref name="message" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>以錯誤檢查包裝 <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />。</summary>
      <returns>若成功轉換錯誤，則為 true，否則為 false。預設值為 false。</returns>
      <param name="message">錯誤訊息。</param>
      <param name="fault">錯誤。</param>
      <param name="exception">若成功轉換，將傳回 SOAP 例外狀況做為 out 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 或 <paramref name="fault" /> 為 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> 傳回 true，但是 <paramref name="exception" /> 為 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> 傳回 false，但是 <paramref name="exception" /> 不是 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>管理在 HTTP 要求和回應中處理 HTTP Cookie 的方式。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>從指定的繫結元素初始化 <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>初始化通道處理站，從繫結內容中產生指定型別的通道。</summary>
      <returns>從 <paramref name="context" /> 初始化的類型 <paramref name="TChannel" /> 之 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />。</returns>
      <param name="context">為繫結元素提供內容的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">處理站建立的通道類型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>傳回目前繫結元素物件的複本。</summary>
      <returns>做為原稿的深度複製品之 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從繫結堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <param name="context">繫結元素的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>提供 HTTP 要求的存取權限，存取和回應透過 HTTP 通訊協定提供給要求使用的其他資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>從 HTTP 要求取得 HTTP 標頭。</summary>
      <returns>在 HTTP 要求中包含 HTTP 標頭的 <see cref="T:System.Net.WebHeaderCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>取得或設定 HTTP 要求的 HTTP 動詞。</summary>
      <returns>HTTP 要求的 HTTP 動詞。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 集為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>取得 <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> 類別相關的訊息內容名稱。</summary>
      <returns>值 "httpRequest"。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>取得或設定 HTTP 要求的查詢字串。</summary>
      <returns>來自 HTTP 要求的查詢字串。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 集為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>取得或設定值，指出是否忽略訊息本文並僅傳送標頭。</summary>
      <returns>如果抑制訊息本文，則為 true，否則為 false。預設值為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>提供 HTTP 回應的存取權限，以存取和回應透過 HTTP 通訊協定提供給要求使用的其他資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>從 HTTP 回應取得 HTTP 標頭。</summary>
      <returns>傳回在 HTTP 回應中包含 HTTP 標頭的 <see cref="T:System.Net.WebHeaderCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>取得 <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> 類別相關的訊息內容名稱。</summary>
      <returns>傳回 “httpResponse”。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>取得或設定此內容附加目標的目前 HTTP 回應之狀態碼。</summary>
      <returns>在 HTTP 回應上傳送的 <see cref="T:System.Net.HttpStatusCode" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">值設定為小於 100 或大於 599。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>取得或設定此內容附加目標的目前 HTTP 回應之狀態碼描述。</summary>
      <returns>為 HTTP 回應傳送的狀態描述。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>表示繫結元素，可用來指定傳輸訊息的 HTTPS 傳輸。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> 類別的執行個體。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>建立可用來建立通道的指定型別之通道處理站。</summary>
      <returns>根據傳輸繫結元素中設定的值，所設定的指定型別之通道處理站。</returns>
      <param name="context">說明建立通道處理站所需的繫結、行為、合約或其他資訊之 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 成員。</param>
      <typeparam name="TChannel">通道的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 不能為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>建立目前繫結元素的複本。</summary>
      <returns>目前繫結元素的複本。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 取得指定的物件。此方法可從基類別取得指定的物件，或從其中一個類別的上階取得。</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>傳回傳輸的 URI 配置。</summary>
      <returns>傳輸的 URI 配置，為 "HTTPS"。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>表示繫結元素，可用來指定傳輸訊息的 HTTP 傳輸。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">
        <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 類別的執行個體。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>建立可用來建立通道的通道處理站。</summary>
      <returns>指定的類型之通道處理站。</returns>
      <param name="context">說明建立通道處理站所需的繫結、行為、合約或其他資訊之 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 成員。</param>
      <typeparam name="TChannel">通道處理站的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 不能為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>決定是否能建立指定型別的通道處理站。</summary>
      <returns>若可建立通道處理站，則為true，否則為 false。</returns>
      <param name="context">要建立的通道之 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">要檢查的通道類型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>建立目前繫結元素的複本。</summary>
      <returns>目前繫結元素的複本。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 取得內容。</summary>
      <returns>來自指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 之內容。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">要取得的屬性。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>取得或設定要使用的緩衝區大小上限。對於緩衝的訊息，此值與 <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" /> 相同。對於資料流訊息，此值是 SOAP 標頭的大小上限，必須在緩衝模式中讀取。</summary>
      <returns>緩衝區的大小上限 (位元組)。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>取得傳輸的 URI 配置。</summary>
      <returns>傳回 <see cref="F:System.Uri.UriSchemeHttp" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>定義所有通道物件必須實作的基本介面。它們需要實作所有通訊物件共用的狀態電腦介面，且實作方法來擷取通道堆疊的物件。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>定義通道處理站產生通道時必須實作的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>定義建立類型特定通道的通道處理站必須實作的介面。</summary>
      <typeparam name="TChannel">通道處理站建立的通道類型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>建立連至指定的端點位址之指定型別的通道。</summary>
      <returns>連至指定的端點位址之類型 <paramref name="TChannel" /> 的通道。</returns>
      <param name="to">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>建立指定型別的通道，該通道連至指定的端點位址及訊息傳送目標的傳輸位址。</summary>
      <returns>連至指定的端點位址和傳輸位址之類型 <paramref name="TChannel" /> 的通道。</returns>
      <param name="to">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
      <param name="via">
        <see cref="T:System.Uri" />，包含傳送訊息的目標傳輸位址。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>定義通道必須實作才能傳送和接收訊息的介面。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>為訊息端點之間的雙向通訊之每一端上實作的工作階段，定義介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業來終止傳出工作階段。</summary>
      <returns>參考非同步傳出工作階段終止的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">一個包含此要求的狀態資訊之物件。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業來終止傳出工作階段，該工作階段包含必須完成作業的指定逾時。</summary>
      <returns>參考非同步傳出工作階段終止的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">指定必須完成作業的時間間隔之 <see cref="T:System.TimeSpan" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">一個包含此要求的狀態資訊之物件。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>終止傳出工作階段，指出不會再從工作階段相關的通道上，從此端點中傳送訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>終止傳出工作階段，指出不會在指定的時間間隔內，再從工作階段的相關通道上之此端點中傳送訊息。</summary>
      <param name="timeout">指定必須完成作業的時間間隔之 <see cref="T:System.TimeSpan" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>完成非同步作業來終止傳出工作階段，指出不會再從工作階段的相關通道上，從此端點中傳送訊息。</summary>
      <param name="result">由其中一種 <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> 方法的呼叫所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>定義介面來建立雙向通道與工作階段的關聯。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>定義介面，用來存取 <see cref="T:System.Net.CookieContainer" /> 的選用執行個體以管理 Cookie 集合。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>取得或設定要使用的 <see cref="T:System.Net.CookieContainer" /> 物件 (若要使用一個物件)。</summary>
      <returns>若要使用容器，則為要使用的 <see cref="T:System.Net.CookieContainer" />；若未使用容器則為 null。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>定義通道要接收訊息所必須實作的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，接收具有相關狀態物件的訊息。</summary>
      <returns>參考非同步訊息接收之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，接收具有相關的指定逾時和狀態物件的訊息。</summary>
      <returns>參考非同步接收作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">用來指定要等待訊息變成可用狀態之時間間隔的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步作業的相關狀態資訊。</param>
      <exception cref="T:System.TimeoutException">完成作業前超過指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，接收具有相關的指定逾時和狀態物件的訊息。</summary>
      <returns>參考非同步接收作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">用來指定要等待訊息變成可用狀態之時間間隔的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步作業的相關狀態資訊。</param>
      <exception cref="T:System.TimeoutException">完成作業前超過指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步等待訊息到達作業，該作業具有相關的指定逾時和狀態物件。</summary>
      <returns>參考非同步作業來等待訊息到達的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">用來指定要等待訊息變成可用狀態之時間間隔的 <see cref="T:System.Timespan" />。</param>
      <param name="callback">接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步作業的相關狀態資訊。</param>
      <exception cref="T:System.TimeoutException">完成作業前超過指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>完成非同步作業以接收訊息。</summary>
      <returns>收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="result">由其中一種 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 方法的呼叫所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>完成指定的非同步作業以接收訊息。</summary>
      <returns>若在經過指定的時間間隔前收到訊息，則為 true，否則為 false。</returns>
      <param name="result">呼叫 <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <param name="message">收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>完成指定的非同步等待訊息作業。</summary>
      <returns>如果訊息在超過 <paramref name="timeout" /> 之前到達，則為 true，否則為 false。</returns>
      <param name="result">用來識別 <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> 作業完成，並從中擷取結束結果的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>取得輸入通道接收訊息的位址。</summary>
      <returns>輸入通道接收訊息的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>傳回接收的訊息 (若有可用的訊息)。若無法使用訊息，則為預設時間間隔的區塊。</summary>
      <returns>收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>傳回接收的訊息 (若有可用的訊息)。若無法使用訊息，則為指定時間間隔的區塊。I</summary>
      <returns>收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定在發生逾時並擲回 <see cref="T:System.TimeoutException" /> 之前，必須完成接收作業的時間長度。</param>
      <exception cref="T:System.TimeoutException">完成作業前超過指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>嘗試在指定的時間間隔內接收訊息。</summary>
      <returns>如果訊息在超過 <paramref name="timeout" /> 之前接收，則為 true，否則為 false。</returns>
      <param name="timeout">由其中一種 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 方法的呼叫所傳回的 <see cref="T:System.IAsyncResult" />。</param>
      <param name="message">收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <exception cref="T:System.TimeoutException">完成作業前超過指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>傳回值，指出訊息是否在指定的時間間隔內到達。</summary>
      <returns>如果訊息在超過 <paramref name="timeout" /> 之前到達，則為 true，否則為 false。</returns>
      <param name="timeout">
        <see cref="T:System.Timespan" /> 指定發生逾時前，等待訊息到達的時間間隔上限。</param>
      <exception cref="T:System.TimeoutException">完成作業前超過指定的 <paramref name="timeout" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時小於零。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>為訊息端點之間的單向通訊之接收端上實作的工作階段，定義介面。 </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>定義介面來建立輸入通道與工作階段的關聯。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>定義可實作的介面，以說明訊息的內容集。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>建立目前的執行個體複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IMessageProperty" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>定義通道要傳送訊息所必須實作的介面。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，將訊息傳輸至輸出通道的目的地。</summary>
      <returns>參考非同步訊息傳輸之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">由應用程式指定的物件，該物件包含與非同步傳送作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，在指定的時間間隔內將訊息傳輸至輸出通道的目的地。</summary>
      <returns>參考非同步傳送作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
      <param name="callback">可接收非同步作業傳送完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">由應用程式指定的物件，該物件包含與非同步傳送作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>完成非同步作業，將訊息傳輸至輸出通道的目的地。</summary>
      <param name="result">呼叫 <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>取得在輸出通道上傳送訊息的服務目的地。</summary>
      <returns>輸出通道傳送訊息目標的服務之 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>將訊息傳輸至輸出通道的目的地。</summary>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>在指定的時間間隔內，在目前的輸出通道上傳送訊息。</summary>
      <param name="message">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，其指定在逾時前必須完成傳送作業的時間長度。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>取得包含傳輸位址的 URI，系統會在輸出通道上將訊息傳送至該位址。</summary>
      <returns>包含傳輸位址的 <see cref="T:System.Uri" />，系統會在輸出通道上將訊息傳送至該位址。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>為訊息端點之間的單向通訊之傳送端上實作的工作階段，定義介面。 </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>定義介面來建立輸出通道與工作階段的關聯。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>定義通道在訊息端點之間的要求-回覆通訊之要求端上，必須實作的合約。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，將要求訊息傳輸到要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">可接收正在傳輸要求訊息之非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 代理人。</param>
      <param name="state">由應用程式指定的物件，該物件包含與正在傳輸要求訊息之非同步作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>開始非同步作業，在指定的時間間隔內，將要求訊息傳輸到要求-回覆訊息交換的回覆端。</summary>
      <returns>參考非同步訊息傳輸之 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" />，指定必須在該期間內接收回應的時間間隔。(在預設值上，請參閱備註。)</param>
      <param name="callback">可接收正在傳輸要求訊息之非同步作業完成通知的 <see cref="T:System.AsyncCallback" /> 代理人。</param>
      <param name="state">由應用程式指定的物件，該物件包含與正在傳輸要求訊息之非同步作業關聯的狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>完成非同步作業，將訊息型回應傳回到傳輸的要求。</summary>
      <returns>回應要求時接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="result">呼叫 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> 方法所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>取得要求通道傳送訊息的目標遠端位址。</summary>
      <returns>要求通道傳送訊息的目標 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>傳送訊息型要求及傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>於指定的時間間隔內，傳送訊息型要求及傳回相互關聯的訊息型回應。</summary>
      <returns>回應要求時接收的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="message">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.TimeSpan" />，指定必須在該期間內接收回應的時間間隔。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>取得傳送要求的目標傳輸位址。</summary>
      <returns>
        <see cref="T:System.Uri" />，包含傳送訊息的目標傳輸位址。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>定義介面來建立要求通道與工作階段的關聯。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>定義介面來建立各方之間的共用內容，以便藉由提供通訊工作階段的識別項來交換訊息。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>取得唯一識別工作階段的識別項。</summary>
      <returns>唯一識別工作階段的識別項。 </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>定義介面來建立通道與特定工作階段類型的關聯。</summary>
      <typeparam name="TSession">通道相關的 <see cref="T:System.ServiceModel.Channels.ISession" /> 之類型。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>取得通道的相關工作階段類型。</summary>
      <returns>用來定義通道相關工作階段的一般參數 <paramref name="TSession" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>指定本機用戶端安全性設定。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>建立此類別之新執行個體，為目前執行個體的複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> 的新複製執行個體。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>取得或設定通訊雙方的系統時鐘之間的許可時間差異上限。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示通訊雙方的系統時鐘之間的許可時間差異上限。預設值為 5 分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">屬性值小於 0。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>取得或設定訊息 NONCE 生效的時間上限。</summary>
      <returns>表示訊息 NONCE 生效的時間上限之 <see cref="T:System.TimeSpan" />。預設值為五分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">屬性值小於 0。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>取得或設定由用戶端傳送時訊息生效的持續時間上限。若在此持續時間後由服務接收訊息，它應該捨棄訊息。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示由用戶端傳送時訊息生效的持續時間上限。預設值為五分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">屬性值小於 0。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>表示分散式環境中端點之間的通訊單元。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.Message" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>關閉 <see cref="T:System.ServiceModel.Channels.Message" /> 並釋放任何資源。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>建立包含版本和動作的訊息。</summary>
      <returns>建立的訊息之 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定訊息使用的 SOAP 版本。</param>
      <param name="action">應如何處理訊息的描述。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> 或 <paramref name="action" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>建立包含指定的版本、動作和本文的訊息。</summary>
      <returns>建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定訊息使用的 SOAP 版本。</param>
      <param name="action">應如何處理訊息的描述。</param>
      <param name="body">訊息的主體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用指定的版本、動作、訊息本文和序列化程式來建立訊息。</summary>
      <returns>建立的訊息之 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定訊息使用的 SOAP 版本。</param>
      <param name="action">應如何處理訊息的描述。</param>
      <param name="body">訊息的主體。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="fault" /> 或 <paramref name="action" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>建立由位元組陣列組成的本文的訊息。</summary>
      <returns>建立的訊息之 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定訊息使用的 SOAP 版本。</param>
      <param name="action">應如何處理訊息的描述。</param>
      <param name="body">類型位元組的 <see cref="T:System.ServiceModel.Channels.BodyWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>建立包含指定的版本、動作和本文的訊息。</summary>
      <returns>建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定訊息使用的 SOAP 版本。</param>
      <param name="action">應如何處理訊息的描述。</param>
      <param name="body">訊息的主體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>使用指定的讀取器、動作和版本來建立訊息。</summary>
      <returns>建立的訊息之 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定訊息使用的 SOAP 版本。</param>
      <param name="action">應如何處理訊息的描述。</param>
      <param name="body">用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>擷取此 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的本文。</summary>
      <returns>包含此訊息的本文之類型 <paramref name="T" /> 的物件。</returns>
      <typeparam name="T">訊息的主體。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用指定的序列化程式來擷取此 <see cref="T:System.ServiceModel.Channels.Message" /> 的本文。</summary>
      <returns>包含此訊息的本文之類型 <paramref name="T" /> 的物件。</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">訊息的主體。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>擷取訊息本文的屬性。</summary>
      <returns>訊息本文的屬性。</returns>
      <param name="localName">XML 節點的本機名稱。對應至此成員的元素名稱。此字串必須是有效的 XML 元素名稱。</param>
      <param name="ns">這個 XML 元素所屬的命名空間。對應至此成員的元素命名空間 URI。系統不會驗證傳輸位址以外的任何 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> 或 <paramref name="ns" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">訊息已關閉。</exception>
      <exception cref="T:System.InvalidOperationException">已複製或讀寫訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>取得存取此訊息的本文內容之 XML 字典讀取器。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已關閉。</exception>
      <exception cref="T:System.InvalidOperationException">訊息空白，或已複製、讀取或寫入。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>在衍生類別中覆寫時，取得訊息的標頭。</summary>
      <returns>表示訊息標頭的 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>傳回值，指出 <see cref="T:System.ServiceModel.Channels.Message" /> 是否已處置。</summary>
      <returns>如果訊息已處置，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>傳回值，指出 <see cref="T:System.ServiceModel.Channels.Message" /> 是否空白。</summary>
      <returns>如果訊息空白，則為 true，否則為 false。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>取得值，指出此訊息是否產生任何 SOAP 錯誤。</summary>
      <returns>如果此訊息產生任何 SOAP 錯誤，則為 true，否則為 false。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>將訊息本文轉換為字串時呼叫。</summary>
      <param name="writer">用來將訊息本文轉換為字串的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>正在關閉訊息時呼叫。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>擷取訊息本文的屬性時呼叫。</summary>
      <returns>訊息本文的屬性。</returns>
      <param name="localName">XML 節點的本機名稱。對應至此成員的元素名稱。此字串必須是有效的 XML 元素名稱。</param>
      <param name="ns">這個 XML 元素所屬的命名空間。對應至此成員的元素命名空間 URI。系統不會驗證傳輸位址以外的任何 URI。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>可擷取用來存取此訊息的本文內容之 XML 字典讀取器時呼叫。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>將訊息本文寫入 XML 檔案時呼叫。</summary>
      <param name="writer">用來將此訊息本文寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>將整個訊息寫入 XML 檔案時呼叫。</summary>
      <param name="writer">用來將此訊息寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>將開始本文寫入 XML 檔案時呼叫。</summary>
      <param name="writer">用來將開始本文寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>將開始信封寫入 XML 檔案時呼叫。</summary>
      <param name="writer">用來將開始信封寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>將開始標頭寫入 XML 檔案時呼叫。</summary>
      <param name="writer">用來將開始標頭寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>在衍生類別中覆寫時，取得訊息的一組處理層級註解。</summary>
      <returns>包含訊息的一組處理層級註解之 <see cref="T:System.ServiceModel.Channels.MessageProperties" />。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>取得此 <see cref="T:System.ServiceModel.Channels.Message" /> 的目前狀態。</summary>
      <returns>包含此 <see cref="T:System.ServiceModel.Channels.Message" /> 的目前狀態之 <see cref="T:System.ServiceModel.Channels.MessageState" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>關閉此訊息使用的所有資源。無法繼承此方法。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>傳回表示目前 <see cref="T:System.ServiceModel.Channels.Message" /> 的字串。</summary>
      <returns>目前 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>在衍生類別中覆寫時，取得訊息的 SOAP 和 WS-Addressing 版本。</summary>
      <returns>表示訊息使用的 SOAP 和 WS-Addressing 版本之 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件。</returns>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入本文元素。</summary>
      <param name="writer">用來寫入本文元素的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 序列化訊息本文。</summary>
      <param name="writer">用來寫入訊息本文的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">訊息已處置。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化本文內容。</summary>
      <param name="writer">用來寫入本文項目的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">訊息已關閉。</exception>
      <exception cref="T:System.InvalidOperationException">已複製或讀寫訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化整個訊息。</summary>
      <param name="writer">用來寫入訊息的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">訊息已關閉。</exception>
      <exception cref="T:System.InvalidOperationException">已複製或讀寫訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 序列化整個訊息。</summary>
      <param name="writer">用來寫入訊息本文的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
      <exception cref="T:System.ObjectDisposedException">訊息已關閉。</exception>
      <exception cref="T:System.InvalidOperationException">已複製或讀寫訊息。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化開始本文。</summary>
      <param name="writer">用來寫入開始本文的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化開始本文。</summary>
      <param name="writer">用來寫入訊息的開始本文之 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化開始信封。</summary>
      <param name="writer">用來寫入開始信封的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>表示儲存整個訊息供後續使用的記憶體緩衝區。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>取得此 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 存取的大約位元組數量。</summary>
      <returns>此 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 存取的大約位元組數量。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>完成緩衝區使用。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>傳回原始訊息的複本。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>取得此緩衝區中儲存的訊息內容類型。</summary>
      <returns>此緩衝區中儲存的訊息內容類型。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>釋放 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。無法繼承此方法。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>將此緩衝區的整個內容寫入指定的 I/O 資料流。</summary>
      <param name="stream">寫入此緩衝區的整個內容的目標 I/O 資料流。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>編碼器是用來將訊息寫入資料流，以及從資料流讀取訊息的元件。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>在衍生類別中覆寫時，取得編碼器使用的 MIME 內容類型。</summary>
      <returns>訊息編碼器支援的內容類型。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T " /> (若出現)，若未出現，則為 null。</returns>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>傳回值，指出訊息編碼器是否支援指定的 message-level content-type 值。</summary>
      <returns>如果支援指定的 message-level content-type，則為 true，否則為 false。</returns>
      <param name="contentType">正在測試 message-level content-type。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>在衍生類別中覆寫時，取得編碼器使用的媒體類型值。</summary>
      <returns>訊息編碼器支援的媒體類型。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>在衍生類別中覆寫時，取得編碼器使用的訊息版本值。</summary>
      <returns>編碼器使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>在衍生類別中覆寫時，從指定的緩衝區讀取訊息。</summary>
      <returns>從指定的緩衝區讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="buffer">類型 <see cref="T:System.Byte" /> 的 <see cref="T:System.ArraySegment`1" />，提供還原序列化的訊息所在的緩衝區。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，用來管理還原序列化的訊息所在的緩衝區。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>如果已在衍生類別中覆寫，請閱讀來自指定之資料流的訊息。</summary>
      <returns>從指定的資料流讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="buffer">類型 <see cref="T:System.Byte" /> 的 <see cref="T:System.ArraySegment`1" />，提供還原序列化的訊息所在的緩衝區。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，用來管理還原序列化的訊息所在的緩衝區。</param>
      <param name="contentType">多用途網際網路郵件延伸標準 (MIME) message-level content-type。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>如果已在衍生類別中覆寫，請閱讀來自指定之資料流的訊息。</summary>
      <returns>從指定的資料流讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="stream">從中讀取訊息的 <see cref="T:System.IO.Stream" /> 物件。</param>
      <param name="maxSizeOfHeaders">可從訊息讀取的標頭之大小上限。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>如果已在衍生類別中覆寫，請閱讀來自指定之資料流的訊息。</summary>
      <returns>從指定的資料流讀取的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="stream">從中讀取訊息的 <see cref="T:System.IO.Stream" /> 物件。</param>
      <param name="maxSizeOfHeaders">可從訊息讀取的標頭之大小上限。</param>
      <param name="contentType">多用途網際網路郵件延伸標準 (MIME) message-level content-type。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>傳回訊息編碼器使用的內容類型。</summary>
      <returns>訊息編碼器使用的內容類型。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>將小於指定大小的訊息寫入位元組陣列緩衝區。</summary>
      <returns>型別 byte 的 <see cref="T:System.ArraySegment`1" />，提供訊息序列化的目標緩衝區。</returns>
      <param name="message">用來寫入訊息緩衝區的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="maxMessageSize">可寫入的訊息大小上限。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，用來管理寫入訊息的目標緩衝區。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>在衍生類別中覆寫時，將小於指定大小的訊息，寫入指定位移上的位元組陣列緩衝區。</summary>
      <returns>型別 byte 的 <see cref="T:System.ArraySegment`1" />，提供訊息序列化的目標緩衝區。</returns>
      <param name="message">用來寫入訊息緩衝區的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="maxMessageSize">可寫入的訊息大小上限。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" />，用來管理寫入訊息的目標緩衝區。</param>
      <param name="messageOffset">從提供緩衝區的位元組陣列之開頭起算的區段位移。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>在衍生類別中覆寫時，將訊息寫入指定的資料流。</summary>
      <param name="message">用來寫入至 <paramref name="stream" /> 的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="stream">寫入 <paramref name="message" /> 的目標 <see cref="T:System.IO.Stream" /> 物件。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>表示處理站的 abstract 基底類別，可產生訊息編碼器，針對各種類型的訊息編碼從資料流中讀取訊息，及將訊息寫入資料流。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>傳回訊息編碼器，可用來關聯工作階段型交換中的訊息。</summary>
      <returns>在訊息的工作階段型交換中使用的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>在衍生類別中覆寫時，取得處理站產生的訊息編碼器。</summary>
      <returns>處理站使用的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>在衍生類別中覆寫時，取得處理站產生的編碼器所使用的訊息版本來編碼訊息。</summary>
      <returns>處理站使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>指定用來編碼訊息的訊息版本之繫結元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>從現有的元素初始化 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> 類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>在衍生類別中覆寫時，建立產生訊息編碼器的處理站。</summary>
      <returns>用來產生訊息編碼器的 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從通道堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>要求的具型別物件 <paramref name="T" /> (若出現)，若未出現，則為 null。</returns>
      <param name="context">目前繫結元素的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>在衍生類別中覆寫時，取得或設定訊息編碼器處理站產生的訊息編碼器可處理的訊息版本。</summary>
      <returns>訊息編碼器處理站產生的編碼器所使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>表示 SOAP 錯誤的記憶體中表示，可傳遞至 <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> 來建立包含錯誤的訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>在衍生類別中呼叫時來初始化 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>取得或設定動作元素的值。</summary>
      <returns>動作元素的值。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>取得 SOAP 錯誤碼。</summary>
      <returns>包含 SOAP 錯誤碼的 <see cref="T:System.ServiceModel.FaultCode" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>傳回新 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，該物件使用指定的 <see cref="T:System.ServiceModel.Channels.Message" />，及訊息緩衝區的指定緩衝區大小上限。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件。</returns>
      <param name="message">用來建立 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件的指定 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="maxBufferSize">訊息緩衝區的指定緩衝區大小上限。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>傳回訊息錯誤的詳細資料物件。</summary>
      <returns>訊息錯誤的詳細資料物件。</returns>
      <typeparam name="T">詳細資料物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>傳回使用指定的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 之詳細資料物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" /> 中包含的詳細資料物件。</returns>
      <param name="serializer">還原序列化詳細資料物件時使用的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">詳細資料物件的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>傳回 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上所放置的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上所放置的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>取得值，指出 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 是否有詳細資料物件。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 具有詳細資料物件，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>取得 SOAP 節點。</summary>
      <returns>SOAP 節點，其包含訊息路徑上的哪個 SOAP 節點導致錯誤的相關資訊。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>在衍生類別上呼叫時，傳回 <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上所放置的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageFault" /> 的詳細資料物件上所放置的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>寫入詳細資料內容之前叫用。</summary>
      <param name="writer">用來撰寫詳細元素的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="version">要寫入的 SOAP 信封版本。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>在 non-abstract 衍生類別中覆寫時，寫入詳細資料元素的內容。</summary>
      <param name="writer">用來撰寫詳細元素的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 和 SOAP 信封版本來寫入開始元素。</summary>
      <param name="writer">用來撰寫詳細元素的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="version">要寫入的 SOAP 信封版本。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>取得 SOAP 錯誤的文字描述。</summary>
      <returns>包含 SOAP 錯誤的文字描述之 <see cref="T:System.ServiceModel.FaultReason" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>表示 SOAP 標頭的內容。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageHeader" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>取得或設定訊息標頭的目標收件者。</summary>
      <returns>訊息標頭的目標收件者。預設值為空白字串 ("")。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="mustUnderstand">指出是否必須理解標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="mustUnderstand">指出是否必須理解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="mustUnderstand">指出是否必須理解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
      <param name="relay">指出是否應該轉送標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用 XmlFormatter，從要序列化的物件建立標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <param name="mustUnderstand">指出是否必須理解標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <param name="mustUnderstand">指出是否必須理解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>建立包含指定資料的新訊息標頭。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />。</returns>
      <param name="name">標頭 XML 元素的本機名稱。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="value">要建立的標頭內容。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <param name="mustUnderstand">指出是否必須理解標頭的值。</param>
      <param name="actor">訊息標頭的目標收件者。</param>
      <param name="relay">指出是否應該轉送標頭的值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>驗證是否支援指定的訊息版本。</summary>
      <returns>如果支援指定的訊息版本，則為 true，否則為 false。</returns>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>取得值，指定此訊息標頭是否包含端點參考的參考參數。</summary>
      <returns>若此訊息標頭包含端點參考的參考參數，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>取得或設定值，指出是否必須根據 SOAP 1.1 或 1.2 規格來理解標頭。</summary>
      <returns>如果必須理解標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭內容時呼叫。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化開始標頭時呼叫。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>取得值，指出是否應該轉送標頭。</summary>
      <returns>如果應該轉送標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>將此訊息標頭轉換為字串。</summary>
      <returns>郵件標頭。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭內容。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 寫入器序列化標頭內容。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的 XML 編寫器序列化開始標頭。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="messageVersion">包含與訊息及其交換關聯的 SOAP 版本之相關資訊。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>表示 SOAP 訊息標頭的相關系統資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>取得或設定訊息標頭的預定收件者。</summary>
      <returns>指出訊息標頭的預定收件者之 URI。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>取得值，指定訊息標頭是否表示端點參考的參考參數。</summary>
      <returns>若訊息標頭表示端點參考的參考參數，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>取得或設定值，指出處理訊息標頭是強制還是選用項。</summary>
      <returns>若需強制處理訊息標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>取得訊息標頭的名稱。</summary>
      <returns>訊息標頭的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>取得訊息標頭的命名空間。</summary>
      <returns>訊息標頭的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>取得或設定值，指出是否可轉送訊息標頭。</summary>
      <returns>若可轉送訊息標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>表示訊息的訊息標頭集合。無法繼承此類別。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>使用指定的訊息標頭集合來初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 類別的新執行個體。</summary>
      <param name="collection">訊息標頭的集合。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>使用指定的訊息版本來初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 類別的新執行個體。</summary>
      <param name="version">訊息的 SOAP 版本。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>使用指定的訊息版本和大小來初始化 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 類別的新執行個體。</summary>
      <param name="version">訊息的 SOAP 版本。</param>
      <param name="initialSize">標頭的大小。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>取得或設定應如何處理訊息的描述。</summary>
      <returns>應如何處理訊息的描述。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>將指定的訊息標頭加入至集合。</summary>
      <param name="header">要加入的訊息標頭。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>從集合中移除所有標頭。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>將指定索引上的標頭內容從指定的訊息複製到此執行個體。</summary>
      <param name="message">訊息。</param>
      <param name="headerIndex">從中複製內容的原始訊息標頭之位置。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>將指定索引上的標頭內容，從指定的訊息標頭集合複製到此執行個體。</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />。</param>
      <param name="headerIndex">從中複製內容的原始訊息標頭之位置。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>將所有標頭的內容從指定的訊息複製到此執行個體。</summary>
      <param name="message">訊息。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>將內容從指定的標頭集合複製到此執行個體。</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>將標頭從此集合複製到陣列 (從陣列的特定索引開始)。</summary>
      <param name="array">一維陣列，為從此執行個體複製的訊息標頭物件之目的地。陣列必須具有以零為起始的索引。</param>
      <param name="index">陣列中開始複製以零為起始的索引。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>取得集合中的訊息標頭數目。</summary>
      <returns>集合中的訊息標頭數目。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>取得或設定應傳送錯誤的目標節點位址。</summary>
      <returns>應傳送錯誤的目標節點之 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>依標頭元素的指定 LocalName 和命名空間 URI，找出此集合中的訊息標頭。</summary>
      <returns>此集合中的訊息標頭索引。</returns>
      <param name="name">標頭 XML 元素的 LocalName。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>依指定的 LocalName、命名空間 URI 和標頭元素的動作，尋找此集合中的訊息標頭。</summary>
      <returns>此集合中的訊息標頭索引。</returns>
      <param name="name">標頭 XML 元素的 LocalName。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="actors">訊息標頭的目標收件者。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>取得或設定傳送訊息的節點位址。</summary>
      <returns>傳送訊息的節點之 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>傳回可逐一查看集合的列舉程式。無法繼承此方法。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>擷取此集合中特定位置處的訊息標頭。</summary>
      <returns>郵件標頭。</returns>
      <param name="index">要取得之標頭以零為起始的索引。</param>
      <typeparam name="T">郵件標頭。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>擷取此集合中特定位置處的訊息標頭。</summary>
      <returns>郵件標頭。</returns>
      <param name="index">要取得之標頭以零為起始的索引。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />。</param>
      <typeparam name="T">郵件標頭。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>依標頭元素的指定 LocalName 和命名空間 URI，找出此集合中的訊息標頭。</summary>
      <returns>郵件標頭。</returns>
      <param name="name">標頭 XML 元素的 LocalName。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <typeparam name="T">郵件標頭。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>依指定的 LocalName、命名空間 URI 和序列化程式，擷取此集合中的訊息標頭。</summary>
      <returns>郵件標頭。</returns>
      <param name="name">標頭 XML 元素的 LocalName。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />，</param>
      <typeparam name="T">郵件標頭。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>依標頭元素的指定 LocalName、命名空間 URI 和動作項目，擷取此集合中的訊息標頭。</summary>
      <returns>郵件標頭。</returns>
      <param name="name">標頭 XML 元素的 LocalName。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
      <param name="actors">訊息標頭的目標收件者。</param>
      <typeparam name="T">郵件標頭。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>取得可在集合的指定位置處存取訊息標頭的 XML 字典讀取器。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
      <param name="headerIndex">要取得之標頭以零為起始的索引。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>驗證是否已適當解譯和處理以 MustUnderstand 標示的所有訊息標頭。</summary>
      <returns>如果 <paramref name="actors" /> 指定的收件者已適當解譯和處理以 MustUnderstand 標示的所有訊息標頭，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>驗證指定的收件者是否已適當解譯和處理以 MustUnderstand 標示的所有訊息標頭。</summary>
      <returns>如果 <paramref name="actors" /> 指定的收件者已適當解譯和處理以 MustUnderstand 標示的所有訊息標頭，則為 true，否則為 false。</returns>
      <param name="actors">訊息標頭的目標收件者。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>將訊息標頭插入指定索引處的集合。</summary>
      <param name="headerIndex">應插入 <paramref name="header" /> 以零為起始的索引。</param>
      <param name="header">要插入的訊息標頭。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>擷取指定索引處的標頭。</summary>
      <returns>集合中的 <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />。如果 <paramref name="index" /> 大於或等於清單中的標頭數目，則傳回 null。</returns>
      <param name="index">標頭清單以零為起始的索引。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>取得或設定訊息的唯一識別項。</summary>
      <returns>訊息的唯一識別項。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>取得訊息的 SOAP 版本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>取得此訊息相關的訊息之識別項。</summary>
      <returns>此訊息相關的訊息之識別項。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>從集合中移除包含指定名稱和命名空間的所有標頭。</summary>
      <param name="name">標頭 XML 元素的 LocalName。</param>
      <param name="ns">標頭 XML 元素的命名空間 URI。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>從集合中移除指定索引處的訊息標頭。</summary>
      <param name="headerIndex">要移除之標頭以零為起始的索引。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>取得或設定應該傳送要求回覆的目標節點位址。</summary>
      <returns>應傳送要求回覆的目標節點之 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>設定標頭的動作元素。</summary>
      <param name="action">應如何處理訊息的描述。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可逐一查看集合的列舉程式。無法繼承此方法。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>取得或設定訊息的目的地端點。</summary>
      <returns>包含訊息的目的地端點之 URI。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 XML 寫入器，序列化指定位置的標頭。</summary>
      <param name="headerIndex">要序列化的標頭以零為起始的索引。</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>使用指定的 XML 寫入器，序列化指定位置的標頭。</summary>
      <param name="headerIndex">要序列化的標頭以零為起始的索引。</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 XML 寫入器序列化指定的標頭內容。</summary>
      <param name="headerIndex">要序列化的標頭以零為起始的索引。</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>使用指定的 XML 寫入器序列化指定的標頭內容。</summary>
      <param name="headerIndex">要序列化的標頭以零為起始的索引。</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>使用指定的 XML 編寫器序列化開始標頭。</summary>
      <param name="headerIndex">要序列化的標頭以零為起始的索引。</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>使用指定的 XML 編寫器序列化開始標頭。</summary>
      <param name="headerIndex">要序列化的標頭以零為起始的索引。</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>表示訊息的內容集。無法繼承此類別。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>使用預設內容初始化 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 類別的新執行個體。</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>將包含指定名稱和內容的元素加入至 <see cref="T:System.ServiceModel.Channels.MessageProperties" />。無法繼承此方法。</summary>
      <param name="name">要加入的元素名稱。</param>
      <param name="property">要加入的元素值。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>取得或設定值，指定是否先儲存此訊息再傳輸該訊息。</summary>
      <returns>如果允許批次處理外寄郵件，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>從 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 移除所有元素。無法繼承此方法。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>決定 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否包含特定名稱。無法繼承此方法。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含具有指定之 <paramref name="name" /> 的元素，則為 true，否則為 false。</returns>
      <param name="name">要在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中尋找的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>將指定 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 的內容複製到此執行個體。</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>取得 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中的內容總數。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中的內容總數。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>釋放 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 所使用的所有資源。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>取得將訊息寫入資料流，以及從資料流讀取訊息的編碼器。</summary>
      <returns>可將訊息寫入資料流，以及從資料流讀取訊息的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>取得值，指出 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 大小是否固定。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 有固定大小，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>取得值，指出此內容集是否為唯讀。</summary>
      <returns>如果此屬性集是唯讀狀態，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>擷取指定索引處的內容。</summary>
      <returns>含指定之 <paramref name="name" /> 的屬性，如果屬性不存在，則為 null。</returns>
      <param name="name">要從集合取得的內容名稱。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>取得在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中包含索引鍵的 <see cref="T:System.Collections.ICollection" />。</summary>
      <returns>在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中包含索引鍵的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>從 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 移除包含指定名稱的元素。無法繼承此方法。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含具有指定之 <paramref name="name" /> 的元素且可移除，則為 true，否則為 false。</returns>
      <param name="name">要移除的元素名稱。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>將包含指定名稱和內容的元素加入至 <see cref="T:System.ServiceModel.Channels.MessageProperties" />。無法繼承此方法。</summary>
      <param name="pair">索引鍵/值組，包含要加入之元素的名稱和值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>決定 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否包含特定名稱。無法繼承此方法。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含具有指定之 <paramref name="pair" /> 中名稱和值的元素，則為 true，否則為 false。</returns>
      <param name="pair">索引鍵/值組，包含要在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中尋找之元素的名稱和值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>從指定的索引處開始，將指定之 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 的內容複製到陣列。無法繼承此方法。</summary>
      <param name="array">要複製集合的目的地 <see cref="T:System.Array" />。</param>
      <param name="index">要開始的索引處。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>從 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 移除包含指定名稱的元素。無法繼承此方法。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含具有 <paramref name="pair" /> 參數中指定之名稱和值的元素且可移除，則為 true，否則為 false。</returns>
      <param name="pair">索引鍵/值組，包含要移除之元素的名稱和值。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>傳回可逐一查看集合的列舉程式。無法繼承此方法。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回可逐一查看集合的列舉程式。無法繼承此方法。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>決定 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 是否包含特定名稱，並擷取其值。無法繼承此方法。</summary>
      <returns>如果 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 包含具有指定之 <paramref name="name" /> 的元素，則為 true，否則為 false。</returns>
      <param name="name">要尋找的元素名稱。</param>
      <param name="value">找到的元素值。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>取得 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中的值。</summary>
      <returns>在 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 中包含值的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>取得或設定用來傳送訊息的傳輸位址。</summary>
      <returns>包含用來傳送訊息的傳輸位址之 URI。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>指定訊息的狀態。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>訊息已建立。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>正在讀取訊息。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>訊息已寫入。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>訊息已複製。</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>訊息已關閉並且無法再存取。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>指定訊息的相關 SOAP 和 WS-Addressing 版本及其交換。</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>取得目前訊息版本的相關 WS-Addressing 版本。</summary>
      <returns>目前訊息版本的相關 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>使用 WS-Addressing 1.0 及指定的 SOAP 版本來建立訊息版本物件。</summary>
      <returns>包含指定的信封版本之 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
      <param name="envelopeVersion">指出 SOAP 版本的 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>建立包含指定的 WS-Addressing 和 SOAP 版本的訊息版本物件。</summary>
      <returns>使用指定的 WS-Addressing 和 SOAP 版本之 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
      <param name="envelopeVersion">指出 SOAP 版本的 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</param>
      <param name="addressingVersion">指出 WS-Addressing 版本的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>取得 Windows Phone 使用的預設訊息版本。</summary>
      <returns>使用 SOAP 1.2 和 WS-Addressing 1.0 版的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>取得目前訊息版本的相關 SOAP 版本。</summary>
      <returns>訊息版本物件的相關 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>傳回值，指出目前的訊息版本是否等於指定的物件。</summary>
      <returns>如果指定的物件等於目前的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，則為 true，否則為 false。</returns>
      <param name="obj">與目前的訊息版本進行比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>取得目前訊息版本的雜湊程式碼。</summary>
      <returns>目前 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 的唯一雜湊程式碼。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>取得不使用 SOAP 或 WS-Addressing 的訊息版本。</summary>
      <returns>不使用 SOAP 或 WS-Addressing 的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>取得使用 SOAP 1.1 的訊息版本。</summary>
      <returns>使用 SOAP 1.1 但不使用 WS-Addressing 版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>取得使用 WS-Addressing 1.0 和 SOAP 1.2 的訊息版本。</summary>
      <returns>使用 WS-Addressing 1.0 和 SOAP 1.2 版的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>目前的訊息版本。</summary>
      <returns>目前 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>提供與傳入要求相關聯的回覆。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.RequestContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>在衍生類別中覆寫時，中止處理內容的相關要求。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>在衍生類別中覆寫時，開始非同步作業來回覆目前內容的相關要求。</summary>
      <returns>參考非同步回覆作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">包含要求的連入 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="callback">接收非同步回覆作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步回覆作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在衍生類別中覆寫時，於指定的時間間隔內，開始非同步作業來回覆目前內容的相關要求。</summary>
      <returns>參考非同步回覆作業的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">包含要求的連入 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定可用的要求回覆之等待時間間隔。</param>
      <param name="callback">接收非同步回覆作業完成通知的 <see cref="T:System.AsyncCallback" /> 委派。</param>
      <param name="state">應用程式指定的物件，包含非同步回覆作業的相關狀態資訊。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>在衍生類別中覆寫時，關閉回覆目前內容的相關要求內容之作業。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>在衍生類別中覆寫時，於指定的時間間隔內，關閉回覆目前內容的相關要求內容之作業。</summary>
      <param name="timeout">指定時間間隔的 <see cref="T:System.Timespan" />，目前內容的相關回覆作業必須在該間隔內關閉。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>釋放和內容相關聯的資源。</summary>
      <param name="disposing">true 表示同時釋放 Managed 和 Unmanaged 資源，false 表示僅釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>在衍生類別中覆寫時，完成回覆要求訊息的非同步作業。</summary>
      <param name="result">由其中一種 <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> 方法的呼叫所傳回的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>在衍生類別中覆寫時，回覆要求訊息。</summary>
      <param name="message">包含要求的連入 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>在衍生類別中覆寫時，在指定的時間間隔內回覆要求訊息。</summary>
      <param name="message">包含要求的連入 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
      <param name="timeout">
        <see cref="T:System.Timespan" />，指定要求回覆之等待時間間隔。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>在衍生類別中覆寫時，取得包含要求的訊息。</summary>
      <returns>包含要求的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>釋放內容相關的受管理及不受管理資源。</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>abstract 類別，當實作時，可表示支援通道 SOAP 訊息安全性的繫結元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>根據傳入的 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 設定和繫結內容建立通道處理站。建立的通道處理站是 SOAP 訊息安全性通道處理站，其內部具有對應於繫結內容的通道處理站參考 (包含傳輸通道處理站)。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" />。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">不支援類型 <paramref name="TChannel" /> 的通道。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在衍生類別中實作時，建立指定型別的通道處理站。</summary>
      <returns>建立類型 <paramref name="TChannel" /> 的通道之 <see cref="T:System.ServiceModel.Channels.IChannelFactory" />。</returns>
      <param name="context">通道處理站的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">不支援類型 <paramref name="TChannel" /> 的通道。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>取得值，指出是否能建立指定型別的通道處理站。</summary>
      <returns>若可建立型別 <paramref name="TChannel" /> 的通道處理站，則為 true，否則為 false。</returns>
      <param name="context">通道處理站的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站的型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>根據做為 SOAP 訊息一部分傳送的使用者名稱和密碼，建立為用戶端驗證設定的安全性繫結元素。繫結元素需要傳輸提供伺服器驗證和訊息保護 (例如，HTTPS)。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>使用指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 取得指定的物件。</summary>
      <returns>來自 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 的指定物件，如果找不到物件，則為 null。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">要取得的屬性。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>取得或設定值，指出每一則訊息是否包含時間戳記。</summary>
      <returns>如果每一則訊息皆包含時間戳記，則為 true，否則為 false。預設值為 true。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>取得用戶端使用的本機安全性設定所特有的繫結內容。</summary>
      <returns>包含本機用戶端安全性設定的 <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>指定使用於文字型 SOAP 訊息的字元編碼和訊息版本之繫結元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>使用指定的訊息版本和編碼來初始化 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 類別的新執行個體。</summary>
      <param name="messageVersion">使用於訊息版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</param>
      <param name="writeEncoding">用來格式化訊息字元的 <see cref="T:System.Text.Encoding" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> 或 <paramref name="writeEncoding" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> 值無效。</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在為指定的內容建立指定的通道類型之用戶端上，建立通道處理站堆疊。</summary>
      <returns>指定內容的類型 <paramref name="TChannel" /> 之 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />。</returns>
      <param name="context">通道的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道處理站產生的通道型別。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>建立從目前的物件所初始化的新 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 物件。</summary>
      <returns>其內容值等於目前元素之內容值的 <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> 物件。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>為利用目前的編碼繫結元素所指定的訊息版本和字元編碼之文字訊息編碼器，建立處理站。</summary>
      <returns>此處理站建立的 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從繫結元素堆疊中的適當層傳回要求的具型別物件 (若有的話)。</summary>
      <returns>若出現則為要求的具型別物件 T，若未出現則為 null 參考 (Visual Basic 中為 Nothing)。</returns>
      <param name="context">繫結元素的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">方法正在查詢的具型別物件。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>取得或設定用來格式化文字訊息的 SOAP 和 WS-Addressing 版本。</summary>
      <returns>用來格式化訊息的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。預設值為 <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>取得或設定用來格式化文字訊息中字元的編碼。</summary>
      <returns>用來格式化文字訊息中字元的 <see cref="T:System.Text.Encoding" />。預設文字編碼為 UTF-8 格式。</returns>
      <exception cref="T:System.ArgumentNullException">值為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> 值無效。</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>表示傳輸繫結元素的 abstract 基底類別。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>建立此類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>從現有的執行個體建立此類別的新執行個體。</summary>
      <param name="elementToBeCloned">要複製的 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>從指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 取得內容。</summary>
      <returns>來自指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 之內容。</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="T">要取得的屬性。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 不能為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>取得或設定值，指出是否需要訊息的手動定址。</summary>
      <returns>如果需要訊息的手動定址，則為 true，否則為  false。預設值為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>取得和設定允許接收的訊息大小上限。</summary>
      <returns>允許接收的訊息大小上限。預設值為 65,536 位元組。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 集不可為負值。</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>取得傳輸的 URI 配置。</summary>
      <returns>傳回傳輸的 URI 配置，隨著實作此方法的衍生類別而異。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>表示支援混合模式安全性的自訂繫結元素 (例如透過安全傳輸的最佳化訊息安全性)。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>建立 <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>建立從目前的類別所初始化的新 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 物件。</summary>
      <returns>其內容值等於目前執行個體之內容值的 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 物件。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>可讓使用者設定用戶端認證，該認證可針對服務驗證用戶端。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>建立現有 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 的複本。</summary>
      <param name="other">要複製的 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>建立此 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體的新複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體。</returns>
      <exception cref="T:System.NotImplementedException">目前的認證是 null 或型別不正確。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>建立此 <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體的新複本。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> 執行個體。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>取得可用來設定使用者名稱和密碼的認證物件，供用戶端向服務驗證其本身。</summary>
      <returns>表示用戶端認證的目前使用者名稱和密碼的 <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>說明合約，該合約指定與外界通訊的端點。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>使用指定的名稱初始化 <see cref="T:System.ServiceModel.Description.ContractDescription" /> 類別的新執行個體。</summary>
      <param name="name">合約的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 是空的。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>使用指定的命名空間完整名稱來初始化 <see cref="T:System.ServiceModel.Description.ContractDescription" /> 類別的新執行個體。</summary>
      <param name="name">合約的名稱。</param>
      <param name="ns">包含合約名稱的命名空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 是空的。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>取得或設定合約描述指定的回呼合約型別。</summary>
      <returns>合約描述指定的回呼合約之 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>取得或設定合約描述的組態名稱。</summary>
      <returns>合約的組態名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>取得或設定合約描述指定的合約型別。</summary>
      <returns>合約描述指定的合約 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>取得或設定合約的名稱。</summary>
      <returns>合約描述的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>取得或設定合約的命名空間。</summary>
      <returns>合約的命名空間。</returns>
      <exception cref="T:System.ArgumentNullException">設定的值為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>取得合約的相關作業描述集合。</summary>
      <returns>包含合約描述的相關作業描述之 <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>表示 SOAP 錯誤。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>使用指定的動作值初始化 <see cref="T:System.ServiceModel.Description.FaultDescription" /> 類別的新執行個體。</summary>
      <param name="action">SOAP 錯誤訊息的動作。</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>取得 SOAP 錯誤訊息中的動作值。</summary>
      <returns>SOAP 錯誤的動作。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>取得或設定 SOAP 錯誤詳細資料的類型。</summary>
      <returns>可序列化詳細資料物件的型別。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>取得或設定 SOAP 錯誤的名稱。</summary>
      <returns>SOAP 錯誤的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>取得或設定 SOAP 錯誤的命名空間。</summary>
      <returns>SOAP 錯誤的命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>
        <see cref="T:System.ServiceModel.Description.FaultDescription" /> 物件的集合，可用來取得合約中 SOAP 錯誤的相關資訊。</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>表示 SOAP 訊息的本文。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.MessageBodyDescription" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>取得 SOAP 訊息本文的組件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />，包含可偵測或修改的 SOAP 訊息本文之組件。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>取得或設定包含傳回值之 SOAP 訊息部分。</summary>
      <returns>傳回值 (若有的話)。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>取得或設定 SOAP 本文內部的包裝函式元素名稱 (若有的話)。</summary>
      <returns>若有的話，則為包裝函式元素的名稱，否則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>取得或設定 SOAP 本文中的包裝函式元素之命名空間 (若有的話)。</summary>
      <returns>若有的話，則為包裝函式元素的命名空間。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>表示訊息的描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>使用指定的動作和指示來初始化 <see cref="T:System.ServiceModel.Description.MessageDescription" /> 類別的新執行個體。</summary>
      <param name="action">識別訊息目標之 SOAP 訊息的動作參數。</param>
      <param name="direction">如果訊息是傳入訊息為 <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />，如果訊息是傳出訊息則為 <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> 不是 <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> 或 <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>取得識別訊息目標之 SOAP 訊息的動作參數。</summary>
      <returns>動作 URI。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>取得 SOAP 訊息的本文。</summary>
      <returns>包含訊息本文的 <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>取得指示，指出訊息是傳入或傳出。</summary>
      <returns>指出訊息是來自服務的傳入或傳出之 <see cref="T:System.ServiceModel.Description.MessageDirection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>取得或設定型別，識別訊息合約的類型。</summary>
      <returns>訊息合約的類型。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>提供集合，用來儲存合約的作業所包含的訊息描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>為包含指定動作的訊息尋找和傳回集合中的第 1 個訊息描述。</summary>
      <returns>集合的第一個 <see cref="T:System.ServiceModel.Description.MessageDescription" /> (其訊息具有指定的 <paramref name="action" />)；若找不到符合的 <paramref name="action" />，則為 null。</returns>
      <param name="action">找到的訊息動作。</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>尋找和傳回其訊息具有指定動作的集合中之所有訊息描述。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />，包含具有指定 <paramref name="action" /> 的訊息所屬之目前集合的集合訊息描述。若找不到符合的 <see cref="T:System.ServiceModel.Description.MessageDescription" /> 物件，則傳回空集合。</returns>
      <param name="action">找到的訊息動作。</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>指定訊息的方向。</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>訊息是傳入。</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>訊息是傳出。</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>表示 SOAP 訊息部分的描述。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 類別的新執行個體。</summary>
      <param name="name">訊息部分的 XML 名稱。</param>
      <param name="ns">訊息部分的 XML 命名空間。</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>取得或設定訊息部分的索引。</summary>
      <returns>訊息部分的索引。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>取得或設定訊息部分的成員資訊。</summary>
      <returns>此訊息部分的成員資訊。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>取得訊息部分的名稱。</summary>
      <returns>訊息部分的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>取得訊息部分的命名空間。</summary>
      <returns>訊息部分的命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>取得或設定訊息部分的類型。</summary>
      <returns>訊息部分的類型。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>表示 <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>在衍生類別中呼叫時，傳回 <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 的 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> 的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
      <param name="item">要尋找的 <see cref="T:System.ServiceModel.Description.MessagePartDescription" />。</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>針對其交換的訊息來分類作業的合約。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>使用指定的名稱和合約描述來初始化 <see cref="T:System.ServiceModel.Description.OperationDescription" /> 類別的新執行個體。</summary>
      <param name="name">作業描述的名稱。</param>
      <param name="declaringContract">用來初始化作業描述的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="declaringContract" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> 是空的。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>取得或設定作業的開始方法。</summary>
      <returns>提供屬性和方法之中繼資料存取的 <see cref="T:System.Reflection.MethodInfo" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>取得或設定作業所屬的合約。</summary>
      <returns>作業的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 集為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>取得或設定作業的結束方法。</summary>
      <returns>提供屬性和方法之中繼資料存取的 <see cref="T:System.Reflection.MethodInfo" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>取得作業描述的相關錯誤描述集合。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />，其包含作業描述的相關錯誤之詳細資料。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>取得值，指出作業是否傳回回覆訊息。</summary>
      <returns>若此方法接收要求訊息並且未傳回回覆訊息，則為 true，否則為 false。預設值為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>取得作業描述的相關已知類型。</summary>
      <returns>作業描述的相關已知類型集合。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>取得或設定組成作業的訊息描述。</summary>
      <returns>包含組成作業的訊息描述之 <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>取得或設定作業描述的名稱。</summary>
      <returns>作業描述的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>取得或設定作業描述的服務同步方法。</summary>
      <returns>提供屬性和方法之中繼資料存取的 <see cref="T:System.Reflection.MethodInfo" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>表示包含作業描述的集合。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>從作業描述集合中，傳回包含指定名稱的作業描述之第 1 個項目。</summary>
      <returns>第一次出現之含有已指定名稱的 <see cref="T:System.ServiceModel.Description.OperationDescription" />，如果沒有任何含有已指定名稱的作業，則為 null。</returns>
      <param name="name">作業的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>從集合中傳回具有指定名稱的所有作業描述集合。</summary>
      <returns>類型 <see cref="T:System.ServiceModel.Description.OperationDescription" /> 的 <see cref="T:System.Collections.ObjectModel.Collection`1" />，包含具有指定名稱的所有作業描述。</returns>
      <param name="name">作業的名稱。</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>將元素插入指定索引上的作業描述集合。</summary>
      <param name="index">應插入 <paramref name="item" /> 以零為起始的索引。</param>
      <param name="item">要插入的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>取代指定索引處集合中的作業描述元素。</summary>
      <param name="index">應插入 <paramref name="item" /> 以零為起始的索引。</param>
      <param name="item">要插入的 <see cref="T:System.ServiceModel.Description.OperationDescription" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 為 null。</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>表示允許服務用戶端尋找及與服務通訊之服務端點。</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>為指定的合約初始化 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 類別的新執行個體。</summary>
      <param name="contract">服務端點的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>使用指定的合約、繫結和位址來初始化 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 類別的新執行個體。</summary>
      <param name="contract">服務端點的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</param>
      <param name="binding">指定服務端點與外界的通訊方式之 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
      <param name="address">服務端點的 <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>取得或設定服務端點的端點位址。</summary>
      <returns>用來指定服務端點位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>取得或設定服務端點的繫結。</summary>
      <returns>服務端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>取得服務端點的合約。</summary>
      <returns>用來指定服務端點合約的 <see cref="T:System.ServiceModel.Description.ContractDescription" />。</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>取得或設定服務端點的名稱。</summary>
      <returns>服務端點的名稱。預設值為繫結名稱和合約描述名稱的串連。例如，<see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>控制與作業關聯之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的執行階段行為。</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>用來修改或延伸用戶端物件或用戶端通道物件中的特定合約作業之執行行為。無法繼承此類別。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>使用指定的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />、名稱和動作值初始化 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 類別的新執行個體。</summary>
      <param name="parent">包含的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 物件。</param>
      <param name="name">作業的名稱。</param>
      <param name="action">作業的動作。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>使用指定的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />、名稱、動作和回覆動作值初始化 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 類別的新執行個體。</summary>
      <param name="parent">包含的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 物件。</param>
      <param name="name">作業的名稱。</param>
      <param name="action">作業的動作。</param>
      <param name="replyAction">回覆訊息的動作。</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> 或 <paramref name="name" /> 為 null。</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>取得作業的動作。</summary>
      <returns>作業的動作。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>取得或設定非同步作業的相關方法。</summary>
      <returns>表示處理非同步方法配對之開始部分的方法之 <see cref="T:System.Reflection.MethodInfo" /> 物件；若作業不屬於非同步方法配對，則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>取得或設定值，指出 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 內容值是否用來還原序列化回覆訊息。</summary>
      <returns>若傳回型別不是 <see cref="T:System.ServiceModel.Channels.Message" />，則為 true ，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>取得或設定方法，實作作業的非同步結束方法。</summary>
      <returns>表示作業之結束方法的 <see cref="T:System.Reflection.MethodInfo" />，如果作業不是非同步處理則為 null。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>取得或設定格式子，將物件序列化至訊息，以及將訊息還原序列化至物件。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> 實作。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>取得或設定值，指出訊息是否能針對此作業啟動工作階段。</summary>
      <returns>如果此作業的訊息可啟動工作階段，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>取得或設定值，指出作業是否為單向作業。</summary>
      <returns>如果 WCF 用戶端不應預期回覆，則為 true，否則為 false。預設值為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>取得或設定值，指出此作業是否為工作階段的最後 1 個作業。</summary>
      <returns>若在叫用作業後關閉相關工作階段，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>取得作業的名稱。</summary>
      <returns>作業的名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>取得包含的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 物件。</summary>
      <returns>包含的 <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>取得此作業的回覆訊息動作。</summary>
      <returns>回覆的動作。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>取得或設定值，指定 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 物件是否序列化輸出訊息。</summary>
      <returns>如果 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> 屬性將傳回值序列化至回覆訊息，則為 true，否則為 false。預設值為 true。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>取得或設定此作業的相關方法。</summary>
      <returns>表示實作作業的方法之 <see cref="T:System.Reflection.MethodInfo" />。如果是非同步作業，則此值為 null，而且實作方法會儲存於 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> 和 <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" /> 屬性中。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>可針對用戶端應用程式處理的所有訊息，擴充 Windows Phone 用戶端物件功能的類別之插入點。</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>取得用戶端的相關合約型別。</summary>
      <returns>表示此用戶端的相關合約之 <see cref="T:System.Type" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>取得用戶端的相關合約名稱。</summary>
      <returns>使用於此用戶端的合約名稱。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>取得用戶端的相關合約之命名空間。</summary>
      <returns>此用戶端的相關合約之命名空間。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>取得或設定值，指出用戶端是否將定址標頭加入至要求-回覆訊息。</summary>
      <returns>若用戶端不新增任何定址標頭，則為 true，否則為 false。預設值為 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>取得或設定錯誤訊息大小上限。</summary>
      <returns>錯誤大小上限。預設值為 64 KB。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>取得或設定可用來選取 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 的 <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 實作。</summary>
      <returns>選取 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 的 <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 物件。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>取得在 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> 集合中沒有對應 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 的方法之用戶端作業。</summary>
      <returns>
        <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />，當作業選取器找不到符合訊息的作業時，用來表示目前的訊息內容路由目標的方法。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>透過用戶端取得或設定用來傳送訊息的傳輸位址。</summary>
      <returns>為傳輸的目的地位址之 <see cref="T:System.Uri" />。預設值為用戶端的 <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> 值。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>目前的 Windows Phone 版本不支援此類別。這種情況是相容性原因所致。</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>表示 <see cref="T:System.ServiceModel.FaultContractAttribute" /> 屬性中指定的 SOAP 錯誤相關資訊。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>初始化使用指定的動作和詳細資料類型的 <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> 類別之新執行個體。</summary>
      <param name="action">SOAP 錯誤的動作。</param>
      <param name="detail">序列化為 SOAP 錯誤詳細資料的詳細資料類型。</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>取得 SOAP 錯誤動作值。</summary>
      <returns>SOAP 錯誤動作值。</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>序列化為 SOAP 錯誤詳細資料的物件類型。</summary>
      <returns>表示序列化的 SOAP 錯誤詳細資料之 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>定義方法，可針對用戶端應用程式，控制訊息至物件的轉換，以及物件至訊息的轉換。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>將訊息轉換為傳回值，及傳回呼叫作業的 <paramref name="out" /> 參數。</summary>
      <returns>作業的傳回值。</returns>
      <param name="message">輸入訊息。</param>
      <param name="parameters">任何 <paramref name="out" /> 值。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>將 <see cref="T:System.Object" /> 陣列轉換為輸出 <see cref="T:System.ServiceModel.Channels.Message" />。</summary>
      <returns>傳送至服務作業的 SOAP 訊息。</returns>
      <param name="messageVersion">要使用的 SOAP 訊息版本。</param>
      <param name="parameters">傳至 XAML 用戶端作業的參數。</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>定義作業選取器的合約。</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>取得值，指出是否需要參數來決定選項。</summary>
      <returns>如果需要參數，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>傳回選取的作業。</summary>
      <returns>自訂作業選取器所選取的作業。</returns>
      <param name="method">叫用的方法。</param>
      <param name="parameters">傳遞至方法的參數。</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>在應用程式中定義方法來還原序列化要求訊息和序列化回應訊息。</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>將訊息還原序列化至參數陣列。</summary>
      <param name="message">傳入訊息。</param>
      <param name="parameters">做為參數傳遞至作業的物件陣列。</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>從指定的訊息版本、參數的陣列和傳回值序列化回覆訊息。</summary>
      <returns>序列化的回覆 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="messageVersion">SOAP 訊息版本。</param>
      <param name="parameters">out 參數的陣列。</param>
      <param name="result">傳回值。</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>表示套用至訊息的安全性有錯誤時所發生的例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤訊息。</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>使用錯誤訊息，和造成此例外狀況之內部例外狀況參考來初始化 <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤訊息。</param>
      <param name="innerException">內部例外狀況參考。</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>表示安全性授權要求失敗時所擲回的安全性例外狀況。</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>使用指定的訊息來初始化 <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤狀況的描述。</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>使用指定的訊息和內部例外狀況來初始化 <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> 類別的新執行個體。</summary>
      <param name="message">錯誤狀況的描述。</param>
      <param name="innerException">要使用的內部例外狀況。</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>表示根據使用者名稱和密碼的用戶端認證。</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>取得或設定密碼。</summary>
      <returns>密碼。</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>取得或設定使用者名稱。</summary>
      <returns>使用者名稱。</returns>
    </member>
  </members>
</doc>