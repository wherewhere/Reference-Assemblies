<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Задает количество проверок ввода-вывода, которые выполняют созданные объекты <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>Объект <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.Xml.XmlWriter" /> автоматически определяет, проверять ли весь документ или фрагмент документа, и выполняет соответствующую проверку.В случае использования программы-оболочки для другого объекта <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.Xml.XmlWriter" /> внешний объект не выполняет никакую дополнительную проверку соответствия.Проверку соответствия выполняет базовый объект.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>XML-данные соответствуют правилам для документа XML 1.0 с правильным форматом.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>XML-данные являются XML-фрагментом с правильным форматом.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Задает параметры обработки DTD.Объект <see cref="T:System.Xml.DtdProcessing" /> использует перечисление <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Элемент DOCTYPE будет проигнорирован.Обработка DTD выполнена не будет.Предупреждение. DTD и DOCTYPE будут потеряны при выводе.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Используется для анализа DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Указывает, что при обнаружении DTD будет создано исключение <see cref="T:System.Xml.XmlException" /> с сообщением о том, что DTD запрещены.Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Обеспечивает интерфейс, чтобы класс мог вернуть сведения о строке и позиции.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке. </summary>
      <returns>true, если могут быть предоставлены свойства <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> и <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />, в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Получает текущий номер строки.</summary>
      <returns>Номер текущей строки или значение 0, если сведения о строке недоступны (например, метод <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> возвращает значение false).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Получает текущее положение строки.</summary>
      <returns>Номер текущей строки или значение 0, если сведения о строке недоступны (например, метод <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> возвращает значение false).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Предоставляет доступ только для чтения к набору сопоставлений префиксов и пространств имен. </summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Получает коллекцию определенных сопоставлений префикс-пространство имен, находящихся в текущий момент в области.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий все текущие пространства имен в области.</returns>
      <param name="scope">Значение <see cref="T:System.Xml.XmlNamespaceScope" />, указывающее тип узлов пространства имен, которые следует возвратить.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Получает URI пространства имен, сопоставленный с указанным префиксом.</summary>
      <returns>URI пространства имен, сопоставленный с префиксом; null, если префикс не сопоставлен с URI пространства имен.</returns>
      <param name="prefix">Префикс, URI пространства имен которого нужно найти.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Получает префикс, сопоставленный с указанным URI пространства имен.</summary>
      <returns>URI пространства имен, сопоставленный с префиксом; null, если префикс не сопоставлен с URI пространства имен.</returns>
      <param name="namespaceName">URI пространства имен, префикс которого нужно найти.</param>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Поведение по умолчанию не удаляет дубликаты объявлений пространств имен. </summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Удаление дубликатов объявлений пространств имен.Чтобы дубликат пространства имен был удален, должны совпадать префиксы пространств имен.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Реализует однопотоковый объект <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Инициализирует новый экземпляр класса NameTable.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Атомизирует заданную строку и добавляет ее к объекту NameTable.</summary>
      <returns>Атомизированная строка или существующая строка, если таковая уже имеется в объекте NameTable.Если параметр <paramref name="len" /> имеет значение нуль, возвращается String.Empty.</returns>
      <param name="key">Массив символов, содержащий добавляемую строку. </param>
      <param name="start">Начинающийся с нуля индекс в массиве, задающий первый символ строки. </param>
      <param name="len">Количество знаков в строке. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />-или- <paramref name="start" /> &gt;= <paramref name="key" />.Length -или- <paramref name="len" /> &gt;= <paramref name="key" />.Length При указанных выше условиях исключение не выдается, если <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Атомизирует заданную строку и добавляет ее к объекту NameTable.</summary>
      <returns>Атомизированная строка или существующая строка, если таковая уже имеется в объекте NameTable.</returns>
      <param name="key">Строка для добавления. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="key" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Получает атомизированную строку, содержащую те же знаки, что и заданный диапазон знаков в заданном массиве.</summary>
      <returns>Атомизированная строка или значение null, если строка еще не атомизирована.Если параметр <paramref name="len" /> имеет значение нуль, возвращается String.Empty.</returns>
      <param name="key">Массив символов, содержащий искомое имя. </param>
      <param name="start">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени. </param>
      <param name="len">Число символов в имени. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />-или- <paramref name="start" /> &gt;= <paramref name="key" />.Length -или- <paramref name="len" /> &gt;= <paramref name="key" />.Length При указанных выше условиях исключение не выдается, если <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Получает атомизированную строку с указанным значением.</summary>
      <returns>Атомизированный строковый объект или null, если строка еще не была атомизирована.</returns>
      <param name="value">Искомое имя. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Задает способ обработки разрывов строк.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Знаки новой строки преобразуются в сущности.Благодаря этому параметру сохраняются все символы, когда результат считывается нормализующим объектом <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Знаки новой строки не изменяются.Выходные данные аналогичны входным.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Символы новой строки заменяются, чтобы соответствовать символу, заданному в свойстве <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Задает состояние средства чтения.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>Вызван метод <see cref="M:System.Xml.XmlReader.Close" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>Конец файла успешно достигнут.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Произошла ошибка, препятствующая продолжению операции чтения.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>Метод Read не был вызван.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>Метод Read был вызван.Для читателя можно вызвать дополнительные методы.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Задает состояние объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Записывается значение атрибута. </summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Вызван метод <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Записано содержимое элемента.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Записан начальный тег элемента.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Произошло исключение, которое оставило объект <see cref="T:System.Xml.XmlWriter" /> в недопустимом состоянии.Чтобы изменить состояние <see cref="T:System.Xml.XmlWriter" /> на <see cref="F:System.Xml.WriteState.Closed" />, можно вызвать метод <see cref="M:System.Xml.XmlWriter.Close" />.Любой другой вызов метода <see cref="T:System.Xml.XmlWriter" /> приведет к возникновению исключения <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Записан пролог.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Метод Write не был вызван.</summary>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Кодирует и декодирует имена XML и предоставляет методы для преобразования между типами среды CLR.При преобразовании типов данных возвращаемые значения не зависят от языка.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlConvert" />. </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Декодирует имя.Этот метод изменяет действие методов <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> и <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> на обратное.</summary>
      <returns>Декодированное имя.</returns>
      <param name="name">Преобразуемое имя. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Преобразует имя в допустимое локальное имя XML.</summary>
      <returns>Закодированное имя.</returns>
      <param name="name">Имя для кодирования. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Преобразует имя в допустимое имя XML.</summary>
      <returns>Возвращает имя с любыми недопустимыми знаками, замещенными escape-строкой.</returns>
      <param name="name">Преобразуемое имя. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Проверяет допустимость имени в соответствии со спецификацией XML.</summary>
      <returns>Закодированное имя.</returns>
      <param name="name">Имя для кодирования. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым значением типа знака имени.</summary>
      <returns>true, если знак является допустимым значением типа знака имени; в противном случае — значение false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком открытого ИД.</summary>
      <returns>true, если переданный знак является допустимым знаком общего ИД; в противном случае — значение false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым значением типа начального знака имени.</summary>
      <returns>true, если знак является допустимым значением типа начального знака имени; в противном случае false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком пробела XML.</summary>
      <returns>true, если переданный знак является допустимым знаком пробела XML; в противном случае — значение false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком XML.</summary>
      <returns>true, если переданный знак является допустимым знаком XML; в противном случае false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Проверяет, что переданная пара знаков-заместителей является допустимым знаком XML.</summary>
      <returns>true, если переданная суррогатная пара знаков является допустимым знаком XML; в противном случае — значение false.</returns>
      <param name="lowChar">Знак-заместитель для поверки.</param>
      <param name="highChar">Знак-заместитель для поверки.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Boolean" />.</summary>
      <returns>Значение Boolean — true или false.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> не представляет значение Boolean. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Byte" />.</summary>
      <returns>Аналог Byte для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Char" />.</summary>
      <returns>Char, представляющий отдельный знак.</returns>
      <param name="s">Строка, содержащая отдельный преобразуемый знак. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> — null. </exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> содержит несколько символов. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTime" />.</summary>
      <returns>Аналог DateTime для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <param name="format">Структура формата, которая применяется к преобразованному значению DateTime.Допустимы форматы типа yyyy-MM-ddTHH:mm:sszzzzzz и его подмножества.Строка проверяется по этому формату.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> или <paramref name="format" /> равно String.Empty-или- Строка <paramref name="s" /> не содержит дату и время, соответствующие параметру <paramref name="format" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTime" />.</summary>
      <returns>Аналог DateTime для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <param name="formats">Массив, содержащий структуры формата, которые применяются к преобразованному значению DateTime.Допустимы форматы типа yyyy-MM-ddTHH:mm:sszzzzzz и его подмножества.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> или элемент параметра <paramref name="formats" /> равен String.Empty-или- Строка <paramref name="s" /> не содержит дату и время, соответствующие какому-либо элементу параметра <paramref name="formats" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.DateTime" /> с помощью указанного <see cref="T:System.Xml.XmlDateTimeSerializationMode" />.</summary>
      <returns>Эквивалент <see cref="T:System.DateTime" /> для <see cref="T:System.String" />.</returns>
      <param name="s">Преобразуемое значение <see cref="T:System.String" />.</param>
      <param name="dateTimeOption">Одно из значений <see cref="T:System.Xml.XmlDateTimeSerializationMode" />, указывающее, следует ли преобразовывать данные в локальное время или сохранять их во времени в формате UTC, если это дата в формате UTC.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="dateTimeOption" /> является null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> является пустой строкой или его формат недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Преобразует предоставленное значение <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Эквивалент строки в формате <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="s">Строка для преобразования.Примечание.   Строка должна соответствовать подмножеству в соответствии с рекомендацией W3C для типа XML dateTime.Дополнительные сведения см. в разделе, посвященном схеме XML (часть 2: типы данных.  </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Аргумент, переданный этому методу находится вне диапазона допустимых значений.Дополнительные сведения о допустимых значениях см. в разделе <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">Аргумент, переданный этому методу не соответствует подмножеству рекомендации W3C по типу XML dateTime.Дополнительные сведения см. в разделе, посвященном схеме XML (часть 2: типах данных).</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Преобразует предоставленное значение <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Эквивалент строки в формате <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="s">Строка для преобразования.</param>
      <param name="format">Формат, из которого преобразуется параметр <paramref name="s" />.Параметр формата может быть любым поднабором в соответствии с рекомендацией W3C по типу XML dateTime.Дополнительные сведения см. в разделе, посвященном схеме XML (часть 2: типы данных.  Строка <paramref name="s" /> проверяется по этому формату.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> или <paramref name="format" /> является пустой строкой или его формат не соответствует указанному.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Преобразует предоставленное значение <see cref="T:System.String" /> в эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Эквивалент строки в формате <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="s">Строка для преобразования.</param>
      <param name="formats">Массив форматов, из которого можно преобразовать параметр <paramref name="s" />.Каждый формат в параметре <paramref name="formats" /> может быть любым поднабором в соответствии с рекомендацией W3C по типу XML dateTime.Дополнительные сведения см. в разделе, посвященном схеме XML (часть 2: типы данных.  Строка <paramref name="s" /> проверяется по одному из этих форматов.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Decimal" />.</summary>
      <returns>Аналог Decimal для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Double" />.</summary>
      <returns>Аналог Double для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Double.MinValue" /> или больше значения <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Guid" />.</summary>
      <returns>Аналог Guid для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Int16" />.</summary>
      <returns>Аналог Int16 для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Int32" />.</summary>
      <returns>Аналог Int32 для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Int64" />.</summary>
      <returns>Аналог Int64 для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.SByte" />.</summary>
      <returns>Аналог SByte для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.SByte.MinValue" /> или больше значения <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.Single" />.</summary>
      <returns>Аналог Single для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Single.MinValue" /> или больше значения <see cref="F:System.Single.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Преобразует <see cref="T:System.Boolean" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление Boolean, то есть "true" или "false".</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Преобразует <see cref="T:System.Char" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Char.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Преобразует <see cref="T:System.DateTime" /> в <see cref="T:System.String" /> с помощью указанного <see cref="T:System.Xml.XmlDateTimeSerializationMode" />.</summary>
      <returns>Эквивалент <see cref="T:System.String" /> для <see cref="T:System.DateTime" />.</returns>
      <param name="value">Преобразуемое значение <see cref="T:System.DateTime" />.</param>
      <param name="dateTimeOption">Одно из значений <see cref="T:System.Xml.XmlDateTimeSerializationMode" />, указывающее, как следует обрабатывать значение <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="dateTimeOption" /> является недопустимым.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> или <paramref name="dateTimeOption" /> равен null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Преобразует предоставленное значение <see cref="T:System.DateTimeOffset" /> в <see cref="T:System.String" />.</summary>
      <returns>Представление <see cref="T:System.String" /> для предоставленной структуры <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Преобразуемая структура <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Преобразует предоставленную структуру <see cref="T:System.DateTimeOffset" /> в объект <see cref="T:System.String" /> в указанном формате.</summary>
      <returns>Представление <see cref="T:System.String" /> в указанном формате предоставленной структуры <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Преобразуемая структура <see cref="T:System.DateTimeOffset" />.</param>
      <param name="format">Формат, в который преобразуется параметр <paramref name="s" />.Параметр формата может быть любым поднабором в соответствии с рекомендацией W3C по типу XML dateTime.Дополнительные сведения см. в разделе, посвященном схеме XML (часть 2: типы данных.  </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Преобразует <see cref="T:System.Decimal" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Decimal.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Преобразует <see cref="T:System.Double" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Double.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Преобразует <see cref="T:System.Guid" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Guid.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Преобразует <see cref="T:System.Int16" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Int16.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Преобразует <see cref="T:System.Int32" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Int32.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Преобразует <see cref="T:System.Int64" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Int64.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Преобразует <see cref="T:System.SByte" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта SByte.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Преобразует <see cref="T:System.Single" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Single.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Преобразует <see cref="T:System.TimeSpan" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта TimeSpan.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Преобразует <see cref="T:System.UInt32" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта UInt32.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Преобразует <see cref="T:System.UInt64" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта UInt64.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.TimeSpan" />.</summary>
      <returns>Аналог TimeSpan для строки.</returns>
      <param name="s">Строка для преобразования.Формат строки должен соответствовать рекомендации W3C по схемам XML (часть 2 о типах данных): Типы данных, рекомендованные для хранения.</param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет неподходящий для представления значения TimeSpan формат. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.UInt16" />.</summary>
      <returns>Аналог UInt16 для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt16.MinValue" /> или больше значения <see cref="F:System.UInt16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.UInt32" />.</summary>
      <returns>Аналог UInt32 для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt32.MinValue" /> или больше значения <see cref="F:System.UInt32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в эквивалент <see cref="T:System.UInt64" />.</summary>
      <returns>Аналог UInt64 для строки.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Проверяет допустимость имени в соответствии с рекомендацией W3C Extended Markup Language.</summary>
      <returns>Указанное имя не является допустимым именем XML.</returns>
      <param name="name">Имя для проверки. </param>
      <exception cref="T:System.Xml.XmlException">Значение параметра <paramref name="name" /> не является допустимым именем XML. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Проверяет, что имя является допустимым именем NCName в соответствии с рекомендациями по XML консорциума W3C.</summary>
      <returns>Указанное имя не является допустимым именем NCName.</returns>
      <param name="name">Имя для проверки. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> равен null или String.Empty. </exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="name" /> не является допустимым NCName. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Проверяет, является ли строка допустимым NMTOKEN, в соответствии с рекомендацией W3C XML, часть 2: Рекомендации для типов данных</summary>
      <returns>Лексема имени, если является допустимым NMTOKEN.</returns>
      <param name="name">Строка, которую следует проверить.</param>
      <exception cref="T:System.Xml.XmlException">Строка не является допустимым токеном имени.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Проверяет, все ли знаки в строковом аргументе являются допустимыми знаками открытого ИД.</summary>
      <returns>Экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками открытого ИД.</returns>
      <param name="publicId">Строка, которую следует проверить.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Проверяет, все ли знаки в строковом аргументе являются допустимыми знаками пробела. </summary>
      <returns>Экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками пробела.</returns>
      <param name="content">Строка, которую следует проверить.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Проверяет, все ли знаки и пары знаков-заместителей в переданной строке являются допустимыми знаками XML.</summary>
      <returns>Экземпляр переданной строки, если все знаки и пары знаков-заместителей в строковом аргументе являются допустимыми знаками XML.</returns>
      <param name="content">Строка, которую следует проверить.</param>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Определяет способ обработки значения времени при преобразовании между строками и объектами <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Рассматривается как местное время.Если объект <see cref="T:System.DateTime" /> представляет время в формате UTC, время преобразуется в местное.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Сведения о часовом поясе должны сохраняться при преобразовании.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Обрабатывать как местное время, если объект <see cref="T:System.DateTime" /> преобразовывается в строку.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Рассматривается как UTC.Если объект <see cref="T:System.DateTime" /> представляет местное время, оно преобразуется в формат UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Подробные сведения о последнем исключении. </summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Инициализирует новый экземпляр класса XmlException.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса XmlException с указанным сообщением об ошибке.</summary>
      <param name="message">Описание ошибки. </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса XmlException.</summary>
      <param name="message">Описание условий возникновения ошибки. </param>
      <param name="innerException">
        <see cref="T:System.Exception" />, породивший XmlException (при наличии).Это значение может быть равно null.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса XmlException, используя заданное сообщение, внутреннее исключение, номер строки и позицию в строке.</summary>
      <param name="message">Описание ошибки. </param>
      <param name="innerException">Исключение, послужившее причиной текущего исключения.Это значение может быть равно null.</param>
      <param name="lineNumber">Номер строки, показывающий, где произошла ошибка. </param>
      <param name="linePosition">Позиция строки, показывающая, где произошла ошибка. </param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Получает номер строки, показывающий, где произошла ошибка.</summary>
      <returns>Номер строки, показывающий, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Получает размещение строки, показывающее, где произошла ошибка.</summary>
      <returns>Размещение строки, показывающее, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Получает сообщение, описывающее текущее исключение.</summary>
      <returns>Сообщение об ошибке, объясняющее причину исключения.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Получает расположение XML-файла.</summary>
      <returns>Источник универсального кода ресурса (URI) для данных XML.Если нет исходного универсального кода ресурса (URI), данное свойство возвращает значение null.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Разрешает, добавляет и удаляет пространства имен из коллекции и обеспечивает управление областью для этих пространств имен. </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNamespaceManager" /> с указанным <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">Используемый объект <see cref="T:System.Xml.XmlNameTable" />. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="nameTable" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Добавляет заданное пространство имен в коллекцию.</summary>
      <param name="prefix">Префикс, который требуется связать с добавляемым пространством имен.Чтобы добавить пространство имен по умолчанию, укажите String.Empty.</param>
      <param name="uri">Добавляемое пространство имен. </param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="prefix" /> — "xml" или "xmlns". </exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="prefix" /> или <paramref name="uri" /> равно null. </exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Получает URI пространства имен для пространства имен по умолчанию.</summary>
      <returns>Возвращает URI пространства имен для пространства имен по умолчанию, или String.Empty, если пространство имен по умолчанию отсутствует.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Возвращает перечислитель для выполнения итерации по пространствам имен в объекте <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, содержащий префиксы, которые хранятся в объекте <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Получает коллекцию имен пространств имен, привязанных префиксом, который можно использовать для перечисления пространств имен, находящихся в текущий момент в области.</summary>
      <returns>Коллекция пространств имен, ключами которой являются префиксы, используемые для перечисления пространств имен, которые в настоящее время находятся в области.</returns>
      <param name="scope">Значение <see cref="T:System.Xml.XmlNamespaceScope" />, указывающее тип узлов пространства имен, которые следует возвратить.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Получает значение, указывающее, имеет ли предоставленный префикс пространство имен, определенное для текущей используемой среды.</summary>
      <returns>true, если определено пространство имен; в противном случае — false.</returns>
      <param name="prefix">Префикс искомого пространства имен. </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Получает URI пространства имен для указанного префикса.</summary>
      <returns>Возвращает универсальный код ресурса (URI) пространства имен для префикса <paramref name="prefix" /> или значение null, если нет сопоставленного пространства имен.Возвращенная строка атомизирована.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</returns>
      <param name="prefix">Префикс, для которого требуется обработать URI пространства имен.Чтобы сопоставить пространство имен по умолчанию, необходимо передать String.Empty.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Выполняет поиск префикса, объявленный для указанного URI пространства имен.</summary>
      <returns>Соответствующий префикс.Если сопоставленный префикс отсутствует, метод возвращает String.Empty.Если предоставлено значение null, возвращается значение null.</returns>
      <param name="uri">Пространство имен, которое необходимо разрешить для получения префикса. </param>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Получает объект <see cref="T:System.Xml.XmlNameTable" />, сопоставленный с данным объектом.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNameTable" />, используемый данным объектом.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Выводит из стека область пространств имен.</summary>
      <returns>true, если в стеке остались области пространств имен; значение false, если больше нет пространств имен, которые требуется извлечь.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Вводит в стек область пространств имен.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Удаляет заданное пространство имен для указанного префикса.</summary>
      <param name="prefix">Префикс для пространства имен. </param>
      <param name="uri">Удаляемое пространство имен для указанного префикса.Удаленное пространство имен из текущей области пространств имен.Пространства имен вне текущей области игнорируются.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="prefix" /> или <paramref name="uri" /> равно null. </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Определяет область пространства имен. </summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Все пространства имен, которые определены в области текущего узла.Это включает пространство имен xmlns:xml, которое всегда объявляется неявно.Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Все пространства имен, определенные в области текущего узла, кроме пространства имен xmlns:xml, которое всегда объявляется неявно.Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Все пространства имен, определенные локально для текущего узла.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Таблица атомизированных объектов строки.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNameTable" />. </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу XmlNameTable.</summary>
      <returns>Новая атомизированная строка или существующая строка, если таковая уже имеется.Если параметр length имеет значение нуль, возвращается String.Empty.</returns>
      <param name="array">Массив символов, содержащий добавляемое имя. </param>
      <param name="offset">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени. </param>
      <param name="length">Число символов в имени. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />-или- <paramref name="offset" /> &gt;= <paramref name="array" />.Length -или- <paramref name="length" /> &gt; <paramref name="array" />.Length При указанных выше условиях исключение не выдается, если <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу XmlNameTable.</summary>
      <returns>Новая атомизированная строка или существующая строка, если таковая уже имеется.</returns>
      <param name="array">Добавляемое имя. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе получает атомизированную строку, содержащую те же символы, что и заданный диапазон символов в заданном массиве.</summary>
      <returns>Атомизированная строка или значение null, если строка еще не атомизирована.Если параметр <paramref name="length" /> имеет значение нуль, возвращается String.Empty.</returns>
      <param name="array">Массив символов, содержащий искомое имя. </param>
      <param name="offset">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени. </param>
      <param name="length">Число символов в имени. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />-или- <paramref name="offset" /> &gt;= <paramref name="array" />.Length -или- <paramref name="length" /> &gt; <paramref name="array" />.Length При указанных выше условиях исключение не выдается, если <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>При переопределении в производном классе получает атомизированную строку, содержащую то же значение, что и заданная строка.</summary>
      <returns>Атомизированная строка или значение null, если строка еще не атомизирована.</returns>
      <param name="array">Искомое имя. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение null. </exception>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Задает тип узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Атрибут (например, id='123').</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Раздел CDATA (например, &lt;![CDATA[my escaped text]]&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Комментарий (например, &lt;!-- my comment --&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Объект документа, который является корнем дерева документов, предоставляет ко всему документу XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Фрагмент документа.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>Объявление типа документа, обозначенное следующим тегом (например, &lt;!DOCTYPE...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Элемент (например, &lt;item&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Тег конечного элемента (например, &lt;/item&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Возвращается при достижении объектом XmlReader конца замещающей сущности в результате вызова метода <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Объявление сущности (например, &lt;!ENTITY...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Ссылка на сущность (например, &amp;num;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>Возвращается объектом <see cref="T:System.Xml.XmlReader" />, если не был вызван метод Read.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Нотация в объявлении типа документа (например, &lt;!NOTATION...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Инструкция по обработке (например, &lt;?pi test?&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Пробел между элементами разметки в смешанной модели содержимого или пробел в области xml:space="preserve".</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Текстовое содержимое узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Пробел между элементами разметки.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Объявление XML (например, &lt;?xml version='1.0'?&gt;).</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Предоставляет все контекстные данные, необходимые <see cref="T:System.Xml.XmlReader" /> для анализа фрагмента XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, базового URI, xml:lang, xml:space и значений типов документов.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк.Если значение равно null, вместо этого класса для создания <paramref name="nsMgr" /> используется таблица имен.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="docTypeName">Имя объявления типа документа. </param>
      <param name="pubId">Открытый идентификатор. </param>
      <param name="sysId">Идентификатор системы. </param>
      <param name="internalSubset">Внутреннее подмножество DTD. </param>
      <param name="baseURI">Базовый URI для фрагмента XML (размещение, из которого загружен фрагмент). </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, используемой для создания объекта <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, базового URI, xml:lang, xml:space, кодировку и значений типов документов.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк.Если значение равно null, вместо этого класса для создания <paramref name="nsMgr" /> используется таблица имен.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="docTypeName">Имя объявления типа документа. </param>
      <param name="pubId">Открытый идентификатор. </param>
      <param name="sysId">Идентификатор системы. </param>
      <param name="internalSubset">Внутреннее подмножество DTD. </param>
      <param name="baseURI">Базовый URI для фрагмента XML (размещение, из которого загружен фрагмент). </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <param name="enc">Объект <see cref="T:System.Text.Encoding" />, показывающий параметр кодировки. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, используемой для создания объекта <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang, xml:space.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк.Если значение равно null, вместо этого класса для создания <paramref name="nsMgr" /> используется таблица имен.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, используемой для создания объекта <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang, xml:space и кодировки.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк.Если значение равно null, вместо этого класса для создания <paramref name="nsMgr" /> используется таблица имен.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <param name="enc">Объект <see cref="T:System.Text.Encoding" />, показывающий параметр кодировки. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, используемой для создания объекта <paramref name="nsMgr" />. </exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Получает или задает базовый URI.</summary>
      <returns>Базовый URI, используемый для разрешения файла DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Получает или задает имя объявления типа документа.</summary>
      <returns>Имя объявления типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Получает или задает тип кодировки.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, показывающий тип кодировки.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Получает или задает внутренний набор DTD.</summary>
      <returns>Внутренний набор DTD.Например, данное свойство возвращает содержимое между квадратными скобками &lt;!DOCTYPE doc [...]&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Получает или задает объект <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>Объект XmlNamespaceManager..</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Получает класс <see cref="T:System.Xml.XmlNameTable" />, используемый для атомизации строк.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>Объект XmlNameTable.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Получает или задает открытый идентификатор.</summary>
      <returns>Открытый идентификатор.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Получает или задает идентификатор системы.</summary>
      <returns>Идентификатор системы.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Получает или задает текущую область xml:lang.</summary>
      <returns>Текущая область xml:lang.Если в области отсутствует xml:lang, возвращается значение String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Получает или задает текущую область xml:space.</summary>
      <returns>Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space.</returns>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Представляет полное имя XML.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlQualifiedName" /> с указанным именем.</summary>
      <param name="name">Локальное имя, используемое в качестве имени объекта <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlQualifiedName" /> с указанными именем и пространством имен.</summary>
      <param name="name">Локальное имя, используемое в качестве имени объекта <see cref="T:System.Xml.XmlQualifiedName" />. </param>
      <param name="ns">Пространство имен для объекта <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Предоставляет пустой объект <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект <see cref="T:System.Xml.XmlQualifiedName" /> текущему объекту <see cref="T:System.Xml.XmlQualifiedName" />. </summary>
      <returns>true, если объекты представляют один экземпляр; в обратном случае — значение false.</returns>
      <param name="other">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Возвращает хэш-код для <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Хэш-код объекта.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Получает значение, определяющее, пуст ли объект <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>true, если имя и пространство имен представляют собой пустые строки; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Получает строковое представление проверенного имени объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое представление полного имени или String.Empty, если имя для объекта не определено.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Получает строковое представление пространства имен для объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое представление пространства имен или String.Empty, если пространство имен для объекта не определено.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Сравнивает два объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>true, если у двух объектов совпадают имена и пространства имен; в противном случае — значение false.</returns>
      <param name="a">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
      <param name="b">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Сравнивает два объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>true, если у двух объектов не совпадают имена и пространства имен; в противном случае — значение false.</returns>
      <param name="a">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
      <param name="b">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Возвращает строковое значение объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое значение объекта <see cref="T:System.Xml.XmlQualifiedName" /> в формате пространство_имен:локальное_имя.Если объект не имеет определенное пространство имен, этот метод возвращает только локальное имя.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Возвращает строковое значение объекта <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Строковое значение объекта <see cref="T:System.Xml.XmlQualifiedName" /> в формате пространство_имен:локальное_имя.Если объект не имеет определенное пространство имен, этот метод возвращает только локальное имя.</returns>
      <param name="name">Имя объекта. </param>
      <param name="ns">Пространство имен объекта. </param>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Представляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Инициализирует новый экземпляр класса XmlReader.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>При переопределении в производном классе получает количество атрибутов текущего узла.</summary>
      <returns>Число атрибутов текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>При переопределении в производном классе получает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение true, если реализуются методы чтения двоичного содержимого; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlReader" /> метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>true, если <see cref="T:System.Xml.XmlReader" /> реализует метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее возможность анализа и разрешения объектов с помощью данного средства чтения.</summary>
      <returns>Значение true, если средство чтения позволяет анализировать и разрешать объекты; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>При переопределении в производном классе изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на Closed.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, используемый для считывания данных, содержащихся в потоке. </returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="input" /> является null.</exception>
      <exception cref="T:System.Security.SecurityException">У объекта <see cref="T:System.Xml.XmlReader" /> нет достаточных разрешений для доступа к расположению XML-данных.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным потоком и объектом <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="input" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока, базового URI и объекта <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <param name="baseUri">Базовый URI считываемой сущности или документа.Это значение может быть равно null.Примечание по безопасности. Базовый универсальный код ресурса (URI), используемый для разрешения относительного URI XML-документа.Не используйте базовый URI из непроверенного источника.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="input" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока и объектов <see cref="T:System.Xml.XmlReaderSettings" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <param name="inputContext">Объект <see cref="T:System.Xml.XmlParserContext" /> предоставляет контекстную информацию, необходимую для анализа фрагмента XML.Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущие области xml:lang и xml:space, базовый URI и DTD.Это значение может быть равно null.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="input" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным <see cref="T:System.IO.TextReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Объект <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="input" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанных объектов <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Объект <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="input" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанных объектов <see cref="T:System.IO.TextReader" />, <see cref="T:System.Xml.XmlReaderSettings" /> и базового URI.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Объект <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <param name="baseUri">Базовый URI считываемой сущности или документа.Это значение может быть равно null.Примечание по безопасности. Базовый универсальный код ресурса (URI), используемый для разрешения относительного URI XML-документа.Не используйте базовый URI из непроверенного источника.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="input" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанных объектов <see cref="T:System.IO.TextReader" />, <see cref="T:System.Xml.XmlReaderSettings" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Объект <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <param name="inputContext">Объект <see cref="T:System.Xml.XmlParserContext" /> предоставляет контекстную информацию, необходимую для анализа фрагмента XML.Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущие области xml:lang и xml:space, базовый URI и DTD.Это значение может быть равно null.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="input" /> является null.</exception>
      <exception cref="T:System.ArgumentException">Свойства <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> и <see cref="P:System.Xml.XmlParserContext.NameTable" /> одновременно содержат значения.(Только одно из этих свойств NameTable можно установить и использовать).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным URI.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML. </returns>
      <param name="inputUri">URI файла с XML-данными.Класс <see cref="T:System.Xml.XmlXapResolver" /> используется для преобразования пути в классический формат данных.Дополнительные сведения см. в разделе "Примечания" ниже.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="inputUri" /> является null.</exception>
      <exception cref="T:System.Security.SecurityException">У объекта <see cref="T:System.Xml.XmlReader" /> нет достаточных разрешений для доступа к расположению XML-данных.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, указанный параметром URI, не существует.</exception>
      <exception cref="T:System.UriFormatException">Формат параметра URI является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр с указанным URI и <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="inputUri">URI файла с XML-данными.Объект <see cref="T:System.Xml.XmlResolver" /> в объекте <see cref="T:System.Xml.XmlReaderSettings" /> используется для преобразования пути в стандартный формат данных.Если значение параметра <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> — null, используется новый объект <see cref="T:System.Xml.XmlXapResolver" />.Дополнительные сведения см. в разделе "Примечания" ниже.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="inputUri" /> является null.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный параметром URI.</exception>
      <exception cref="T:System.UriFormatException">Формат параметра URI является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного URI и объектов <see cref="T:System.Xml.XmlReaderSettings" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="inputUri">URI файла с XML-данными.Объект <see cref="T:System.Xml.XmlResolver" /> в объекте <see cref="T:System.Xml.XmlReaderSettings" /> используется для преобразования пути в стандартный формат данных.Если значение параметра <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> — null, используется новый объект <see cref="T:System.Xml.XmlXapResolver" />.Дополнительные сведения см. в разделе "Примечания" ниже.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Это значение может быть равно null.</param>
      <param name="inputContext">Объект <see cref="T:System.Xml.XmlParserContext" /> предоставляет контекстную информацию, необходимую для анализа фрагмента XML.Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущие области xml:lang и xml:space, базовый URI и DTD.Это значение может быть равно null.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра inputUri является null.</exception>
      <exception cref="T:System.Security.SecurityException">У объекта <see cref="T:System.Xml.XmlReader" /> нет достаточных разрешений для доступа к расположению XML-данных.</exception>
      <exception cref="T:System.ArgumentException">Свойства <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> и <see cref="P:System.Xml.XmlParserContext.NameTable" /> одновременно содержат значения.(Только одно из этих свойств NameTable можно установить и использовать).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный параметром URI.</exception>
      <exception cref="T:System.UriFormatException">Формат параметра URI является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанных объектов <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, который следует использовать в качестве базового средства чтения.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlReader" />.Уровень соответствия объекта <see cref="T:System.Xml.XmlReaderSettings" /> должен или быть равным уровню соответствия базового средства чтения, или иметь значение <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="reader" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">Если объект <see cref="T:System.Xml.XmlReaderSettings" /> задает уровень соответствия, который не согласован с уровнем соответствия базового средства чтения.-или-Когда базовый <see cref="T:System.Xml.XmlReader" /> находится в состоянии <see cref="F:System.Xml.ReadState.Error" /> или <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>При переопределении в производном классе получает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xml.XmlReader" />, а при необходимости освобождает также и управляемые ресурсы.</summary>
      <param name="disposing">Значение true, чтобы освободить управляемые и неуправляемые ресурсы; значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>При переопределении в производном классе получает значение, показывающее, установлено ли средство чтения в конец потока.</summary>
      <returns>Значение true, если средство чтения установлено в конец потока; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>При переопределении в производном классе получает значение атрибута по указанному индексу.</summary>
      <returns>Значение указанного атрибута.Этот метод не перемещает средство чтения.</returns>
      <param name="i">Индекс атрибута.Индексация начинается с нуля.(Индекс первого атрибута равен нулю).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> выходит за пределы диапазона.Оно должно быть неотрицательным и меньшим, чем размер коллекции атрибутов.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден или значение равно String.Empty, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден или значение равно String.Empty, возвращается значение null.Этот метод не перемещает средство чтения.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Асинхронно получает значение текущего узла.</summary>
      <returns>Значение текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Получает значение, указывающее, имеются ли у текущего узла какие-либо атрибуты.</summary>
      <returns>Значение true, если текущий узел содержит атрибуты; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>При переопределении в производном классе получает значение, показывающее, имеет ли текущий узел свойство <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>Значение true, если узел, на котором расположено средство чтения, может иметь значение Value; в противном случае — значение false.Если значение равно false, узел принимает значение String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>При переопределении в производном классе получает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD.</summary>
      <returns>Значение true, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD; значение false, если значение атрибута было задано явно.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>При переопределении в производном классе получает значение, определяющее, является ли текущий узел пустым элементом (например, &lt;MyElement/&gt;).</summary>
      <returns>Значение true, если текущий узел является элементом (свойство <see cref="P:System.Xml.XmlReader.NodeType" /> имеет значение XmlNodeType.Element), который заканчивается на /&gt;; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Возвращает значение, определяющее, является ли строковый аргумент допустимым именем XML.</summary>
      <returns>Значение true, если имя допустимо; в противном случае — значение false.</returns>
      <param name="str">Имя для проверки. </param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="str" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Возвращает значение, определяющее, является ли строковый аргумент допустимой лексемой имени XML.</summary>
      <returns>Значение true, если аргумент является допустимой лексемой имени; в противном случае — значение false.</returns>
      <param name="str">Лексема имени для проверки. </param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="str" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента.</summary>
      <returns>Значение true, если метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> находит открывающий тег или пустой тег элемента; значение false, если тип найденного узла отличается от XmlNodeType.Element.</returns>
      <exception cref="T:System.Xml.XmlException">Вk входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствует ли значение свойства <see cref="P:System.Xml.XmlReader.Name" /> найденного элемента заданному аргументу.</summary>
      <returns>Значение true, если узел является элементом и значение свойства Name соответствует указанной строке.Значение false, если тип найденного узла отличается от XmlNodeType.Element или значение свойства Name элемента не соответствует указанной строке.</returns>
      <param name="name">Строка противопоставляется значению свойства Name найденного элемента.</param>
      <exception cref="T:System.Xml.XmlException">Вk входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствуют ли значения свойств <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> найденного элемента заданным строкам.</summary>
      <returns>Значение true, если полученный узел является элементом.Значение false, если тип найденного узла отличается от XmlNodeType.Element или значения свойств LocalName и NamespaceURI элемента не соответствуют указанным строкам.</returns>
      <param name="localname">Строка, которая противопоставляется значению свойства LocalName найденного элемента. </param>
      <param name="ns">Строка, которая противопоставляется значению свойства NamespaceURI найденного элемента.</param>
      <exception cref="T:System.Xml.XmlException">Вk входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>При переопределении в производном классе получает значение атрибута по указанному индексу.</summary>
      <returns>Значение указанного атрибута.</returns>
      <param name="i">Индекс атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>При переопределении в производном классе получает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом.Например, LocalName имеет значение book для элемента &lt;bk:book&gt;.Для безымянных типов узлов (например, Text, Comment и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>При переопределении в производном классе разрешает префикс пространства имен в ограниченной области действия текущего элемента.</summary>
      <returns>URI пространства имен, с которым сопоставлен префикс, или значение null, если соответствующий префикс не найден.</returns>
      <param name="prefix">Префикс, для которого требуется обработать URI пространства имен.Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута. </param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="i" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <returns>true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Проверенное имя атрибута. </param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="name" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <returns>true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
      <exception cref="T:System.NullReferenceException">Значением параметра <paramref name="name" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Проверяет, является ли текущий узел узлом содержимого (не являющийся пробелом текст, CDATA, Element, EndElement, EntityReference или EndEntity).Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит в конец файла или к следующему узлу содержимого.Пропускаются узлы следующих типов: ProcessingInstruction, DocumentType, Comment, Whitespace или SignificantWhitespace.</summary>
      <returns>Значение <see cref="P:System.Xml.XmlReader.NodeType" /> для текущего узла, найденного с помощью метода, или значение XmlNodeType.None, если средство чтения достигло конца потока входных данных.</returns>
      <exception cref="T:System.Xml.XmlException">Вj входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>Асинхронно проверяет, является ли текущий узел узлом содержимого.Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит в конец файла или к следующему узлу содержимого.</summary>
      <returns>Значение <see cref="P:System.Xml.XmlReader.NodeType" /> для текущего узла, найденного с помощью метода, или значение XmlNodeType.None, если средство чтения достигло конца потока входных данных.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>При переопределении в производном классе перемещает к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение true, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>При переопределении в производном классе перемещает к первому атрибуту.</summary>
      <returns>Значение true, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>При переопределении в производном классе перемещает к следующему атрибуту.</summary>
      <returns>Значение true, если присутствует следующий атрибут; значение false, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>При переопределении в производном классе получает полное имя текущего узла.</summary>
      <returns>Проверенное имя текущего узла.Например, Name — это bk:book для элемента &lt;bk:book&gt;.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlReader.NodeType" /> узла.Следующие типы узлов возвращают представленные значения.Другие типы узлов возвращают пустую строку.Тип узла Name AttributeИмя атрибута. DocumentTypeИмя типа документа. ЭлементИмя тега. EntityReferenceИмя сущности, на которую существует ссылка. ProcessingInstructionКонечное приложение инструкции обработки. XmlDeclarationИсходная строка xml. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>При переопределении в производном классе получает URI пространства имен (определенное в спецификации W3C Namespace) узла, на котором расположено средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>При переопределении в производном классе получает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс XmlNameTable, позволяющий получать в узле атомизированную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>При переопределении в производном классе получает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, представляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>При переопределении в производном классе получает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>При переопределении в производном классе считывает из потока следующий узел.</summary>
      <returns>Значение true, если чтение прошло успешно; значение false, если отсутствуют узлы для чтения.</returns>
      <exception cref="T:System.Xml.XmlException">При синтаксическом анализе XML возникла ошибка. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Асинхронно считывает следующий узел из потока.</summary>
      <returns>Значение true, если чтение прошло успешно; значение false, если отсутствуют узлы для чтения.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>При переопределении в производном классе разбирает значение атрибута в один или более узлов Text, EntityReference или EndEntity.</summary>
      <returns>Значение true, если присутствуют возвращаемые узлы.Значение false, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.Пустой атрибут (например, misc="") возвращает значение true с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Прочитывает содержимое объекта указанного типа.</summary>
      <returns>Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
      <param name="returnType">Тип возвращаемого значения.Примечание. С выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может иметь тип <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.Например, этот объект можно использовать при преобразовании объекта <see cref="T:System.Xml.XmlQualifiedName" /> в xs:string.Это значение может быть равно null.</param>
      <exception cref="T:System.FormatException">Содержимое имеет неверный формат для конечного типа.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="returnType" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не принадлежит к поддерживаемому типу узлов.Дополнительные сведения приведены в таблице ниже.</exception>
      <exception cref="T:System.OverflowException">Считывание Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Асинхронно считывает содержимое в качестве объекта указанного типа.</summary>
      <returns>Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
      <param name="returnType">Тип возвращаемого значения.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="buffer" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />  не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="buffer" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Считывает текстовое содержимое в текущей позиции как объект Boolean.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.DateTime" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.Decimal" />.</summary>
      <returns>Текстовое содержимое в текущей позиции как объект <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Считывает содержимое текста в текущей позиции как число с плавающей запятой двойной точности.</summary>
      <returns>Текстовое содержимое в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Считывает содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Считывает содержимое текста в текущей позиции как целое 32-разрядное число со знаком.</summary>
      <returns>Содержимое как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Считывает содержимое текста в текущей позиции как целое 64-разрядное число со знаком.</summary>
      <returns>Содержимое как целое 64-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Считывает содержимое текста в текущей позиции как значение объект <see cref="T:System.Object" />.</summary>
      <returns>Текстовое содержимое является самым подходящим объектом CLR.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Асинхронно считывает текстовое содержимое в текущей позиции как значение объекта <see cref="T:System.Object" />.</summary>
      <returns>Текстовое содержимое является самым подходящим объектом CLR.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.String" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Асинхронно считывает текстовое содержимое в текущей позиции как объект <see cref="T:System.String" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Считывает содержимое элемента в качестве требуемого типа.</summary>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <param name="returnType">Тип возвращаемого значения.Примечание. С выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может иметь тип <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.OverflowException">Считывание Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Проверяет, сопоставлен ли URI локального имени и пространства имен с URI текущего элемента, затем считывает содержимое элемента требуемого типа.</summary>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <param name="returnType">Тип возвращаемого значения.Примечание. С выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может иметь тип <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
      <exception cref="T:System.OverflowException">Считывание Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Асинхронно считывает содержимое элемента в качестве требуемого типа.</summary>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <param name="returnType">Тип возвращаемого значения.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое  Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="buffer" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает элемент и раскодирует содержимое Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое  BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="buffer" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает элемент и раскодирует содержимое BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.Boolean" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в объект <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Boolean" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Boolean" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в объект <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.DateTime" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в объект <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Decimal" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в объект <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в число с плавающей запятой двойной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой двойной точности.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в число с плавающей запятой одиночной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой одинарной точности.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в число с плавающей запятой одиночной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Считывает текущий элемент и возвращает содержимое как 32-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента не может быть преобразовано в 32-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 32-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 32-разрядное число со знаком.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента не может быть преобразовано в 32-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Считывает текущий элемент и возвращает содержимое как 64-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 64-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента не может быть преобразовано в 64-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 64-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 64-разрядное число со знаком.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента не может быть преобразовано в 64-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Считывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа.Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR.Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа.Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR.Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Асинхронно считывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа.Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR.Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в объект <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.-или-Содержимое элемента нельзя преобразовать в объект <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Асинхронно считывает текущий элемент и возвращает содержимое в виде объекта <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Проверяет, является ли текущий узел содержимого закрывающим тегом, и перемещает средство чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">Текущий узел не является закрывающим тегом или если во входном потоке обнаружен неверный XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>При переопределении в производном классе считывает все содержимое, включая разметку, как строку.</summary>
      <returns>Все содержимое XML-кода, включая разметку, на текущем узле.Если текущий узел не имеет дочерних узлов, возвращается пустая строка.Если текущий узел является элементом или атрибутом, возвращается пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">Неправильный формат XML, или при синтаксическом анализе XML произошла ошибка. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Асинхронно считывает все содержимое, включая разметку, как строку.</summary>
      <returns>Все содержимое XML-кода, включая разметку, на текущем узле.Если текущий узел не имеет дочерних узлов, возвращается пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>При переопределении в производном классе считывает содержимое в виде строки, включая разметку, предоставляющую этот узел и все его дочерние узлы.</summary>
      <returns>Если средство чтения находится на узле элемента или атрибута, данный метод возвращает все содержимое XML текущего узла и всех его дочерних узлов, включая разметку; в противном случае возвращается пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">Неправильный формат XML, или при синтаксическом анализе XML произошла ошибка. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Асинхронно считывает содержимое, включая разметку, представляющее этот узел и все его дочерние узлы.</summary>
      <returns>Если средство чтения находится на узле элемента или атрибута, данный метод возвращает все содержимое XML текущего узла и всех его дочерних узлов, включая разметку; в противном случае возвращается пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Проверяет, является ли текущий узел элементом и перемещает средство чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> возвращает значение false. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Проверяет, является ли текущий узел элементом с заданным <see cref="P:System.Xml.XmlReader.Name" />, и перемещает средство чтения на следующий узел.</summary>
      <param name="name">Проверенное имя элемента. </param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> возвращает значение false, или если свойство <see cref="P:System.Xml.XmlReader.Name" /> элемента не соответствует заданному значению <paramref name="name" />. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Проверяет, является ли текущий узел элементом с заданным <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />, и перемещает средство чтения на следующий узел.</summary>
      <param name="localname">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен элемента. </param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> возвращает значение false, или свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> найденного элемента не совпадают с предоставленными аргументами. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>При переопределении в производном классе получает состояние средства чтения.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Возвращает новый экземпляр XmlReader, который может использоваться для считывания текущего узла и всех его потомков.</summary>
      <returns>Новый экземпляр XmlReader со значением ReadState.Initial.Вызов метода <see cref="M:System.Xml.XmlReader.Read" /> приводит к позиционированию нового средства чтения XmlReader на узле, который являлся текущим до вызова метода ReadSubtree.</returns>
      <exception cref="T:System.InvalidOperationException">Средство чтения XmlReader не расположено на элементе при вызове этого метода.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Переводит <see cref="T:System.Xml.XmlReader" /> к следующему сопоставленному элементу-потомку с указанным проверенным именем.</summary>
      <returns>Значение true, если найден соответствующий элемент-потомок; в противном случае — значение false.Если соответствующий дочерний элемент не найден, средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) элемента.Если средство чтения <see cref="T:System.Xml.XmlReader" /> не позиционируется на элементе при вызове метода <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, последний возвращает значение false и позиция <see cref="T:System.Xml.XmlReader" /> не изменяется.</returns>
      <param name="name">Проверенное имя элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Переводит <see cref="T:System.Xml.XmlReader" /> к следующему элементу-потомку с указанным локальным именем и URI пространства имен.</summary>
      <returns>Значение true, если найден соответствующий элемент-потомок; в противном случае — значение false.Если соответствующий дочерний элемент не найден, средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) элемента.Если средство чтения <see cref="T:System.Xml.XmlReader" /> не позиционируется на элементе при вызове метода <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, последний возвращает значение false и позиция <see cref="T:System.Xml.XmlReader" /> не изменяется.</returns>
      <param name="localName">Локальное имя элемента, на который следует переместиться.</param>
      <param name="namespaceURI">URI пространства имен элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Производит чтение до обнаружения элемента с указанным проверенным именем.</summary>
      <returns>Значение true, если найден соответствующий элемент; в противном случае — false и перемещение <see cref="T:System.Xml.XmlReader" /> в конец файла.</returns>
      <param name="name">Проверенное имя элемента.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Производит чтение до обнаружения указанного URI локального имени и пространства имен.</summary>
      <returns>Значение true, если найден соответствующий элемент; в противном случае — false и перемещение <see cref="T:System.Xml.XmlReader" /> в конец файла.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Переводит XmlReader к следующему соответствующему элементу того же уровня с указанным проверенным именем.</summary>
      <returns>Значение true, если найден соответствующий элемент того же уровня; в противном случае — значение false.Если соответствующий родственный элемент не найден, XmlReader позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) родительского элемента.</returns>
      <param name="name">Проверенное имя родственного элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Переводит XmlReader к следующему элементу того же уровня с указанным локальным именем и URI пространства имен.</summary>
      <returns>Значение true, если найден соответствующий элемент того же уровня; в противном случае — значение false.Если соответствующий родственный элемент не найден, XmlReader позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) родительского элемента.</returns>
      <param name="localName">Локальное имя родственного элемента, на который следует переместиться.</param>
      <param name="namespaceURI">URI пространства имен родственного элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает большие потоки текста, внедренного в XML-документ.</summary>
      <returns>Количество символов, считанных в буфер.При отсутствии текстового содержимого возвращается нуль.</returns>
      <param name="buffer">Массив знаков, выполняющий функции буфера, в который записывается текстовое содержимое.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где <see cref="T:System.Xml.XmlReader" /> может начать копировать результаты.</param>
      <param name="count">Максимальное число копируемых в буфер символов.Этим методом возвращается фактическое количество скопированных символов.</param>
      <exception cref="T:System.InvalidOperationException">У текущего узла нет значения (значение свойства <see cref="P:System.Xml.XmlReader.HasValue" /> — false).</exception>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="buffer" /> является null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Данные XML не являются правильно сформированными.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает большие потоки текста, внедренного в XML-документ.</summary>
      <returns>Количество символов, считанных в буфер.При отсутствии текстового содержимого возвращается нуль.</returns>
      <param name="buffer">Массив знаков, выполняющий функции буфера, в который записывается текстовое содержимое.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где <see cref="T:System.Xml.XmlReader" /> может начать копировать результаты.</param>
      <param name="count">Максимальное число копируемых в буфер символов.Этим методом возвращается фактическое количество скопированных символов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>При переопределении в производном классе разрешает ссылки на сущности для узлов EntityReference.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле EntityReference; эта реализация средства чтения не может разрешить сущности (свойство <see cref="P:System.Xml.XmlReader.CanResolveEntity" /> возвращает значение false). </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Получает объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для создания этого экземпляра средства чтения.Если это средство чтения не было создано с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />, это свойство возвращает null.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Асинхронно пропускает дочерние узлы текущего узла.</summary>
      <returns>Возвращает текущий узел.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlReader" /> был вызван без задания флага <see cref="P:System.Xml.XmlReaderSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlReaderSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>При переопределении в производном классе получает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlReader.NodeType" /> узла.В следующей таблице представлен список возвращаемых типов узлов со значениями.Все другие типы узлов возвращают String.Empty.Тип узла Value AttributeЗначение атрибута. CDATAСодержимое раздела CDATA. CommentСодержимое комментария. DocumentTypeВнутреннее подмножество. ProcessingInstructionПолное содержимое, исключая конечное приложение. SignificantWhitespaceПустое пространство в разметке модели со смешанным содержимым. TextСодержимое текстового узла. WhitespaceПустое пространство между разметкой. XmlDeclarationСодержимое объявления. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Получает тип CLR текущего узла.</summary>
      <returns>Тип CLR, соответствующий типизированному значению узла.По умолчанию используется System.String.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>При переопределении в производном классе получает текущую область xml:lang.</summary>
      <returns>Текущая область xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>При переопределении в производном классе получает текущую область xml:space.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlSpace" />.Если область xml:space отсутствует, данное свойство по умолчанию принимает значение XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlReader" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" /> с использованием объекта <see cref="T:System.Xml.XmlResolver" />.</summary>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используемый для разрешения внешних документов.</param>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Получает или задает признак возможности применения асинхронных методов <see cref="T:System.Xml.XmlReader" /> к отдельному экземпляру <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>true, если можно использовать асинхронные методы; в противном случае значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
      <returns>true для проверки символов; в противном случае — значение false.Значение по умолчанию — true.Note:Если средство чтения <see cref="T:System.Xml.XmlReader" /> обрабатывает текстовые данные, всегда происходит проверка допустимости XML-имен и текстового содержимого независимо от значения этого свойства.Задание свойству <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> значения false отключает проверку символов для ссылок на сущности символов.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Точная копия объекта <see cref="T:System.Xml.XmlReaderSettings" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Возвращает или задает значение, указывающее, следует ли закрыть базовый поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения.</summary>
      <returns>true — закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ConformanceLevel" />.Значение по умолчанию — ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Получает или задает перечисление <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Перечисление <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Возвращает или задает значение, указывающее, следует ли игнорировать комментарии.</summary>
      <returns>true — игнорировать комментарии; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Возвращает или задает значение, указывающее, следует ли игнорировать инструкции обработки.</summary>
      <returns>true — игнорировать инструкции обработки; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Возвращает или задает значение, определяющее, будет ли игнорироваться незначительное пустое пространство.</summary>
      <returns>true — игнорировать пробелы; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Возвращает или задает смещение номера строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Смещение номера строки.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Возвращает или задает смещение позиции строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Смещение номера строки.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в документе, которые возникают вследствие разворачивания сущностей.</summary>
      <returns>Наибольшее число символов для чтения.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в XML-документе.Нуль (0) означает отсутствие ограничений на размер XML-документа.Значение, не равное нулю, указывает максимальный размер в символах.</summary>
      <returns>Наибольшее число символов в XML-документе.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.XmlNameTable" />, используемый для сравнений атомизированных строк.</summary>
      <returns>Таблица <see cref="T:System.Xml.XmlNameTable" />, в которой хранятся все разделенные строки, используемые экземплярами <see cref="T:System.Xml.XmlReader" />, созданными с помощью объекта <see cref="T:System.Xml.XmlReaderSettings" />.По умолчанию используется значение null.Созданный экземпляр <see cref="T:System.Xml.XmlReader" /> будет использовать новый пустой объект <see cref="T:System.Xml.NameTable" />, если это значение будет равно null.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.Если задано значение null, создается исключение <see cref="T:System.Xml.XmlException" /> при попытке <see cref="T:System.Xml.XmlReader" /> получить доступ к внешнему ресурсу.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Разрешает внешние ресурсы XML, имена которых заданы с помощью URI. </summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>При переопределении в производном классе отображает URI в объект, содержащий текущий ресурс.</summary>
      <returns>Объект <see cref="T:System.IO.Stream" /> или значение null, если в качестве типа не указан поток.</returns>
      <param name="absoluteUri">Универсальный код ресурса (URI), возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />. </param>
      <param name="role">При разрешении URI в текущей версии данный параметр не используется.Это используется с целью расширения дальнейших возможностей.Например, его можно отобразить в xlink:role и использовать в других скриптах при реализации в качестве аргумента.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта.В текущей версии возвращаются только объекты <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> не относится к типу Stream. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> имеет значение null. </exception>
      <exception cref="T:System.Exception">Возникла ошибка среды выполнения (например, разрыв подключения к серверу). </exception>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>При переопределении в производном классе разрешает абсолютный URI из базовых и относительных URI.</summary>
      <returns>Объект <see cref="T:System.Uri" />, предоставляющий абсолютный URI или значение null, если невозможно разрешить относительный URI.</returns>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI. </param>
      <param name="relativeUri">URI, которые нужно разрешить.URI может быть как абсолютным, так и относительным.Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />.Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relativeUri" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Этот метод позволяет сопоставителю возвращать типы, отличные от <see cref="T:System.IO.Stream" />.</summary>
      <returns>true, если параметр типа является <see cref="T:System.IO.Stream" />; в противном случае — значение false.</returns>
      <param name="absoluteUri">Универсальный код ресурса (URI).</param>
      <param name="type">Возвращаемый тип.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Задает текущую область xml:space.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>Область xml:space равна default.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Область xml:space отсутствует.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>Область xml:space равна preserve.</summary>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Представляет тип XML для строки.Это позволяет считывать строку как определенный тип XML (например, тип раздела CDATA).</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Тип CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Тип ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Тип ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Тип ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Тип ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Тип IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Тип IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Тип NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Тип NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Тип NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Тип отсутствует.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Тип NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Тип QName.</summary>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Представляет средство записи, обеспечивающее быстрый прямой способ (без кэширования) создания потоков файлов, содержащих XML-данные.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>При переопределении в производном классе закрывает данный поток и основной поток.</summary>
      <exception cref="T:System.InvalidOperationException">Выполнен вызов для записи дополнительных выходных после вызова Close или результатом данного вызова является недопустимый XML-документ. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Поток, в который будет выполняться запись.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="stream" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием потока и объекта <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Поток, в который будет выполняться запись.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlWriter" />.Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="stream" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Объект <see cref="T:System.IO.TextWriter" />, в который нужно выполнить запись.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="text" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием объектов <see cref="T:System.IO.TextWriter" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Объект <see cref="T:System.IO.TextWriter" />, в который нужно выполнить запись.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному <see cref="T:System.IO.TextWriter" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlWriter" />.Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="text" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" />, в который осуществляется запись.Содержимое, записанное <see cref="T:System.Xml.XmlWriter" />, добавляется к <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="builder" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием объектов <see cref="T:System.Text.StringBuilder" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" />, в который осуществляется запись.Содержимое, записанное <see cref="T:System.Xml.XmlWriter" />, добавляется к <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlWriter" />.Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="builder" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, который следует использовать в качестве базового средства записи.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="writer" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанных объектов <see cref="T:System.Xml.XmlWriter" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, который следует использовать в качестве базового средства записи.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра <see cref="T:System.Xml.XmlWriter" />.Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="writer" /> является null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xml.XmlWriter" />, а при необходимости освобождает также и управляемые ресурсы.</summary>
      <param name="disposing">Значение true, чтобы освободить управляемые и неуправляемые ресурсы; значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>При переопределении в производном классе сбрасывает в основной поток содержимое буфера, а также очищает основной поток.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Асинхронно сбрасывает в основной поток содержимое буфера, а также очищает основной поток.</summary>
      <returns>Задача, которая представляет асинхронную операцию Flush.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>При переопределении в производном классе возвращает ближайший префикс для URI пространства имен, определенный в текущей области пространства имен.</summary>
      <returns>Соответствующий префикс или значение null, если в текущей области отсутствует соответствующий URI пространства имен.</returns>
      <param name="ns">URI пространства имен, префикс которого нужно найти. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> равен null или String.Empty. </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Получает объект <see cref="T:System.Xml.XmlWriterSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriterSettings" />, используемый для создания этого экземпляра средства записи.Если это средство записи не было создано с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />, это свойство возвращает null.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>При переопределении в производном классе записывает все атрибуты, найденные в текущей позиции в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">XmlReader, из которого происходит копирование атрибутов.</param>
      <param name="defattr">Если значение равно true, копирует атрибуты по умолчанию из XmlReader; в противном случае — false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> имеет значение null. </exception>
      <exception cref="T:System.Xml.XmlException">Средство чтения не расположено на узле element, attribute или XmlDeclaration. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Асинхронно записывает все атрибуты, найденные в текущей позиции в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteAttributes.</returns>
      <param name="reader">XmlReader, из которого происходит копирование атрибутов.</param>
      <param name="defattr">Если значение равно true, копирует атрибуты по умолчанию из XmlReader; в противном случае — false.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>При переопределении в производном классе считывает атрибут с указанным локальным именем и значением.</summary>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="value">Значение атрибута. </param>
      <exception cref="T:System.InvalidOperationException">Состояние средства записи отличается от WriteState.Element, или средство записи закрыто. </exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение атрибута xml:space или xml:lang. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает атрибут с указанным локальным именем, URI пространства имен и значением.</summary>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен, который связывается с атрибутом. </param>
      <param name="value">Значение атрибута. </param>
      <exception cref="T:System.InvalidOperationException">Состояние средства записи отличается от WriteState.Element, или средство записи закрыто. </exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение атрибута xml:space или xml:lang. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>При переопределении в производном классе считывает атрибут с указанным префиксом, локальным именем, URI пространства имен и значением.</summary>
      <param name="prefix">Префикс пространства имен атрибута. </param>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
      <param name="value">Значение атрибута. </param>
      <exception cref="T:System.InvalidOperationException">Состояние средства записи отличается от WriteState.Element, или средство записи закрыто. </exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение атрибута xml:space или xml:lang. </exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="localName" /> или <paramref name="ns" /> равен null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Асинхронно записывает атрибут с указанным префиксом, локальным именем, URI пространства имен и значением.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteAttributeString.</returns>
      <param name="prefix">Префикс пространства имен атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">URI пространства имен атрибута.</param>
      <param name="value">Значение атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе преобразует указанный набор двоичных байтов к виду Base64 и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов. </param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов. </param>
      <param name="count">Количество записываемых байтов. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. -или-Длина буфера за вычетом <paramref name="index" /> меньше значения <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно преобразует указанный набор двоичных байтов к виду Base64 и выводит получившийся текст.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteBase64.</returns>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе преобразует указанный набор двоичных байтов к виду BinHex и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов. </param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов. </param>
      <param name="count">Количество записываемых байтов. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто или находится в состоянии ошибки.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. -или-Длина буфера за вычетом <paramref name="index" /> меньше значения <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Асинхронно преобразует указанный набор двоичных байтов к виду BinHex и выводит получившийся текст.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteBinHex.</returns>
      <param name="buffer">Кодируемый массив байтов.</param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов.</param>
      <param name="count">Количество записываемых байтов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>При переопределении в производном классе считывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в блок CDATA. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Асинхронно записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteCData.</returns>
      <param name="text">Текст, записываемый в блок CDATA.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>При переопределении в производном классе вызывает создание сущности знака для указанного значения знака Юникода.</summary>
      <param name="ch">Знак Юникода, для которого создается сущность. </param>
      <exception cref="T:System.ArgumentException">Символ находится в диапазоне символов суррогатных пар — 0xd800 - 0xdfff. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Асинхронно вызывает создание сущности знака для указанного значения знака Юникода.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteCharEntity.</returns>
      <param name="ch">Знак Юникода, для которого создается сущность.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе записывает текст в один буфер за раз.</summary>
      <param name="buffer">Массив знаков, содержащий текст для записи. </param>
      <param name="index">Позиция в буфере, с которой начинается запись текста. </param>
      <param name="count">Количество символов для записи. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. -или-Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="buffer" /> является недопустимым.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> выходит за пределы буфера <paramref name="buffer" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает текст в один буфер за раз.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteChars.</returns>
      <param name="buffer">Массив знаков, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>При переопределении в производном классе считывает примечание &lt;!--...--&gt;, содержащее заданный текст.</summary>
      <param name="text">Текст, записываемый в примечание. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Асинхронно записывает примечание &lt;!--...--&gt;, содержащее заданный текст.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteComment.</returns>
      <param name="text">Текст, записываемый в примечание.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <param name="name">Имя DOCTYPE.Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов. </param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение null, а параметр <paramref name="sysid" /> отличен от null, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента. </param>
      <param name="subset">Если не равно NULL, записывается [subset], где subset замещается значением данного аргумента. </param>
      <exception cref="T:System.InvalidOperationException">Этот метод был вызван вне пролога (после корневого элемента). </exception>
      <exception cref="T:System.ArgumentException">Значение для <paramref name="name" /> приведет к недопустимому XML. </exception>
      <exception cref="T:System.Xml.XmlException">Недопустимый параметр <paramref name="name" />. </exception>
      <exception cref="T:System.NullReferenceException">Параметр <paramref name=" name" />, <paramref name=" pubid" />, <paramref name=" sysid" /> или <paramref name="subset" /> равен null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Асинхронно записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteDocType.</returns>
      <param name="name">Имя DOCTYPE.Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно null, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов.</param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение null, а параметр <paramref name="sysid" /> отличен от null, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента.</param>
      <param name="subset">Если не равно нулю, записывается [subset], где subset замещается значением данного аргумента.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>При переопределении в производном классе записывает элемент с указанным локальным именем и значением.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <param name="value">Значение элемента. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — null или пустая строка.-или-Значение параметра является недопустимым.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает элемент с указанным локальным именем, URI пространства имен и значением.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который сопоставляется с элементом. </param>
      <param name="value">Значение элемента. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — null или пустая строка.-или-Значения параметра являются недопустимыми. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Записывает элемент с заданным локальным именем и URI пространства имен.</summary>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен элемента.</param>
      <param name="value">Значение элемента.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — null или пустая строка.-или-Значение параметра является недопустимым.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Асинхронно записывает элемент с заданным префиксом, локальным именем, URI пространства имен и значением.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteElementString.</returns>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен элемента.</param>
      <param name="value">Значение элемента.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>При переопределении в производном классе закрывает предыдущий вызов <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Асинхронно закрывает предыдущий вызов <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteEndAttribute.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>При переопределении в производном классе закрывает все открытые элементы или атрибуты и возвращает средство записи в состояние Start.</summary>
      <exception cref="T:System.ArgumentException">Недопустимый документ XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Асинхронно закрывает все открытые элементы или атрибуты и возвращает средство записи в состояние Start.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteEndDocument.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>При переопределении в производном классе закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
      <exception cref="T:System.InvalidOperationException">Это приводит к недопустимому XML-документу. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Асинхронно закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteEndElement.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>При переопределении в производном классе записывает ссылку на сущность в виде &amp;name;.</summary>
      <param name="name">Имя ссылки на сущность. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Асинхронно выводит ссылку на сущность в виде &amp;name;.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteEntityRef.</returns>
      <param name="name">Имя ссылки на сущность.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>При переопределении в производном классе закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Асинхронно закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteFullEndElement.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>При переопределении в производном классе считывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> не является допустимым именем XML; или значение параметра <paramref name="name" /> — null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Асинхронно записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteName.</returns>
      <param name="name">Записываемое имя.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>При переопределении в производном классе считывает указанное имя, гарантируя допустимость NmToken согласно рекомендациям W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> не является допустимым NmToken; или значение параметра <paramref name="name" /> — null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Асинхронно записывает указанное имя, гарантируя его допустимость в качестве NmToken согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteNmToken.</returns>
      <param name="name">Записываемое имя.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>При переопределении в производном классе копирует все данные из средства чтения в средство записи и перемещает средство чтения в начало следующего узла того же уровня.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="defattr">Если значение равно true, копирует атрибуты по умолчанию из XmlReader; в противном случае — false. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> содержит недопустимые символы. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Асинхронно копирует все данные из средства чтения в средство записи и перемещает средство чтения в начало следующего узла того же уровня.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteNode.</returns>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="defattr">Если значение равно true, копирует атрибуты по умолчанию из XmlReader; в противном случае — false.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>При переопределении в производном классе выводит инструкцию обработки с пробелом между именем и текстом в следующем виде: &lt;? &lt;?имя текст?&gt;.</summary>
      <param name="name">Имя инструкции по обработке. </param>
      <param name="text">Текст для инструкции по обработке. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML.<paramref name="name" /> равен null или String.Empty.Этот метод используется для создания XML-объявления после того, как метод <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> уже вызван. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Асинхронно выводит инструкцию обработки с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteProcessingInstruction.</returns>
      <param name="name">Имя инструкции обработки.</param>
      <param name="text">Текст для инструкции обработки.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>При переопределении в производном классе считывает проверенное имя пространства имен.Этот метод ищет префикс для пространства имен в его области.</summary>
      <param name="localName">Локальное имя для записи. </param>
      <param name="ns">URI пространства имен для имени. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> — String.Empty или недопустимое имя. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="localName" /> или <paramref name="ns" /> равняется null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Асинхронно записывает проверенное имя пространства имен.Этот метод ищет префикс для пространства имен в его области.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteQualifiedName.</returns>
      <param name="localName">Локальное имя для записи.</param>
      <param name="ns">URI пространства имен для имени.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает исходную разметку из буфера знаков (вручную) при переопределении в производном классе.</summary>
      <param name="buffer">Массив знаков, содержащий текст для записи. </param>
      <param name="index">Позиция в буфере, с которой начинается запись текста. </param>
      <param name="count">Количество символов для записи. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. -или-Длина буфера за вычетом <paramref name="index" /> меньше значения <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Считывает исходную разметку из строки (вручную) при переопределении в производном классе.</summary>
      <param name="data">Строка, содержащая текст для записи. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно и вручную записывает исходную разметку из буфера знаков.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteRaw.</returns>
      <param name="buffer">Массив знаков, содержащий текст для записи.</param>
      <param name="index">Позиция в буфере, с которой начинается запись текста.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Асинхронно и вручную записывает исходную разметку из строки.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteRaw.</returns>
      <param name="data">Строка, содержащая текст для записи.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Записывает начала атрибута с заданным локальным именем.</summary>
      <param name="localName">Локальное имя атрибута.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Записывает начала атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает начало атрибута с указанным префиксом, локальным именем и URI пространства имен.</summary>
      <param name="prefix">Префикс пространства имен атрибута. </param>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Асинхронно записывает начало атрибута с заданным префиксом, локальным именем и URI пространства имен.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteStartAttribute.</returns>
      <param name="prefix">Префикс пространства имен атрибута.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="ns">URI пространства имен атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>При переопределении в производном классе записывает объявление XML с номером версии 1.0.</summary>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>При переопределении в производном классе записывает объявление XML с номером версии "1.0" и автономным атрибутом.</summary>
      <param name="standalone">Если значение равно true, записывается "standalone=yes"; если false, записывается "standalone=no". </param>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Асинхронно записывает объявление XML с номером версии 1.0.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteStartDocument.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Асинхронно записывает объявление XML с номером версии 1.0 и атрибутом standalone.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteStartDocument.</returns>
      <param name="standalone">Если значение равно true, записывается "standalone=yes"; если false, записывается "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>При переопределении в производном классе считывает открывающий тег с указанным локальным именем.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>При переопределении в производном классе записывает указанный открывающий тег и связывает его с заданным пространством имен.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который связывается с элементом.Если пространство имен уже находится в области и с ним связан префикс, средство записи автоматически запишет этот префикс.</param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс URI пространства имен элемента. </param>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который сопоставляется с элементом. </param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Асинхронно записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteStartElement.</returns>
      <param name="prefix">Префикс URI пространства имен элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен, который связывается с элементом.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Возвращает состояние средства записи при переопределении в производном классе.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Записывает заданное текстовое содержимое при переопределении в производном классе.</summary>
      <param name="text">Текст для записи. </param>
      <exception cref="T:System.ArgumentException">Строка текста содержит недопустимую суррогатную пару. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Асинхронно записывает заданное текстовое содержимое.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteString.</returns>
      <param name="text">Текст для записи.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>При переопределении в производном классе создает и записывает сущность знака-заместителя для пары знаков-заместителей.</summary>
      <param name="lowChar">Младший знак-заместитель.Это должно быть значение в диапазоне от 0xDC00 до 0xDFFF.</param>
      <param name="highChar">Старший знак-заместитель.Это должно быть значение в диапазоне от 0xD800 до 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Передана недопустимая суррогатная пара символов. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Асинхронно создает и записывает сущность знака-заместителя для пары знаков-заместителей.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteSurrogateCharEntity.</returns>
      <param name="lowChar">Младший знак-заместитель.Это должно быть значение в диапазоне от 0xDC00 до 0xDFFF.</param>
      <param name="highChar">Старший знак-заместитель.Это должно быть значение в диапазоне от 0xD800 до 0xDBFF.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Записывает значение типа <see cref="T:System.Boolean" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Boolean" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Записывает значение типа <see cref="T:System.DateTime" />.</summary>
      <param name="value">Значение типа <see cref="T:System.DateTime" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Записывает значение типа <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">Значение типа <see cref="T:System.DateTimeOffset" /> для записи.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Записывает значение типа <see cref="T:System.Decimal" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Decimal" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Записывает значение типа <see cref="T:System.Double" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Double" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Записывает значение типа <see cref="T:System.Int32" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Int32" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Записывает значение типа <see cref="T:System.Int64" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Int64" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Записывает значение объекта.</summary>
      <param name="value">Значение объекта для записи. Примечание. С выпуском платформы .NET Framework 3.5 этот метод принимает <see cref="T:System.DateTimeOffset" /> в качестве параметра.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="value" /> является null.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто или находится в состоянии ошибки.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Записывает число с плавающей запятой обычной точности.</summary>
      <param name="value">Обычной точности число с плавающей запятой для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Записывает значение типа <see cref="T:System.String" />.</summary>
      <param name="value">Значение типа <see cref="T:System.String" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>При переопределении в производном классе считывает указанный пробел.</summary>
      <param name="ws">Строка пробелов. </param>
      <exception cref="T:System.ArgumentException">Строка содержит символы, отличные от пробелов. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Асинхронно записывает указанный пробел.</summary>
      <returns>Задача, которая представляет асинхронную операцию WriteWhitespace.</returns>
      <param name="ws">Строка пробелов.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван до завершения предыдущей асинхронной операции.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Уже идет асинхронная операция"</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="T:System.Xml.XmlWriter" /> был вызван без задания флага <see cref="P:System.Xml.XmlWriterSettings.Async" /> как true.В этом случае порождается <see cref="T:System.InvalidOperationException" /> с сообщением "Задайте XmlWriterSettings.Async равным true, чтобы использовать асинхронные методы".</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>При переопределении в производном классе получает текущую область xml:lang.</summary>
      <returns>Текущая область xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>При переопределении в производном классе получает объект <see cref="T:System.Xml.XmlSpace" />, представляющий текущую область xml:space.</summary>
      <returns>Объект XmlSpace, представляющий текущую область xml:space.Значение Смысл ОтсутствуютЗначение, задаваемое по умолчанию, если область xml:space отсутствует. По умолчаниюТекущая область — xml:space="default". PreserveТекущая область — xml:space="preserve". </returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlWriter" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Получает или задает признак возможности применения асинхронных методов <see cref="T:System.Xml.XmlWriter" /> к отдельному экземпляру <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>true, если можно использовать асинхронные методы; в противном случае значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
      <returns>true для проверки символов; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Точная копия объекта <see cref="T:System.Xml.XmlWriterSettings" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Возвращает или задает значение, указывающее, следует ли объекту <see cref="T:System.Xml.XmlWriter" /> закрывать также и базовый поток или <see cref="T:System.IO.TextWriter" /> при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>true, если следует закрыть базовый поток или <see cref="T:System.IO.TextWriter" />; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ConformanceLevel" />.Значение по умолчанию — ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Получает или задает используемую кодировку текста.</summary>
      <returns>Используемая кодировка текста.По умолчанию используется Encoding.UTF8.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать отступ для элементов.</summary>
      <returns>true, если необходимо записывать отдельные элементы в новых строках с отступом; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Возвращает или задает строку символов, которую следует использовать при отступах.Этот параметр используется, если значение свойства <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно true.</summary>
      <returns>Строка символов, которую следует использовать при отступах.Может принять любое строчное значение.Однако в целях обеспечения допустимого XML-кода, необходимо указывать только допустимые символы строковых пробелов, например символы пробела, табуляции, возврата каретки или перевода строки.По умолчанию используется два пробела.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> присвоено значение null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Получает или задает перечисление <see cref="T:System.Xml.NamespaceHandling" />, которое указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.Чтобы дубликат пространства имен был удален, должны совпадать префиксы пространств имен.</summary>
      <returns>Перечисление <see cref="T:System.Xml.NamespaceHandling" />, которое указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Возвращает или задает строку символов, которую следует использовать для разрывов строк. </summary>
      <returns>Строка символов, которую следует использовать для разрывов строк.Может принять любое строчное значение.Однако в целях обеспечения допустимого XML-кода, необходимо указывать только допустимые символы строковых пробелов, например символы пробела, табуляции, возврата каретки или перевода строки.Значение по умолчанию — \r\n (возврат каретки, новая строка).</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> присвоено значение null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Возвращает или задает значение, показывающее, осуществляется нормализация разрывов строк в выходных данных.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.NewLineHandling" />.Значение по умолчанию — <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Возвращает или задает значение, указывающее, следует ли записывать атрибуты в новой строке.</summary>
      <returns>true, если необходимо записывать атрибуты в отдельные строки; в противном случае — значение false.Значение по умолчанию — false.Note:Этот параметр ни на что не влияет, если значение свойства <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно false.Если значение <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> равно true, каждому атрибуту предшествует новая строка и дополнительный уровень отступа.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Возвращает или задает значение, определяющее, следует ли записывать XML-объявление.</summary>
      <returns>true для пропуска объявления XML; в противном случае — false.Значением по умолчанию является false; XML-объявление записывается.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Получает или задает значение, указывающее, будет ли <see cref="T:System.Xml.XmlWriter" /> добавлять закрывающие теги во все незакрытые элементы при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>true, если все незакрытые теги элементов будут закрываться; в противном случае значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.Xml.XmlXapResolver">
      <summary>Тип <see cref="T:System.Xml.XmlXapResolver" /> используется для разрешения ресурсов в пакете XAP приложения Windows Phone. </summary>
    </member>
    <member name="M:System.Xml.XmlXapResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlXapResolver" />. </summary>
    </member>
    <member name="M:System.Xml.XmlXapResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Сопоставляет код URI объекту, содержащему фактический ресурс.</summary>
      <returns>Объект System.IO.Stream. Если поток не найден, возникает исключение.</returns>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В текущей версии .NET Framework для Windows Phone этот параметр не используется при распознавании URI. Это используется с целью расширения дальнейших возможностей. Например, его можно отобразить в xlink:role и использовать в других скриптах при реализации в качестве аргумента.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта. В текущей версии возвращаются только объекты System.IO.Stream. </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Этот класс предусмотрен для обеспечения совместимости интерфейса. Он не предназначен для использования в коде Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Указывает, требуется ли префикс пространства имен для атрибутов или элементов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>Форма элемента и атрибута не указана в схеме.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Для элементов и атрибутов необходим префикс пространства имен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Префикс пространства имен для элементов и атрибутов не требуется.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Этот класс предусмотрен для обеспечения совместимости интерфейса. Он не предназначен для использования в коде Windows Phone.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Этот класс предусмотрен для обеспечения совместимости интерфейса. Он не предназначен для использования в коде Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Этот класс предусмотрен для обеспечения совместимости интерфейса. Он не предназначен для использования в коде Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Представляет собой уровень серьезности события проверки.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Указывает, что при проверке документа экземпляра произошла ошибка.Это относится к определениям типов документов (DTD) и схемам языка определения схем XML (XSD).Ограничения по проверке консорциума World Wide Web (W3C) считаются ошибками.Если обработчик событий проверки отсутствует, в связи с ошибками возникает исключение.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Указывает, что произошло событие проверки, не являющееся ошибкой.Если отсутствует DTD или схема XML, по которой можно выполнить проверку определенного элемента или атрибута, обычно выдается предупреждение.В отличие от ошибок, при предупреждениях не происходит исключение для них также отсутствует обработчик событий проверки.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Представляет типы схем языка определения схем W3C XML (XSD).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Любое атомарное значение объединения.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Тип схемы W3C XML xs:anyURI.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Тип схемы W3C XML xs:base64Binary.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Тип схемы W3C XML xs:boolean.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Тип схемы W3C XML xs:byte.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Тип схемы W3C XML xs:date.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Тип схемы W3C XML xs:dateTime.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Тип схемы W3C XML xs:decimal.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Тип схемы W3C XML xs:double.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Тип схемы W3C XML xs:Duration.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Тип схемы W3C XML xs:ENTITY.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Тип схемы W3C XML xs:float.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Тип схемы W3C XML xs:gDay.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Тип схемы W3C XML xs:gMonth.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Тип схемы W3C XML xs:gMonthDay.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Тип схемы W3C XML xs:gYear.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Тип схемы W3C XML xs:gYearMonth.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Тип схемы W3C XML xs:hexBinary.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Тип схемы W3C XML xs:ID.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Тип схемы W3C XML xs:IDREF.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Тип схемы W3C XML xs:int.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Тип схемы W3C XML xs:integer.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Элемент в качестве узла или атомарного значения.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Тип схемы W3C XML xs:language.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Тип схемы W3C XML xs:long.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Тип схемы W3C XML xs:Name.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Тип схемы W3C XML xs:NCName.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Тип схемы W3C XML xs:negativeInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Тип схемы W3C XML xs:NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Сведения о типе отсутствуют.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Тип схемы W3C XML xs:nonNegativeInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Тип схемы W3C XML xs:nonPositiveInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Тип схемы W3C XML xs:normalizedString.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Тип схемы W3C XML xs:NOTATION.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Тип схемы W3C XML xs:positiveInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Тип схемы W3C XML xs:QName.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Тип схемы W3C XML xs:short.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Тип схемы W3C XML xs:string.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Тип схемы W3C XML xs:time.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Тип схемы W3C XML xs:token.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Тип схемы W3C XML xs:unsignedByte.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Тип схемы W3C XML xs:unsignedInt.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Тип схемы W3C XML xs:unsignedLong.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Тип схемы W3C XML xs:unsignedShort.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Нетипированное атомарное значение.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Предоставляет настраиваемое форматирование для сериализации и десериализации XML, чтобы управлять способом сериализации и десериализации объекта с помощью <see cref="T:System.Xml.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Этот метод зарезервирован, и его не следует использовать.При реализации интерфейса <see cref="T:System.Xml.Serialization.IXmlSerializable" /> из этого метода необходимо возвратить ссылку null (Nothing в Visual Basic).</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного из метода <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml" /> и включенного в метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Создает объект из его представления XML.</summary>
      <param name="reader">Поток <see cref="T:System.Xml.XmlReader" />, из которого выполняется десериализация объекта.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Преобразует объект в представление XML.</summary>
      <param name="writer">Поток <see cref="T:System.Xml.XmlWriter" />, в который выполняется сериализация этого объекта.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.Linq.XElement" /> или <see cref="T:System.Xml.Linq.XNode" />) содержит объекты, представляющие элементе XML, который не имеет соответствующего члена в сериализуемом или десериализуемом объекте.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и задает имя элемента XML, созданное в документе XML.</summary>
      <param name="name">Имя элемента XML, создаваемое <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и задает имя элемента XML, созданное в документе XML, и его пространство имен XML.</summary>
      <param name="name">Имя элемента XML, создаваемое <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="ns">Пространство имен XML элемента XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Получает или задает имя элемента XML.</summary>
      <returns>Имя элемента XML.</returns>
      <exception cref="T:System.InvalidOperationException">Имя элемента члена массива не соответствует имени элемента, указанному свойством <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Получает или задает пространство имен XML, созданное в документе XML.</summary>
      <returns>Пространство имен XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Получает или задает порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок создания кода.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение <paramref name="value" /> является отрицательным.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Указывает, что <see cref="T:System.Xml.Serialization.XmlSerializer" /> должен выполнять сериализацию конкретного члена класса в виде массива элементов XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> и задает имя элемента XML, созданное в экземпляре документа XML.</summary>
      <param name="elementName">Имя элемента XML, создаваемое <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Получает или задает имя элемента XML, присвоенное сериализованному массиву.</summary>
      <returns>Имя элемента XML сериализованного массива.По умолчанию используется имя члена, которому назначается <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Получает или задает значение, которое указывает, является ли имя элемента XML, созданное <see cref="T:System.Xml.Serialization.XmlSerializer" />, проверенным или нет.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.Значение по умолчанию — XmlSchemaForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Получает или задает значение, которое указывает, следует ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена в виде пустого тега XML с атрибутом xsi:nil, имеющим значение true.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:nil, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Получает или задает пространство имен элемента XML.</summary>
      <returns>Пространство имен элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Получает или задает порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок создания кода.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение <paramref name="value" /> является отрицательным.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Задает производные типы, которые <see cref="T:System.Xml.Serialization.XmlSerializer" /> может поместить в сериализованный массив.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и задает имя элемента XML, созданное в документе XML.</summary>
      <param name="elementName">Имя элемента XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и задает имя элемента XML, созданное в документе XML, а также <see cref="T:System.Type" />, который можно вставить в созданный документ XML.</summary>
      <param name="elementName">Имя элемента XML. </param>
      <param name="type">
        <see cref="T:System.Type" /> сериализуемого объекта. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и задает <see cref="T:System.Type" />, который можно вставить в сериализованный массив.</summary>
      <param name="type">
        <see cref="T:System.Type" /> сериализуемого объекта. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Получает или задает тип данных XML созданного элемента XML.</summary>
      <returns>Тип данных схемы XML (XSD) в соответствии с документом консорциума W3C (www.w3.org) (часть 2 о типах данных).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Получает или задает имя созданного элемента XML.</summary>
      <returns>Имя созданного элемента XML.По умолчанию используется идентификатор члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Получает или задает значение, которое указывает, является ли имя созданного элемента XML полным.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.Значение по умолчанию — XmlSchemaForm.None.</returns>
      <exception cref="T:System.Exception">Свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> имеет значение XmlSchemaForm.Unqualified, а свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> задано. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Получает или задает значение, которое указывает, следует ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена в виде пустого тега XML с атрибутом xsi:nil, имеющим значение true.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:nil, в противном случае — значение false и отсутствие создаваемого экземпляра.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Получает или задает пространство имен созданного элемента XML.</summary>
      <returns>Пространство имен созданного элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Получает или задает уровень в иерархии элементов XML, на который оказывает влияние <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>Индекс, начинающийся с нуля, набора индексов в массиве массивов.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Получает или задает тип, допустимый в массиве.</summary>
      <returns>
        <see cref="T:System.Type" />, являющийся допустимым в массиве.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Указывает, что <see cref="T:System.Xml.Serialization.XmlSerializer" /> должен выполнять сериализацию члена класса в виде атрибута XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> и задает имя созданного атрибута XML.</summary>
      <param name="attributeName">Имя атрибута XML, создаваемое <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">Созданное имя атрибута XML. </param>
      <param name="type">
        <see cref="T:System.Type" />, используемый для хранения атрибута. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" />, используемый для хранения атрибута. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Получает или задает имя атрибута XML.</summary>
      <returns>Имя атрибута XML.По умолчанию это имя члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Получает или задает тип данных XSD атрибута XML, созданного <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных схемы XML (XSD) в соответствии с документом консорциума W3C (www.w3.org) (часть 2 о типах данных).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Получает или задает значение, которое указывает, является ли имя атрибута XML, созданное <see cref="T:System.Xml.Serialization.XmlSerializer" />, проверенным или нет.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.Значение по умолчанию — XmlForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Получает или задает пространство имен XML для атрибута XML.</summary>
      <returns>Пространство имен XML для атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Получает или задает сложный тип атрибута XML.</summary>
      <returns>Тип атрибута XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Указывает, что член может быть обнаружен посредством перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, который задает имя члена, возвращающее перечисление, которое используется для обнаружения выбора.</summary>
      <param name="name">Имя члена, которое возвращает перечисление, используемое для обнаружения выбора. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Получает или задает имя поля, возвращающего перечисление для использования при определении типов.</summary>
      <returns>Имя поля, возвращающего перечисление.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Указывает, что общее поле или свойство представляет элемент XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполняет сериализацию или десериализацию содержащего его объекта.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и задает имя элемента XML.</summary>
      <param name="elementName">Имя элемента XML сериализованного члена. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и задает имя элемента XML и производный тип для члена, к которому применяется <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.Данный тип члена используется при сериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> содержащего его объекта.</summary>
      <param name="elementName">Имя элемента XML сериализованного члена. </param>
      <param name="type">
        <see cref="T:System.Type" /> объекта, являющегося производным от типа члена. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и задает тип для члена, к которому применяется <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.Данный тип используется в <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации или десериализации содержащего его объекта.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта, являющегося производным от типа члена. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Получает или задает тип данных определения схемы XML (XSD) элемента XML, созданного <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных схемы XML (XSD) в соответствии с документом консорциума W3C (www.w3.org) (часть 2 о типах данных).</returns>
      <exception cref="T:System.Exception">Заданный тип данных схемы XML нельзя сопоставить с типом данных .NET. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Получает или задает имя созданного элемента XML.</summary>
      <returns>Имя созданного элемента XML.По умолчанию используется идентификатор члена</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Получает или задает значение, указывающее, квалифицирован ли элемент.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Получает или задает значение, которое указывает, следует ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена со значением null в виде пустого тега XML с атрибутом xsi:nil, имеющим значение true.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:nil, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Получает или задает пространство имен, назначенное элементу XML, получаемому при сериализации класса.</summary>
      <returns>Пространство имен элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Получает или задает явный порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок создания кода.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение <paramref name="value" /> является отрицательным.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Получает или задает тип объекта, используемый для представления элемента XML.</summary>
      <returns>
        <see cref="T:System.Type" /> члена.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Управляет тем, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполняет сериализацию члена перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> и задает значение XML, которое <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает или распознает (при выполнении сериализации или десериализации перечисления соответственно).</summary>
      <param name="name">Переопределяющее имя члена перечисления. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Получает или задает значение, создаваемое в экземпляре документа XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполняет сериализацию перечисления, или распознаваемое значение, когда он выполняет десериализацию члена перечисления.</summary>
      <returns>Значение, создаваемое в экземпляре документа XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполняет сериализацию перечисления, или распознаваемое значение, когда он выполняет десериализацию члена перечисления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Указывает методу <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> не выполнять сериализацию значения общего поля или общего свойства чтения/записи.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Позволяет <see cref="T:System.Xml.Serialization.XmlSerializer" /> распознать тип при сериализации или десериализации объекта.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> включаемого объекта. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Получает или задает тип объекта, который необходимо включить.</summary>
      <returns>
        <see cref="T:System.Type" /> включаемого объекта.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Указывает, что целевое свойство, параметр, возвращаемое значение или член класса содержит префиксы, связанные с пространствами имен, используемыми в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Управляет сериализацией конечного объекта атрибута как корневого элемента XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> и задает имя корневого элемента XML.</summary>
      <param name="elementName">Имя корневого элемента XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Получает или задает тип данных XSD корневого элемента XML.</summary>
      <returns>Тип данных схемы XML (XSD) в соответствии с документом консорциума W3C (www.w3.org) (часть 2 о типах данных).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Получает или задает имя элемента XML, созданное и распознанное методами <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> и <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> класса<see cref="T:System.Xml.Serialization.XmlSerializer" /> соответственно.</summary>
      <returns>Имя корневого элемента XML, который создается и распознается в экземпляре документа XML.По умолчанию это имя сериализуемого класса.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Получает или задает значение, которое указывает, следует ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена со значением null в атрибуте xsi:nil, имеющем значение true.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:nil, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Получает или задает пространство имен для корневого элемента XML.</summary>
      <returns>Пространство имен для элемента XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>При применении к типу, который реализует интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" />, сохраняет имя статического метода типа, возвращающее схему XML и <see cref="T:System.Xml.XmlQualifiedName" /> (или <see cref="T:System.Xml.Schema.XmlSchemaType" /> для анонимных типов), который управляет сериализацией типа.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> для заданного статического метода в целевом типе.</summary>
      <param name="methodName">Имя статического метода, который должен быть реализован.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Получает или задает значение, определяющее, является ли целевой класс подстановочным знаком или содержит ли схема для этого класса только элемент xs:any.</summary>
      <returns>Значение true, если класс является подстановочным знаком или если схема содержит только элемент xs:any; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Получает имя статического метода, предоставляющего схему XML типа, и имя его типа данных схемы XML.</summary>
      <returns>Имя статического метода, вызываемого инфраструктурой XML для возврата схемы XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Указывает <see cref="T:System.Xml.Serialization.XmlSerializer" /> на то, что член следует считать текстом XML при сериализации или десериализации содержащего его класса.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> члена для сериализации. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Получает или задает тип данных языка определения схемы XML (XSD) для текста, создаваемого <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных схемы XML (XSD) в соответствии с документом консорциума W3C (www.w3.org) (часть 2 о типах данных).</returns>
      <exception cref="T:System.Exception">Указанный тип данных схемы XML не может быть сопоставлен с типом данных .NET. </exception>
      <exception cref="T:System.InvalidOperationException">Заданный тип данных схемы XML не является допустимым для свойства и не может быть преобразован в тип члена. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Получает или задает тип члена.</summary>
      <returns>
        <see cref="T:System.Type" /> члена.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Управляет схемой XML, создаваемой при сериализации целевого объекта атрибута объектом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> и задает имя типа XML.</summary>
      <param name="typeName">Имя типа XML, создаваемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при выполнении сериализации экземпляра класса (и распознаваемое при выполнении десериализации экземпляра класса). </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Получает или задает значение, определяющее, является ли результирующий тип схемы анонимным типом XSD.</summary>
      <returns>Значение true, если итоговый тип схемы является анонимным типом XSD; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Получает или задает значение, указывающее, включается ли тип в документы схемы XML.</summary>
      <returns>Значение true, если нужно включить тип в документы схемы XML, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Получает или задает пространство имен типа XML.</summary>
      <returns>Пространство имен типа XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Получает или задает имя типа XML.</summary>
      <returns>Имя типа XML.</returns>
    </member>
  </members>
</doc>