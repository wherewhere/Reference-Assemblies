<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Предоставляет коллекцию, элементами которой являются типы, используемые в качестве ключей.</summary>
      <typeparam name="TItem">Типы элементов, содержащиеся в коллекции, которые также используются в качестве ключей для нее.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Возвращает первый элемент в коллекции указанного типа.</summary>
      <returns>Объект типа <paramref name="T" />, если это ссылочный тип, и значение типа <paramref name="T" />, если это тип значения. Если в коллекции нет ни одного объекта типа <paramref name="T" />, возвращается значение по умолчанию для этого типа; значение null , если это ссылочный тип, и значение 0, если это тип значения.</returns>
      <typeparam name="T">Тип элемента, который требуется найти в коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Возвращает коллекцию объектов типа <paramref name="T" />, содержащихся в объекте <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <paramref name="T" />, содержащая объекты типа <paramref name="T" /> из исходной коллекции.</returns>
      <typeparam name="T">Тип элемента, который требуется найти в коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Возвращает тип элемента, содержащегося в коллекции.</summary>
      <returns>Тип указанного элемента (<paramref name="item" />) коллекции.</returns>
      <param name="item">Элемент коллекции, тип которого требуется извлечь.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Вставляет элемент в коллекцию в указанное местоположение.</summary>
      <param name="index">Индекс (с нуля), по которому следует вставить значение параметра <paramref name="item" />.</param>
      <param name="item">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Удаляет объект указанного типа из коллекции.</summary>
      <returns>Объект, удаляемый из коллекции.</returns>
      <typeparam name="T">Тип элемента, удаляемого из коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Удаляет все элементы указанного типа из коллекции.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" />, содержащая объекты типа <paramref name="T" /> из исходной коллекции.</returns>
      <typeparam name="T">Тип элемента, удаляемого из коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Заменяет элемент по указанному индексу новым объектом.</summary>
      <param name="index">Отсчитываемый от ноля индекс заменяемого элемента (<paramref name="item" />).</param>
      <param name="item">Объект для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Предоставляет потокобезопасную коллекцию только для чтения, содержащую объекты типа, заданного универсальным параметром, в качестве элементов.</summary>
      <typeparam name="T">Тип объектов, содержащихся как элементы в потокобезопасной коллекции только для чтения.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> из указанного перечислимого списка элементов, при этом объект используется для синхронизации доступа к потокобезопасной коллекции только для чтения.</summary>
      <param name="syncRoot">Объект, используемый для синхронизации доступа к потокобезопасной коллекции только для чтения.</param>
      <param name="list">Коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" /> элементов, используемых для инициализации потокобезопасной коллекции только для чтения.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным значением.</summary>
      <returns>true, если <paramref name="value" /> обнаружен в коллекции; в обратном случае false.</returns>
      <exception cref="T:System.ArgumentException">Объект <paramref name="value" /> не является объектом типа, содержащегося в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует элементы коллекции в указанный массив, начиная с заданного индекса.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы коллекции.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Получает количество элементов в потокобезопасной коллекции только для чтения.</summary>
      <returns>Количество элементов в потокобезопасной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию элементов синхронизированной коллекции только для чтения.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" /> для объектов типов, хранящихся в коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Возвращает индекс первого вхождения значения в коллекцию.</summary>
      <returns>Отсчитываемый от ноля индекс первого вхождения значения (<paramref name="value" />) в коллекцию.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Возвращает элемент из потокобезопасной коллекции только для чтения с указанным индексом.</summary>
      <returns>Элемент из доступной только для чтения коллекции с заданным индексом.</returns>
      <param name="index">Отсчитываемый от ноля индекс элемента, извлекаемого из коллекции.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Возвращает список элементов в потокобезопасной коллекции только для чтения.</summary>
      <returns>Список <see cref="T:System.Collections.Generic.IList`1" /> элементов, содержащихся в потокобезопасной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>При вызове создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Элемент, который необходимо добавить в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Нельзя добавлять элементы в коллекцию, доступную только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>При вызове создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Невозможно очистить элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Возвращает значение true.</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Удаляет первое вхождение указанного объекта из списка <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Метод возвращает значение false, означающее, что элемент не удален из коллекции только для чтения.</returns>
      <param name="value">Значение, удаляемое из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>При вызове создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от ноля индекс, по которому следует вставить <paramref name="value" />.</param>
      <param name="value">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Нельзя вставлять элементы в коллекцию, доступную только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Получает элемент с указанным индексом.</summary>
      <returns>Элемент типа <paramref name="T" /> по указанному индексу.</returns>
      <param name="index">Отсчитываемый от ноля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Невозможно задать элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>При вызове создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от ноля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции в указанный массив, начиная с заданного индекса.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы коллекции.</param>
      <param name="index">Индекс массива (отсчитываемый от нуля), с которого начинается копирование.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Получает значение, указывающее, является ли доступ к коллекции синхронизированным.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
      <returns>Объект, который может быть использован для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию элементов синхронизированной коллекции только для чтения.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, выполняющий итерацию элементов синхронизированной коллекции только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>
        <see cref="T:System.NotSupportedException" />.</returns>
      <param name="value">Элемент, который необходимо добавить в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Нельзя добавлять элементы в коллекцию, доступную только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Невозможно очистить элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным значением.</summary>
      <returns>true, если <paramref name="value" /> обнаружен в коллекции; в обратном случае false.</returns>
      <param name="value">Объект, местоположение которого требуется найти в коллекции.</param>
      <exception cref="T:System.ArgumentException">Объект <paramref name="value" /> не является объектом типа, содержащегося в коллекции.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс определенного элемента в коллекции.</summary>
      <returns>Индекс <paramref name="value" /> если он найден в списке; в противном случае его значение равно -1.</returns>
      <param name="value">Элемент, индекс которого требуется извлечь.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>При вызове создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от ноля индекс, по которому следует вставить <paramref name="value" />.</param>
      <param name="value">Объект, вставляемый в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Нельзя вставлять элементы в коллекцию, доступную только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли коллекция фиксированный размер.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее, доступна ли коллекция только для чтения.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Получает элемент по указанному индексу и создает исключение, если элемент задан.</summary>
      <returns>Объект, содержащийся в указанном расположении в коллекции.</returns>
      <param name="index">Индекс (с нуля) элемента коллекции.</param>
      <exception cref="T:System.NotSupportedException">Невозможно задать элементы в коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из списка <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Отсчитываемый от ноля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>При вызове создает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от ноля индекс элемента, извлекаемого из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Нельзя удалять элементы из коллекции, доступной только для чтения.</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Это исключение создается на стороне клиента, если действие, связанное с вызываемой операцией, не соответствует действию ни одной операции, доступной в службе.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ActionNotSupportedException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.ActionNotSupportedException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, создавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Представляет привязку, которую клиент Windows Phone может использовать для настройки конечных точек, взаимодействующих с веб-службами на основе ASMX, а также с другими службами, соответствующими требованиям WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.BasicHttpBinding" /> с указанным типом безопасности, используемым привязкой.</summary>
      <param name="securityMode">Значение <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая упорядоченный стек элементов привязки, описываемых в <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>Возвращает или задает значение, которое показывает, будет ли включать <see cref="T:P:System.ServiceModel.BasicHttpBinding" /> элемент <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
      <returns>Принимает значение true, если привязка содержит <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />; в противном случае принимает значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Возвращает версию протокола SOAP, используемую для сообщений, обрабатываемых этой привязкой.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой. Значение всегда — SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Возвращает или задает максимальный размер буфера, который получает сообщения из канала.</summary>
      <returns>Целое значение, указывающее максимальный размер (в байтах) буфера, хранящего сообщения во время их обработки для конечной точки, настроенной с этой привязкой. Значение по умолчанию равно 65,536 байта.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Возвращает или задает максимальный размер сообщения, которое можно получить по каналу, настроенному с этой привязкой.</summary>
      <returns>Максимальный размер (в байтах) сообщения, обрабатываемого привязкой. Значение по умолчанию равно 65,536 байта.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</summary>
      <returns>Значение "https", если режиму безопасности в элементе привязки транспорта присвоено значение <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> или <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" />; в противном случае — значение "http".</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Возвращает тип безопасности, используемый с данной привязкой. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.BasicHttpSecurity" />, используемый с этой привязкой. Значение по умолчанию — <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Возвращает или задает кодировку, используемую в тексте сообщений.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, указывающий на используемую кодировку. По умолчанию используется значение <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Перечисляет типы учетных данных, которые могут быть использованы для проверки подлинности клиента, если в привязке BasicHttpBinding включена безопасность.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Указывает, что проверка подлинности клиента осуществляется с помощью имени пользователя.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Только в  Windows Phone, но не поддерживается.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Задает безопасность для клиента Windows Phone, настроенного с помощью <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Возвращает или задает режим безопасности для клиента, настроенного с помощью <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />. Значение этого свойства по умолчанию — <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение является недопустимым значением для <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Задает типы безопасности, которые могут быть использованы с предоставленной системой привязкой <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>Во время передачи сообщение SOAP не защищено. Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>Безопасность обеспечивается с помощью протокола HTTPS. Служба должна быть настроена с использованием SSL-сертификатов. Сообщение SOAP защищается как единое целое с помощью HTTPS. Служба проходит проверку подлинности в клиенте с использованием SSL-сертификата.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Этот режим обеспечивает целостность сообщений, конфиденциальность данных и проверку подлинности сервера с использованием HTTPS. Служба должна быть настроена с использованием сертификата. Проверка подлинности клиента осуществляется при помощи механизма безопасности сообщений SOAP.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>Этот режим обеспечивает только проверку подлинности клиента на основе HTTP. Он не обеспечивает целостность и конфиденциальность сообщений.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Создает каналы, которые используются клиентами для отправки сообщений в конечные точки службы, и управляет ими.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Инициализирует фабрику каналов с поведениями, предоставляемыми в заданном файле конфигурации, и с поведениями в конечной точке службы фабрики каналов.</summary>
      <param name="configurationName">Имя файла конфигурации.</param>
      <exception cref="T:System.InvalidOperationException">Конечная точка службы фабрики каналов имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Если реализован в производном классе, создает описание конечной точки службы, связанной с фабрикой каналов.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, связанная с фабрикой каналов.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Создает фабрику каналов для текущей конечной точки фабрики.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> для конечной точки текущей фабрики.</returns>
      <exception cref="T:System.InvalidOperationException">Конечная точка службы, к которой подключаются каналы фабрики, имеет значение null, привязка конечной точки имеет значение null, или в ней отсутствует элемент с заданным именем конфигурации.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Возвращает учетные данные, используемые клиентами для взаимодействия с конечной точкой службы по каналам, создаваемым фабрикой.</summary>
      <returns>Учетные данные <see cref="T:System.ServiceModel.Description.ClientCredentials" />, используемые клиентами, если они настроены для фабрики либо если конечная точка не имеет значение nullи находится в состоянии связи <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" />. В противном случае — значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции закрытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции открытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Возвращает конечную точку службы, к которой подключаются создаваемые фабрикой каналы.</summary>
      <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, к которой подключаются создаваемые фабрикой каналы.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Открывает текущую фабрику каналов, если она еще не открыта.</summary>
      <exception cref="T:System.ObjectDisposedException">Текущая фабрика либо закрывается, либо уже закрыта, поэтому ее невозможно открыть.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Возвращает запрашиваемый типизированный объект, если он имеется, из соответствующего уровня стека каналов или значение null, если он отсутствует.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует конечную точку службы фабрики каналов с заданной привязкой и адресом.</summary>
      <param name="binding">Адрес <see cref="T:System.ServiceModel.Channels.Binding" />, с помощью которого выполняется инициализация конечной точки для фабрики каналов.</param>
      <param name="address">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, с помощью которого выполняется инициализация конечной точки для фабрики каналов.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует конечную точку службы фабрики каналов с заданным адресом и конфигурацией.</summary>
      <param name="configurationName">Имя файла конфигурации, используемого для инициализации фабрики каналов.</param>
      <param name="address">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, с помощью которого выполняется инициализация конечных точек для фабрики каналов.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Завершает работу фабрики внутренних каналов текущей фабрики каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия в фабрике внутренних каналов текущей фабрики каналов, содержащей объект состояния, связанный с ней. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия в фабрике внутренних каналов текущей фабрики каналов, содержащей объект состояния, связанный с ней. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Вызывает операцию закрытия в фабрике внутренних каналов с заданным временем ожидания для завершения операции.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции до превышения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия в фабрике внутренних каналов текущей фабрики каналов. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия в фабрике внутренних каналов текущей фабрики каналов. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Вызывает операцию открытия в фабрике внутренних каналов текущей фабрики каналов с заданным временем ожидания для завершения операции.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</param>
      <exception cref="T:System.InvalidOperationException">Внутренний канал текущего канала имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Инициализирует доступную только для чтения копию объекта <see cref="T:System.ServiceModel.Description.ClientCredentials" /> для фабрики каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Создает фабрику внутренних каналов для текущего канала.</summary>
      <exception cref="T:System.InvalidOperationException">Фабрика внутренних каналов для фабрики каналов имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Закрывает текущую фабрику каналов.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Фабрика, создающая каналы различных типов, которые используются клиентами для отправки сообщений в конечные точки службы, настроенные по-разному.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов. Этот тип должен быть либо <see cref="T:System.ServiceModel.Channels.IOutputChannel" />, либо <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" /> с указанным адресом и конфигурацией привязки конечной точки.</summary>
      <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, используемая для настройки каналов, созданных фабрикой.</param>
      <param name="remoteAddress">Назначение <see cref="T:System.ServiceModel.EndpointAddress" /> для каналов, созданных фабрикой.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="binding" /> является null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" /> и настраивает конечную точку.</summary>
      <param name="endpointConfigurationName">Имя файла, содержащего конфигурацию конечной точки службы для каналов, созданных фабрикой.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ChannelFactory`1" /> с указанной конфигурацией и адресом конечной точки.</summary>
      <param name="endpointConfigurationName">Имя файла, содержащего конфигурацию конечной точки службы для каналов, созданных фабрикой.</param>
      <param name="remoteAddress">Назначение <see cref="T:System.ServiceModel.EndpointAddress" /> для каналов, созданных фабрикой.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Создает канал, используемый для отправки сообщений в службу по конкретному адресу конечной точки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал, используемый для отправки сообщений в службу по конкретному адресу конечной точки через указанный адрес транспортировки.</summary>
      <returns>Канал <paramref name="TChannel" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, созданный фабрикой.</returns>
      <param name="via">Код <see cref="T:System.Uri" />, содержащий адрес транспортировки, по которому канал отправляет сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.ServiceModel.ChannelFactory" /> имеет дуплексные операции, которые он не поддерживает.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Создает описание конечной точки службы.</summary>
      <returns>Тип <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> службы.</returns>
      <exception cref="T:System.InvalidOperationException">Контракт обратного вызова имеет значение null, а для конечной точки службы требуется контракт, значение которого отличается от значения null (Nothing).</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Обеспечивает базовую реализацию, которая служит для создания клиентских объектов Windows Phone (объектов-посредников), которые могут вызывать службы.</summary>
      <typeparam name="TChannel">Канал, используемый для соединения со службой и определяющий тип контракта службы, инкапсулируемый этим объектом-посредником.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя целевую конечную точку по умолчанию из файла конфигурации приложения. </summary>
      <exception cref="T:System.InvalidOperationException">Информация о конечной точке по умолчанию в файле конфигурации отсутствует, в файле конфигурации несколько конечных точек, или файл конфигурации отсутствует.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" /> с указанной привязкой и целевым адресом. </summary>
      <param name="binding">Привязка, используемая для настройки выполнения вызовов службы.</param>
      <param name="remoteAddress">Адрес конечной точки службы.</param>
      <exception cref="T:System.ArgumentNullException">Привязка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя информацию о конфигурации, указанную в файле конфигурации приложения с помощью параметра <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <exception cref="T:System.ArgumentNullException">Указанная информация о конечной точке имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />, используя указанный целевой адрес и информацию о конечной точке. </summary>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес службы.</param>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="endpointConfigurationName">Имя конечной точки в файле конфигурации приложения.</param>
      <param name="remoteAddress">Адрес службы.</param>
      <exception cref="T:System.ArgumentNullException">Конечная точка имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Удаленный адрес имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Не удается найти конечную точку, или контракт конечной точки недопустим.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Вызывает мгновенный переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Возвращает внутренний канал, используемый для взаимодействия со службой.</summary>
      <returns>Реализация интерфейса целевого контракта службы, переданного в конструктор как параметр типа.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Возвращает базовый объект <see cref="T:System.ServiceModel.ChannelFactory`1" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.ChannelFactory`1" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Возвращает учетные данные клиента, используемые для вызова операции.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ClientCredentials" />, который подтверждает удостоверение, представленное клиентом.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Возвращает новый канал от клиента в службу.</summary>
      <returns>Канал типа <paramref name="TChannel" />, который определяет тип контракта службы, инкапсулируемый этим объектом клиента (объектом-посредником).</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Возвращает целевую конечную точку службы, к которой может подключиться клиент Windows Phone.</summary>
      <returns>Целевой объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Реплицирует поведение ключевого слова по умолчанию в C#.</summary>
      <returns>Возвращает значение null, если T является ссылочным типом, и значение ноль, если T является типом числового значения.</returns>
      <typeparam name="T">Тип C#.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Возвращает базовую реализацию <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
      <returns>Клиентский канал для объекта Windows Phone.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Обеспечивает поддержку реализации асинхронной модели, основанной на событиях. 
    For more information about 
  Этот шаблон, см.   Event-based Asynchronous Pattern Overview.</summary>
      <param name="beginOperationDelegate">Делегат, используемый для вызова асинхронной операции.</param>
      <param name="inValues">Входные значения асинхронного вызова.</param>
      <param name="endOperationDelegate">Делегат, используемый для завершения асинхронного вызова после его выполнения.</param>
      <param name="operationCompletedCallback">Предоставляемый клиентом обратный вызов, который вызывается по завершении асинхронного метода. Обратный вызов передается методу <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">Объект <paramref name="userState" />, который связывается с асинхронным вызовом.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Возвращает текущее состояние объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Значение состояния <see cref="T:System.ServiceModel.CommunicationState" /> объекта.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="callback">Метод, по завершении получающий обратный вызов.</param>
      <param name="state">Данные состояния.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия объекта <see cref="T:System.ServiceModel.ClientBase`1" /> с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию начала закрытия.</returns>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
      <param name="callback">Объект обратного вызова, вызванный по завершении операции.</param>
      <param name="state">Данные состояния.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Метод, по завершении получающий обратный вызов.</param>
      <param name="state">Данные состояния.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия объекта <see cref="T:System.ServiceModel.ClientBase`1" /> в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия.</returns>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
      <param name="callback">Метод, по завершении получающий обратный вызов.</param>
      <param name="state">Данные состояния.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Обработчик событий, вызываемый после перехода объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, используемый для завершения асинхронной операции закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия объекта <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, используемый для завершения асинхронной операции завершения открытия.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Обработчик событий, вызываемый при возникновении ошибки во время выполнения операции с объектом <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Вызывает переход объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Период времени, в течение которого вызов должен быть завершен.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Делегат, используемый методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> для вызова асинхронных операций в клиенте. </summary>
      <returns>Результат асинхронного вызова.</returns>
      <param name="inValues">Входные значения асинхронного вызова.</param>
      <param name="asyncCallback">Ссылка на метод, который должен вызываться при завершении соответствующей асинхронной операции.</param>
      <param name="state">Объект <see cref="T:System.Object" />, позволяющий клиенту различать разные асинхронные вызовы. Этот объект доступен клиенту в параметре <paramref name="arguments" /> обратного вызова при завершении события.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Этот класс используется автоматически создаваемыми клиентскими объектами-посредниками для вызова служб и не должен использоваться для других целей. 
</summary>
      <typeparam name="T">Универсальный класс.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ClientBase`1" /> из существующего экземпляра класса.</summary>
      <param name="client">Объект <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />, используемый для инициализации нового экземпляра класса.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронный вызов указанного метода по имени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на вызванный асинхронный метод.</returns>
      <param name="methodName">Имя метода, вызываемого асинхронно.</param>
      <param name="args">Массив аргументов для вызываемого метода.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Делегат <see cref="T:System.AsyncCallback" />. </param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Выполняет асинхронный вызов указанного метода по имени. </summary>
      <returns>
Выход <see cref="T:System.Object" /> вызванного метода.
</returns>
      <param name="methodName">Имя метода, вызываемого асинхронно.</param>
      <param name="args">Массив аргументов для вызываемого метода.</param>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Выполняет определяемые приложением задачи, связанные с удалением, освобождением или сбросом неуправляемых ресурсов, связанных с каналом.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="TProperty">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу. </param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией отправки.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию отправки.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции отправки.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией отправки.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Возвращает пункт назначения службы, в который по исходящему каналу отправляются сообщения.</summary>
      <returns>Адрес службы <see cref="T:System.ServiceModel.EndpointAddress" />, на который отправляются сообщения по исходящему каналу.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Передает сообщение в пункт назначения исходящего канала. </summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Отправляет сообщение по текущему исходящему каналу в течение заданного промежутка времени.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</summary>
      <returns>
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ".</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ" в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ. (Сведения о значениях по умолчанию см. в разделе "Примечания".)</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, чтобы вернуть ответ на основе сообщений переданному запросу. </summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Возвращает удаленный адрес, на который канал запроса отправляет сообщения. </summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал запроса отправляет сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений. </summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений в течение заданного промежутка времени.</summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Возвращает адрес транспорта, на который отправляется запрос.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" /> является одновременно конечным назначением и физическим адресом, если не указан параметр <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />. Если задан параметр <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" />, то это значение фактически является физическим адресом, на который отправляется сообщение и через который должно пройти сообщение, чтобы попасть по назначению.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов для начала использования пользовательского интерфейса для получения учетных данных.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для обратного вызова после завершения обработки.</returns>
      <param name="callback">Метод, вызываемый по завершении этого метода.</param>
      <param name="state">Сведения о состоянии канала.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Возвращает значение, указывающее, был ли вызван пользовательский интерфейс для получения учетных данных. </summary>
      <returns>Значение true, если был вызван метод  <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (или методы <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> и <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Вызов пользовательского интерфейса для получения учетных данных.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Вызывается после завершения вызова <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Это событие зарезервировано.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, по которому отправляются сообщения по каналу клиента.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляются сообщения по каналу.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Вызывает мгновенный переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия коммуникационного объекта.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия коммуникационного объекта в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Вызывает переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Вызывает переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Обработчик событий, вызываемый после перехода объекта <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Обработчик событий, вызываемый при возникновении ошибки во время выполнения операции с объектом <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Вызывает переход коммуникационного объекта из состояния Created в состояние Opened.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Вызывает переход коммуникационного объекта из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Обработчик событий, вызываемый при переходе объекта <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> из состояния Created в состояние Opened.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Возвращает текущее состояние объекта связи.</summary>
      <returns>Значение состояния <see cref="T:System.ServiceModel.CommunicationState" /> объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Возвращает или задает значение, указывающее службе Windows Phone сохранять набор сообщений перед передачей сообщений транспорту.</summary>
      <returns>Значение true, если пакетирование исходящих сообщений разрешено; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Возвращает входящий сеанс для канала.</summary>
      <returns>Сеанс <see cref="T:System.ServiceModel.Channels.IInputSession" /> для канала.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Возвращает локальную конечную точку канала.</summary>
      <returns>Локальный адрес <see cref="T:System.ServiceModel.EndpointAddress" /> канала.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Возвращает или задает период времени, в течение которого операция должна быть завершена или создается исключение.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, задающий период времени, в течение которого операция должна быть завершена.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Возвращает выходной сеанс, связанный с каналом, при его наличии.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Channels.IOutputSession" />, если входящий сеанс существует; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Возвращает удаленный адрес, связанный с каналом.</summary>
      <returns>Удаленный адрес <see cref="T:System.ServiceModel.EndpointAddress" /> канала.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Возвращает идентификатор текущего сеанса при его наличии.</summary>
      <returns>Идентификатор текущего сеанса при его наличии.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Возвращает коллекцию объектов расширения для расширяемого объекта.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.IExtensionCollection`1" /> объектов расширения.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Делегат, вызываемый методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> после успешного выполнения вызова, сделанного методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> к делегату <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <returns>Массив объектов <see cref="T:System.Object" />, в котором содержатся результаты вызова асинхронного метода. Операция может иметь несколько возвращаемых значений, которые возвращаются в этот массив объектов.</returns>
      <param name="result">Результат, возвращаемый вызовом, сделанным методом <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />к делегату <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Сохраняет результаты асинхронного вызова, сделанного клиентом.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Возвращает результаты асинхронного вызова, сделанного клиентом.</summary>
      <returns>Массив типа <see cref="T:System.Object" />, содержащий результаты асинхронного вызова, сделанного клиентом.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Представляет ошибку связи либо в службе, либо в клиентском приложении.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />, используя указанное сообщение.</summary>
      <param name="message">Описание условия ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationException" />, используя указанное сообщение и внутреннее исключение.</summary>
      <param name="message">Описание условия ошибки.</param>
      <param name="innerException">Используемое внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Исключение, создаваемое при вызове объекта <see cref="T:System.ServiceModel.ICommunicationObject" />, работа которого прервана.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />, используя указанное сообщение. </summary>
      <param name="message">Сообщение, передаваемое в исключении.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />, используя указанное сообщение об ошибке и внутреннее исключение. </summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Исключение, которое создается в случае вызова сбойного коммуникационного объекта. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />, используя заданное сообщение.</summary>
      <param name="message">Сообщение с описанием исключения.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />, используя указанное сообщение об ошибке и внутреннее исключение.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Определяет состояния, в которых может находиться интерфейс <see cref="T:System.ServiceModel.ICommunicationObject" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Указывает, что коммуникационный объект создан и может быть настроен, но еще не открыт и не готов к использованию.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Указывает, что коммуникационный объект переходит из состояния <see cref="F:System.ServiceModel.CommunicationState.Created" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Указывает, что коммуникационный объект сейчас открыт и готов к использованию. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Указывает, что коммуникационный объект переходит в состояние <see cref="F:System.ServiceModel.CommunicationState.Closed" />. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Указывает, что коммуникационный объект закрыт и больше непригоден для использования. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Указывает, что с коммуникационным объектом произошла ошибка или сбой, после которого он не может восстановиться и стал непригоден для использования. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Указывает инфраструктуре Windows Phone использование <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.DataContractFormatAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Возвращает или задает стиль SOAP сериализованных данных.</summary>
      <returns>Одно из значений <see cref="T:System.ServiceModel.OperationFormatStyle" />. По умолчанию используется значение <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Предоставляет уникальный сетевой адрес, используемый клиентом для взаимодействия с конечной точкой службы.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанной строкой универсального кода ресурса (URI).</summary>
      <param name="uri">Универсальный код ресурса (URI), идентифицирующий конечную точку.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddress" /> с указанными универсальным кодом ресурса (URI) и заголовками.</summary>
      <param name="uri">Код <see cref="T:System.Uri" />, идентифицирующий расположение конечной точки.</param>
      <param name="addressHeaders">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащий адресную информацию, используемую для взаимодействия с конечной точкой.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Возвращает не зависящее от версии представление анонимного универсального кода ресурса (URI).</summary>
      <returns>Код <see cref="T:System.Uri" /> со значением http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Присваивает универсальный код ресурса (URI) и свойства адреса конечной точки значениям заголовков указанного сообщения.</summary>
      <param name="message">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, заголовкам которого присваиваются значения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, эквивалентен ли указанный объект текущему адресу конечной точки.</summary>
      <returns>Значение true, если указанный объект эквивалентен текущему адресу; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с текущим адресом конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Предоставляет уникальный хэш-код для текущего адреса конечной точки. </summary>
      <returns>Уникальный хэш-код для текущего адреса конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Возвращает коллекцию заголовков адресов для конечных точек, которые может создать построитель.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />, содержащий адресную информацию для конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Возвращает значение, указывающее, является ли конечная точка анонимной.</summary>
      <returns>true, если конечная точка — <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; в обратном случае false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Возвращает значение, указывающее, имеет ли универсальный код ресурса (URI) конечной точки значение <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>Значение true, если URI конечной точки — <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Возвращает не зависящий от версии универсальный код ресурса (URI), используемый для адреса конечной точки, по которому сообщение не должно отправляться.</summary>
      <returns>Код <see cref="T:System.Uri" /> со значением http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Возвращает значение, указывающее, являются ли заданные адреса конечных точек неравнозначными.</summary>
      <returns>true, если адреса конечных точек равны; в обратном случае — значение false.</returns>
      <param name="address1">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
      <param name="address2">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Возвращает значение, указывающее, являются ли заданные адреса конечных точек неравнозначными.</summary>
      <returns>true, если адреса конечных точек не равны; в обратном случае — значение false.</returns>
      <param name="address1">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
      <param name="address2">Один из сравниваемых объектов <see cref="T:System.ServiceModel.EndpointAddress" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Осуществляет чтение адреса конечной точки для заданной версии адреса из указанного средства чтения словаря XML.</summary>
      <returns>Элемент <see cref="T:System.ServiceModel.EndpointAddress" /> указанной версии, считанный из средства чтения XML.</returns>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, из которого производится получение адреса конечной точки.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Возвращает каноническое представление строки универсального кода ресурса (URI), содержащегося в адресе конечной точки.</summary>
      <returns>Универсальный код ресурса (URI), идентифицирующий конечную точку.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Возвращает универсальный код ресурса (URI) для конечной точки.</summary>
      <returns>Код <see cref="T:System.Uri" /> для конечной точки.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Сохраняет все дочерние узлы определенного узла в указанном модуле записи словаря XML.</summary>
      <param name="addressingVersion">Версия <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> текущего адреса конечной точки.</param>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, в котором сохраняется адрес конечной точки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> или <paramref name="addressingVersion" /> равен null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Фабрика создания новых (неизменяемых) адресов конечных точек с определенными значениями свойств.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddressBuilder" />.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> по значениям из существующего адреса конечной точки.</summary>
      <param name="address">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, значения свойств которого используются для инициализации значений свойств данного экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Возвращает коллекцию заголовков адресов для конечных точек, которые может создать построитель.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, содержащая заголовки адресов для конечных точек, которые может создать построитель.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Создает новый адрес конечной точки, инициализируемый значениями свойств построителя текущего адреса конечной точки.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, свойства которого инициализируются значениями построителя адреса текущей конечной точки.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Возвращает или задает универсальный код ресурса (URI) для конечных точек, которые может создать построитель.</summary>
      <returns>Код <see cref="T:System.Uri" />, определяющий адрес конечной точки.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Исключение, создаваемое, когда удаленная конечная точка не может быть найдена или недоступна.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.EndpointNotFoundException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, создавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Возвращает строку, содержащую имя URI для роли SOAP, связанной с текущей версией сообщения, для конечной точки назначения.</summary>
      <returns>Пустая строка, если используется SOAP 1.1, либо строка, содержащая http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver, если используется SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Возвращает строку, содержащую имя URI для роли SOAP, связанной с текущей версией сообщения, для следующей точки назначения.</summary>
      <returns>Строка, содержащая http://schemas.xmlsoap.org/soap/actor/next, если используется <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" />, строка, содержащая http://www.w3.org/2003/05/soap-envelope/role/next, если используется <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />, и пустая строка, если <see cref="T:System.ServiceModel.EnvelopeVersion" /> имеет значение <see cref="P:System.ServiceModel.EnvelopeVersion.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Возвращает версию конверта, если не используется ни одна из версий SOAP.</summary>
      <returns>Версия конверта сообщения, в котором не используется форматирование SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Возвращает версию конверта SOAP 1.1.</summary>
      <returns>Версия <see cref="T:System.ServiceModel.EnvelopeVersion" /> SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Возвращает версию конверта SOAP 1.2.</summary>
      <returns>Версия <see cref="T:System.ServiceModel.EnvelopeVersion" /> SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Возвращает строку, представляющую текущую версию конверта.</summary>
      <returns>Текущая версия конверта.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Представляет сведения об ошибке.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ExceptionDetail" /> на основании исключения. </summary>
      <param name="exception">Исключение, сериализуемое как объект <see cref="T:System.ServiceModel.ExceptionDetail" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="exception" /> является null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Возвращает или задает объект <see cref="T:System.ServiceModel.ExceptionDetail" />, представляющий внутреннее исключение.</summary>
      <returns>Информация о внутреннем исключении.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Возвращает или задает сообщение из исключения, переданного конструктору.</summary>
      <returns>Сообщение об исключении.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Возвращает или задает трассировку стека из исключения, переданного конструктору.</summary>
      <returns>Трассировка стека исключения.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Возвращает сведения об исключении, переданном конструктору.</summary>
      <returns>Сообщение и трассировка стека исключения.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Возвращает или задает строку типа для исключения, переданного конструктору.</summary>
      <returns>Строка типа для исключения, переданного конструктору.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Представляет код ошибки SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" />. </summary>
      <param name="name">Имя кода ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" />.</summary>
      <param name="name">Имя кода ошибки.</param>
      <param name="subCode">Дополнительный код ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" /> с указанными именем и пространством имен. </summary>
      <param name="name">Локальное имя кода ошибки. </param>
      <param name="ns">Имя пространства имен кода ошибки. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="ns" /> равен null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> содержит пустую строку. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultCode" /> указанными именем, пространством имен и дополнительным кодом ошибки.</summary>
      <param name="name">Локальное имя кода ошибки. </param>
      <param name="ns">Имя пространства имен кода ошибки. </param>
      <param name="subCode">Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="ns" /> равен null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> содержит пустую строку. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Создает код ошибки отправителя с заданным дополнительным кодом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" /> с созданным дополнительным кодом ошибки SOAP в свойстве <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="subCode">Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> имеет значение null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Возвращает значение, указывающее, является ли ошибка ошибкой SOAP 1.1 или SOAP 1.2.</summary>
      <returns>Значение true, если ошибка является ошибкой SOAP 1.1 или SOAP 1.2. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Возвращает значение, указывающее, является ли ошибка ошибкой сервера SOAP 1.1 или ошибкой получателя SOAP 1.2.</summary>
      <returns>Значение true, если ошибка является ошибкой сервера SOAP 1.1 или ошибкой получателя SOAP 1.2. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Возвращает значение, указывающее, является ли ошибка ошибкой клиента SOAP 1.1 или ошибкой отправителя SOAP 1.2.</summary>
      <returns>Значение true, если ошибка является ошибкой клиента SOAP 1.1 или ошибкой отправителя SOAP 1.2. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Возвращает локальное имя кода ошибки. </summary>
      <returns>Локальное имя кода ошибки. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Возвращает пространство имен кода ошибки. </summary>
      <returns>Универсальный код ресурса (URI) пространства имен. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Возвращает дополнительный код ошибки. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" />, представляющий дополнительный код ошибки. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Задает одну или несколько ошибок протокола SOAP, сообщения о которых возвращаются, когда операция службы обнаруживает ошибки обработки.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultContractAttribute" />. </summary>
      <param name="detailType">Сериализуемый тип, который содержит информацию об ошибке для вызывающего объекта.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="detailType" /> является null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Возвращает или задает действие сообщения об ошибке SOAP, которое задается как компонент контракта операции.</summary>
      <returns>Значение действия для сообщения об ошибке SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Возвращает тип сериализуемого объекта, который содержит информацию об ошибке.</summary>
      <returns>Тип, представляющий сериализуемый класс ошибки.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Возвращает или задает имя сообщения об ошибке на языке WSDL.</summary>
      <returns>Имя сообщения об ошибке. Значение по умолчанию — имя типа, используемого в качестве сведений об ошибке.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Возвращает или задает пространство имен ошибки SOAP.</summary>
      <returns>Пространство имен ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Представляет ошибку SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя заданные значения ошибки сообщения и предоставленную строку действия.</summary>
      <param name="fault">Ошибка сообщения, содержащая используемые значения ошибки SOAP по умолчанию.</param>
      <param name="action">Действие ошибки SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException" />, используя указанную причину, код ошибки и значение действия.</summary>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
      <param name="action">Значение действия для ошибки SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Возвращает значение действия SOAP для сообщения об ошибке.</summary>
      <returns>Значение действия SOAP для сообщения об ошибке.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Возвращает код ошибки SOAP.</summary>
      <returns>Код ошибки для ошибки SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.FaultException" /> из заданной ошибки сообщения, действия и массива типов сведений.</summary>
      <returns>Исключение <see cref="T:System.ServiceModel.FaultException" />, которое можно создать для указания на то, что сообщение об ошибке SOAP получено.</returns>
      <param name="messageFault">Ошибка сообщения, содержащая сведения об ошибке SOAP по умолчанию.</param>
      <param name="action">Значение действия ошибки.</param>
      <param name="faultDetailTypes">Массив типов, содержащий сведения об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.FaultException" /> из заданной ошибки сообщения и массива типов сведений.</summary>
      <returns>Исключение <see cref="T:System.ServiceModel.FaultException" />, которое можно создать для указания на то, что сообщение об ошибке SOAP получено.</returns>
      <param name="messageFault">Ошибка сообщения, содержащая сведения об ошибке SOAP по умолчанию.</param>
      <param name="faultDetailTypes">Массив типов, содержащий сведения об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.MessageFault" /> в памяти.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, переданный методу <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> для создания сообщения, содержащего ошибку.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Возвращает сообщение исключения.</summary>
      <returns>Сообщение об исключении.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Возвращает причину <see cref="T:System.ServiceModel.FaultReason" /> для ошибки SOAP.</summary>
      <returns>Причина ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Используется в клиентских приложениях для обработки заданных в контракте ошибок SOAP.</summary>
      <typeparam name="TDetail">Сериализуемый тип сведений об ошибке.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultException`1" />, использующий указанный объект сведений, причину ошибки SOAP и значения кода и действий. </summary>
      <param name="detail">Объект, используемый в качестве сведений об ошибке SOAP.</param>
      <param name="reason">Причина ошибки SOAP.</param>
      <param name="code">Код ошибки для ошибки SOAP.</param>
      <param name="action">Действие ошибки SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Возвращает объект, содержащий сведения об ошибке.</summary>
      <returns>Объект ошибки, являющийся параметром типа объекта <see cref="T:System.ServiceModel.FaultException`1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Возвращает строку для объекта <see cref="T:System.ServiceModel.FaultException`1" />.</summary>
      <returns>Строка для ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Предоставляет текстовое описание ошибки SOAP. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReason" />, используя указанный список преобразований ошибок. </summary>
      <param name="translations">Список объектов <see cref="T:System.ServiceModel.FaultReasonText" />, в котором каждый объект описывает ошибку на определенном языке. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="translations" /> пуст, либо один или несколько элементов имеют значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReason" />, используя указанный текстовый элемент, описывающий ошибку на определенном языке. </summary>
      <param name="translation">Массив объектов <see cref="T:System.ServiceModel.FaultReasonText" />, соответствующих описаниям ошибок на разных языках.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translation" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReason" /> с помощью указанного текста.</summary>
      <param name="text">Описание причины возникновения ошибки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Возвращает описание ошибки на языке, используемом текущим потоком.</summary>
      <returns>Текст ошибки на определенном языке.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Возвращает описание ошибки на определенном языке.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultReasonText" />, содержащий переведенное описание ошибки.</returns>
      <param name="cultureInfo">Объект <see cref="T:System.Globalization.CultureInfo" />, указывающий язык описания ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Возвращает причину ошибки в виде строки.</summary>
      <returns>Причина ошибки.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Возвращает коллекцию описаний ошибок на разных языках.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> объектов <see cref="T:System.ServiceModel.FaultReasonText" />, каждый из которых описывает ошибку на одном из языков.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Представляет текст причины ошибки SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReasonText" />, который использует заданный текст ошибки.</summary>
      <param name="text">Текст, который представляет причину ошибки SOAP.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultReasonText" />, который использует заданный текст ошибки.</summary>
      <param name="text">Текст, который представляет причину ошибки SOAP.</param>
      <param name="xmlLang">Язык ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Возвращает значение, указывающее, соответствует ли язык описания переданному объекту <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <returns>true, если <see cref="T:System.Globalization.CultureInfo" /> соответствует шаблону; в противном случае — false.</returns>
      <param name="cultureInfo">Объект <see cref="T:System.Globalization.CultureInfo" />, который требуется сравнить с языком описания.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Возвращает текст причины ошибки SOAP.</summary>
      <returns>Текст причины ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Возвращает язык причины ошибки SOAP.</summary>
      <returns>Язык причины ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Определяет поведение исходящего запроса и каналов типа "запрос-ответ", используемых клиентскими приложениями.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Возвращает или задает значение, указывающее, пытается ли метод <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> вызвать объекты <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> в свойстве <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> или создает исключение, если эта коллекция не пуста. </summary>
      <returns>значение true,    при  Windows Communication Foundation (WCF)разрешено вызывать инициализаторы интерактивного канала; в противном случае  значение false,. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов для начала использования пользовательского интерфейса для получения учетных данных.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для обратного вызова после завершения обработки.</returns>
      <param name="callback">Метод, вызываемый по завершении этого метода.</param>
      <param name="state">Сведения о состоянии канала.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Возвращает значение, указывающее, был ли вызван пользовательский интерфейс для получения учетных данных. </summary>
      <returns>Значение true, если был вызван метод  <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> (или методы <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> и <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Вызов пользовательского интерфейса для получения учетных данных.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Вызывается после завершения вызова <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">
        <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Это событие зарезервировано. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, по которому отправляются сообщения по каналу клиента.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляются сообщения по каналу.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Определяет контракт для конечного компьютера для всех коммуникационных объектов в системе, включая каналы, диспетчеры каналов, фабрики, прослушиватели, диспетчеры и узлы служб.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Вызывает мгновенный переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания закрытия по умолчанию истекло до правильного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания закрытия истекло до правильного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия коммуникационного объекта.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания открытия по умолчанию истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, в результате он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию открытия коммуникационного объекта в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, в результате он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Вызывает переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания закрытия по умолчанию истекло до правильного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Вызывает переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания истекло до правильного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Происходит после завершения перехода коммуникационного объекта из состояния Closing в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Происходит, если коммуникационный объект сначала переходит в состояние Closing.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания истекло до правильного закрытия <see cref="T:System.ServiceModel.ICommunicationObject" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, в результате он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Происходит, если коммуникационный объект сначала переходит в состояние Faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Вызывает переход коммуникационного объекта из состояния Created в состояние Opened.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Время ожидания открытия по умолчанию истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, в результате он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Вызывает переход коммуникационного объекта из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Не удалось открыть объект <see cref="T:System.ServiceModel.ICommunicationObject" />, и он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до перехода объекта <see cref="T:System.ServiceModel.ICommunicationObject" /> в состояние <see cref="F:System.ServiceModel.CommunicationState.Opened" />, в результате он перешел в состояние <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Происходит после завершения перехода коммуникационного объекта из состояния Opening в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Происходит, если коммуникационный объект сначала переходит в состояние Opening.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Возвращает текущее состояние объекта связи.</summary>
      <returns>Значение состояния <see cref="T:System.ServiceModel.CommunicationState" /> объекта.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Определяет интерфейс управления контекстом канала.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Возвращает или задает значение, указывающее службе Windows Phone сохранять набор сообщений перед передачей сообщений транспорту.</summary>
      <returns>Значение true, если пакетирование исходящих сообщений разрешено; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Возвращает входящий сеанс для канала.</summary>
      <returns>Сеанс <see cref="T:System.ServiceModel.Channels.IInputSession" /> для канала.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Возвращает локальную конечную точку канала.</summary>
      <returns>Локальный адрес <see cref="T:System.ServiceModel.EndpointAddress" /> канала.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Возвращает или задает период времени, в течение которого операция должна быть завершена или создается исключение.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, задающий период времени, в течение которого операция должна быть завершена.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Возвращает выходной сеанс, связанный с каналом, при его наличии.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Channels.IOutputSession" />, если входящий сеанс существует; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Возвращает удаленный адрес, связанный с каналом.</summary>
      <returns>Удаленный адрес <see cref="T:System.ServiceModel.EndpointAddress" /> канала.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Возвращает идентификатор текущего сеанса при его наличии.</summary>
      <returns>Идентификатор текущего сеанса при его наличии.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Определяет интерфейс для указания времени ожидания связи, используемого каналами и диспетчерами каналов, например фабриками каналов.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода закрытия интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода открытия, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода открытия интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода получения, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода получения интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода отправки, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода отправки интервал времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Позволяет объекту участвовать в пользовательском поведении, например в регистрации событий или наблюдении за переходами между состояниями.</summary>
      <typeparam name="T">Тип класса расширения.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Возвращает коллекцию объектов расширения для расширяемого объекта.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.IExtensionCollection`1" /> объектов расширения.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Позволяет объекту расширять другой объект путем агрегирования.</summary>
      <typeparam name="T">Объект, который принимает участие в пользовательском поведении.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Позволяет объекту расширения обнаружить, когда он был агрегирован. Вызывается при добавлении расширения в свойство <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Расширяемый объект, агрегирующий это расширение.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Позволяет объекту обнаружить, когда он перестает быть агрегированным. Вызывается при удалении расширения из свойства <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
      <param name="owner">Расширяемый объект, агрегирующий это расширение.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Коллекция объектов <see cref="T:System.ServiceModel.IExtension`1" />, позволяющая извлекать объекты <see cref="T:System.ServiceModel.IExtension`1" /> по их типу.</summary>
      <typeparam name="T">Тип объектов расширения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Находит заданный объект расширения в коллекции.</summary>
      <returns>Найденный объект расширения.</returns>
      <typeparam name="E">Тип объекта расширения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Находит все объекты расширения в коллекции, заданной параметром <paramref name="E" />.</summary>
      <returns>Коллекция всех объектов расширения в коллекции, реализующих заданный тип.</returns>
      <typeparam name="E">Тип объекта расширения.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Представляет контракт сообщения, не являющийся допустимым.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" />, используя заданное сообщение.</summary>
      <param name="message">Текст сообщения данного исключения.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.InvalidMessageContractException" />, в котором используется указанное сообщение и внутреннее исключение.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="innerException">Внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Указывает, что член сериализуется как элемент в тексте сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Возвращает или задает значение, указывающее позицию, в которой член сериализуется в текст сообщения SOAP.</summary>
      <returns>Расположение элемента в тексте сообщения SOAP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение, переданное методу задания свойства, является отрицательным целым числом.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Определяет строго типизированный класс, соответствующий сообщению SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Возвращает или задает значение, указывающее, имеет ли текст сообщения элемент оболочки.</summary>
      <returns>Значение true, если текст сообщения имеет элемент оболочки; в противном случае — значение false. Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Возвращает или задает имя элемента оболочки текста сообщения.</summary>
      <returns>Имя элемента оболочки в теле сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Возвращает или задает пространство имен элемента оболочки текста сообщения.</summary>
      <returns>Пространство имен элемента оболочки.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Объявляет базовые члены для <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Задает имя элемента, соответствующего этому члену. </summary>
      <returns>Имя элемента, соответствующего этому члену. Эта строка должна быть допустимым именем XML-элемента. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Задает пространство имен элемента, соответствующего этому члену. </summary>
      <returns>Универсальный код ресурса (URI) пространства имен элемента, соответствующего этому члену. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Исключение, создаваемое, если ожидания относительно заголовков сообщения SOAP не удовлетворены после обработки сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение.</summary>
      <param name="message">Сообщение, передаваемое в исключении.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение и значение, указывающее, является ли заголовок сообщения дубликатом или заголовок отсутствует.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="isDuplicate">Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение и внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий внутреннее исключение, которое стало причиной текущего исключения.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя заголовка и пространство имен.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя заголовка и пространство имен, а также значение, указывающее, является ли заголовок сообщения повторяющимся или отсутствующим.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
      <param name="isDuplicate">Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя и пространство имен заголовка, значение, указывающее, является ли заголовок сообщения повторным или отсутствующим, а также внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
      <param name="isDuplicate">Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий внутреннее исключение, которое стало причиной текущего исключения.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderException" />, используя указанное сообщение, имя и пространство имен заголовка, а также внутреннее исключение, которое стало причиной текущего исключения.</summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="headerName">Имя заголовка сообщения.</param>
      <param name="ns">Пространство имен заголовка сообщения.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий внутреннее исключение, которое стало причиной текущего исключения.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Возвращает имя заголовка SOAP, который стал причиной исключения.</summary>
      <returns>Имя заголовка SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Возвращает пространство имен заголовка SOAP, которое стало причиной текущего исключения.</summary>
      <returns>Пространство имен заголовка SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Возвращает значение, указывающее, имеется ли несколько заголовков сообщений или заголовки сообщений отсутствуют.</summary>
      <returns>Значение true, если несколько заголовков сообщений одинаковы. Значение false, если заголовки сообщений отсутствуют.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Управляет именем запроса и именами параметров ответа. Не может использоваться с <see cref="T:System.ServiceModel.Channels.Message" /> или контрактами сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageParameterAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Возвращает или задает атрибут имени параметра в схеме XML (XSD).</summary>
      <returns>Атрибут имени параметра в XSD.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Предоставляет доступ к контексту выполнения метода службы.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContext" />, использующий указанный канал <see cref="T:System.ServiceModel.IContextChannel" /> в клиентском приложении. </summary>
      <param name="channel">Канал <see cref="T:System.ServiceModel.IContextChannel" />, используемый для создания клиента <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Канал имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Возвращает или задает контекст выполнения текущего потока.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.OperationContext" />, представляющий контекст сообщений и выполнения текущего метода.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Получает заголовки входящих сообщений для контекста <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, содержащий заголовки входящих сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Получает свойства для входящего сообщения в контексте <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />, содержащий свойства входящего сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Получает версию входящего сообщения SOAP для контекста <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Версия входящего сообщения SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Это свойство предназначено для системных целей и не должно вызываться пользователями.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Генерируется по завершении операции.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Получает заголовки исходящих сообщений для активного контекста <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, содержащий заголовки исходящих сообщений для активного контекста <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Получает свойства для исходящего сообщения в активном контексте <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />, содержащий свойства исходящего сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Возвращает или задает реализацию контекста запроса для этого метода.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Channels.RequestContext" /> либо значение null, если нет контекста запроса.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Создает блок, в котором объект <see cref="T:System.ServiceModel.OperationContext" /> является областью.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" />, использующий указанный канал <see cref="T:System.ServiceModel.IContextChannel" /> для создания контекста <see cref="T:System.ServiceModel.OperationContext" /> для области действия.</summary>
      <param name="channel">Канал, который следует использовать при создании области для нового контекста <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" /> для создания области для указанного объекта <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <param name="context">Активный контекст <see cref="T:System.ServiceModel.OperationContext" /> в созданной области.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Восстанавливает первоначальный контекст <see cref="T:System.ServiceModel.OperationContext" /> в активное состояние и удаляет объект <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Указывает, что метод определяет операцию, которая является частью контракта службы в приложении Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Возвращает или задает действие WS-Addressing сообщения запроса. </summary>
      <returns>Действие, которое должно использоваться при создании заголовка действия WS-Addressing.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Указывает, что операция реализуется асинхронно с помощью пары методов Begin&lt;methodName&gt; и End&lt;methodName&gt;  контракта службы. </summary>
      <returns>Значение true, если метод Begin&lt;methodName&gt; сопоставляется методу End&lt;methodName&gt;  и может трактоваться инфраструктурой как операция, реализуемая в качестве пары асинхронных методов в интерфейсе службы; в противном случае — значение false. Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Возвращает или задает значение, указывающее, возвращает ли операция ответное сообщение.</summary>
      <returns>значение true,    Если операция возвращает ответное сообщение  значение false,  случае.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Возвращает или задает имя операции.</summary>
      <returns>Имя операции.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Возвращает или задает значение действия SOAP для ответного сообщения операции.</summary>
      <returns>Значение действия SOAP для ответного сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Представляет стиль SOAP, который определяет форматирование метаданных WSDL для службы.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>WSDL-представление содержит единственный элемент, представляющий документ, которым осуществляется обмен в ходе операции.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>WSDL-представление сообщений, которыми осуществляется обмен в ходе операции, содержит параметры, соответствующие удаленному вызову процедуры.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Исключение, видимое на стороне клиента и создаваемое, когда связь с удаленной стороной невозможна из-за несовпадения протоколов передачи данных.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ProtocolException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ProtocolException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.ProtocolException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, создавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Исключение, создаваемое при превышении квоты сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.QuotaExceededException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.QuotaExceededException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.QuotaExceededException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, создавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Исключение, создаваемое, когда сервер слишком занят, чтобы принять сообщение.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServerTooBusyException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.ServerTooBusyException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.ServerTooBusyException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, создавшее текущее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Исключение, создаваемое при сбое активации службы.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceActivationException" />. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.ServiceActivationException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceActivationException" /> с указанным сообщением об ошибке и внутренним исключением.  </summary>
      <param name="message">Сообщение об ошибке, объясняющее причину исключения.</param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, создавшее текущее исключение. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Показывает, что интерфейс или класс определяет контракт службы в клиентском приложении Windows Phone. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Возвращает или задает тип контракта обратного вызова, если контракт является дуплексным.</summary>
      <returns>Тип <see cref="T:System.Type" />, указывающий контракт обратного вызова. Значением по умолчанию является null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Возвращает или задает имя, используемое для поиска службы в файле конфигурации приложения.</summary>
      <returns>Имя, используемое для поиска элемента службы в файле конфигурации приложения. По умолчанию это имя класса реализации службы.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Возвращает или задает имя элемента &lt;portType&gt; на языке WSDL. </summary>
      <returns>В качестве значения по умолчанию используется имя класса или интерфейса, к которому применен атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" />. </returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значением является пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Возвращает или задает пространство имен элемента &lt;portType&gt; на языке WSDL.</summary>
      <returns>Пространство имен WSDL элемента &lt;portType&gt;. Значение по умолчанию — "http://tempuri.org". </returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Задает известные типы, которые должны использоваться службой при сериализации или десериализации.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> и задает имя метода, который возвращает известные типы.</summary>
      <param name="methodName">Имя метода, который возвращает известные типы.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />, используя имя метода, который возвращает известные типы, и тип, содержащий метод (или методы), возвращающий известные типы.</summary>
      <param name="methodName">Имя метода, который возвращает известные типы.</param>
      <param name="declaringType">Тип, который может использовать известные типы в своем графе объектов.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> с заданным известным типом.</summary>
      <param name="type">Задает известный тип, который может использоваться в параметре или возвращаемом значении, определенном службой.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Возвращает тип, который содержит методы, возвращающие известные типы.</summary>
      <returns>Методы, возвращающие известные типы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Возвращает имя метода, возвращающего коллекцию известных типов.</summary>
      <returns>Имя метода, который возвращает известные типы.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Известный тип, который может быть включен в граф объектов.</summary>
      <returns>Свойство <see cref="T:System.Type" /> известного типа.</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Содержит сообщение, полученное по каналу и не связанное ни с одним ожидающим запросом.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Возвращает неизвестное сообщение, вызвавшее событие.</summary>
      <returns>Исключение <see cref="T:System.ServiceModel.Channels.Message" />, вызвавшее событие.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Представляет заголовок, содержащий элемент адреса, который служит для идентификации конечной точки или взаимодействия с ней.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданными значением, именем и пространством имен.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданным именем <paramref name="name" /> и пространством имен <paramref name="ns" />, содержащий информацию, заданную в параметре <paramref name="value" />.</returns>
      <param name="name">Имя заголовка адреса.</param>
      <param name="ns">Пространство имен заголовка адреса.</param>
      <param name="value">Информация для заголовка адреса.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> равно null, или <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданными именем и пространством имен и с использованием заданного модуля форматирования для сериализации информации из указанного объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" /> с заданным именем <paramref name="name" /> и пространством имен <paramref name="ns" />, содержащий информацию, заданную в параметре <paramref name="value" />.</returns>
      <param name="name">Имя заголовка адреса.</param>
      <param name="ns">Пространство имен заголовка адреса.</param>
      <param name="value">Информация для заголовка адреса.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, используемый для сериализации объекта, заданного в параметре <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> или <paramref name="serializer" /> равно null, либо <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Определяет, совпадает ли информация в заданном объекте с объектом, который содержится в текущем заголовке адреса.</summary>
      <returns>Значение true, если информация, заданная параметром <paramref name="obj" />, совпадает с информацией, которая содержится в текущем заголовке адреса; в противном случае — значение false. В частности, если параметр <paramref name="obj" /> имеет значение null, возвращается значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с объектом, который содержится в текущем заголовке адреса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Возвращает средство чтения XML, которое может сериализовать объект текущего заголовка адреса.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.XmlDictionaryReader" />, который может сериализовать объект текущего заголовка адреса.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Предоставляет уникальный хэш-код для заголовка адреса. </summary>
      <returns>Уникальный хэш-код для текущего заголовка адреса.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Десериализует информацию из текущего заголовка адреса в объект заданного типа.</summary>
      <returns>Экземпляр класса типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего заголовка адреса.</returns>
      <typeparam name="T">Класс типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего заголовка адреса.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Десериализует информацию из текущего заголовка адреса в объект заданного типа, использующий заданный модуль форматирования для сериализации этой информации.</summary>
      <returns>Экземпляр класса типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего заголовка адреса.</returns>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, используемый для десериализации информации из объекта текущего заголовка адреса.</param>
      <typeparam name="T">Класс типа <paramref name="T" />, поля и свойства которого имеют значения, полученные из объекта текущего заголовка адреса.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="serializer" /> является null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>При реализации возвращает имя заголовка адреса.</summary>
      <returns>Имя заголовка адреса.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>При реализации возвращает пространство имен заголовка адреса.</summary>
      <returns>Пространство имен заголовка адреса.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>При переопределении в производном классе вызывается в момент записи в поток или файл содержимого заголовка адреса.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи содержимого заголовка адреса в поток или файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>При переопределении в производном классе вызывается в момент начала записи в поток или файл содержимого заголовка адреса.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи заголовка адреса в поток или файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Создает оболочку для заголовка адреса в виде заголовка сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeader" />, выступающий как оболочка текущего заголовка адреса.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает заголовок адреса в поток или файл с помощью заданного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи заголовка адреса в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="writer" /> является null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Записывает заголовок адреса в поток или файл с помощью заданного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, который используется для записи заголовка адреса в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="writer" /> является null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает содержимое заголовка адреса в поток или файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи содержимого заголовка адреса в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="writer" /> является null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Начинает запись содержимого заголовка адреса в поток или файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который используется для записи заголовка адреса в поток или файл.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="writer" /> является null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Представляет потокобезопасную, доступную только для чтения коллекцию заголовков адресов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> из перечислимого набора заголовков адреса.</summary>
      <param name="addressHeaders">Набор <see cref="T:System.Collections.Generic.IEnumerable`1" /> объектов <see cref="T:System.ServiceModel.Channels.AddressHeader" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentException">Значение одного из заголовков адреса в параметре <paramref name="addressHeaders" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Добавляет заголовки в коллекции к заголовкам указанного сообщения.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, к которому добавляются заголовки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Находит все заголовки адреса в коллекции с указанными именем и пространством имен.</summary>
      <returns>Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.AddressHeader" />, в котором содержатся все заголовки из коллекции с указанными именем и пространством имен.</returns>
      <param name="name">Имя искомого заголовка адреса.</param>
      <param name="ns">Пространство имен искомого заголовка адреса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="ns" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Находит первый заголовок адреса в коллекции с указанными именем и пространством имен.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressHeader" /> в коллекции с указанными именем и пространством имен.</returns>
      <param name="name">Имя искомого заголовка адреса.</param>
      <param name="ns">Пространство имен искомого заголовка адреса.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="ns" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Указанные значения <paramref name="name" /> и <paramref name="ns" /> присутствуют в нескольких заголовках.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Версия WS-Addressing, связанная с сообщением SOAP или поддерживаемая конечной точкой.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Возвращает версию адресации, которая указывает, что не используется ни одна из существующих версий WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, не использующий ни одну из версий WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Строка, представляющая текущую версию адресации.</summary>
      <returns>Текущая версия адресации.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Получает идентификатор версии адресации, связанной с WS-Addressing 1.0.</summary>
      <returns>Одноэлементный экземпляр, определяющий объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, который связан с WS-Addressing 1.0.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Элемент привязки, который задает двоичный формат .NET для XML, используемый для кодирования сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы указанного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />, инициализируемый из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> со значениями свойств, равными значениям свойств текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Создает фабрику для двоичных кодировщиков сообщений, которые используют версии SOAP и WS-Addressing и кодировку символов, заданную текущим элементом привязки кодирования.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, создаваемая этим элементом привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Возвращает или задает используемые или ожидаемые версии сообщения SOAP и WS-Addressing.</summary>
      <returns>Используемая или ожидаемая версия <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение является неподдерживаемой версией конверта.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Содержит элементы привязки, которые задают протоколы, транспорты и кодировщики сообщений, используемые для взаимодействия между клиентами и службами.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.Binding" /> с именем и пространством имен по умолчанию. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.Binding" /> на основе заданной привязки службы.</summary>
      <param name="name">Пространство имен привязки (свойство <see cref="P:System.ServiceModel.Channels.Binding.Name" />).</param>
      <param name="ns">Пространство имен привязки (свойство <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> имеет значение null или является пустой строкой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Выполняет построение на стороне клиента стека фабрики каналов, создающей каналы заданного типа и удовлетворяющей заданным массивом объектов параметрам.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, удовлетворяющая заданным коллекцией параметрам.</returns>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Выполняет построение на стороне клиента стека фабрики каналов, создающей каналы заданного типа и удовлетворяющей заданным коллекцией привязки параметрам.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, удовлетворяющая заданным коллекцией параметрам.</returns>
      <param name="parameters">Коллекция <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающая требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.InvalidOperationException">Отсутствует или является неисправным элемент транспорта, используется недопустимая схема, либо не задана версия сообщения.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение на стороне клиента стека фабрики каналов, удовлетворяющего заданным массивом объектов требованиям.</summary>
      <returns>Значение null., если заданный стек фабрики каналов может быть построен на клиенте; в противном случае — значение false.</returns>
      <param name="parameters">Массив объектов, задающий требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, для которого тестируется фабрика.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Возвращает значение, указывающее, может ли текущая привязка выполнить построение на стороне клиента стека фабрики каналов, удовлетворяющего заданной коллекции параметров привязки.</summary>
      <returns>Значение null., если заданный стек фабрики каналов может быть построен на клиенте; в противном случае — значение false.</returns>
      <param name="parameters">Коллекция <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающая требования для фабрики каналов, построение которой выполняется.</param>
      <typeparam name="TChannel">Тип канала, для которого тестируется фабрика.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Возвращает или задает интервал времени для закрытия подключения до того, как транспорт создаст исключение.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания. Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше ноля или слишком велико.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>При переопределении в производном классе создает коллекцию, содержащую элементы привязки, которые являются частью текущей привязки. </summary>
      <returns>Объект <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий элементы привязки из текущего объекта привязки в правильном порядке.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <param name="parameters">Коллекция <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, задающая требования для канала, построение которого выполняется.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Возвращает версию сообщения, используемую клиентами и службами, настроенными с использованием привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый клиентами и службами, настроенными с использованием привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Получает или задает имя привязки.</summary>
      <returns>Имя привязки. По умолчанию используется имя null.</returns>
      <exception cref="T:System.ArgumentException">Заданным значением не может быть null или пустая строка.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Возвращает или задает пространство имен XML привязки.</summary>
      <returns>Пространство имен XML привязки. Значение по умолчанию — "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">Заданным значением не может быть null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Возвращает или задает интервал времени для открытия подключения до того, как транспорт создаст исключение.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания. Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше ноля или слишком велико.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Возвращает или задает интервал времени бездействия подключения, в течение которого сообщения приложения не получаются, до его сброса.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для получения приложением сообщения до истечения времени ожидания. Значение по умолчанию — 10 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше ноля или слишком велико.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>При реализации в производном классе задает схему URI, которая указывает транспорт, используемый фабриками каналов, построенными привязками.</summary>
      <returns>Схема URI, используемая каналами, которые созданы фабриками, построенными текущей привязкой.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Возвращает или задает интервал времени для завершения операции записи до того, как транспорт создаст исключение.</summary>
      <returns>Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции записи до превышения времени ожидания. Значение по умолчанию — 1 минута.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше ноля или слишком велико.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Предоставляет сведения об адресах, привязках, элементах и параметрах привязок, которые нужны для создания фабрик каналов на клиенте бета-версии Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingContext" /> для указанной привязки и коллекции параметров привязки.</summary>
      <param name="binding">Сеанс <see cref="T:System.ServiceModel.Channels.CustomBinding" /> для канала.</param>
      <param name="parameters">Сеанс <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> для канала.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Получает привязку для канала, построенного в текущем контексте.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.CustomBinding" /> для канала, построенного в текущем контексте.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Получает коллекцию параметров привязки для канала, построенного в текущем контексте.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> для канала, построенного в текущем контексте.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Создает внутреннюю фабрику каналов для каналов определенного типа под текущей фабрикой каналов.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, представляющий внутреннюю фабрику каналов текущей фабрики каналов.</returns>
      <typeparam name="TChannel">Тип объекта <see cref="T:System.ServiceModel.Channels.IChannel" />, создаваемого внутренней фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Возвращает значение, указывающее, может ли фабрика внутренних каналов создавать каналы указанного типа.</summary>
      <returns>Значение true, если внутренняя фабрика каналов может создавать каналы указанного типа <paramref name="TChannel" />, в противном случае — значение false.</returns>
      <typeparam name="TChannel">Тип объекта <see cref="T:System.ServiceModel.Channels.IChannel" />, создаваемого внутренней фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Возвращает копию текущего контекста построения канала.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, являющийся копией текущего контекста построения канала.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T " />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Возвращает элементы привязки, которые используются другими элементами привязки для создания стека каналов.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая элементы привязки, которые используются другими элементами привязки для создания стека каналов.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Элементы привязок, создающие фабрики каналов для различных типов каналов, используемых для обработки исходящих сообщений в клиенте Windows Phone.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" /> на основе заданного элемента привязки.</summary>
      <param name="elementToBeCloned">Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, точная копия которого должна быть создана.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует фабрику каналов для создания каналов заданного типа из контекста привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, инициализируемый на основе параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки. </param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, может ли элемент привязки создавать фабрику каналов для заданного типа канала.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> можно создать с помощью элемента привязки; в противном случае — значение false.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки. </param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>При переопределении в производном классе возвращает копию объекта элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, который является глубокой копией оригинала.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>При переопределении в производном классе возвращает запрашиваемый типизированный объект, если таковой имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Представляет коллекцию элементов привязки, используемых в привязке.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> из перечислимого набора элементов привязки.</summary>
      <param name="elements">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> универсального типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> на основе массива элементов привязки.</summary>
      <param name="elements">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Добавляет элементы привязки из массива в коллекцию элементов привязки.</summary>
      <param name="elements">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, добавляемый к коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Создает копию текущей коллекции элементов привязки.</summary>
      <returns>Копия коллекции <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Возвращает значение, указывающее, принадлежит ли заданный тип элемента привязки к коллекции элементов привязки.</summary>
      <returns>Значение true, если коллекция содержит заданный тип элемента привязки; в противном случае — значение false.</returns>
      <param name="bindingElementType">Тип элемента привязки, который проверяется на наличие в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Возвращает первый элемент заданного типа из коллекции элементов привязки.</summary>
      <returns>Элемент типа <see cref="T:System.Type" />, если найден. В противном случае — значение 0, если <paramref name="T" /> является типом значения, и значение null, если <paramref name="T" /> является ссылочным типом.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> искомого элемента.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Возвращает все элементы заданного типа из коллекции элементов привязки.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> всех элементов типа <see cref="T:System.Type" />, если они найдены. В противном случае — значение 0, если <paramref name="T" /> является типом значения, и значение null, если <paramref name="T" /> является ссылочным типом.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> искомого элемента.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Вставляет элемент привязки в заданное расположение в коллекции элементов привязки.</summary>
      <param name="index">Расположение, в которое вставляется элемент привязки в коллекции.</param>
      <param name="item">Вставляемая строка <see cref="T:System.ServiceModel.Channels.BindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Удаляет элемент привязки заданного типа из коллекции элементов привязки.</summary>
      <returns>Тип <see cref="T:System.Type" /> удаляемого элемента.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> искомого элемента.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Удаляет все элементы привязки заданного типа из коллекции элементов привязки.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> всех найденных элементов типа <see cref="T:System.Type" />.</returns>
      <typeparam name="T">Тип <see cref="T:System.Type" /> искомого элемента.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Заменяет элемент привязки с заданным индексом в коллекции элементов привязки.</summary>
      <param name="index">Индекс элемента (начиная с нуля), который требуется заменить.</param>
      <param name="item">Новое значение для элемента <see cref="T:System.ServiceModel.Channels.BindingElement" /> по указанному индексу <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Представляет коллекцию параметров привязки, хранящих сведения, которые используются элементами привязки для создания фабрик.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Представляет модуль записи текста сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр  <see cref="T:System.ServiceModel.Channels.BodyWriter" />класс, который явно указывает на необходимость буферизации.</summary>
      <param name="isBuffered">Значение true, если модуль записи содержимого может вызываться несколько раз; в противном случае — значение false.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Возвращает значение, указывающее на возможность вызова метода записи несколько раз.</summary>
      <returns>Значение true, если модуль записи содержимого может вызываться несколько раз; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>При реализации предоставляет точку расширения при записи содержимого текста сообщения.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи текста сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает содержимое текста сообщения.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>При реализации в производном классе для управления буферным пулом можно использовать класс <see cref="T:System.ServiceModel.Channels.BufferManager" />. Пул и буферы создаются при создании экземпляра этого класса и удаляются при очистке буферного пула во время сборки мусора. Если необходимо воспользоваться буфером, берется один буфер из пула, используется и возвращается в пул после выполнения всех необходимых действий. Этот процесс намного быстрее и потребляет меньше ресурсов, чем создание и удаление буфера всякий раз, когда необходимо им воспользоваться.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BufferManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Освобождает буферы, которые в настоящее время кэшированы в диспетчере.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Создает новый объект BufferManager с заданным максимальным размером буферного пула и максимальным размером каждого буфера в пуле.</summary>
      <returns>Возвращает объект <see cref="T:System.ServiceModel.Channels.BufferManager" /> с заданными параметрами.</returns>
      <param name="maxBufferPoolSize">Максимальный размер пула.</param>
      <param name="maxBufferSize">Максимальный размер отдельного буфера.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxBufferPoolSize" /> или <paramref name="maxBufferSize" /> меньше ноля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Возвращает буфер в пул.</summary>
      <param name="buffer">Ссылка на возвращаемый буфер.</param>
      <exception cref="T:System.ArgumentNullException">Ссылка <paramref name="buffer" /> не может иметь значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина ссылки <paramref name="buffer" /> не соответствует значению свойства длины буферного пула.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Возвращает из пула буфер, размер которого не меньше заданного. </summary>
      <returns>Массив байтов, представляющий запрашиваемый размер буфера.</returns>
      <param name="bufferSize">Размер запрашиваемого буфера в байтах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="bufferSize" /> не может иметь значение меньше нуля.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Предоставляет базовую реализацию настраиваемых каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelBase" />. </summary>
      <param name="channelManager">Объект <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, предоставляющий время ожидания по умолчанию для операций канала (отправка, получение, открытие и закрытие).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции закрытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции открытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции получения.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции получения до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции отправки.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции отправки до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Получает диспетчер каналов, связанный с текущим каналом.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, связанный с текущим каналом.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Вызывается в процессе перехода коммуникационного объекта в состояние закрытия.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода закрытия интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода открытия, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода открытия интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода получения, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода получения интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода отправки, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода отправки интервал времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Предоставляет общую базовую реализацию для всех настраиваемых фабрик каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> с заданными по умолчанию значениями времени ожидания соединения.</summary>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, задающий время ожидания по умолчанию для операций открытия, отправки, получения и закрытия при обмене сообщениями. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции закрытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции открытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции получения.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции получения до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Возвращает интервал времени по умолчанию, выделенный для успешного завершения операции отправки.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции отправки до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Вставляет операции обработки коммуникационного объекта после перехода объекта в состояние закрытия из-за вызова синхронной операции прерывания.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия каждого канала, созданного фабрикой.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции при закрытии.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией при закрытии.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Вставляет операцию обработки коммуникационного объекта после перехода объекта в состояние открытия, которая должна быть выполнена в течение указанного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия каналов, открытых фабрикой.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Предоставляет общую базовую реализацию фабрик каналов клиента, позволяющую создавать каналы определенного типа, соединенные с определенным адресом.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> с заданными по умолчанию значениями времени ожидания связи.</summary>
      <param name="timeouts">Объект <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, задающий время ожидания по умолчанию для операций открытия, отправки, получения и закрытия при обмене сообщениями.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Создает канал определенного типа с заданным адресом конечной точки.</summary>
      <returns>Канал типа <paramref name="TChannel" /> с указанным адресом <paramref name="address" />.</returns>
      <param name="address">Адрес удаленной конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал отправляет сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал определенного типа с заданными транспортом и адресом конечной точки.</summary>
      <returns>Канал типа <paramref name="TChannel" /> с заданными адресами удаленной конечной точки и транспорта.</returns>
      <param name="address">Адрес удаленной конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал отправляет сообщения.</param>
      <param name="via">
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> или <paramref name="via" /> равен null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Прерывает работу всех каналов, управляемых фабрикой каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия всех каналов, связанных с фабрикой каналов, в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление об асинхронном завершении операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Закрывает все каналы, связанные с фабрикой каналов, в течение заданного промежутка времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>При реализации в производном классе предоставляет точку расширения при создании каналов.</summary>
      <returns>Канал типа <paramref name="TChannel" /> с указанным адресом.</returns>
      <param name="address">Адрес удаленной конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал отправляет сообщения.</param>
      <param name="via">
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия всех каналов, связанных с фабрикой каналов, в течение заданного промежутка времени.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Подтверждает, что фабрика каналов открыта и готова создавать каналы.</summary>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущая фабрика каналов находится в состоянии, отличном от <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Предоставляет базовую реализацию для управления временем ожидания по умолчанию, связанным с фабриками каналов и прослушивателей.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>При переопределении в производном классе возвращает промежуток времени по умолчанию, в течение которого канал должен завершить получение сообщения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает промежуток времени, в течение которого канал должен завершить получение сообщения до истечения времени ожидания после того, как был вызван метод получения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>При переопределении в производном классе возвращает промежуток времени по умолчанию, в течение которого канал должен завершить отправку сообщения.</summary>
      <returns>Значение <see cref="T:System.Timespan" /> по умолчанию, которое задает промежуток времени, в течение которого канал должен завершить отправку сообщения до истечения времени ожидания после того, как был вызван метод отправки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода закрытия интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода открытия, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода открытия интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода получения, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода получения интервал времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Возвращает промежуток времени, по истечении которого истекает время ожидания метода отправки, вызванного коммуникационным объектом.</summary>
      <returns>Объект <see cref="T:System.Timespan" />, который задает для метода отправки интервал времени ожидания.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Представляет коллекцию параметров канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />. </summary>
      <param name="channel">Канал, параметры которого представлены в данной коллекции.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Получает канал, параметры которого представлены в данной коллекции. </summary>
      <returns>Канал <see cref="T:System.ServiceModel.Channels.IChannel" />, параметры которого представлены в данной коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Очищает коллекцию параметров.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Вставляет заданный элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс элемента коллекции.</param>
      <param name="item">Элемент, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Добавляет параметры в текущей коллекции в объект <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> для указанного канала.</summary>
      <param name="innerChannel">Канал, который получает параметры из текущей коллекции.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Удаляет параметр из коллекции.</summary>
      <param name="index">Индекс удаляемого параметра.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Заменяет элемент в коллекции по указанному индексу.</summary>
      <param name="index">Индекс заменяемого элемента.</param>
      <param name="item">Значение заменяющего элемента.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Предоставляет общую базовую реализацию основного конечного автомата, общую для всех коммуникационных объектов в системе, включая каналы и фабрики каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CommunicationObject" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> с взаимно исключающей блокировкой для защиты заданных переходов между состояниями.</summary>
      <param name="mutex">Взаимно исключающая блокировка, которая защищает экземпляр класса в процессе перехода между состояниями.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Вызывает мгновенный переход коммуникационного объекта из текущего состояния в состояние Closing.</summary>
      <exception cref="T:System.InvalidOperationException">Не вызван либо метод <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" /> базового класса, либо метод <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" /> базового класса.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта с заданным временем ожидания.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия.</returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции закрытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией закрытия.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.InvalidOperationException">Коммуникационный объект не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию закрытия коммуникационного объекта в течение заданного интервала времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию открытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции открытия.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией открытия.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Коммуникационный объект не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Вызывает переход коммуникационного объекта из текущего состояния в состояние Closed.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Вызывает переход коммуникационного объекта из его текущего состояния в состояние Closed в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Метод <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> вызван для объекта, находящегося в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Происходит при переходе коммуникационного объекта в состояние Closed.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Происходит при переходе коммуникационного объекта в состояние Closing.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>При переопределении в производном классе возвращает интервал времени по умолчанию, выделенный для успешного завершения операции закрытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции закрытия до превышения времени ожидания.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>При переопределении в производном классе возвращает интервал времени по умолчанию, выделенный для успешного завершения операции открытия.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию закрытия коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию открытия коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Вызывает переход коммуникационного объекта из текущего состояния в состояние Faulted.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Происходит при переходе коммуникационного объекта в состояние Faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Возвращает тип коммуникационного объекта.</summary>
      <returns>Тип коммуникационного объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Возвращает значение, указывающее, удален ли коммуникационный объект.</summary>
      <returns>Значение true, если коммуникационный объект находится в закрытом состоянии; в противном случае — значение false</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>При реализации в производном классе вставляет операции обработки коммуникационного объекта после перехода объекта в состояние закрытия из-за вызова синхронной операции прерывания.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе вставляет операции обработки коммуникационного объекта после его перехода в состояние закрытия из-за вызова асинхронной операции закрытия.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию закрытия. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции при закрытии.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией при закрытии.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе вставляет операции обработки коммуникационного объекта после перехода объекта в состояние открытия из-за вызова асинхронной операции открытия.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию при открытии. </returns>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при открытии до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции при открытии.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией при открытии.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>При реализации в производном классе вставляет операции обработки коммуникационного объекта после перехода объекта в состояние закрытия из-за вызова синхронной операции закрытия.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при закрытии до истечения времени ожидания.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Вызывается в процессе перехода коммуникационного объекта в состояние закрытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Вызывается в процессе перехода коммуникационного объекта в состояние закрытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>При реализации в производном классе завершает асинхронную операцию при закрытии коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>При реализации в производном классе завершает асинхронную операцию при открытии коммуникационного объекта.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове метода <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />.</param>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Вставляет операции обработки коммуникационного объекта после перехода объекта в состояние Faulted из-за вызова синхронной операции ошибки.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>При реализации в производном классе вставляет операции обработки коммуникационного объекта после перехода объекта в состояние открытия, которая должна быть выполнена в течение указанного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции при открытии до истечения времени ожидания.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Вызывается в процессе перехода коммуникационного объекта в состояние Opened.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Вызывается в процессе перехода коммуникационного объекта в состояние открытия.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Вызывает переход коммуникационного объекта из состояния Created в состояние Opened.</summary>
      <exception cref="T:System.InvalidOperationException">Коммуникационный объект не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Принятый по умолчанию интервал времени, выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Вызывает переход коммуникационного объекта из состояния Created в состояние Opened в течение заданного интервала времени.</summary>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, которое задает время, выделенное для завершения операции открытия до превышения времени ожидания.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Коммуникационный объект не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может быть изменен.</exception>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
      <exception cref="T:System.TimeoutException">Интервал времени, заданный параметром <paramref name="timeout" /> и выделенный для операции, истек до того, как операция была завершена.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Происходит при переходе коммуникационного объекта в состояние Opened.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Происходит при переходе коммуникационного объекта в состояние открытия.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Возвращает значение, которое указывает на текущее состояние коммуникационного объекта.</summary>
      <returns>Значение из перечисления <see cref="T:System.ServiceModel.CommunicationState" />, которое указывает на текущее состояние объекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Возвращает взаимно исключающую блокировку, которая защищает экземпляр класса в процессе перехода между состояниями.</summary>
      <returns>Взаимно исключающая блокировка, которая защищает экземпляр класса в процессе перехода между состояниями.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Создает исключение, если коммуникационный объект удален.</summary>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Создает исключение, если для свойства коммуникационного объекта <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> не установлено значение <see cref="F:System.ServiceModel.CommunicationState.Created" />.</summary>
      <exception cref="T:System.InvalidOperationException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Создает исключение, если коммуникационный объект не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</summary>
      <exception cref="T:System.InvalidOperationException">Коммуникационный объект не находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Created" /> или <see cref="F:System.ServiceModel.CommunicationState.Opening" /> и не может использоваться.</exception>
      <exception cref="T:System.ObjectDisposedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" /> и не может быть изменен.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Коммуникационный объект находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> и не может быть изменен.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Определяет привязку на основе списка элементов привязки. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с помощью элементов привязки из заполненного стека каналов.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, который содержит элементы привязки стека каналов в обратном порядке.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> на основе значений заданной привязки.</summary>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, используемый для инициализации настраиваемой привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> на основе массива элементов привязки.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации настраиваемой привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.CustomBinding" /> с заданными именем и пространством имен на основе массива элементов привязки.</summary>
      <param name="name">Имя привязки.</param>
      <param name="ns">Пространство имен привязки.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">Массив <see cref="T:System.Array" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, используемый для инициализации настраиваемой привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Возвращает универсальную коллекцию элементов привязки из настраиваемой привязки.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.ICollection`1" /> типа <see cref="T:System.ServiceModel.Channels.BindingElement" />, содержащий элементы привязки из настраиваемой привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Возвращает элементы привязки из настраиваемой привязки.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая элементы привязки из настраиваемой привязки.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта, используемого настраиваемой привязкой.</summary>
      <returns>Схема URI для транспорта, используемого настраиваемой привязкой, или пустая строка, если транспорт отсутствует (элемент привязки <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> имеет значение null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Преобразует исключения, создаваемые каналом, в сообщения об ошибках SOAP, соответствующие протоколу канала.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Возвращает преобразователь ошибок по умолчанию.</summary>
      <returns>Экземпляр класса <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>При реализации в производном классе пытается создать исключение.</summary>
      <returns>Значение true, если сбой был успешно преобразован; в противном случае — значение false. Значение по умолчанию — false.</returns>
      <param name="message">Сообщение ошибки <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="fault">Ошибка.</param>
      <param name="exception">Если преобразование выполнено успешно, исключение SOAP <see cref="T:System.Exception" />, возвращаемое как выходной параметр out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>При реализации в производном классе пытается создать сообщение об ошибке после преобразования ошибки в исключение SOAP.</summary>
      <returns>Значение true, если сообщение о сбое было успешно создано; в противном случае — значение false. Значение по умолчанию — false.</returns>
      <param name="exception">Исключение SOAP.</param>
      <param name="message">Сообщение об ошибке, возвращенное как выходной параметр out.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> вернул значение true, но значение <paramref name="message" /> равно null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Создает оболочку для <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> с проверкой ошибок.</summary>
      <returns>Значение true, если сбой был успешно преобразован; в противном случае — значение false. Значение по умолчанию — false.</returns>
      <param name="message">Сообщение об ошибке.</param>
      <param name="fault">Ошибка.</param>
      <param name="exception">Если преобразование выполнено успешно, исключение SOAP, возвращаемое как выходной параметр out.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> или <paramref name="fault" /> равен null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> вернул значение true, но значение <paramref name="exception" /> равно null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> вернул значение false, но значение <paramref name="exception" /> не равно null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>Позволяет управлять обработкой файлов cookie HTTP в HTTP-запросах и ответах.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> на основе заданного элемента привязки.</summary>
      <param name="elementToBeCloned">Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, точная копия которого должна быть создана.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Инициализирует фабрику каналов для создания каналов заданного типа из контекста привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, инициализируемый на основе параметра <paramref name="context" />.</returns>
      <param name="context">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>Возвращает копию текущего объекта элемента привязки.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, который является глубокой копией оригинала.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека привязок.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Предоставляет доступ к HTTP-запросу на получение доступа к дополнительным сведениям, которые становятся доступными для запросов по протоколу HTTP, и предоставление ответа на эти сведения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Возвращает заголовки HTTP из HTTP-запроса.</summary>
      <returns>Коллекция <see cref="T:System.Net.WebHeaderCollection" />, содержащая заголовки HTTP из HTTP-запроса.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Возвращает или задает HTTP-команду для HTTP-запроса.</summary>
      <returns>HTTP-команда для HTTP-запроса.</returns>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="value" /> задано значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Возвращает имя свойства сообщения, связанного с классом <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
      <returns>Значение "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Возвращает или задает строку запроса для HTTP-запроса.</summary>
      <returns>Строка запроса из HTTP-запроса.</returns>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="value" /> задано значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Возвращает или задает значение, указывающее, пропускается ли текст сообщения (в этом случае отправляются только его заголовки).</summary>
      <returns>Значение true, если текст сообщения подавляется; в противном случае — значение false. Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Предоставляет доступ к HTTP-ответу для получения доступа к дополнительным сведениям, предоставляемым для запросов по протоколу HTTP, и предоставление ответа на эти сведения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Возвращает заголовки HTTP из HTTP-ответа.</summary>
      <returns>Возвращает коллекцию <see cref="T:System.Net.WebHeaderCollection" />, содержащую заголовки HTTP из HTTP-ответа.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Возвращает имя свойства сообщения, связанного с классом <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />.</summary>
      <returns>Возвращает "httpResponse".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Возвращает или задает код состояния текущего HTTP-ответа, к которому прикреплено это свойство.</summary>
      <returns>Код <see cref="T:System.Net.HttpStatusCode" />, отправляемый в HTTP-ответе.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше 100 или больше 599.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Возвращает или задает описание кода состояния текущего HTTP-ответа, к которому присоединено это свойство.</summary>
      <returns>Описание состояния, отправляемое в HTTP-ответе.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Представляет элемент привязки, который используется, чтобы указать транспорт HTTPS для передачи сообщений. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</summary>
      <param name="elementToBeCloned">Экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов заданного типа, которая может использоваться для создания канала.</summary>
      <returns>Фабрика каналов заданного типа, настроенная на основе значений, которые указаны в элементе привязки транспорта.</returns>
      <param name="context">Члены <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Копия текущего элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект из заданного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />. Этот метод возвращает указанный объект из базового класса или из какого-либо предка этого класса.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Схема URI для транспорта; в данном случае — HTTPS.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Представляет элемент привязки, который используется, чтобы указать транспорт HTTP для передачи сообщений. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />. </summary>
      <param name="elementToBeCloned">Экземпляр класса <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов, которая может использоваться для создания канала.</summary>
      <returns>Фабрика каналов заданного типа.</returns>
      <param name="context">Члены <see cref="T:System.ServiceModel.Channels.BindingContext" />, описывающие привязки, поведения, контракты и предоставляющие другие сведения, необходимые для создания фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Определяет, можно ли создать фабрику каналов заданного типа.</summary>
      <returns>Значение true, если можно создать фабрику каналов; в противном случае — значение false.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> создаваемого канала.</param>
      <typeparam name="TChannel">Тип проверяемого канала.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Создает копию текущего элемента привязки.</summary>
      <returns>Копия текущего элемента привязки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Получает или задает максимальный размер используемого буфера. Для буферизованных сообщений это значение будет совпадать со значением свойства <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />. Для потоковых сообщений это значение равно максимальному размеру заголовков SOAP, считываемых в режиме буферизации.</summary>
      <returns>Максимальный размер буфера в байтах. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает значение <see cref="F:System.Uri.UriSchemeHttp" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Определяет базовый интерфейс, который должен быть реализован во всех объектах каналов. Требуется, чтобы в них был реализован интерфейс конечного автомата, совместно используемый всеми коммуникационными объектами, а также метод для извлечения объектов из стека каналов. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Определяет интерфейс, который должен быть реализован фабрикой каналов для создания каналов.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Определяет интерфейс, который должны реализовывать фабрики каналов, создающие каналы конкретного типа.</summary>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Создает канал заданного типа, связанный с заданным адресом конечной точки.</summary>
      <returns>Канал типа <paramref name="TChannel" />, связанный с заданным адресом конечной точки.</returns>
      <param name="to">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Создает канал заданного типа, связанный с заданным адресом конечной точки и адресом транспорта, на который отправляются сообщения.</summary>
      <returns>Канал типа <paramref name="TChannel" />, связанный с заданным адресом конечной точки и адресом транспорта.</returns>
      <param name="to">Объект <see cref="T:System.ServiceModel.EndpointAddress" />, представляющий расположение службы.</param>
      <param name="via">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал для отправки и получения сообщения.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Определяет интерфейс для сеанса, реализованного на каждой стороне двусторонней связи между обменивающимися сообщениями конечными точками.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию завершения исходящего сеанса.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное завершение исходящего сеанса.</returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Объект, содержащий сведения о состоянии для этого запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию завершения исходящего сеанса с заданным временем ожидания завершения операции.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное завершение исходящего сеанса.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого операция должна завершиться.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Объект, содержащий сведения о состоянии для этого запроса. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом, в течение заданного промежутка времени.</summary>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого операция должна завершиться.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию завершения исходящего сеанса, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Определяет интерфейс, связывающий дуплексный канал с сеансом.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>Определяет интерфейс, используемый для предоставления доступа к необязательному экземпляру класса <see cref="T:System.Net.CookieContainer" />, который можно использовать для управления коллекцией файлов cookie.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>Возвращает или задает объект <see cref="T:System.Net.CookieContainer" />, если его необходимо использовать.</summary>
      <returns>Объект <see cref="T:System.Net.CookieContainer" />, если необходимо использовать контейнер, либо null, если контейнер не используется.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал для получения сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения, с которой связан объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное получение сообщения. </returns>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию получения.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания доступного сообщения.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше ноля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию получения сообщения, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию получения.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания доступного сообщения.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше ноля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию ожидания прихода сообщения, с которой связано определенное время ожидания и объект состояния. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ожидания прихода сообщения.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания доступного сообщения.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше ноля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию получения сообщения. </summary>
      <returns>Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Завершает указанную асинхронную операцию получения сообщения.</summary>
      <returns>Значение true, если сообщение получено до истечения заданного интервала времени; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
      <param name="message">Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Завершает указанную асинхронную операцию ожидания сообщения.</summary>
      <returns>Значение true, если сообщение пришло до превышения значения, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, определяющий операцию <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> для завершения и извлечения конечного результата.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Возвращает адрес, на который этот входной канал получает сообщения. </summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который входной канал получает сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Возвращает полученное сообщение, если таковое доступно. Если сообщение недоступно, обработка приостанавливается на промежуток времени по умолчанию.</summary>
      <returns>Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Возвращает полученное сообщение, если таковое доступно. Если сообщение недоступно, обработка приостанавливается на заданный промежуток времени.</summary>
      <returns>Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, указывающий, за какое время должна завершиться операция получения, прежде чем истечет время ожидания и будет создано исключение <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше ноля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Пытается получить сообщение в течение заданного промежутка времени. </summary>
      <returns>Значение true, если сообщение пришло до превышения значения, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
      <param name="message">Полученное сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше ноля.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Возвращает значение, указывающее, было ли сообщение получено в течение заданного промежутка времени.</summary>
      <returns>Значение true, если сообщение пришло до превышения значения, заданного параметром <paramref name="timeout" />; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.Timespan" /> задает максимальный интервал времени ожидания прихода сообщения.</param>
      <exception cref="T:System.TimeoutException">Указанное значение <paramref name="timeout" /> превышено до завершения операции.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение времени ожидания меньше ноля.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Определяет интерфейс для сеанса, реализованного на получающей стороне односторонней связи между обменивающимися сообщениями конечными точками. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Определяет интерфейс, связывающий входящий канал и сеанс.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Определяет интерфейс, который можно реализовать для описания набора свойств сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Создает копию текущего экземпляра.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Определяет интерфейс, который должен реализовывать канал для отправки сообщения. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала. </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу. </param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />. </param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией отправки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию отправки.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции отправки.</param>
      <param name="state">Заданный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией отправки.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию по передаче сообщения в пункт назначения исходящего канала. </summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Возвращает пункт назначения службы, в который по исходящему каналу отправляются сообщения. </summary>
      <returns>Адрес службы <see cref="T:System.ServiceModel.EndpointAddress" />, на который отправляются сообщения по исходящему каналу. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Передает сообщение в пункт назначения исходящего канала. </summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Отправляет сообщение по текущему исходящему каналу в течение заданного промежутка времени.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, передаваемый по исходящему каналу.</param>
      <param name="timeout">Значение <see cref="T:System.Timespan" />, указывающее время, выделенное для завершения операции отправки до истечения времени ожидания.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</summary>
      <returns>
        <see cref="T:System.Uri" />, содержащий адрес транспорта, на который отправляются сообщения по исходящему каналу.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Определяет интерфейс для сеанса, реализованного на отправляющей стороне односторонней связи между обменивающимися сообщениями конечными точками. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Определяет интерфейс, связывающий исходящий канал и сеанс.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Определяет контракт, который должен реализовывать канал, чтобы быть на запрашивающей стороне взаимодействия типа "запрос-ответ" между конечными точками, обменивающимися сообщениями. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ". </summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ" в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ. (Сведения о значениях по умолчанию см. в разделе "Примечания".)</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию, чтобы вернуть ответ на основе сообщений переданному запросу. </summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Возвращает удаленный адрес, на который канал запроса отправляет сообщения. </summary>
      <returns>Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал запроса отправляет сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений. </summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений в течение заданного промежутка времени.</summary>
      <returns>Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос. </returns>
      <param name="message">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Возвращает адрес транспорта, на который отправляется запрос.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Определяет интерфейс для связи канала запроса и сеанса.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Определяет интерфейс для установления общего контекста между участниками обмена сообщениями, предоставляя идентификатор для сеанса связи. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Возвращает идентификатор, уникально определяющий сеанс. </summary>
      <returns>Идентификатор, уникально определяющий сеанс. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Определяет интерфейс, связывающий канал с определенным типом сеанса.</summary>
      <typeparam name="TSession">Тип интерфейса <see cref="T:System.ServiceModel.Channels.ISession" />, связанного с каналом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Возвращает тип сеанса, связанного с этим каналом.</summary>
      <returns>Общий параметр <paramref name="TSession" />, определяющий сеанс, связанный с каналом.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Задает локальные параметры безопасности клиента.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Создает новый экземпляр этого класса, который является копией текущего экземпляра.</summary>
      <returns>Новый клонированный экземпляр класса <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Возвращает или задает максимальный допустимый разброс времени между системными часами взаимодействующих сторон. </summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальный допустимый разброс времени между системными часами взаимодействующих сторон. Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение свойства меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Возвращает или задает максимальное время действия параметра nonce сообщения.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальную продолжительность действия параметра nonce сообщения. Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение свойства меньше 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Возвращает или задает максимальный промежуток времени, в течение которого сообщения, отправленные клиентом, остаются действительными. Если служба получает сообщение по истечении этого времени, она удаляет сообщение.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий максимальный промежуток времени, в течение которого сообщения, отправленные клиентом, остаются действительными. Значение по умолчанию — 5 минут.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение свойства меньше 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Представляет логическую единицу взаимодействия между конечными точками в распределенной среде. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Закрывает объект <see cref="T:System.ServiceModel.Channels.Message" /> и освобождает все ресурсы. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Создает сообщение, в котором содержится версия и действие.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для создаваемого сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения.</param>
      <param name="action">Описание процедуры обработки сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> или <paramref name="action" /> равен null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Создает сообщение с указанными версией, действием и текстом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для создаваемого сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Текст сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает сообщение с использованием указанных версии, действия, текста сообщения и сериализатора.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для создаваемого сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Текст сообщения. </param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="fault" /> или <paramref name="action" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Создает сообщение с текстом, содержащим массив байтов. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для создаваемого сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Объект <see cref="T:System.ServiceModel.Channels.BodyWriter" /> байтового типа. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Создает сообщение с указанными версией, действием и текстом. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для создаваемого сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Текст сообщения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Создает сообщение с использованием указанных средства чтения, действия и версии. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" /> для создаваемого сообщения. </returns>
      <param name="version">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, задающий версию SOAP, которая должна использоваться для сообщения. </param>
      <param name="action">Описание процедуры обработки сообщения. </param>
      <param name="body">Объект <see cref="T:System.Xml.XmlReader" />, который требуется использовать для чтения сообщения SOAP</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" />, <paramref name="action" /> или <paramref name="body" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Извлекает текст данного экземпляра <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Объект типа <paramref name="T" />, содержащий текст данного сообщения.</returns>
      <typeparam name="T">Текст сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Извлекает текст данного экземпляра <see cref="T:System.ServiceModel.Channels.Message" /> с использованием указанного сериализатора.</summary>
      <returns>Объект типа <paramref name="T" />, содержащий текст данного сообщения.</returns>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Текст сообщения.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Извлекает атрибуты текста сообщения.</summary>
      <returns>Атрибуты текста сообщения.</returns>
      <param name="localName">Локальное имя узла XML.Имя элемента, соответствующего этому члену. Эта строка должна быть допустимым именем XML-элемента.</param>
      <param name="ns">Пространство имен, которому принадлежит этот элемент XML.Универсальный код ресурса (URI) пространства имен элемента, соответствующего этому члену. Система не проверяет универсальные коды ресурсов (URI), кроме адресов транспорта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> или <paramref name="ns" /> равен null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Возвращает средство чтения словаря XML, обеспечивающее доступ к содержимому текста данного сообщения.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение пусто либо было скопировано, прочтено или записано.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>При переопределении в производном классе возвращает заголовки сообщения. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, представляющий заголовки сообщения. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Возвращает значение, указывающее, удален ли объект <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>true, если сообщение освобождено; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Возвращает значение, указывающее, пуст ли объект <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>true, если сообщение пусто; в противном случае — значение false. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Получает значение, указывающее, привело ли данное сообщение к возникновению ошибок SOAP.</summary>
      <returns>Значение true, если сообщение привело к возникновению ошибок SOAP; в противном случае — значение false.</returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при преобразовании текста сообщения в строку.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для преобразования текста сообщения в строку. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Метод, вызываемый при закрытии сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Метод, вызываемый при извлечении атрибутов текста сообщения.</summary>
      <returns>Атрибуты текста сообщения.</returns>
      <param name="localName">Локальное имя узла XML.Имя элемента, соответствующего этому члену. Эта строка должна быть допустимым именем XML-элемента.</param>
      <param name="ns">Пространство имен, которому принадлежит этот элемент XML.Универсальный код ресурса (URI) пространства имен элемента, соответствующего этому члену. Система не проверяет универсальные коды ресурсов (URI), кроме адресов транспорта.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Метод вызываемый при извлечении средства чтения словаря XML, которое обеспечивает доступ к содержимому текста данного сообщения.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи текста сообщения в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи текста этого сообщения в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи всего сообщения в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи этого сообщения в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи начального элемента текста в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента текста в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи начального элемента конверта в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента конверта в XML-файл.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Метод, вызываемый при записи начального элемента заголовка в XML-файл.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи начального элемента заголовка в XML-файл.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>При переопределении в производном классе получает набор заметок к сообщению уровня обработки. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />, содержащий набор заметок уровня обработки сообщения.</returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Возвращает текущее состояние данного объекта <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageState" />, содержащий текущее состояние данного объекта <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Закрывает все ресурсы, используемые данным сообщением. Этот метод не может наследоваться.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Возвращает строку, которая представляет текущий объект <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>Текущее меню <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>При переопределении в производном классе возвращает версии SOAP и WS-Addressing сообщения. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, представляющий версии SOAP и WS-Addressing, используемые сообщением. </returns>
      <exception cref="T:System.ObjectDisposedException">Сообщение было удалено.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Записывает элемент текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи элемента текста.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Сериализует текст сообщения с использованием указанного объекта <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, который требуется использовать для записи текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение удалено. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует содержимое текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи элемента текста.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> имеет значение null.</exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует все сообщение с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Сериализует все сообщение с использованием указанного объекта <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, который требуется использовать для записи текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null. </exception>
      <exception cref="T:System.ObjectDisposedException">Сообщение закрыто.</exception>
      <exception cref="T:System.InvalidOperationException">Сообщение было скопировано, прочтено или записано.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует начальный элемент текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи начального элемента текста.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Сериализует начальный элемент текста с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи начального элемента текста сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> имеет значение null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует начальный элемент конверта с использованием указанного объекта <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, который требуется использовать для записи начального элемента конверта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Представляет буфер в памяти, в котором хранится все сообщение для последующей обработки.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Возвращает приблизительное число байтов, используемое этим объектом <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>Приблизительное число байтов, используемое данным объектом <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Завершает работу с буфером.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Возвращает копию исходного сообщения.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Возвращает тип содержимого сообщения, сохраненного в этом буфере.</summary>
      <returns>Тип содержимого сообщения, сохраненного в этом буфере.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ServiceModel.Channels.MessageBuffer" />, а при необходимости освобождает также управляемые ресурсы. Этот метод не может наследоваться.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Записывает все содержимое данного буфера в указанный поток ввода-вывода.</summary>
      <param name="stream">Поток ввода-вывода, в который записывается все содержимое данного буфера.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>Кодировщик — это компонент для записи сообщений в поток и для чтения сообщений из потока.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncoder" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>При переопределении в производном классе возвращает тип содержимого MIME, используемый кодировщиком.</summary>
      <returns>Тип содержимого, поддерживаемый кодировщиком сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T " />, если он присутствует. В противном случае — значение null.</returns>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Возвращает значение, указывающее, поддерживается ли кодировщиком сообщений заданное значение типа содержимого уровня сообщений.</summary>
      <returns>Значение true, если заданный тип содержимого уровня сообщений поддерживается; в противном случае — значение false.</returns>
      <param name="contentType">Проверяемый тип содержимого уровня сообщений.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>При переопределении в производном классе возвращает тип носителя, используемый кодировщиком.</summary>
      <returns>Тип носителя, поддерживаемый кодировщиком сообщений.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>При переопределении в производном классе возвращает версию сообщения, используемую кодировщиком.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый кодировщиком.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>При переопределении в производном классе считывает из заданного буфера сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, считываемый из заданного буфера.</returns>
      <param name="buffer">Объект <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, предоставляющий буфер, из которого требуется десериализовать сообщение.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, из которого требуется десериализовать сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>При переопределении в производном классе считывает из заданного потока сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, считываемый из заданного потока.</returns>
      <param name="buffer">Объект <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, предоставляющий буфер, из которого требуется десериализовать сообщение.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, из которого требуется десериализовать сообщение.</param>
      <param name="contentType">Тип содержимого уровня сообщений MIME.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>При переопределении в производном классе считывает из заданного потока сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, считываемый из заданного потока.</returns>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, из которого считывается сообщение.</param>
      <param name="maxSizeOfHeaders">Максимальный размер заголовков, который может быть прочитан из сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>При переопределении в производном классе считывает из заданного потока сообщение.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, считываемый из заданного потока.</returns>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, из которого считывается сообщение.</param>
      <param name="maxSizeOfHeaders">Максимальный размер заголовков, который может быть прочитан из сообщения.</param>
      <param name="contentType">Тип содержимого уровня сообщений MIME.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Возвращает тип содержимого, используемый кодировщиком сообщений.</summary>
      <returns>Тип содержимого, используемый кодировщиком сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Записывает сообщение меньше определенного размера в буфер массива байтов.</summary>
      <returns>Объект <see cref="T:System.ArraySegment`1" /> типа byte, предоставляющий буфер, в который сериализуется сообщение.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, записываемый в буфер сообщений.</param>
      <param name="maxMessageSize">Максимальный размер записываемого сообщения.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, в который записывается сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>При переопределении в производном классе записывает сообщение меньше определенного размера в буфер массива байтов с заданным смещением.</summary>
      <returns>Объект <see cref="T:System.ArraySegment`1" /> типа byte, предоставляющий буфер, в который сериализуется сообщение.</returns>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, записываемый в буфер сообщений.</param>
      <param name="maxMessageSize">Максимальный размер записываемого сообщения.</param>
      <param name="bufferManager">Объект <see cref="T:System.ServiceModel.Channels.BufferManager" />, управляющий буфером, в который записывается сообщение.</param>
      <param name="messageOffset">Смещение фрагмента, которое начинается с начала массива байтов буфера.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>При переопределении в производном классе записывает сообщение в указанный поток.</summary>
      <param name="message">Объект <see cref="T:System.ServiceModel.Channels.Message" />, который требуется записать в поток <paramref name="stream" />.</param>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, в который записывается сообщение <paramref name="message" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Абстрактный базовый класс, представляющий фабрику для создания кодировщиков сообщений, которые могут читать сообщения из потока и записывать их в поток с использованием различных типов кодирования сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Возвращает кодировщик сообщений, который может использоваться для корреляции сообщений при обмене сообщениями, основанном на сеансах.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, который используется для основанного на сеансах обмена сообщениями.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>При переопределении в производном классе возвращает кодировщик сообщений, созданный фабрикой.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, используемый фабрикой.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>При переопределении в производном классе возвращает версию сообщения, которая используется кодировщиками, созданными фабрикой, для кодирования сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый фабрикой.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Элемент привязки, задающий версию сообщения, которая используется для кодирования сообщений.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> на основе существующего элемента.</summary>
      <param name="elementToBeCloned">Объект <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />, точная копия которого должна быть создана.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>При переопределении в производном классе создает фабрику для создания кодировщиков сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, который используется для создания кодировщиков сообщений.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
      <returns>Запрошенный типизированный объект <paramref name="T" />, если он присутствует. В противном случае — значение null.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для текущего элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>При переопределении в производном классе возвращает или задает версию сообщения, которая может обрабатываться кодировщиками сообщений, созданными фабрикой кодировщиков сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, который используется кодировщиками сообщений, созданными фабрикой кодировщиков сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Представляет хранимое в памяти представление ошибки SOAP, которое можно передать методу <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" />, чтобы создать сообщение, содержащее ошибку. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>При вызове в производном классе инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageFault" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Возвращает или задает значение субъекта.</summary>
      <returns>Значение субъекта.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Возвращает код ошибки SOAP. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultCode" />, содержащий код ошибки SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Возвращает новый объект <see cref="T:System.ServiceModel.Channels.MessageFault" />, использующий заданный объект <see cref="T:System.ServiceModel.Channels.Message" /> и заданный максимальный размер буфера сообщений.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="message">Заданный объект <see cref="T:System.ServiceModel.Channels.Message" />, который требуется использовать для создания объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</param>
      <param name="maxBufferSize">Заданный максимальный размер буфера сообщений.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Возвращает объект сведений для ошибки сообщения.</summary>
      <returns>Объект сведений для ошибки сообщения.</returns>
      <typeparam name="T">Тип объекта сведений.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Возвращает объект сведений, использующий заданный объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <returns>Объект сведений, содержащийся в объекте <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> для десериализации объекта сведений. </param>
      <typeparam name="T">Тип объекта сведений.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlDictionaryReader" />, в который входит объект сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, в который входит объект сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.ServiceModel.Channels.MessageFault" /> объект сведений.</summary>
      <returns>true, если у <see cref="T:System.ServiceModel.Channels.MessageFault" /> есть объект сведений; в противном случае — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Возвращает узел SOAP.</summary>
      <returns>Узел SOAP, содержащий сведения о том, какой узел SOAP на пути сообщения стал причиной ошибки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>При вызове в производном классе возвращает объект <see cref="T:System.Xml.XmlDictionaryReader" />, в который входит объект сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlDictionaryReader" />, в который входит объект сведений объекта <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Вызывается перед записью содержимого подробных сведений.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи элемента сведений.</param>
      <param name="version">Версия конверта SOAP для записи.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>При переопределении в неабстрактном производном классе записывает содержимое элемента сведений. </summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи элемента сведений.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Записывает начальный элемент, используя заданный объект <see cref="T:System.Xml.XmlDictionaryWriter" /> и версию конверта SOAP.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, используемый для записи элемента сведений.</param>
      <param name="version">Версия конверта SOAP для записи.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Возвращает текстовое описание ошибки SOAP. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.FaultReason" />, содержащий текстовое описание ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Представляет содержимое заголовка SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeader" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Возвращает или задает целевой получатель заголовка сообщения.</summary>
      <returns>Целевой получатель заголовка сообщения. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть интерпретирован.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть интерпретирован.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть интерпретирован.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
      <param name="relay">Значение, указывающее, требуется ли ретранслировать заголовок.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Создает заголовок из сериализуемого с помощью XmlFormatter объекта. </summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть интерпретирован.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть интерпретирован.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Создает новый заголовок сообщения с заданными данными.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Локальное имя XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="value">Содержимое создаваемого заголовка.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Значение, указывающее, должен ли данный заголовок быть интерпретирован.</param>
      <param name="actor">Целевой получатель заголовка сообщения.</param>
      <param name="relay">Значение, указывающее, требуется ли ретранслировать заголовок.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Проверяет, поддерживается ли заданная версия сообщения.</summary>
      <returns>Значение true, если указанная версия сообщений поддерживается; в противном случае значение false.</returns>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Возвращает значение, указывающее, содержит ли данный заголовок сообщения ссылочные параметры ссылки на конечную точку.</summary>
      <returns>Значение true, если заголовок сообщения представляет ссылочные параметры ссылки на конечную точку; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Возвращает или задает значение, указывающее, должен ли данный заголовок интерпретироваться в соответствии со спецификацией протокола SOAP версии 1.1 или версии 1.2. </summary>
      <returns>true, если заголовок должен интерпретироваться; в противном случае значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Вызывается при сериализации содержимого заголовка с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Вызывается при сериализации начального заголовка с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Возвращает значение, указывающее, требуется ли ретранслировать заголовок.</summary>
      <returns>true, если заголовок должен ретранслироваться; в противном случае значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Преобразует данный заголовок сообщения в строку.</summary>
      <returns>Заголовок сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует заголовок с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует заголовок с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует содержимое заголовка с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует содержимое заголовка с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Сериализует начальный заголовок с помощью заданного средства записи XML. </summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Содержит сведения, относящиеся к версии протокола SOAP, связанной с сообщением и его передачей.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Представляет системную информацию о заголовке сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Возвращает или задает предполагаемого получателя заголовка сообщения.</summary>
      <returns>Универсальный код ресурса (URI), который указывает предполагаемого получателя заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Возвращает значение, указывающее, представляет ли заголовок сообщения ссылочные параметры ссылки на конечную точку.</summary>
      <returns>Значение true, если заголовок сообщения представляет ссылочные параметры ссылки на конечную точку; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Возвращает или задает значение, показывающее, является ли обязательной обработка заголовка сообщения.</summary>
      <returns>Значение true, если обработка заголовка сообщения обязательна; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Возвращает имя заголовка сообщения.</summary>
      <returns>Имя заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Возвращает пространство имен заголовка сообщения.</summary>
      <returns>Пространство имен заголовка сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Возвращает или задает значение, показывающее, может ли ретранслироваться заголовок сообщения.</summary>
      <returns>Значение true, если заголовок сообщения может ретранслироваться; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Представляет коллекцию заголовков сообщения. Этот класс не может быть унаследован.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, используя заданную коллекцию заголовков сообщения.</summary>
      <param name="collection">Коллекция заголовков сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, используя заданную версию сообщения.</summary>
      <param name="version">Версия SOAP сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageHeaders" />, используя заданную версию сообщения и размер.</summary>
      <param name="version">Версия SOAP сообщения.</param>
      <param name="initialSize">Размер заголовка.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Возвращает или задает описание процедуры обработки сообщения.</summary>
      <returns>Описание процедуры обработки сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Добавляет в коллекцию указанный заголовок сообщения.</summary>
      <param name="header">Добавляемый заголовок сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Удаляет из коллекции все заголовки.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Копирует в этот экземпляр из заданного сообщения содержимое заголовка, расположенное по указанному индексу.</summary>
      <param name="message">Сообщение.</param>
      <param name="headerIndex">Расположение исходного заголовка сообщения, из которого копируется содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Копирует в этот экземпляр из заданной коллекции заголовков сообщения содержимое заголовка, расположенное по указанному индексу.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Расположение исходного заголовка сообщения, из которого копируется содержимое.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Копирует в этот экземпляр содержимое всех заголовков из заданного сообщения.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Копирует в этот экземпляр содержимое из заданной коллекции заголовков.</summary>
      <param name="collection">
        <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Копирует заголовки из данной коллекции в массив, начиная с определенного индекса массива. </summary>
      <param name="array">Одномерный массив, в который копируются объекты заголовков сообщений из этого экземпляра. Индексы массива должны начинаться с нуля. </param>
      <param name="index">Индекс массива (отсчитываемый от нуля), с которого начинается копирование. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Возвращает число заголовков сообщения в этой коллекции.</summary>
      <returns>Число заголовков сообщения в этой коллекции.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Возвращает или задает адрес узла, которому следует отправлять ошибки.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> узла, которому следует отправлять ошибки.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Находит заголовок сообщения в этой коллекции по заданным значению LocalName и универсальному коду ресурса (URI) пространства имен элемента заголовка.</summary>
      <returns>Индекс заголовка сообщения в этой коллекции.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Находит заголовок сообщения в этой коллекции по заданным значению LocalName, универсальному коду ресурса (URI) пространства имен и субъектам элемента заголовка.</summary>
      <returns>Индекс заголовка сообщения в этой коллекции.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="actors">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Возвращает или задает адрес узла, отправившего сообщение.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> узла, отправившего сообщение.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию коллекции. Этот метод не может наследоваться.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Извлекает заголовок сообщения в заданной позиции этой коллекции.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="index">Возвращаемый отсчитываемый от ноля индекс заголовка.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Извлекает заголовок сообщения в заданной позиции этой коллекции.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="index">Возвращаемый отсчитываемый от ноля индекс заголовка.</param>
      <param name="serializer">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Находит заголовок сообщения в этой коллекции по заданным значению LocalName и универсальному коду ресурса (URI) пространства имен элемента заголовка.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Извлекает заголовок сообщения в этой коллекции по заданным значению LocalName, универсальному коду ресурса (URI) пространства имен и сериализатору.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="serializer">Объект <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Извлекает заголовок сообщения в этой коллекции по заданным значению LocalName, универсальному коду ресурса (URI) пространства имен и субъектам элемента заголовка.</summary>
      <returns>Заголовок сообщения.</returns>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
      <param name="actors">Целевой получатель заголовка сообщения.</param>
      <typeparam name="T">Заголовок сообщения.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Возвращает средство чтения словаря XML, которое обращается к заголовку сообщения в заданной позиции этой коллекции.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">Возвращаемый отсчитываемый от ноля индекс заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Проверяет, все ли заголовки сообщения, отмеченные как MustUnderstand, были правильно интерпретированы и обработаны. </summary>
      <returns>Значение true, если получатели, заданные с помощью параметра <paramref name="actors" />, правильно интерпретировали и обработали все заголовки сообщения, отмеченные как MustUnderstand; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Проверяет, правильно ли заданные получатели интерпретировали и обработали все заголовки сообщения, отмеченные как MustUnderstand. </summary>
      <returns>Значение true, если получатели, заданные с помощью параметра <paramref name="actors" />, правильно интерпретировали и обработали все заголовки сообщения, отмеченные как MustUnderstand; в противном случае — значение false.</returns>
      <param name="actors">Целевой получатель заголовка сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Вставляет заголовок сообщения в коллекцию по указанному индексу.</summary>
      <param name="headerIndex">Индекс (с нуля), по которому следует вставить значение параметра <paramref name="header" />.</param>
      <param name="header">Вставляемый заголовок сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Извлекает заголовок по заданному индексу.</summary>
      <returns>Узел <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> в коллекции. Если значение параметра <paramref name="index" /> больше или равно числу заголовков в списке, возвращается значение null.</returns>
      <param name="index">Отсчитываемый от ноля индекс списка заголовков.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Возвращает или задает уникальный идентификатор сообщения.</summary>
      <returns>Уникальный идентификатор сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Возвращает версию SOAP сообщения.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Возвращает идентификаторы сообщений, связанных с этим сообщением.</summary>
      <returns>Идентификаторы сообщений, связанных с этим сообщением.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Удаляет из коллекции все заголовки с заданными именем и пространством имен.</summary>
      <param name="name">Значение LocalName XML-элемента заголовка.</param>
      <param name="ns">Универсальный код ресурса (URI) пространства имен XML-элемента заголовка.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции заголовок сообщения по указанному индексу.</summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс удаляемого заголовка.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Возвращает или задает адрес узла, которому следует отправлять ответ на запрос.</summary>
      <returns>Адрес <see cref="T:System.ServiceModel.EndpointAddress" /> узла, которому следует отправлять ответ на запрос.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Задает элемент действия заголовка.</summary>
      <param name="action">Описание процедуры обработки сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию коллекции. Этот метод не может наследоваться.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Возвращает или задает целевую конечную точку сообщения.</summary>
      <returns>Универсальный код ресурса (URI), содержащий целевую конечную точку сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует заголовок из указанного расположения с помощью заданного средства записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Сериализует заголовок из указанного расположения с помощью заданного средства записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует содержимое указанного заголовка с помощью заданного средства записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Сериализует содержимое указанного заголовка с помощью заданного средства записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Сериализует начальный заголовок с помощью заданного средства записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Сериализует начальный заголовок с помощью заданного средства записи XML. </summary>
      <param name="headerIndex">Отсчитываемый от ноля индекс заголовка, который требуется сериализовать.</param>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Представляет набор свойств сообщения. Этот класс не может быть унаследован.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.MessageProperties" /> с предварительно заданными свойствами.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Добавляет элемент с указанными именем и свойством в объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Этот метод не может наследоваться.</summary>
      <param name="name">Имя добавляемого элемента.</param>
      <param name="property">Значение добавляемого элемента. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Возвращает или задает значение, определяющее, сохраняется ли сообщение перед передачей транспорту. </summary>
      <returns>Значение true, если пакетирование исходящих сообщений разрешено; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Удаляет все элементы из списка <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Этот метод не может наследоваться.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> указанное имя. Этот метод не может наследоваться.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с указанным значением <paramref name="name" />; в противном случае — значение false.</returns>
      <param name="name">Искомое имя в коллекции <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Копирует содержимое указанного объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" /> в данный экземпляр.</summary>
      <param name="properties">
        <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Возвращает общее количество свойств в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>Общее количество свойств в объекте <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Возвращает кодировщик, который используется для записи сообщений в поток и для чтения сообщений из потока.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, который используется для записи сообщений в поток и для чтения сообщений из потока.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> фиксированный размер.</summary>
      <returns>Значение true, если коллекция <see cref="T:System.ServiceModel.Channels.MessageProperties" /> имеет фиксированный размер, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Возвращает значение, определяющее, является ли данный набор свойств доступным только для чтения.</summary>
      <returns>Значение true, если данный набор свойств доступен только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Извлекает свойство по заданному индексу.</summary>
      <returns>Свойство с заданным именем <paramref name="name" /> или null, если свойство не существует.</returns>
      <param name="name">Имя свойства, извлекаемого из коллекции.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Получает <see cref="T:System.Collections.ICollection" />, который содержит ключи в <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />, который содержит ключи в <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Удаляет элемент с указанным именем из объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Этот метод не может наследоваться.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с указанным значением <paramref name="name" /> и может быть удален; в противном случае — значение false.</returns>
      <param name="name">Имя удаляемого элемента.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет элемент с указанными именем и свойством в объект <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Этот метод не может наследоваться.</summary>
      <param name="pair">Пара ключ значение, содержащее имя и значение элемента, который требуется добавить.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Определяет, содержит ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> указанное имя. Этот метод не может наследоваться.</summary>
      <returns>значение true,    при  <see cref="T:System.ServiceModel.Channels.MessageProperties" />содержит элемент с именем и значением в указанном   <paramref name="pair" />; в противном случае  значение false,.</returns>
      <param name="pair">Пара ключ значение, содержащее имя и значение элемента, который требуется найти в  <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует содержимое <see cref="T:System.ServiceModel.Channels.MessageProperties" /> в массив, начиная с указанного индекса. Этот метод не может наследоваться.</summary>
      <param name="array">Массив типа <see cref="T:System.Array" />, в который копируется коллекция.</param>
      <param name="index">Индекс, с которого должна начаться операция.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет элемент с указанным именем из объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Этот метод не может наследоваться.</summary>
      <returns>Значение true, если <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с именем и значением в параметре <paramref name="pair" /> и может быть удален; в противном случае значение false.</returns>
      <param name="pair">Пара ключ значение, содержащее имя и значение элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию коллекции. Этот метод не может наследоваться.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации по элементам коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию коллекции. Этот метод не может наследоваться.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации по элементам коллекции.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Определяет, содержит ли объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> элемент с указанным именем, и извлекает его значение. Этот метод не может наследоваться.</summary>
      <returns>Значение true, если объект <see cref="T:System.ServiceModel.Channels.MessageProperties" /> содержит элемент с указанным значением <paramref name="name" />; в противном случае — значение false.</returns>
      <param name="name">Имя искомого элемента.</param>
      <param name="value">Значение найденного элемента.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Получает значения элементов объекта <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />, который содержит значения в <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Возвращает или задает адрес транспорта, который используется для отправки сообщений.</summary>
      <returns>Универсальный код ресурса (URI), который содержит адрес транспорта, используемый для отправки сообщений.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Задает состояние сообщения. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Сообщение создано. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Сообщение читается.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Сообщение записано.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Сообщение скопировано.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Сообщение закрыто и более не является доступным.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Указывает версии SOAP и WS-Addressing, связанные с сообщением и его передачей.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Возвращает версию адресации WS-Addressing, связанной с текущей версией сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, связанный с текущей версией сообщения. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Создает объект версии сообщения, используя протокол WS-Addressing версии 1.0 и протокол SOAP указанной версии.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" /> с указанной версией конверта.</returns>
      <param name="envelopeVersion">Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, указывающий версию протокола SOAP.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Создает объект версии сообщения с указанными версиями WS-Addressing и SOAP.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий указанные версии протоколов WS-Addressing и SOAP.</returns>
      <param name="envelopeVersion">Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, указывающий версию протокола SOAP.</param>
      <param name="addressingVersion">Объект <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, указывающий используемую версию WS-Addressing.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Возвращает версию сообщений, используемую платформой Windows Phone по умолчанию.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протоколы SOAP 1.2 и WS-Addressing 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Возвращает версию SOAP, связанную с текущей версией сообщения.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EnvelopeVersion" />, связанный с объектом версии сообщения.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли текущий объект версии сообщения указанному объекту.</summary>
      <returns>true, если заданный объект равен текущему объекту <see cref="T:System.ServiceModel.Channels.MessageVersion" />; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с текущей версией сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Возвращает хэш-код для текущей версии сообщения.</summary>
      <returns>Уникальный хэш-код для текущего объекта <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Возвращает версию сообщения, не использующую протоколы SOAP и WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, не использующий протоколы SOAP и WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Возвращает версию сообщения, использующую протокол SOAP 1.1.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протокол SOAP 1.1 без протокола WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Возвращает версию сообщения, использующую протоколы WS-Addressing 1.0 и SOAP 1.2.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, использующий протоколы WS-Addressing 1.0 и SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Текущая версия сообщения.</summary>
      <returns>Текущее меню <see cref="T:System.ServiceModel.Channels.MessageVersion" />. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Предоставляет ответ, связанный с входящим запросом.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.RequestContext" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>При переопределении в производном классе отменяет обработку запроса, связанного с контекстом. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>При переопределении в производном классе начинает асинхронную операцию ответа на запрос, связанный с текущим контекстом.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ответа.</returns>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции ответа.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией ответа.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>При переопределении в производном классе начинает асинхронную операцию ответа на запрос, связанный с текущим контекстом, в течение заданного промежутка времени.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию ответа.</returns>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания ответа на доступный запрос.</param>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции ответа.</param>
      <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией ответа.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>При переопределении в производном классе прекращает операцию ответа на контекст запроса, связанный с текущим контекстом.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>При переопределении в производном классе прекращает операцию ответа на контекст запроса, связанный с текущим контекстом, в течение заданного промежутка времени.</summary>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, задающий интервал времени, в течение которого должна завершиться операция ответа, связанная с текущим контекстом.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Освобождает ресурсы, связанные с контекстом.</summary>
      <param name="disposing">Значение true, чтобы освободить управляемые и неуправляемые ресурсы; значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>При переопределении в производном классе завершает асинхронную операцию ответа на сообщение запроса.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>При переопределении в производном классе отвечает на сообщение запроса.</summary>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>При переопределении в производном классе отвечает на сообщение запроса в течение заданного промежутка времени.</summary>
      <param name="message">Входящий объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</param>
      <param name="timeout">Объект <see cref="T:System.Timespan" />, который задает время ожидания ответа на запрос.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>При переопределении в производном классе возвращает сообщение, содержащее запрос.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Message" />, содержащий запрос.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Освобождает управляемые и неуправляемые ресурсы, связанные с контекстом.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>Абстрактный класс, который (при реализации) представляет элемент привязки, поддерживающий канальную безопасность сообщений SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Создает фабрику каналов на основе параметров <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> и переданного контекста привязки. Создаваемая фабрика каналов использует безопасность сообщений SOAP и содержит ссылку на фабрику каналов, соответствующую контексту привязки (который включает фабрику каналов транспорта).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Канал типа <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>При реализации в производном классе создает фабрику каналов заданного типа.</summary>
      <returns>Фабрика <see cref="T:System.ServiceModel.Channels.IChannelFactory" />, создающая каналы типа <paramref name="TChannel" />.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Канал типа <paramref name="TChannel" /> не поддерживается.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает значение, указывающее, можно ли создать фабрику каналов указанного типа.</summary>
      <returns>Значение true, если можно создать фабрику каналов типа <paramref name="TChannel" />. В противном случае значение false.</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для фабрики каналов.</param>
      <typeparam name="TChannel">Тип фабрики каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Создает элемент привязки безопасности, настроенный на проверку подлинности клиента на основе имени пользователя и пароля, передаваемых как часть сообщения SOAP. Элементу привязки требуется транспорт для обеспечения проверки подлинности сервера и защиты сообщений (например, протокол HTTPS).</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает указанный объект с помощью заданного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Указанный объект из <see cref="T:System.ServiceModel.Channels.BindingContext" /> или значение null, если объект не найден.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="context" /> является null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Возвращает или задает значение, которое указывает, включаются ли отметки времени в каждое сообщение.</summary>
      <returns>Значение true, если отметки времени включаются в каждое сообщение; в противном случае — значение false. Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Возвращает свойства привязки, связанные с локальными параметрами безопасности клиента.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />, содержащий параметры безопасности локального клиента.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Элемент привязки, задающий кодировку и управление версиями сообщений для текстовых сообщений SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />, используя указанную версию сообщения и кодировку.</summary>
      <param name="messageVersion">Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, определяющий версию сообщения.</param>
      <param name="writeEncoding">Объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в сообщении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> или <paramref name="writeEncoding" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение параметра <paramref name="writeEncoding" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Выполняет на стороне клиента построение стека фабрики каналов, создающей каналы указанного типа для заданного контекста.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> для заданного контекста.</returns>
      <param name="context">Сеанс <see cref="T:System.ServiceModel.Channels.BindingContext" /> для канала.</param>
      <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />, инициализируемый из текущего объекта.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> со значениями свойств, равными значениям свойств текущего элемента.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Создает фабрику для кодировщиков текстовых сообщений, которые используют версию сообщения и кодировку, заданную текущим элементом привязки кодирования.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, создаваемый данной фабрикой.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека элементов привязки.</summary>
      <returns>Запрошенный типизированный объект T, если он присутствует. В противном случае — ссылка null (Nothing в Visual Basic).</returns>
      <param name="context">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</param>
      <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Возвращает или задает используемые для форматирования текстового сообщения версии протоколов SOAP и WS-Addressing.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.MessageVersion" />, используемый для форматирования сообщений. Значение по умолчанию — <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Возвращает или задает кодировку, используемую для форматирования символов в текстовом сообщении.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, используемый для форматирования символов в текстовом сообщении. По умолчанию используется кодировка UTF-8.</returns>
      <exception cref="T:System.ArgumentNullException">Значение — null.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение параметра <paramref name="writeEncoding" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Абстрактный (abstract) базовый класс, представляющий элемент привязки транспорта.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Создает новый экземпляр данного класса.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Создает новый экземпляр данного класса на основе существующего экземпляра.</summary>
      <param name="elementToBeCloned">Объект <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />, точная копия которого должна быть создана. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Возвращает свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>Свойство из указанного объекта <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Возвращаемое свойство.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> не может иметь значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Возвращает или задает значение, показывающее, требуется ли производить адресацию сообщения вручную.</summary>
      <returns>Значение true, если необходимо производить адресацию сообщения вручную; в противном случае — значение  false. Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Возвращает и задает максимально допустимый размер принимаемого сообщения.</summary>
      <returns>Максимально допустимый размер принимаемого сообщения. Значение по умолчанию — 65,536 байт.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="value" /> не может быть отрицательным.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Возвращает схему универсального кода ресурса (URI) для транспорта.</summary>
      <returns>Возвращает схему URI для транспорта, которая зависит от того, какой производный класс реализует данный метод.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Представляет элемент настраиваемой привязки, поддерживающий безопасность в смешанном режиме (например, оптимизированная безопасность сообщений, передаваемых по безопасному транспорту).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Создает новый объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, инициализируемый на основе текущего класса.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.BindingElement" /> со значениями свойств, равными значениям свойств текущего экземпляра.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Позволяет пользователю настраивать учетные данные клиента, используемые для проверки подлинности клиента по отношению к службе.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Создает копию существующего объекта <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
      <param name="other">Копируемый экземпляр <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Создает новую копию этого экземпляра <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
      <exception cref="T:System.NotImplementedException">Текущие учетные данные равны null или введены неверно.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Создает новую копию этого экземпляра <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</summary>
      <returns>Экземпляр <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Возвращает объект учетных данных, который можно использовать для задания имени пользователя и пароля, используемого клиентом для проверки своей подлинности для службы. </summary>
      <returns>Объект <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />, представляющий имя и пароль клиентских учетных данных текущего пользователя.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Описывает контракт, определяющий данные, которые конечная точка передает вовне.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ContractDescription" /> с указанным именем.</summary>
      <param name="name">Имя контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> пуст.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ContractDescription" /> с именем, для которого указано пространство имен.</summary>
      <param name="name">Имя контракта.</param>
      <param name="ns">Пространство имен, которое содержит имя контракта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Возвращает или задает тип контракта обратного вызова, указанного в описании контракта.</summary>
      <returns>Тип <see cref="T:System.Type" /> контракта обратного вызова, указанного в описании контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Возвращает или задает имя конфигурации для описания контракта.</summary>
      <returns>Имя конфигурации для контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Возвращает или задает тип контракта, указанный в описании контракта.</summary>
      <returns>Тип <see cref="T:System.Type" /> контракта, заданный в описании контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Возвращает или задает имя контракта.</summary>
      <returns>Имя описания контракта.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Возвращает или задает пространство имен для контракта.</summary>
      <returns>Пространство имен контракта.</returns>
      <exception cref="T:System.ArgumentNullException">Присваиваемое значение равно null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Возвращает коллекцию описаний операций, связанных с контрактом.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />, которая содержит описания операций, связанные с описанием контракта.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Представляет ошибку SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.FaultDescription" />, используя указанное значение действия.</summary>
      <param name="action">Действие сообщения об ошибке SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Возвращает значение действия в сообщении об ошибке SOAP.</summary>
      <returns>Действие ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Возвращает или задает тип сведений об ошибке SOAP.</summary>
      <returns>Тип сериализуемого объекта сведений.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Возвращает или задает имя ошибки SOAP.</summary>
      <returns>Имя ошибки SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Возвращает или задает пространство имен ошибки SOAP.</summary>
      <returns>Пространство имен ошибки SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Коллекция объектов <see cref="T:System.ServiceModel.Description.FaultDescription" />, которые можно использовать для получения сведений о сбоях протокола SOAP в контракте.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Представляет текст сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Возвращает части для текста сообщения SOAP.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />, содержащая части текста сообщения SOAP, которые можно просмотреть или изменить.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Возвращает или задает часть сообщения SOAP, которая содержит возвращаемое значение.</summary>
      <returns>Возвращаемое значение, если таковое имеется.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Возвращает или задает имя элемента оболочки внутри элемента текста SOAP, если таковой имеется.</summary>
      <returns>Имя элемента оболочки, если таковой имеется. В противном случае значение null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Возвращает или задает пространство имен элемента оболочки в тексте SOAP, если таковое имеется.</summary>
      <returns>Пространство имен элемента оболочки, если таковое имеется.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Представляет описание сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessageDescription" /> с указанным действием и направлением.</summary>
      <param name="action">Возвращает параметр действия сообщения SOAP, определяющий назначение сообщения.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />Если входящее сообщение или  <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />Если исходящего сообщения.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="direction" /> не равно ни <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />, ни <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Возвращает параметр действия сообщения SOAP, определяющий назначение сообщения.</summary>
      <returns>Универсальный код ресурса (URI) действия.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Возвращает текст сообщения SOAP.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />, содержащая основную часть сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Возвращает направление, указывающее, является ли сообщение входящим или исходящим.</summary>
      <returns>Значение <see cref="T:System.ServiceModel.Description.MessageDirection" />, указывающее, является ли сообщение входящим в службу или исходящим из нее.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Возвращает или задает тип, определяющий тип контракта сообщения.</summary>
      <returns>Тип контракта сообщения.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Предоставляет коллекцию, которая используется для хранения описаний сообщений, составляющих операцию, относящуюся к контракту.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Находит и возвращает описание первого сообщения в коллекции с заданным действием.</summary>
      <returns>Первое описание <see cref="T:System.ServiceModel.Description.MessageDescription" /> из коллекции, сообщение которого имеет заданное действие <paramref name="action" />, либо значение null, если сообщений с действием <paramref name="action" /> не обнаружено.</returns>
      <param name="action">Действие искомого сообщения.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Находит и возвращает все описания сообщений в коллекции, которые имеют заданное действие.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, которая содержит описания сообщений из текущей коллекции, которые имеют заданное действие <paramref name="action" />. Если соответствующие объекты <see cref="T:System.ServiceModel.Description.MessageDescription" /> не найдены, возвращается пустая коллекция.</returns>
      <param name="action">Действие искомых сообщений.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Задает направление сообщения.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Сообщение является входящим.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Сообщение является исходящим.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Представляет описание части сообщения SOAP.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.MessagePartDescription" />. </summary>
      <param name="name">XML-имя части сообщения.</param>
      <param name="ns">Пространство имен XML части сообщения.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Возвращает или задает индекс части сообщения.</summary>
      <returns>Индекс части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Возвращает или задает сведения о членстве для части сообщения.</summary>
      <returns>Сведения о членстве для данной части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Возвращает имя части сообщения.</summary>
      <returns>Имя части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Возвращает пространство имен части сообщения.</summary>
      <returns>Пространство имен части сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Возвращает или задает тип части сообщения.</summary>
      <returns>Тип части сообщения.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>При вызове из производного класса возвращает объект <see cref="T:System.Xml.XmlQualifiedName" /> для объекта <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>Стадия <see cref="T:System.Xml.XmlQualifiedName" /> сообщения <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Объект <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> для поиска.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Контракт, который характеризует операцию в терминах обмена сообщениями.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.OperationDescription" /> с заданным именем и описанием контракта.</summary>
      <param name="name">Имя описания операции.</param>
      <param name="declaringContract">Объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, используемый для инициализации описания операции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="declaringContract" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="name" /> пуст.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Возвращает или задает метод начала операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий доступ к атрибутам и метаданным метода.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Возвращает или задает контракт, к которому принадлежит операция.</summary>
      <returns>Свойство <see cref="T:System.ServiceModel.Description.ContractDescription" /> для операции.</returns>
      <exception cref="T:System.ArgumentNullException">Параметру <paramref name="value" /> задано значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Возвращает или задает метод завершения операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий доступ к атрибутам и метаданным метода.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Возвращает коллекцию описаний ошибок, связанных с описанием операции.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />, который содержит сведения об ошибках, связанных с описанием операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Возвращает значение, указывающее, возвращает ли операция ответное сообщение.</summary>
      <returns>Значение true, если этот метод получает сообщение запроса и не возвращает ответное сообщение; в противном случае — значение false Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Возвращает известные типы, связанные с описанием операции.</summary>
      <returns>Коллекция известных типов, связанных с описанием операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Возвращает или задает описания сообщений, составляющих операцию.</summary>
      <returns>Коллекция <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, которая содержит описания сообщений, составляющих операцию.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Возвращает или задает имя описания операции.</summary>
      <returns>Имя описания операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Возвращает или задает метод синхронизации службы для описания операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий доступ к атрибутам и метаданным метода.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Представляет коллекцию, в которой содержатся описания операций.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Возвращает первое вхождение описания операции с заданным именем в коллекции описаний операций.</summary>
      <returns>Первое вхождение операции <see cref="T:System.ServiceModel.Description.OperationDescription" /> с указанным именем или значение null, если операция с указанным именем отсутствует.</returns>
      <param name="name">Имя операции.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Возвращает коллекцию всех описаний операций из коллекции с заданным именем.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> типа <see cref="T:System.ServiceModel.Description.OperationDescription" />, содержащая все описания операций с заданным именем.</returns>
      <param name="name">Имя операции.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Вставляет элемент в коллекцию описания операции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля), по которому следует вставить значение параметра <paramref name="item" />.</param>
      <param name="item">Вставляемый объект <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Заменяет элемент описания операции в коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля), по которому следует вставить значение параметра <paramref name="item" />.</param>
      <param name="item">Вставляемый объект <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> имеет значение null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Представляет конечную точку для службы, которая позволяет клиентам службы выполнять поиск и обмен данными со службой.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта.</summary>
      <param name="contract">Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> для конечной точки службы.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> с указанным адресом, контрактом и привязкой.</summary>
      <param name="contract">Объект <see cref="T:System.ServiceModel.Description.ContractDescription" /> для конечной точки службы.</param>
      <param name="binding">Объект <see cref="T:System.ServiceModel.Channels.Binding" />, который указывает способ обмена данными между конечной точкой службы и остальным окружением.</param>
      <param name="address">Объект <see cref="T:System.ServiceModel.EndpointAddress" /> для конечной точки службы.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Возвращает или задает адрес конечной точки для конечной точки службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.EndpointAddress" />, который задает место расположения конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Возвращает или задает привязку для конечной точки службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" /> для конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Возвращает контракт для конечной точки службы.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, который задает контракт для конечной точки службы.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Возвращает или задает имя конечной точки службы.</summary>
      <returns>Имя конечной точки службы. По умолчанию используется значение, составленное из имени привязки и имени описания контракта. Например, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Управляет поведением во время выполнения для <see cref="T:System.Xml.Serialization.XmlSerializer" />, сопоставленного с операцией.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Используется для изменения или расширения поведения исполнения определенной операции контракта в объекте клиента или в объекте канала клиента. Этот класс не может быть унаследован. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, используя указанные значения <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, имени и действия. </summary>
      <param name="parent">Содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Имя операции.</param>
      <param name="action">Действие операции.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, используя указанные значения <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, имени, действия и ответного действия. </summary>
      <param name="parent">Содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
      <param name="name">Имя операции.</param>
      <param name="action">Действие операции.</param>
      <param name="replyAction">Действие ответного сообщения.</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> or <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Возвращает действие операции.</summary>
      <returns>Действие операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Возвращает или задает метод, связанный с асинхронной операцией.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, который представляет метод, обрабатывающий начальную часть пары асинхронных методов, либо значение null, если операция не является частью пары асинхронных методов.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Возвращает или задает значение, указывающее, используется ли значение свойства <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> для десериализации ответного сообщения.</summary>
      <returns>Значение true , если возвращаемый тип не является <see cref="T:System.ServiceModel.Channels.Message" />. В противном случае — значение false..</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Возвращает или задает метод, который реализует асинхронный метод завершения для данной операции.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, который представляет метод завершения для операции, либо значение null, если операция не является асинхронной.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Возвращает или задает модуль форматирования, который выполняет сериализацию объектов в сообщения и десериализацию сообщений в объекты.</summary>
      <returns>Реализация <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Возвращает или задает значение, указывающее, можно ли открыть сеанс с помощью сообщения к данной операции.</summary>
      <returns>Значение true, если сообщение к данной операции может открыть сеанс. В противном случае — значение false.. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Возвращает или задает значение, указывающее, является ли операция односторонней.</summary>
      <returns>Значение true, если клиент WCFне должен ожидать ответа. В противном случае — значение false. Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Возвращает или задает значение, указывающее, является ли данная операция последней в сеансе.</summary>
      <returns>Значение true, если связанный сеанс закрывается после вызова операции; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Возвращает имя операции.</summary>
      <returns>Имя операции.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Возвращает содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</summary>
      <returns>Содержащий объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Возвращает действие ответного сообщения для данной операции.</summary>
      <returns>Действие ответного сообщения.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Возвращает или задает значение, которое указывает, выполняет ли объект <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> сериализацию исходящего сообщения.</summary>
      <returns>Значение true, если свойство <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> сериализует возвращаемые значения в ответное сообщение; в противном случае — значение false.. Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Возвращает или задает метод, который связан с данной операцией.</summary>
      <returns>Объект <see cref="T:System.Reflection.MethodInfo" />, который представляет метод, реализующий операцию. Если операция является асинхронной, то значение равно null, а реализующие методы хранятся в свойствах <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> и <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Точка вставки для классов, расширяющих функциональность клиентских объектов Windows Phone для всех сообщений, обрабатываемых клиентским приложением.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Возвращает тип контракта, связанного с клиентом.</summary>
      <returns>Объект <see cref="T:System.Type" />, который представляет контракт, связанный с данным клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Возвращает имя контракта, связанного с клиентом.</summary>
      <returns>Имя контракта, используемое для данного клиента.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Возвращает пространство имен контракта, связанного с клиентом.</summary>
      <returns>Пространство имен контракта, связанного с данным клиентом.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Возвращает или задает значение, указывающее, добавляет ли клиент заголовки адресации в сообщения типа запрос-ответ.</summary>
      <returns>Значение true, если клиент не добавляет заголовки адресации. В противном случае — значение false. Значение по умолчанию — false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Возвращает или задает максимальный размер сообщения об ошибке. </summary>
      <returns>Максимальный размер ошибки. Значение по умолчанию составляет 64 KB.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Возвращает или задает реализацию <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />, которую можно использовать для выбора <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />, который выбирает <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Возвращает клиентскую операцию для методов, не имеющих соответствующей операции <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> в коллекции <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />.</summary>
      <returns>Объект <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, который представляет метод, которому перенаправляется содержимое текущего сообщения, когда селектор операций не может найти операцию, соответствующую сообщению.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Возвращает или задает адрес транспорта, который используется для отправки сообщений через клиент.</summary>
      <returns>Код <see cref="T:System.Uri" />, который является адресом назначения для транспорта. Значением по умолчанию является значение <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> клиента.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Этот класс не поддерживается в текущем выпуске Windows Phone. Он представлен для обеспечения совместимости.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Предоставляет информацию о сбое протокола SOAP, указанном в атрибуте <see cref="T:System.ServiceModel.FaultContractAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" />, использующий указанное действие и тип сведений.</summary>
      <param name="action">Действие ошибки SOAP.</param>
      <param name="detail">Тип сведений, сериализуемый в виде сведений о сбое SOAP.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Возвращает значение действия сбоя SOAP.</summary>
      <returns>Значение действия сбоя SOAP.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>Тип объекта, сериализуемого в виде сведений о сбое SOAP.</summary>
      <returns>Тип <see cref="T:System.Type" />, представляющий сериализуемые сведения о сбое SOAP.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Определяет методы, используемые для управления преобразованием сообщений в объекты и объектов в сообщения для клиентских приложений.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Преобразует сообщение в возвращаемое значение и параметры <paramref name="out" />, которые передаются обратно вызывающей операции.</summary>
      <returns>Возвращаемое значение операции.</returns>
      <param name="message">Входящее сообщение.</param>
      <param name="parameters">Любые значения <paramref name="out" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Преобразует массив объектов <see cref="T:System.Object" /> в исходящее сообщение <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>Сообщение SOAP, направляемое операции службы.</returns>
      <param name="messageVersion">Используемая версия сообщения SOAP.</param>
      <param name="parameters">Параметры, передаваемые клиентской операции XAML.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Задает контракт для селектора операций.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Возвращает значение, указывающее, требуются ли параметры для определения выделения.</summary>
      <returns>true, если параметры обязательны; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Возвращает выбранную операцию.</summary>
      <returns>Операция, выбранная настраиваемым селектором операций.</returns>
      <param name="method">Вызываемый метод.</param>
      <param name="parameters">Передаваемые методу параметры.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Определяет методы для десериализации сообщений запросов и сериализации ответных сообщений в приложении.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Десериализует сообщение в массив параметров.</summary>
      <param name="message">Входящее сообщение.</param>
      <param name="parameters">Массив объектов, передаваемых в операцию в качестве параметров.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Сериализует ответное сообщение из указанной версии сообщения, массива параметров и возвращаемого значения.</summary>
      <returns>Сериализованный ответ <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="messageVersion">Версия сообщения SOAP.</param>
      <param name="parameters">Массив выходных параметров out.</param>
      <param name="result">Возвращаемое значение.</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Представляет исключение, возникающее при сбоях в процессе обеспечения безопасности сообщения.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение об ошибке.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.MessageSecurityException" />, используя сообщение об ошибке и ссылку на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Представляет собой исключение безопасности, создаваемое при неудачном запросе авторизации в системе безопасности.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />, используя указанное сообщение.</summary>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />, используя указанное сообщение и внутреннее исключение.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Используемое внутреннее исключение.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Представляет собой учетные данные клиента на основе имени пользователя и пароля.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Получает или задает пароль.</summary>
      <returns>Пароль.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Возвращает или задает имя пользователя.</summary>
      <returns>Имя пользователя.</returns>
    </member>
  </members>
</doc>